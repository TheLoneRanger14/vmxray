cscope 15 $HOME/work/sleuthkit-3.1.2               0001364277
	@tools/hashtools/md5.c

26 
	~<°dio.h
>

27 
	~"tsk3/libtsk.h
"

29 
	#MD5_HASH_LENGTH
 16

	)

32 
	$maö
(
¨gc
, 
¨gv
)

33 
¨gc
;

34 **
¨gv
;

36 *
my«me
 = 
¨gv
[0];

37 *
	`¸unch
();

38 
FILE
 *
Â
;

40 i‡(
¨gc
 < 2) {

41 
	`¥ötf
("%s\n", 
	`¸unch
(
°dö
));

44 --
¨gc
 && *++
¨gv
) {

45 i‡((
Â
 = 
	`f›í
(*
¨gv
, "r")) == 0) {

46 
	`Ârötf
(
°dîr
, "%s: ", 
my«me
);

47 
	`≥º‹
(*
¨gv
);

50 
	`¥ötf
("%s %s\n", 
	`¸unch
(
Â
), *
¨gv
);

51 
	`f˛o£
(
Â
);

55 
	}
}

58 
	$¸unch
(
Â
)

59 
FILE
 *
Â
;

61 
TSK_MD5_CTX
 
md
;

62 
sum
[
MD5_HASH_LENGTH
];

63 
buf
[
BUFSIZ
];

64 
ªsu…
[2 * 
MD5_HASH_LENGTH
 + 1];

65 
hex
[] = "0123456789abcdef";

66 
buÊí
;

67 
i
;

69 
	`TSK_MD5_Inô
(&
md
);

70 (
buÊí
 = 
	`‰ód
(
buf
, 1, 
BUFSIZ
, 
Â
)) > 0)

71 
	`TSK_MD5_Upd©e
(&
md
, 
buf
, 
buÊí
);

72 
	`TSK_MD5_FöÆ
(
sum
, &
md
);

74 
i
 = 0; i < 
MD5_HASH_LENGTH
; i++) {

75 
ªsu…
[2 * 
i
] = 
hex
[(
sum
[i] >> 4) & 0xf];

76 
ªsu…
[2 * 
i
 + 1] = 
hex
[
sum
[i] & 0xf];

78  (
ªsu…
);

79 
	}
}

	@tools/hashtools/sha1.c

32 
	~<°dio.h
>

33 
	~<°rög.h
>

34 
	~"tsk3/libtsk.h
"

37 
	#SHA_HASH_LENGTH
 20

	)

38 
	#SHA_BUFSIZ
 1024

	)

41 
	$¸unch
(
Â
)

42 
FILE
 *
Â
;

45 
sum
[
SHA_HASH_LENGTH
];

47 
buf
[
SHA_BUFSIZ
];

49 
ªsu…
[2 * 
SHA_HASH_LENGTH
 + 1];

50 
hex
[] = "0123456789abcdef";

52 
TSK_SHA_CTX
 
sha
;

53 
i
;

54 
buÊí
;

56 
	`TSK_SHA_Inô
(&
sha
);

57 (
buÊí
 = 
	`‰ód
(
buf
, 1, 
SHA_BUFSIZ
, 
Â
)) > 0)

58 
	`TSK_SHA_Upd©e
(&
sha
, 
buf
, 
buÊí
);

60 
	`TSK_SHA_FöÆ
(
sum
, &
sha
);

62 
i
 = 0; i < 
SHA_HASH_LENGTH
; i++) {

63 
ªsu…
[2 * 
i
] = 
hex
[(
sum
[i] >> 4) & 0xf];

64 
ªsu…
[2 * 
i
 + 1] = 
hex
[
sum
[i] & 0xf];

66  (
ªsu…
);

67 
	}
}

73 
	$maö
(
¨gc
, 
¨gv
)

74 
¨gc
;

75 **
¨gv
;

77 *
my«me
 = 
¨gv
[0];

78 *
	`¸unch
();

79 
FILE
 *
Â
;

81 i‡(
¨gc
 < 2) {

82 
	`¥ötf
("%s\n", 
	`¸unch
(
°dö
));

85 --
¨gc
 && *++
¨gv
) {

86 i‡((
Â
 = 
	`f›í
(*
¨gv
, "r")) == 0) {

87 
	`Ârötf
(
°dîr
, "%s: ", 
my«me
);

88 
	`≥º‹
(*
¨gv
);

91 
	`¥ötf
("%† %s\n", 
	`¸unch
(
Â
), *
¨gv
);

92 
	`f˛o£
(
Â
);

96 
	}
}

	@tools/srchtools/srch_strings.c

55 #i‡
HAVE_CONFIG_H


56 
	~"tsk_c⁄fig.h
"

59 
	~<sys/ty≥s.h
>

60 
	~<sys/°©.h
>

61 
	~<°dio.h
>

62 
	~<°dlib.h
>

63 
	~<î∫o.h
>

64 
	~<uni°d.h
>

65 
	~<°rög.h
>

67 
	~<öây≥s.h
>

71 #ifde‡
HAVE_SETMODE


72 #i‚de‡
O_BINARY


73 #ifde‡
_O_BINARY


74 
	#O_BINARY
 
_O_BINARY


	)

75 
	#£tmode
 
_£tmode


	)

77 
	#O_BINARY
 0

	)

80 #i‡
O_BINARY


81 
	~<io.h
>

82 
	#SET_BINARY
(
f
Ëdÿ{ i‡(!
	`ißây
 (f)Ë
	`£tmode
 (f,
O_BINARY
); } 0)

	)

86 #i‚de‡
PRIx64


87 
	#PRIx64
 "Œx"

	)

90 #i‚de‡
PRId64


91 
	#PRId64
 "Œd"

	)

94 #i‚de‡
PRIo64


95 
	#PRIo64
 "Œo"

	)

103 
	m_sch_isbœnk
 = 0x0001,

104 
	m_sch_is˙ål
 = 0x0002,

105 
	m_sch_isdigô
 = 0x0004,

106 
	m_sch_i¶owî
 = 0x0008,

107 
	m_sch_i•röt
 = 0x0010,

108 
	m_sch_i•un˘
 = 0x0020,

109 
	m_sch_is•a˚
 = 0x0040,

110 
	m_sch_isuµî
 = 0x0080,

111 
	m_sch_isxdigô
 = 0x0100,

114 
	m_sch_isid°
 = 0x0200,

115 
	m_sch_isv•
 = 0x0400,

116 
	m_sch_i¢v•
 = 0x0800,

119 
	m_sch_ißÕha
 = 
_sch_isuµî
|
_sch_i¶owî
,

120 
	m_sch_iß um
 = 
_sch_ißÕha
|
_sch_isdigô
,

121 
	m_sch_isidnum
 = 
_sch_isid°
|
_sch_isdigô
,

122 
	m_sch_isgøph
 = 
_sch_iß um
|
_sch_i•un˘
,

123 
	m_sch_is˝p•
 = 
_sch_isv•
|
_sch_i¢v•
,

124 
	m_sch_isbasic
 = 
_sch_i•röt
|
_sch_is˝p•


132 
	#bl
 
_sch_isbœnk


	)

133 
	#˙
 
_sch_is˙ål


	)

134 
	#di
 
_sch_isdigô


	)

135 
	#is
 
_sch_isid°


	)

136 
	#lo
 
_sch_i¶owî


	)

137 
	#nv
 
_sch_i¢v•


	)

138 
	#≤
 
_sch_i•un˘


	)

139 
	#¥
 
_sch_i•röt


	)

140 
	#•
 
_sch_is•a˚


	)

141 
	#up
 
_sch_isuµî


	)

142 
	#vs
 
_sch_isv•


	)

143 
	#xd
 
_sch_isxdigô


	)

146 
	#L
 (c⁄° Ë(
lo
|
is
 |
¥
Ë

	)

147 
	#XL
 (c⁄° Ë(
lo
|
is
|
xd
|
¥
Ë

	)

148 
	#U
 (c⁄° Ë(
up
|
is
 |
¥
Ë

	)

149 
	#XU
 (c⁄° Ë(
up
|
is
|
xd
|
¥
Ë

	)

150 
	#D
 (c⁄° Ë(
di
 |
xd
|
¥
Ë

	)

151 
	#P
 (c⁄° Ë(
≤
 |
¥
Ë

	)

152 
	#_
 (c⁄° Ë(
≤
|
is
 |
¥
Ë

	)

154 
	#C
 (c⁄° Ë–
˙
Ë

	)

155 
	#Z
 (c⁄° Ë(
nv
 |
˙
Ë

	)

156 
	#M
 (c⁄° Ë(
nv
|
•
 |
˙
Ë

	)

157 
	#V
 (c⁄° Ë(
vs
|
•
 |
˙
Ë

	)

158 
	#T
 (c⁄° Ë(
nv
|
•
|
bl
|
˙
Ë

	)

159 
	#S
 (c⁄° Ë(
nv
|
•
|
bl
|
¥
Ë

	)

162 c⁄° 
	g_sch_i°abÀ
[256] =

164 
Z
, 
C
, C, C, C, C, C, C,

165 
C
, 
T
, 
V
, 
M
, M, V, C, C,

166 
C
, C, C, C, C, C, C, C,

167 
C
, C, C, C, C, C, C, C,

168 
S
, 
P
, P, P, P, P, P, P,

169 
P
, P, P, P, P, P, P, P,

170 
D
, D, D, D, D, D, D, D,

171 
D
, D, 
P
, P, P, P, P, P,

172 
P
, 
XU
, XU, XU, XU, XU, XU, 
U
,

173 
U
, U, U, U, U, U, U, U,

174 
U
, U, U, U, U, U, U, U,

175 
U
, U, U, 
P
, P, P, P, 
_
,

176 
P
, 
XL
, XL, XL, XL, XL, XL, 
L
,

177 
L
, L, L, L, L, L, L, L,

178 
L
, L, L, L, L, L, L, L,

179 
L
, L, L, 
P
, P, P, P, 
C
,

195 
	#_sch_ã°
(
c
, 
bô
Ë(
_sch_i°abÀ
[(cË& 0xff] & ()(bô))

	)

196 
	#ISPRINT
(
c
Ë
	`_sch_ã°
(c, 
_sch_i•röt
)

	)

198 
	#bfd_boﬁón
 

	)

199 #i‚de‡
FALSE


200 
	#FALSE
 0

	)

202 #i‚de‡
TRUE


203 
	#TRUE
 1

	)

205 *
	g¥ogøm_«me
;

211 
	#STRING_ISGRAPHIC
(
c
) \

212 –(
c
) >= 0 \

213 && (
c
) <= 255 \

214 && ((
c
Ë='\t' || 
	`ISPRINT
 (cË|| (
ícodög
 ='S' && (cË> 127)))

	)

217 #i‚de‡
î∫o


218 
î∫o
;

221 #ifde‡
HAVE_FOPEN64


223 
	#fûe_›í
(
s
,
m
Ë
	`f›í64
(s, m)

	)

226 
	#fûe_›í
(
s
,
m
Ë
	`f›í
(s, m)

	)

231 
	gaddªss_ødix
;

234 
	g°rög_mö
;

237 
bfd_boﬁón
 
	g¥öt_addªs£s
;

240 
bfd_boﬁón
 
	g¥öt_fûíames
;

244 
	gícodög
;

245 
	gícodög_byãs
;

247 
bfd_boﬁón
 
°rögs_fûe
 (*
fûe
);

248 
öãgî_¨g
 (*
s
);

249 
¥öt_°rögs
 (c⁄° *, 
FILE
 *, 
uöt64_t
, uint64_t, , *);

250 
ußge
 (
FILE
 *, );

251 
gë_ch¨
 (
FILE
 *, 
uöt64_t
 *, *, **);

253 
maö
 (, **);

256 
	$maö
 (
¨gc
, **
¨gv
)

258 
›tc
;

259 
exô_°©us
 = 0;

260 
bfd_boﬁón
 
fûes_giví
 = 
FALSE
;

262 
¥ogøm_«me
 = 
¨gv
[0];

263 
°rög_mö
 = -1;

264 
¥öt_addªs£s
 = 
FALSE
;

265 
¥öt_fûíames
 = 
FALSE
;

266 
ícodög
 = 's';

268 (
›tc
 = 
	`gë›t
 (
¨gc
, 
¨gv
, "afhHn:Ÿ:e:Vv0123456789")Ë!
EOF
)

270 
›tc
)

276 
¥öt_fûíames
 = 
TRUE
;

281 
	`ußge
 (
°dout
, 0);

284 
°rög_mö
 = 
	`öãgî_¨g
 (
›èrg
);

285 i‡(
°rög_mö
 < 1) {

286 
	`Ârötf
 (
°dîr
, "övÆidÇumbî %s", 
›èrg
);

291 
¥öt_addªs£s
 = 
TRUE
;

292 
addªss_ødix
 = 8;

296 
¥öt_addªs£s
 = 
TRUE
;

297 i‡(
›èrg
[1] != '\0')

298 
	`ußge
 (
°dîr
, 1);

299 
›èrg
[0])

302 
addªss_ødix
 = 8;

306 
addªss_ødix
 = 10;

310 
addªss_ødix
 = 16;

314 
	`ußge
 (
°dîr
, 1);

320 i‡(
›èrg
[1] != '\0')

321 
	`ußge
 (
°dîr
, 1);

322 
ícodög
 = 
›èrg
[0];

327 #ifde‡
VER


328 
	`¥ötf
("ThêSÀuth Kô vî %s\n", 
VER
);

330 
	`¥ötf
("The Sleuth Kit\n");

332 
	`¥ötf
("Modified version of strings from GNU binutils-2.15\n");

333 
	`exô
(0);

336 
	`ußge
 (
°dîr
, 1);

339 i‡(
°rög_mö
 < 0)

340 
°rög_mö
 = 
›tc
 - '0';

342 
°rög_mö
 = såög_mö * 10 + 
›tc
 - '0';

347 i‡(
°rög_mö
 < 0)

348 
°rög_mö
 = 4;

350 
ícodög
)

354 
ícodög_byãs
 = 1;

358 
ícodög_byãs
 = 2;

362 
ícodög_byãs
 = 4;

365 
	`ußge
 (
°dîr
, 1);

369 i‡(
›töd
 >
¨gc
)

371 #ifde‡
SET_BINARY


372 
	`SET_BINARY
 (
	`fûío
 (
°dö
));

374 
	`¥öt_°rögs
 ("{°™d¨d i≈ut}", 
°dö
, 0, 0, 0, (*Ë
NULL
);

375 
fûes_giví
 = 
TRUE
;

379 ; 
›töd
 < 
¨gc
; ++optind)

381 
fûes_giví
 = 
TRUE
;

382 
exô_°©us
 |
	`°rögs_fûe
 (
¨gv
[
›töd
]Ë=
FALSE
;

386 i‡(!
fûes_giví
)

387 
	`ußge
 (
°dîr
, 1);

389  (
exô_°©us
);

390 
	}
}

396 
off_t


397 
	$gë_fûe_size
 (c⁄° * 
fûe_«me
)

399 
°©
 
°©buf
;

401 i‡(
	`°©
 (
fûe_«me
, &
°©buf
) < 0)

403 i‡(
î∫o
 =
ENOENT
)

404 
	`Ârötf
 (
°dîr
, "'%s': Nÿsuch fûe", 
fûe_«me
);

406 
	`Ârötf
 (
°dîr
, "Warning: couldÇotÜocate '%s'.Ñeason: %s",

407 
fûe_«me
, 
	`°ªº‹
 (
î∫o
));

409 i‡(! 
	`S_ISREG
 (
°©buf
.
°_mode
)) {

410 
	`Ârötf
(
°dîr
, "W¨nög: '%s' i†nŸá¿‹dö¨y fûe", 
fûe_«me
);

413  
°©buf
.
°_size
;

416 
	}
}

423 
bfd_boﬁón


424 
	$°rögs_fûe
 (*
fûe
)

426 
FILE
 *
°ªam
;

427 i‡(
	`gë_fûe_size
 (
fûe
) < 1)

428  
FALSE
;

431 
°ªam
 = 
	`fûe_›í
 (
fûe
, "r");

432 i‡(
°ªam
 =
NULL
)

434 
	`Ârötf
 (
°dîr
, "%s: ", 
¥ogøm_«me
);

435 
	`≥º‹
 (
fûe
);

436  
FALSE
;

439 
	`¥öt_°rögs
 (
fûe
, 
°ªam
, (
uöt64_t
) 0, 0, 0, (*) 0);

441 i‡(
	`f˛o£
 (
°ªam
Ë=
EOF
)

443 
	`Ârötf
 (
°dîr
, "%s: ", 
¥ogøm_«me
);

444 
	`≥º‹
 (
fûe
);

445  
FALSE
;

448  
TRUE
;

449 
	}
}

462 
	$gë_ch¨
 (
FILE
 *
°ªam
, 
uöt64_t
 *
addªss
, *
magiccou¡
, **
magic
)

464 
c
, 
i
;

465 
r
 = 
EOF
;

466 
buf
[4];

468 
i
 = 0; i < 
ícodög_byãs
; i++)

470 i‡(*
magiccou¡
)

472 (*
magiccou¡
)--;

473 
c
 = *(*
magic
)++;

477 i‡(
°ªam
 =
NULL
)

478  
EOF
;

479 #ifde‡
HAVE_GETC_UNLOCKED


480 
c
 = 
	`gëc_u∆ocked
 (
°ªam
);

482 
c
 = 
	`gëc
 (
°ªam
);

484 i‡(
c
 =
EOF
)

485  
EOF
;

488 (*
addªss
)++;

489 
buf
[
i
] = 
c
;

492 
ícodög
)

496 
r
 = 
buf
[0];

499 
r
 = (
buf
[0] << 8) | buf[1];

502 
r
 = 
buf
[0] | (buf[1] << 8);

505 
r
 = ((Ë
buf
[0] << 24) | (() buf[1] << 16) |

506 ((Ë
buf
[2] << 8) | buf[3];

509 
r
 = 
buf
[0] | (() buf[1] << 8) | (() buf[2] << 16) |

510 ((Ë
buf
[3] << 24);

514 i‡(
r
 =
EOF
)

517  
r
;

518 
	}
}

533 
	$¥öt_°rögs
 (c⁄° *
fûíame
, 
FILE
 *
°ªam
, 
uöt64_t
 
addªss
,

534 
uöt64_t
 
°›_poöt
, 
magiccou¡
, *
magic
)

536 *
buf
 = (*Ë
	`mÆloc
 ( (Ë* (
°rög_mö
 + 1));

537 i‡(
buf
 =
NULL
) {

538 
	`Ârötf
(
°dîr
, "Errorállocating memory\n");

544 
uöt64_t
 
°¨t
;

545 
i
;

546 
c
;

549 
åylöe
:

550 i‡(
°›_poöt
 && 
addªss
 >= stop_point)

552 
°¨t
 = 
addªss
;

553 
i
 = 0; i < 
°rög_mö
; i++)

555 
c
 = 
	`gë_ch¨
 (
°ªam
, &
addªss
, &
magiccou¡
, &
magic
);

556 i‡(
c
 =
EOF
)

558 i‡(! 
	`STRING_ISGRAPHIC
 (
c
))

560 
åylöe
;

561 
buf
[
i
] = 
c
;

567 i‡(
¥öt_fûíames
)

568 
	`¥ötf
 ("%s: ", 
fûíame
);

569 i‡(
¥öt_addªs£s
)

570 
addªss_ødix
)

573 
	`¥ötf
 ("%10"
PRIo64
" ", 
°¨t
);

577 
	`¥ötf
 ("%10"
PRId64
" ", 
°¨t
);

581 
	`¥ötf
 ("%10"
PRIx64
" ", 
°¨t
);

585 
buf
[
i
] = '\0';

586 
	`Âuts
 (
buf
, 
°dout
);

590 
c
 = 
	`gë_ch¨
 (
°ªam
, &
addªss
, &
magiccou¡
, &
magic
);

591 i‡(
c
 =
EOF
)

593 i‡(! 
	`STRING_ISGRAPHIC
 (
c
))

595 
	`putch¨
 (
c
);

598 
	`putch¨
 ('\n');

600 
	}
}

609 
	$öãgî_¨g
 (*
s
)

611 
vÆue
;

612 
ødix
 = 10;

613 *
p
 = 
s
;

614 
c
;

616 i‡(*
p
 != '0')

617 
ødix
 = 10;

618 i‡(*++
p
 == 'x')

620 
ødix
 = 16;

621 
p
++;

624 
ødix
 = 8;

626 
vÆue
 = 0;

627 ((
c
 = *
p
++) >= '0' && c <= '9')

628 || (
ødix
 =16 && (
c
 & ~40) >= 'A' && (c & ~40) <= 'Z'))

630 
vÆue
 *
ødix
;

631 i‡(
c
 >= '0' && c <= '9')

632 
vÆue
 +
c
 - '0';

634 
vÆue
 +(
c
 & ~40) - 'A';

637 i‡(
c
 == 'b')

638 
vÆue
 *= 512;

639 i‡(
c
 == 'B')

640 
vÆue
 *= 1024;

642 
p
--;

644 i‡(*
p
) {

645 
	`Ârötf
(
°dîr
, "övÆid i¡egîárgumíà%s", 
s
);

649  
vÆue
;

650 
	}
}

653 
	$ußge
 (
FILE
 *
°ªam
, 
°©us
)

655 
	`Ârötf
 (
°ªam
, "Ußge: %†[›ti⁄(s)] [fûe(s)]\n", 
¥ogøm_«me
);

656 
	`Ârötf
 (
°ªam
, " DisplayÖrintable strings in [file(s)] (stdin by default)\n");

657 
	`Ârötf
 (
°ªam
, " The optionsáre:\n\
-a - ScanÅheÉntire file,Çot justÅhe data section\n\
-f PrintÅheÇame ofÅhe file beforeÉach string\n\
-nÇumber Locate &Örintány NUL-terminated sequence ofát\n\
-<number>Üeast [number] characters (default 4).\n\
-t {o,x,d} PrintÅheÜocation ofÅhe string in base 8, 10 or 16\n\
-o Análias for --radix=o\n\
-e {s,S,b,l,B,L} Select character sizeándÉndianness:\n\
 = 7-bit, S = 8-bit, {b,l} = 16-bit, {B,L} = 32-bit\n\
-h DisplayÅhis information\n\
-v PrintÅheÖrogram's versionÇumber\n");

668 
	`exô
 (
°©us
);

669 
	}
}

	@tsk3/base/XGetopt.c

32 
	~"tsk_ba£_i.h
"

33 #ifde‡
TSK_WIN32


42 
	~<wch¨.h
>

158 
TSK_TCHAR
 *
	gtsk_›èrg
;

159 
	gtsk_›töd
 = 0;

162 
	$tsk_gë›t
(
¨gc
, 
TSK_TCHAR
 * c⁄° 
¨gv
[], c⁄° TSK_TCHAR * 
›t°rög
)

164 
TSK_TCHAR
 *
√xt
 = 
NULL
;

165 
TSK_TCHAR
 
c
, *
˝
;

166 i‡(
tsk_›töd
 == 0)

167 
√xt
 = 
NULL
;

169 
tsk_›èrg
 = 
NULL
;

171 i‡(
√xt
 =
NULL
 || *√xà=
	`_TSK_T
('\0')) {

172 i‡(
tsk_›töd
 == 0)

173 
tsk_›töd
++;

175 i‡(
tsk_›töd
 >
¨gc
 || 
¨gv
[tsk_›töd][0] !
	`_TSK_T
('-')

176 || 
¨gv
[
tsk_›töd
][1] =
	`_TSK_T
('\0')) {

177 
tsk_›èrg
 = 
NULL
;

178 i‡(
tsk_›töd
 < 
¨gc
)

179 
tsk_›èrg
 = 
¨gv
[
tsk_›töd
];

180  
EOF
;

183 i‡(
	`TSTRCMP
(
¨gv
[
tsk_›töd
], 
	`_TSK_T
("--")) == 0) {

184 
tsk_›töd
++;

185 
tsk_›èrg
 = 
NULL
;

186 i‡(
tsk_›töd
 < 
¨gc
)

187 
tsk_›èrg
 = 
¨gv
[
tsk_›töd
];

188  
EOF
;

191 
√xt
 = 
¨gv
[
tsk_›töd
];

192 
√xt
++;

193 
tsk_›töd
++;

196 
c
 = *
√xt
++;

197 
˝
 = (
TSK_TCHAR
 *Ë
	`TSTRCHR
(
›t°rög
, 
c
);

199 i‡(
˝
 =
NULL
 || 
c
 =
	`_TSK_T
(':'))

200  
	`_TSK_T
('?');

202 
˝
++;

203 i‡(*
˝
 =
	`_TSK_T
(':')) {

204 i‡(*
√xt
 !
	`_TSK_T
('\0')) {

205 
tsk_›èrg
 = 
√xt
;

206 
√xt
 = 
NULL
;

208 i‡(
tsk_›töd
 < 
¨gc
) {

209 
tsk_›èrg
 = 
¨gv
[
tsk_›töd
];

210 
tsk_›töd
++;

213  
	`_TSK_T
('?');

217  
c
;

218 
	}
}

	@tsk3/base/md5c.c

34 
	~"tsk_ba£_i.h
"

38 
	#S11
 7

	)

39 
	#S12
 12

	)

40 
	#S13
 17

	)

41 
	#S14
 22

	)

42 
	#S21
 5

	)

43 
	#S22
 9

	)

44 
	#S23
 14

	)

45 
	#S24
 20

	)

46 
	#S31
 4

	)

47 
	#S32
 11

	)

48 
	#S33
 16

	)

49 
	#S34
 23

	)

50 
	#S41
 6

	)

51 
	#S42
 10

	)

52 
	#S43
 15

	)

53 
	#S44
 21

	)

55 
MD5Tønsf‹m
(
UINT4
[4], [64]);

56 
Encode
(*, 
UINT4
 *, );

57 
Decode
(
UINT4
 *, *, );

58 
MD5_mem˝y
(
POINTER
, POINTER, );

59 
MD5_mem£t
(
POINTER
, , );

61 
	gPADDING
[64] = {

69 
	#F
(
x
, 
y
, 
z
Ë(((xË& (y)Ë| ((~xË& (z)))

	)

70 
	#G
(
x
, 
y
, 
z
Ë(((xË& (z)Ë| ((yË& (~z)))

	)

71 
	#H
(
x
, 
y
, 
z
Ë((xË^ (yË^ (z))

	)

72 
	#I
(
x
, 
y
, 
z
Ë((yË^ ((xË| (~z)))

	)

76 
	#ROTATE_LEFT
(
x
, 
n
Ë(((xË<< (n)Ë| ((xË>> (32-“))))

	)

81 
	#FF
(
a
, 
b
, 
c
, 
d
, 
x
, 
s
, 
ac
) { \

82 (
a
Ë+
	`F
 ((
b
), (
c
), (
d
)Ë+ (
x
Ë+ (
UINT4
)(
ac
); \

83 (
a
Ë
	`ROTATE_LEFT
 (◊), (
s
)); \

84 (
a
Ë+(
b
); \

85 }

	)

86 
	#GG
(
a
, 
b
, 
c
, 
d
, 
x
, 
s
, 
ac
) { \

87 (
a
Ë+
	`G
 ((
b
), (
c
), (
d
)Ë+ (
x
Ë+ (
UINT4
)(
ac
); \

88 (
a
Ë
	`ROTATE_LEFT
 (◊), (
s
)); \

89 (
a
Ë+(
b
); \

90 }

	)

91 
	#HH
(
a
, 
b
, 
c
, 
d
, 
x
, 
s
, 
ac
) { \

92 (
a
Ë+
	`H
 ((
b
), (
c
), (
d
)Ë+ (
x
Ë+ (
UINT4
)(
ac
); \

93 (
a
Ë
	`ROTATE_LEFT
 (◊), (
s
)); \

94 (
a
Ë+(
b
); \

95 }

	)

96 
	#II
(
a
, 
b
, 
c
, 
d
, 
x
, 
s
, 
ac
) { \

97 (
a
Ë+
	`I
 ((
b
), (
c
), (
d
)Ë+ (
x
Ë+ (
UINT4
)(
ac
); \

98 (
a
Ë
	`ROTATE_LEFT
 (◊), (
s
)); \

99 (
a
Ë+(
b
); \

100 }

	)

108 
	$TSK_MD5_Inô
(
TSK_MD5_CTX
 * 
c⁄ãxt
)

110 
c⁄ãxt
->
cou¡
[0] = context->count[1] = 0;

113 
c⁄ãxt
->
°©e
[0] = 0x67452301;

114 
c⁄ãxt
->
°©e
[1] = 0xefcdab89;

115 
c⁄ãxt
->
°©e
[2] = 0x98badcfe;

116 
c⁄ãxt
->
°©e
[3] = 0x10325476;

117 
	}
}

127 
	$TSK_MD5_Upd©e
(
TSK_MD5_CTX
 * 
c⁄ãxt
, *
öput
,

128 
öputLí
)

130 
i
, 
ödex
, 
∑πLí
;

133 
ödex
 = (Ë((
c⁄ãxt
->
cou¡
[0] >> 3) & 0x3F);

136 i‡((
c⁄ãxt
->
cou¡
[0] +((
UINT4
Ë
öputLí
 << 3))

137 < ((
UINT4
Ë
öputLí
 << 3))

138 
c⁄ãxt
->
cou¡
[1]++;

139 
c⁄ãxt
->
cou¡
[1] +((
UINT4
Ë
öputLí
 >> 29);

141 
∑πLí
 = 64 - 
ödex
;

145 i‡(
öputLí
 >
∑πLí
) {

146 
MD5_mem˝y


147 ((
POINTER
Ë& 
c⁄ãxt
->
buf„r
[
ödex
], (POINTERË
öput
, 
∑πLí
);

148 
	`MD5Tønsf‹m
(
c⁄ãxt
->
°©e
, c⁄ãxt->
buf„r
);

150 
i
 = 
∑πLí
; i + 63 < 
öputLí
; i += 64)

151 
	`MD5Tønsf‹m
(
c⁄ãxt
->
°©e
, &
öput
[
i
]);

153 
ödex
 = 0;

156 
i
 = 0;

159 
MD5_mem˝y


160 ((
POINTER
Ë& 
c⁄ãxt
->
buf„r
[
ödex
], (POINTERË& 
öput
[
i
],

161 
öputLí
 - 
i
);

162 
	}
}

172 
	$TSK_MD5_FöÆ
(
dige°
[16], 
TSK_MD5_CTX
 * 
c⁄ãxt
)

174 
bôs
[8];

175 
ödex
, 
∑dLí
;

178 
	`Encode
(
bôs
, 
c⁄ãxt
->
cou¡
, 8);

182 
ödex
 = (Ë((
c⁄ãxt
->
cou¡
[0] >> 3) & 0x3f);

183 
∑dLí
 = (
ödex
 < 56) ? (56 - index) : (120 - index);

184 
	`TSK_MD5_Upd©e
(
c⁄ãxt
, 
PADDING
, 
∑dLí
);

187 
	`TSK_MD5_Upd©e
(
c⁄ãxt
, 
bôs
, 8);

189 
	`Encode
(
dige°
, 
c⁄ãxt
->
°©e
, 16);

193 
	`MD5_mem£t
((
POINTER
Ë
c⁄ãxt
, 0, (*context));

194 
	}
}

199 
	$MD5Tønsf‹m
(
°©e
, 
block
)

200 
UINT4
 
°©e
[4];

201 
block
[64];

203 
UINT4
 
a
 = 
°©e
[0], 
b
 = sèã[1], 
c
 = sèã[2], 
d
 = sèã[3], 
x
[16];

205 
	`Decode
(
x
, 
block
, 64);

208 
	`FF
(
a
, 
b
, 
c
, 
d
, 
x
[0], 
S11
, 0xd76aa478);

209 
	`FF
(
d
, 
a
, 
b
, 
c
, 
x
[1], 
S12
, 0xe8c7b756);

210 
	`FF
(
c
, 
d
, 
a
, 
b
, 
x
[2], 
S13
, 0x242070db);

211 
	`FF
(
b
, 
c
, 
d
, 
a
, 
x
[3], 
S14
, 0xc1bdceee);

212 
	`FF
(
a
, 
b
, 
c
, 
d
, 
x
[4], 
S11
, 0xf57c0faf);

213 
	`FF
(
d
, 
a
, 
b
, 
c
, 
x
[5], 
S12
, 0x4787c62a);

214 
	`FF
(
c
, 
d
, 
a
, 
b
, 
x
[6], 
S13
, 0xa8304613);

215 
	`FF
(
b
, 
c
, 
d
, 
a
, 
x
[7], 
S14
, 0xfd469501);

216 
	`FF
(
a
, 
b
, 
c
, 
d
, 
x
[8], 
S11
, 0x698098d8);

217 
	`FF
(
d
, 
a
, 
b
, 
c
, 
x
[9], 
S12
, 0x8b44f7af);

218 
	`FF
(
c
, 
d
, 
a
, 
b
, 
x
[10], 
S13
, 0xffff5bb1);

219 
	`FF
(
b
, 
c
, 
d
, 
a
, 
x
[11], 
S14
, 0x895cd7be);

220 
	`FF
(
a
, 
b
, 
c
, 
d
, 
x
[12], 
S11
, 0x6b901122);

221 
	`FF
(
d
, 
a
, 
b
, 
c
, 
x
[13], 
S12
, 0xfd987193);

222 
	`FF
(
c
, 
d
, 
a
, 
b
, 
x
[14], 
S13
, 0xa679438e);

223 
	`FF
(
b
, 
c
, 
d
, 
a
, 
x
[15], 
S14
, 0x49b40821);

226 
	`GG
(
a
, 
b
, 
c
, 
d
, 
x
[1], 
S21
, 0xf61e2562);

227 
	`GG
(
d
, 
a
, 
b
, 
c
, 
x
[6], 
S22
, 0xc040b340);

228 
	`GG
(
c
, 
d
, 
a
, 
b
, 
x
[11], 
S23
, 0x265e5a51);

229 
	`GG
(
b
, 
c
, 
d
, 
a
, 
x
[0], 
S24
, 0xe9b6c7aa);

230 
	`GG
(
a
, 
b
, 
c
, 
d
, 
x
[5], 
S21
, 0xd62f105d);

231 
	`GG
(
d
, 
a
, 
b
, 
c
, 
x
[10], 
S22
, 0x2441453);

232 
	`GG
(
c
, 
d
, 
a
, 
b
, 
x
[15], 
S23
, 0xd8a1e681);

233 
	`GG
(
b
, 
c
, 
d
, 
a
, 
x
[4], 
S24
, 0xe7d3fbc8);

234 
	`GG
(
a
, 
b
, 
c
, 
d
, 
x
[9], 
S21
, 0x21e1cde6);

235 
	`GG
(
d
, 
a
, 
b
, 
c
, 
x
[14], 
S22
, 0xc33707d6);

236 
	`GG
(
c
, 
d
, 
a
, 
b
, 
x
[3], 
S23
, 0xf4d50d87);

237 
	`GG
(
b
, 
c
, 
d
, 
a
, 
x
[8], 
S24
, 0x455a14ed);

238 
	`GG
(
a
, 
b
, 
c
, 
d
, 
x
[13], 
S21
, 0xa9e3e905);

239 
	`GG
(
d
, 
a
, 
b
, 
c
, 
x
[2], 
S22
, 0xfcefa3f8);

240 
	`GG
(
c
, 
d
, 
a
, 
b
, 
x
[7], 
S23
, 0x676f02d9);

241 
	`GG
(
b
, 
c
, 
d
, 
a
, 
x
[12], 
S24
, 0x8d2a4c8a);

244 
	`HH
(
a
, 
b
, 
c
, 
d
, 
x
[5], 
S31
, 0xfffa3942);

245 
	`HH
(
d
, 
a
, 
b
, 
c
, 
x
[8], 
S32
, 0x8771f681);

246 
	`HH
(
c
, 
d
, 
a
, 
b
, 
x
[11], 
S33
, 0x6d9d6122);

247 
	`HH
(
b
, 
c
, 
d
, 
a
, 
x
[14], 
S34
, 0xfde5380c);

248 
	`HH
(
a
, 
b
, 
c
, 
d
, 
x
[1], 
S31
, 0xa4beea44);

249 
	`HH
(
d
, 
a
, 
b
, 
c
, 
x
[4], 
S32
, 0x4bdecfa9);

250 
	`HH
(
c
, 
d
, 
a
, 
b
, 
x
[7], 
S33
, 0xf6bb4b60);

251 
	`HH
(
b
, 
c
, 
d
, 
a
, 
x
[10], 
S34
, 0xbebfbc70);

252 
	`HH
(
a
, 
b
, 
c
, 
d
, 
x
[13], 
S31
, 0x289b7ec6);

253 
	`HH
(
d
, 
a
, 
b
, 
c
, 
x
[0], 
S32
, 0xeaa127fa);

254 
	`HH
(
c
, 
d
, 
a
, 
b
, 
x
[3], 
S33
, 0xd4ef3085);

255 
	`HH
(
b
, 
c
, 
d
, 
a
, 
x
[6], 
S34
, 0x4881d05);

256 
	`HH
(
a
, 
b
, 
c
, 
d
, 
x
[9], 
S31
, 0xd9d4d039);

257 
	`HH
(
d
, 
a
, 
b
, 
c
, 
x
[12], 
S32
, 0xe6db99e5);

258 
	`HH
(
c
, 
d
, 
a
, 
b
, 
x
[15], 
S33
, 0x1fa27cf8);

259 
	`HH
(
b
, 
c
, 
d
, 
a
, 
x
[2], 
S34
, 0xc4ac5665);

262 
	`II
(
a
, 
b
, 
c
, 
d
, 
x
[0], 
S41
, 0xf4292244);

263 
	`II
(
d
, 
a
, 
b
, 
c
, 
x
[7], 
S42
, 0x432aff97);

264 
	`II
(
c
, 
d
, 
a
, 
b
, 
x
[14], 
S43
, 0xab9423a7);

265 
	`II
(
b
, 
c
, 
d
, 
a
, 
x
[5], 
S44
, 0xfc93a039);

266 
	`II
(
a
, 
b
, 
c
, 
d
, 
x
[12], 
S41
, 0x655b59c3);

267 
	`II
(
d
, 
a
, 
b
, 
c
, 
x
[3], 
S42
, 0x8f0ccc92);

268 
	`II
(
c
, 
d
, 
a
, 
b
, 
x
[10], 
S43
, 0xffeff47d);

269 
	`II
(
b
, 
c
, 
d
, 
a
, 
x
[1], 
S44
, 0x85845dd1);

270 
	`II
(
a
, 
b
, 
c
, 
d
, 
x
[8], 
S41
, 0x6fa87e4f);

271 
	`II
(
d
, 
a
, 
b
, 
c
, 
x
[15], 
S42
, 0xfe2ce6e0);

272 
	`II
(
c
, 
d
, 
a
, 
b
, 
x
[6], 
S43
, 0xa3014314);

273 
	`II
(
b
, 
c
, 
d
, 
a
, 
x
[13], 
S44
, 0x4e0811a1);

274 
	`II
(
a
, 
b
, 
c
, 
d
, 
x
[4], 
S41
, 0xf7537e82);

275 
	`II
(
d
, 
a
, 
b
, 
c
, 
x
[11], 
S42
, 0xbd3af235);

276 
	`II
(
c
, 
d
, 
a
, 
b
, 
x
[2], 
S43
, 0x2ad7d2bb);

277 
	`II
(
b
, 
c
, 
d
, 
a
, 
x
[9], 
S44
, 0xeb86d391);

279 
°©e
[0] +
a
;

280 
°©e
[1] +
b
;

281 
°©e
[2] +
c
;

282 
°©e
[3] +
d
;

286 
	`MD5_mem£t
((
POINTER
Ë
x
, 0, (x));

287 
	}
}

293 
	$Encode
(
ouçut
, 
öput
, 
Àn
)

294 *
ouçut
;

295 
UINT4
 *
öput
;

296 
Àn
;

298 
i
, 
j
;

300 
i
 = 0, 
j
 = 0; j < 
Àn
; i++, j += 4) {

301 
ouçut
[
j
] = (Ë(
öput
[
i
] & 0xff);

302 
ouçut
[
j
 + 1] = (Ë((
öput
[
i
] >> 8) & 0xff);

303 
ouçut
[
j
 + 2] = (Ë((
öput
[
i
] >> 16) & 0xff);

304 
ouçut
[
j
 + 3] = (Ë((
öput
[
i
] >> 24) & 0xff);

306 
	}
}

312 
	$Decode
(
ouçut
, 
öput
, 
Àn
)

313 
UINT4
 *
ouçut
;

314 *
öput
;

315 
Àn
;

317 
i
, 
j
;

319 
i
 = 0, 
j
 = 0; j < 
Àn
; i++, j += 4)

320 
ouçut
[
i
] = ((
UINT4
Ë
öput
[
j
]) | (((UINT4) input[j + 1]) << 8) |

321 (((
UINT4
Ë
öput
[
j
 + 2]) << 16) | (((UINT4) input[j + 3]) <<

323 
	}
}

329 
	$MD5_mem˝y
(
ouçut
, 
öput
, 
Àn
)

330 
POINTER
 
ouçut
;

331 
POINTER
 
öput
;

332 
Àn
;

334 
i
;

336 
i
 = 0; i < 
Àn
; i++)

337 
ouçut
[
i
] = 
öput
[i];

338 
	}
}

343 
	$MD5_mem£t
(
ouçut
, 
vÆue
, 
Àn
)

344 
POINTER
 
ouçut
;

345 
vÆue
;

346 
Àn
;

348 
i
;

350 
i
 = 0; i < 
Àn
; i++)

351 ((*Ë
ouçut
)[
i
] = (Ë
vÆue
;

352 
	}
}

	@tsk3/base/mymalloc.c

60 
	~"tsk_ba£_i.h
"

61 
	~<î∫o.h
>

66 
	$tsk_mÆloc
(
size_t
 
Àn
)

68 *
±r
;

70 i‡((
±r
 = 
	`mÆloc
(
Àn
)) == 0) {

71 
	`tsk_îr‹_ª£t
();

72 
tsk_î∫o
 = 
TSK_ERR_AUX_MALLOC
;

73 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
, "tsk_malloc: %s",

74 
	`°ªº‹
(
î∫o
));

76 
	`mem£t
(
±r
, 0, 
Àn
);

77  (
±r
);

78 
	}
}

82 
	$tsk_ªÆloc
(*
±r
, 
size_t
 
Àn
)

84 i‡((
±r
 = 
	`ªÆloc
’å, 
Àn
)) == 0) {

85 
	`tsk_îr‹_ª£t
();

86 
tsk_î∫o
 = 
TSK_ERR_AUX_MALLOC
;

87 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
, "tsk_realloc: %s",

88 
	`°ªº‹
(
î∫o
));

90  (
±r
);

91 
	}
}

	@tsk3/base/sha1c.c

40 
	~"tsk_ba£_i.h
"

45 
	#SHS_DATASIZE
 64

	)

46 
	#SHS_DIGESTSIZE
 20

	)

54 
	#f1
(
x
,
y
,
z
Ë–z ^ ( x & ( y ^ z ) ) )

	)

55 
	#f2
(
x
,
y
,
z
Ë–x ^ y ^ z )

	)

57 
	#f3
(
x
,
y
,
z
Ë––x & y ) | ( z & ( x | y ) ) )

	)

58 
	#f4
(
x
,
y
,
z
Ë–x ^ y ^ z )

	)

62 
	#K1
 0x5A827999UL

	)

63 
	#K2
 0x6ED9EBA1UL

	)

64 
	#K3
 0x8F1BBCDCUL

	)

65 
	#K4
 0xCA62C1D6UL

	)

69 
	#h0öô
 0x67452301UL

	)

70 
	#h1öô
 0xEFCDAB89UL

	)

71 
	#h2öô
 0x98BADCFEUL

	)

72 
	#h3öô
 0x10325476UL

	)

73 
	#h4öô
 0xC3D2E1F0UL

	)

79 
	#ROTL
(
n
,
X
Ë–––X ) <<Ç ) | ( ( X ) >> ( 32 -Ç ) ) )

	)

95 
	#ex∑nd
(
W
,
i
Ë–W[ i & 15 ] = 
	`ROTL
( 1, ( W[ i & 15 ] ^ W[ (i - 14) & 15 ] ^ \

96 
W
[ (
i
 - 8Ë& 15 ] ^ W[ (ò- 3Ë& 15 ] ) ) )

	)

112 
	#subRound
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
k
, 
d©a
) \

113 –
e
 +
	`ROTL
–5, 
a
 ) + 
	`f
–
b
, 
c
, 
d
 ) + 
k
 + 
d©a
, b = ROTL–30, b ) )

	)

119 
	$ídünTe°
(*
ídün_√ss
)

123 *
ídün_√ss
 = !(0);

127 *
ídün_√ss
 = 0;

129 
	}
}

137 
	$TSK_SHA_Inô
(
TSK_SHA_CTX
 * 
shsInfo
)

139 
	`ídünTe°
(&
shsInfo
->
Endü¬ess
);

141 
shsInfo
->
dige°
[0] = 
h0öô
;

142 
shsInfo
->
dige°
[1] = 
h1öô
;

143 
shsInfo
->
dige°
[2] = 
h2öô
;

144 
shsInfo
->
dige°
[3] = 
h3öô
;

145 
shsInfo
->
dige°
[4] = 
h4öô
;

148 
shsInfo
->
cou¡Lo
 = shsInfo->
cou¡Hi
 = 0;

149 
	}
}

160 
	$SHSTønsf‹m
(
dige°
, 
d©a
)

161 
UINT4
 *
dige°
, *
d©a
;

163 
UINT4
 
A
, 
B
, 
C
, 
D
, 
E
;

164 
UINT4
 
eD©a
[16];

167 
A
 = 
dige°
[0];

168 
B
 = 
dige°
[1];

169 
C
 = 
dige°
[2];

170 
D
 = 
dige°
[3];

171 
E
 = 
dige°
[4];

172 
	`mem˝y
((
POINTER
Ë
eD©a
, (POINTERË
d©a
, 
SHS_DATASIZE
);

175 
	`subRound
(
A
, 
B
, 
C
, 
D
, 
E
, 
f1
, 
K1
, 
eD©a
[0]);

176 
	`subRound
(
E
, 
A
, 
B
, 
C
, 
D
, 
f1
, 
K1
, 
eD©a
[1]);

177 
	`subRound
(
D
, 
E
, 
A
, 
B
, 
C
, 
f1
, 
K1
, 
eD©a
[2]);

178 
	`subRound
(
C
, 
D
, 
E
, 
A
, 
B
, 
f1
, 
K1
, 
eD©a
[3]);

179 
	`subRound
(
B
, 
C
, 
D
, 
E
, 
A
, 
f1
, 
K1
, 
eD©a
[4]);

180 
	`subRound
(
A
, 
B
, 
C
, 
D
, 
E
, 
f1
, 
K1
, 
eD©a
[5]);

181 
	`subRound
(
E
, 
A
, 
B
, 
C
, 
D
, 
f1
, 
K1
, 
eD©a
[6]);

182 
	`subRound
(
D
, 
E
, 
A
, 
B
, 
C
, 
f1
, 
K1
, 
eD©a
[7]);

183 
	`subRound
(
C
, 
D
, 
E
, 
A
, 
B
, 
f1
, 
K1
, 
eD©a
[8]);

184 
	`subRound
(
B
, 
C
, 
D
, 
E
, 
A
, 
f1
, 
K1
, 
eD©a
[9]);

185 
	`subRound
(
A
, 
B
, 
C
, 
D
, 
E
, 
f1
, 
K1
, 
eD©a
[10]);

186 
	`subRound
(
E
, 
A
, 
B
, 
C
, 
D
, 
f1
, 
K1
, 
eD©a
[11]);

187 
	`subRound
(
D
, 
E
, 
A
, 
B
, 
C
, 
f1
, 
K1
, 
eD©a
[12]);

188 
	`subRound
(
C
, 
D
, 
E
, 
A
, 
B
, 
f1
, 
K1
, 
eD©a
[13]);

189 
	`subRound
(
B
, 
C
, 
D
, 
E
, 
A
, 
f1
, 
K1
, 
eD©a
[14]);

190 
	`subRound
(
A
, 
B
, 
C
, 
D
, 
E
, 
f1
, 
K1
, 
eD©a
[15]);

191 
	`subRound
(
E
, 
A
, 
B
, 
C
, 
D
, 
f1
, 
K1
, 
	`ex∑nd
(
eD©a
, 16));

192 
	`subRound
(
D
, 
E
, 
A
, 
B
, 
C
, 
f1
, 
K1
, 
	`ex∑nd
(
eD©a
, 17));

193 
	`subRound
(
C
, 
D
, 
E
, 
A
, 
B
, 
f1
, 
K1
, 
	`ex∑nd
(
eD©a
, 18));

194 
	`subRound
(
B
, 
C
, 
D
, 
E
, 
A
, 
f1
, 
K1
, 
	`ex∑nd
(
eD©a
, 19));

196 
	`subRound
(
A
, 
B
, 
C
, 
D
, 
E
, 
f2
, 
K2
, 
	`ex∑nd
(
eD©a
, 20));

197 
	`subRound
(
E
, 
A
, 
B
, 
C
, 
D
, 
f2
, 
K2
, 
	`ex∑nd
(
eD©a
, 21));

198 
	`subRound
(
D
, 
E
, 
A
, 
B
, 
C
, 
f2
, 
K2
, 
	`ex∑nd
(
eD©a
, 22));

199 
	`subRound
(
C
, 
D
, 
E
, 
A
, 
B
, 
f2
, 
K2
, 
	`ex∑nd
(
eD©a
, 23));

200 
	`subRound
(
B
, 
C
, 
D
, 
E
, 
A
, 
f2
, 
K2
, 
	`ex∑nd
(
eD©a
, 24));

201 
	`subRound
(
A
, 
B
, 
C
, 
D
, 
E
, 
f2
, 
K2
, 
	`ex∑nd
(
eD©a
, 25));

202 
	`subRound
(
E
, 
A
, 
B
, 
C
, 
D
, 
f2
, 
K2
, 
	`ex∑nd
(
eD©a
, 26));

203 
	`subRound
(
D
, 
E
, 
A
, 
B
, 
C
, 
f2
, 
K2
, 
	`ex∑nd
(
eD©a
, 27));

204 
	`subRound
(
C
, 
D
, 
E
, 
A
, 
B
, 
f2
, 
K2
, 
	`ex∑nd
(
eD©a
, 28));

205 
	`subRound
(
B
, 
C
, 
D
, 
E
, 
A
, 
f2
, 
K2
, 
	`ex∑nd
(
eD©a
, 29));

206 
	`subRound
(
A
, 
B
, 
C
, 
D
, 
E
, 
f2
, 
K2
, 
	`ex∑nd
(
eD©a
, 30));

207 
	`subRound
(
E
, 
A
, 
B
, 
C
, 
D
, 
f2
, 
K2
, 
	`ex∑nd
(
eD©a
, 31));

208 
	`subRound
(
D
, 
E
, 
A
, 
B
, 
C
, 
f2
, 
K2
, 
	`ex∑nd
(
eD©a
, 32));

209 
	`subRound
(
C
, 
D
, 
E
, 
A
, 
B
, 
f2
, 
K2
, 
	`ex∑nd
(
eD©a
, 33));

210 
	`subRound
(
B
, 
C
, 
D
, 
E
, 
A
, 
f2
, 
K2
, 
	`ex∑nd
(
eD©a
, 34));

211 
	`subRound
(
A
, 
B
, 
C
, 
D
, 
E
, 
f2
, 
K2
, 
	`ex∑nd
(
eD©a
, 35));

212 
	`subRound
(
E
, 
A
, 
B
, 
C
, 
D
, 
f2
, 
K2
, 
	`ex∑nd
(
eD©a
, 36));

213 
	`subRound
(
D
, 
E
, 
A
, 
B
, 
C
, 
f2
, 
K2
, 
	`ex∑nd
(
eD©a
, 37));

214 
	`subRound
(
C
, 
D
, 
E
, 
A
, 
B
, 
f2
, 
K2
, 
	`ex∑nd
(
eD©a
, 38));

215 
	`subRound
(
B
, 
C
, 
D
, 
E
, 
A
, 
f2
, 
K2
, 
	`ex∑nd
(
eD©a
, 39));

217 
	`subRound
(
A
, 
B
, 
C
, 
D
, 
E
, 
f3
, 
K3
, 
	`ex∑nd
(
eD©a
, 40));

218 
	`subRound
(
E
, 
A
, 
B
, 
C
, 
D
, 
f3
, 
K3
, 
	`ex∑nd
(
eD©a
, 41));

219 
	`subRound
(
D
, 
E
, 
A
, 
B
, 
C
, 
f3
, 
K3
, 
	`ex∑nd
(
eD©a
, 42));

220 
	`subRound
(
C
, 
D
, 
E
, 
A
, 
B
, 
f3
, 
K3
, 
	`ex∑nd
(
eD©a
, 43));

221 
	`subRound
(
B
, 
C
, 
D
, 
E
, 
A
, 
f3
, 
K3
, 
	`ex∑nd
(
eD©a
, 44));

222 
	`subRound
(
A
, 
B
, 
C
, 
D
, 
E
, 
f3
, 
K3
, 
	`ex∑nd
(
eD©a
, 45));

223 
	`subRound
(
E
, 
A
, 
B
, 
C
, 
D
, 
f3
, 
K3
, 
	`ex∑nd
(
eD©a
, 46));

224 
	`subRound
(
D
, 
E
, 
A
, 
B
, 
C
, 
f3
, 
K3
, 
	`ex∑nd
(
eD©a
, 47));

225 
	`subRound
(
C
, 
D
, 
E
, 
A
, 
B
, 
f3
, 
K3
, 
	`ex∑nd
(
eD©a
, 48));

226 
	`subRound
(
B
, 
C
, 
D
, 
E
, 
A
, 
f3
, 
K3
, 
	`ex∑nd
(
eD©a
, 49));

227 
	`subRound
(
A
, 
B
, 
C
, 
D
, 
E
, 
f3
, 
K3
, 
	`ex∑nd
(
eD©a
, 50));

228 
	`subRound
(
E
, 
A
, 
B
, 
C
, 
D
, 
f3
, 
K3
, 
	`ex∑nd
(
eD©a
, 51));

229 
	`subRound
(
D
, 
E
, 
A
, 
B
, 
C
, 
f3
, 
K3
, 
	`ex∑nd
(
eD©a
, 52));

230 
	`subRound
(
C
, 
D
, 
E
, 
A
, 
B
, 
f3
, 
K3
, 
	`ex∑nd
(
eD©a
, 53));

231 
	`subRound
(
B
, 
C
, 
D
, 
E
, 
A
, 
f3
, 
K3
, 
	`ex∑nd
(
eD©a
, 54));

232 
	`subRound
(
A
, 
B
, 
C
, 
D
, 
E
, 
f3
, 
K3
, 
	`ex∑nd
(
eD©a
, 55));

233 
	`subRound
(
E
, 
A
, 
B
, 
C
, 
D
, 
f3
, 
K3
, 
	`ex∑nd
(
eD©a
, 56));

234 
	`subRound
(
D
, 
E
, 
A
, 
B
, 
C
, 
f3
, 
K3
, 
	`ex∑nd
(
eD©a
, 57));

235 
	`subRound
(
C
, 
D
, 
E
, 
A
, 
B
, 
f3
, 
K3
, 
	`ex∑nd
(
eD©a
, 58));

236 
	`subRound
(
B
, 
C
, 
D
, 
E
, 
A
, 
f3
, 
K3
, 
	`ex∑nd
(
eD©a
, 59));

238 
	`subRound
(
A
, 
B
, 
C
, 
D
, 
E
, 
f4
, 
K4
, 
	`ex∑nd
(
eD©a
, 60));

239 
	`subRound
(
E
, 
A
, 
B
, 
C
, 
D
, 
f4
, 
K4
, 
	`ex∑nd
(
eD©a
, 61));

240 
	`subRound
(
D
, 
E
, 
A
, 
B
, 
C
, 
f4
, 
K4
, 
	`ex∑nd
(
eD©a
, 62));

241 
	`subRound
(
C
, 
D
, 
E
, 
A
, 
B
, 
f4
, 
K4
, 
	`ex∑nd
(
eD©a
, 63));

242 
	`subRound
(
B
, 
C
, 
D
, 
E
, 
A
, 
f4
, 
K4
, 
	`ex∑nd
(
eD©a
, 64));

243 
	`subRound
(
A
, 
B
, 
C
, 
D
, 
E
, 
f4
, 
K4
, 
	`ex∑nd
(
eD©a
, 65));

244 
	`subRound
(
E
, 
A
, 
B
, 
C
, 
D
, 
f4
, 
K4
, 
	`ex∑nd
(
eD©a
, 66));

245 
	`subRound
(
D
, 
E
, 
A
, 
B
, 
C
, 
f4
, 
K4
, 
	`ex∑nd
(
eD©a
, 67));

246 
	`subRound
(
C
, 
D
, 
E
, 
A
, 
B
, 
f4
, 
K4
, 
	`ex∑nd
(
eD©a
, 68));

247 
	`subRound
(
B
, 
C
, 
D
, 
E
, 
A
, 
f4
, 
K4
, 
	`ex∑nd
(
eD©a
, 69));

248 
	`subRound
(
A
, 
B
, 
C
, 
D
, 
E
, 
f4
, 
K4
, 
	`ex∑nd
(
eD©a
, 70));

249 
	`subRound
(
E
, 
A
, 
B
, 
C
, 
D
, 
f4
, 
K4
, 
	`ex∑nd
(
eD©a
, 71));

250 
	`subRound
(
D
, 
E
, 
A
, 
B
, 
C
, 
f4
, 
K4
, 
	`ex∑nd
(
eD©a
, 72));

251 
	`subRound
(
C
, 
D
, 
E
, 
A
, 
B
, 
f4
, 
K4
, 
	`ex∑nd
(
eD©a
, 73));

252 
	`subRound
(
B
, 
C
, 
D
, 
E
, 
A
, 
f4
, 
K4
, 
	`ex∑nd
(
eD©a
, 74));

253 
	`subRound
(
A
, 
B
, 
C
, 
D
, 
E
, 
f4
, 
K4
, 
	`ex∑nd
(
eD©a
, 75));

254 
	`subRound
(
E
, 
A
, 
B
, 
C
, 
D
, 
f4
, 
K4
, 
	`ex∑nd
(
eD©a
, 76));

255 
	`subRound
(
D
, 
E
, 
A
, 
B
, 
C
, 
f4
, 
K4
, 
	`ex∑nd
(
eD©a
, 77));

256 
	`subRound
(
C
, 
D
, 
E
, 
A
, 
B
, 
f4
, 
K4
, 
	`ex∑nd
(
eD©a
, 78));

257 
	`subRound
(
B
, 
C
, 
D
, 
E
, 
A
, 
f4
, 
K4
, 
	`ex∑nd
(
eD©a
, 79));

260 
dige°
[0] +
A
;

261 
dige°
[1] +
B
;

262 
dige°
[2] +
C
;

263 
dige°
[3] +
D
;

264 
dige°
[4] +
E
;

265 
	}
}

271 
	$l⁄gRevî£
(
UINT4
 * 
buf„r
, 
byãCou¡
, 
Endü¬ess
)

273 
UINT4
 
vÆue
;

275 i‡(
Endü¬ess
 =
TRUE
)

277 
byãCou¡
 /(
UINT4
);

278 
byãCou¡
--) {

279 
vÆue
 = *
buf„r
;

280 
vÆue
 = ((value & 0xFF00FF00UL) >> 8) |

281 ((
vÆue
 & 0x00FF00FFUL) << 8);

282 *
buf„r
++ = (
vÆue
 << 16) | (value >> 16);

284 
	}
}

294 
	$TSK_SHA_Upd©e
(
TSK_SHA_CTX
 * 
shsInfo
, 
BYTE
 * 
buf„r
, 
cou¡
)

296 
UINT4
 
tmp
;

297 
d©aCou¡
;

300 
tmp
 = 
shsInfo
->
cou¡Lo
;

301 i‡((
shsInfo
->
cou¡Lo
 = 
tmp
 + ((
UINT4
Ë
cou¡
 << 3)) <Åmp)

302 
shsInfo
->
cou¡Hi
++;

303 
shsInfo
->
cou¡Hi
 +
cou¡
 >> 29;

306 
d©aCou¡
 = (Ë(
tmp
 >> 3) & 0x3F;

309 i‡(
d©aCou¡
) {

310 
BYTE
 *
p
 = (BYTE *Ë
shsInfo
->
d©a
 + 
d©aCou¡
;

312 
d©aCou¡
 = 
SHS_DATASIZE
 - dataCount;

313 i‡(
cou¡
 < 
d©aCou¡
) {

314 
	`mem˝y
(
p
, 
buf„r
, 
cou¡
);

317 
	`mem˝y
(
p
, 
buf„r
, 
d©aCou¡
);

318 
	`l⁄gRevî£
(
shsInfo
->
d©a
, 
SHS_DATASIZE
, shsInfo->
Endü¬ess
);

319 
	`SHSTønsf‹m
(
shsInfo
->
dige°
, shsInfo->
d©a
);

320 
buf„r
 +
d©aCou¡
;

321 
cou¡
 -
d©aCou¡
;

325 
cou¡
 >
SHS_DATASIZE
) {

326 
	`mem˝y
((
POINTER
Ë
shsInfo
->
d©a
, (POINTERË
buf„r
, 
SHS_DATASIZE
);

327 
	`l⁄gRevî£
(
shsInfo
->
d©a
, 
SHS_DATASIZE
, shsInfo->
Endü¬ess
);

328 
	`SHSTønsf‹m
(
shsInfo
->
dige°
, shsInfo->
d©a
);

329 
buf„r
 +
SHS_DATASIZE
;

330 
cou¡
 -
SHS_DATASIZE
;

334 
	`mem˝y
((
POINTER
Ë
shsInfo
->
d©a
, (POINTERË
buf„r
, 
cou¡
);

335 
	}
}

338 
	$SHAtoByã
(
BYTE
 
ouçut
[
SHS_DIGESTSIZE
], 
UINT4
 * 
öput
)

340 
i
, 
j
;

342 
i
 = 0, 
j
 = 0; j < 
SHS_DIGESTSIZE
; i++, j += 4) {

343 
ouçut
[
j
 + 3] = (
BYTE
Ë(
öput
[
i
] & 0xff);

344 
ouçut
[
j
 + 2] = (
BYTE
Ë((
öput
[
i
] >> 8) & 0xff);

345 
ouçut
[
j
 + 1] = (
BYTE
Ë((
öput
[
i
] >> 16) & 0xff);

346 
ouçut
[
j
] = (
BYTE
Ë((
öput
[
i
] >> 24) & 0xff);

348 
	}
}

357 
	$TSK_SHA_FöÆ
(
BYTE
 
ouçut
[
SHS_DIGESTSIZE
], 
TSK_SHA_CTX
 * 
shsInfo
)

359 
cou¡
;

360 
BYTE
 *
d©aPå
;

363 
cou¡
 = (Ë
shsInfo
->
cou¡Lo
;

364 
cou¡
 = (count >> 3) & 0x3F;

368 
d©aPå
 = (
BYTE
 *Ë
shsInfo
->
d©a
 + 
cou¡
;

369 *
d©aPå
++ = 0x80;

372 
cou¡
 = 
SHS_DATASIZE
 - 1 - count;

375 i‡(
cou¡
 < 8) {

377 
	`mem£t
(
d©aPå
, 0, 
cou¡
);

378 
	`l⁄gRevî£
(
shsInfo
->
d©a
, 
SHS_DATASIZE
, shsInfo->
Endü¬ess
);

379 
	`SHSTønsf‹m
(
shsInfo
->
dige°
, shsInfo->
d©a
);

382 
	`mem£t
((
POINTER
Ë
shsInfo
->
d©a
, 0, 
SHS_DATASIZE
 - 8);

386 
	`mem£t
(
d©aPå
, 0, 
cou¡
 - 8);

389 
shsInfo
->
d©a
[14] = shsInfo->
cou¡Hi
;

390 
shsInfo
->
d©a
[15] = shsInfo->
cou¡Lo
;

392 
	`l⁄gRevî£
(
shsInfo
->
d©a
, 
SHS_DATASIZE
 - 8, shsInfo->
Endü¬ess
);

393 
	`SHSTønsf‹m
(
shsInfo
->
dige°
, shsInfo->
d©a
);

396 
	`SHAtoByã
(
ouçut
, 
shsInfo
->
dige°
);

399 
	`mem£t
((
POINTER
Ë
shsInfo
, 0, (shsInfo));

400 
	}
}

	@tsk3/base/tsk_base.h

22 #i‚de‡
_TSK_BASE_H


23 
	#_TSK_BASE_H


	)

26 
	~<°dio.h
>

27 
	~<°dlib.h
>

41 
	#TSK_VERSION_NUM
 0x030102ff

	)

45 
	#TSK_VERSION_STR
 "3.1.2"

	)

51 #i‡!
deföed
(
_MSC_VER
)

52 
	~"tsk3/tsk_öcs.h
"

56 
	~"tsk_os.h
"

58 #ifde‡
__˝lu•lus


68 
TSK_OK
,

69 
TSK_ERR
,

70 
TSK_COR


71 } 
	tTSK_RETVAL_ENUM
;

74 
TSK_LIST
 
	tTSK_LIST
;

81 
	sTSK_LIST
 {

82 
TSK_LIST
 *
√xt
;

83 
uöt64_t
 
key
;

84 
uöt64_t
 
Àn
;

86 
uöt8_t
 
tsk_li°_föd
(
TSK_LIST
 * 
li°
, 
uöt64_t
 
key
);

87 
uöt8_t
 
tsk_li°_add
(
TSK_LIST
 ** 
li°
, 
uöt64_t
 
key
);

88 
tsk_li°_‰ì
(
TSK_LIST
 * 
li°
);

96 
uöt64_t
 *
	gvÆs
;

97 
size_t
 
	gt›
;

98 
size_t
 
	gÀn
;

99 } 
	tTSK_STACK
;

101 
uöt8_t
 
tsk_°ack_push
(
TSK_STACK
 * 
°ack
, 
uöt64_t
 
key
);

102 
tsk_°ack_p›
(
TSK_STACK
 * 
°ack
);

103 
uöt8_t
 
tsk_°ack_föd
(
TSK_STACK
 * 
°ack
, 
uöt64_t
 
key
);

104 
tsk_°ack_‰ì
(
TSK_STACK
 * 
°ack
);

105 
TSK_STACK
 *
tsk_°ack_¸óã
();

109 
tsk_Ârötf
(
FILE
 * 
fd
, c⁄° *
msg
, ...);

110 
tsk_¥ötf
(c⁄° *
msg
, ...);

116 #i‚de‡
PRIx64


117 
	#PRIx64
 "Œx"

	)

120 #i‚de‡
PRIX64


121 
	#PRIX64
 "ŒX"

	)

124 #i‚de‡
PRIu64


125 
	#PRIu64
 "Œu"

	)

128 #i‚de‡
PRId64


129 
	#PRId64
 "Œd"

	)

132 #i‚de‡
PRIo64


133 
	#PRIo64
 "Œo"

	)

136 #i‚de‡
PRIx32


137 
	#PRIx32
 "x"

	)

140 #i‚de‡
PRIX32


141 
	#PRIX32
 "X"

	)

144 #i‚de‡
PRIu32


145 
	#PRIu32
 "u"

	)

148 #i‚de‡
PRId32


149 
	#PRId32
 "d"

	)

152 #i‚de‡
PRIx16


153 
	#PRIx16
 "hx"

	)

156 #i‚de‡
PRIX16


157 
	#PRIX16
 "hX"

	)

160 #i‚de‡
PRIu16


161 
	#PRIu16
 "hu"

	)

164 #i‚de‡
PRIu8


165 
	#PRIu8
 "hhu"

	)

168 #i‚de‡
PRIx8


169 
	#PRIx8
 "hhx"

	)

177 
uöt64_t
 
	tTSK_INUM_T
;

178 
	#PRIuINUM
 
PRIu64


	)

179 
	#PRIxINUM
 
PRIx64


	)

180 
	#PRIdINUM
 
PRId64


	)

182 
uöt32_t
 
	tTSK_UID_T
;

183 
	#PRIuUID
 
PRIu32


	)

184 
	#PRIxUID
 
PRIx32


	)

185 
	#PRIdUID
 
PRId32


	)

187 
uöt32_t
 
	tTSK_GID_T
;

188 
	#PRIuGID
 
PRIu32


	)

189 
	#PRIxGID
 
PRIx32


	)

190 
	#PRIdGID
 
PRId32


	)

192 
uöt64_t
 
	tTSK_DADDR_T
;

193 
	#PRIuDADDR
 
PRIu64


	)

194 
	#PRIxDADDR
 
PRIx64


	)

195 
	#PRIdDADDR
 
PRId64


	)

197 
öt64_t
 
	tTSK_OFF_T
;

198 
	#PRIuOFF
 
PRIu64


	)

199 
	#PRIxOFF
 
PRIx64


	)

200 
	#PRIdOFF
 
PRId64


	)

202 
uöt32_t
 
	tTSK_PNUM_T
;

203 
	#PRIuPNUM
 
PRIu32


	)

204 
	#PRIxPNUM
 
PRIx32


	)

205 
	#PRIdPNUM
 
PRId32


	)

209 
tsk_vîsi⁄_¥öt
(
FILE
 *);

210 c⁄° *
tsk_vîsi⁄_gë_°r
();

219 
	gTSK_WALK_CONT
 = 0x0,

220 
	gTSK_WALK_STOP
 = 0x1,

221 
	gTSK_WALK_ERROR
 = 0x2,

222 } 
	tTSK_WALK_RET_ENUM
;

226 
tsk_vîbo£
;

231 
uöt32_t
 
tsk_î∫o
;

232 c⁄° *
tsk_îr‹_gë
();

233 
tsk_îr‹_¥öt
(
FILE
 *);

234 
tsk_îr‹_ª£t
();

236 
	#TSK_ERR_AUX
 0x01000000

	)

237 
	#TSK_ERR_IMG
 0x02000000

	)

238 
	#TSK_ERR_VS
 0x04000000

	)

239 
	#TSK_ERR_FS
 0x08000000

	)

240 
	#TSK_ERR_HDB
 0x10000000

	)

241 
	#TSK_ERR_MASK
 0x00ffffff

	)

243 
	#TSK_ERR_AUX_MALLOC
 (
TSK_ERR_AUX
 | 0)

	)

244 
	#TSK_ERR_AUX_MAX
 2

	)

246 
	#TSK_ERR_IMG_NOFILE
 (
TSK_ERR_IMG
 | 0)

	)

247 
	#TSK_ERR_IMG_OFFSET
 (
TSK_ERR_IMG
 | 1)

	)

248 
	#TSK_ERR_IMG_UNKTYPE
 (
TSK_ERR_IMG
 | 2)

	)

249 
	#TSK_ERR_IMG_UNSUPTYPE
 (
TSK_ERR_IMG
 | 3)

	)

250 
	#TSK_ERR_IMG_OPEN
 (
TSK_ERR_IMG
 | 4)

	)

251 
	#TSK_ERR_IMG_STAT
 (
TSK_ERR_IMG
 | 5)

	)

252 
	#TSK_ERR_IMG_SEEK
 (
TSK_ERR_IMG
 | 6)

	)

253 
	#TSK_ERR_IMG_READ
 (
TSK_ERR_IMG
 | 7)

	)

254 
	#TSK_ERR_IMG_READ_OFF
 (
TSK_ERR_IMG
 | 8)

	)

255 
	#TSK_ERR_IMG_ARG
 (
TSK_ERR_IMG
 | 9)

	)

256 
	#TSK_ERR_IMG_MAGIC
 (
TSK_ERR_IMG
 | 10)

	)

257 
	#TSK_ERR_IMG_WRITE
 (
TSK_ERR_IMG
 | 11)

	)

258 
	#TSK_ERR_IMG_CONVERT
 (
TSK_ERR_IMG
 | 12)

	)

259 
	#TSK_ERR_IMG_PASSWD
 (
TSK_ERR_IMG
 | 13)

	)

260 
	#TSK_ERR_IMG_MAX
 14

	)

262 
	#TSK_ERR_VS_UNKTYPE
 (
TSK_ERR_VS
 | 0)

	)

263 
	#TSK_ERR_VS_UNSUPTYPE
 (
TSK_ERR_VS
 | 1)

	)

264 
	#TSK_ERR_VS_READ
 (
TSK_ERR_VS
 | 2)

	)

265 
	#TSK_ERR_VS_MAGIC
 (
TSK_ERR_VS
 | 3)

	)

266 
	#TSK_ERR_VS_WALK_RNG
 (
TSK_ERR_VS
 | 4)

	)

267 
	#TSK_ERR_VS_BUF
 (
TSK_ERR_VS
 | 5)

	)

268 
	#TSK_ERR_VS_BLK_NUM
 (
TSK_ERR_VS
 | 6)

	)

269 
	#TSK_ERR_VS_ARG
 (
TSK_ERR_VS
 | 7)

	)

270 
	#TSK_ERR_VS_MAX
 8

	)

272 
	#TSK_ERR_FS_UNKTYPE
 (
TSK_ERR_FS
 | 0)

	)

273 
	#TSK_ERR_FS_UNSUPTYPE
 (
TSK_ERR_FS
 | 1)

	)

274 
	#TSK_ERR_FS_UNSUPFUNC
 (
TSK_ERR_FS
 | 2)

	)

275 
	#TSK_ERR_FS_WALK_RNG
 (
TSK_ERR_FS
 | 3)

	)

276 
	#TSK_ERR_FS_READ
 (
TSK_ERR_FS
 | 4)

	)

277 
	#TSK_ERR_FS_READ_OFF
 (
TSK_ERR_FS
 | 5)

	)

278 
	#TSK_ERR_FS_ARG
 (
TSK_ERR_FS
 | 6)

	)

279 
	#TSK_ERR_FS_BLK_NUM
 (
TSK_ERR_FS
 | 7)

	)

280 
	#TSK_ERR_FS_INODE_NUM
 (
TSK_ERR_FS
 | 8)

	)

281 
	#TSK_ERR_FS_INODE_COR
 (
TSK_ERR_FS
 | 9)

	)

282 
	#TSK_ERR_FS_MAGIC
 (
TSK_ERR_FS
 | 10)

	)

283 
	#TSK_ERR_FS_FWALK
 (
TSK_ERR_FS
 | 11)

	)

284 
	#TSK_ERR_FS_WRITE
 (
TSK_ERR_FS
 | 12)

	)

285 
	#TSK_ERR_FS_UNICODE
 (
TSK_ERR_FS
 | 13)

	)

286 
	#TSK_ERR_FS_RECOVER
 (
TSK_ERR_FS
 | 14)

	)

287 
	#TSK_ERR_FS_GENFS
 (
TSK_ERR_FS
 | 15)

	)

288 
	#TSK_ERR_FS_CORRUPT
 (
TSK_ERR_FS
 | 16)

	)

289 
	#TSK_ERR_FS_ATTR_NOTFOUND
 (
TSK_ERR_FS
 | 17)

	)

290 
	#TSK_ERR_FS_MAX
 18

	)

293 
	#TSK_ERR_HDB_UNKTYPE
 (
TSK_ERR_HDB
 | 0)

	)

294 
	#TSK_ERR_HDB_UNSUPTYPE
 (
TSK_ERR_HDB
 | 1)

	)

295 
	#TSK_ERR_HDB_READDB
 (
TSK_ERR_HDB
 | 2)

	)

296 
	#TSK_ERR_HDB_READIDX
 (
TSK_ERR_HDB
 | 3)

	)

297 
	#TSK_ERR_HDB_ARG
 (
TSK_ERR_HDB
 | 4)

	)

298 
	#TSK_ERR_HDB_WRITE
 (
TSK_ERR_HDB
 | 5)

	)

299 
	#TSK_ERR_HDB_CREATE
 (
TSK_ERR_HDB
 | 6)

	)

300 
	#TSK_ERR_HDB_DELETE
 (
TSK_ERR_HDB
 | 7)

	)

301 
	#TSK_ERR_HDB_MISSING
 (
TSK_ERR_HDB
 | 8)

	)

302 
	#TSK_ERR_HDB_PROC
 (
TSK_ERR_HDB
 | 9)

	)

303 
	#TSK_ERR_HDB_OPEN
 (
TSK_ERR_HDB
 | 10)

	)

304 
	#TSK_ERR_HDB_CORRUPT
 (
TSK_ERR_HDB
 | 11)

	)

305 
	#TSK_ERR_HDB_MAX
 12

	)

316 
	gTSK_LIT_ENDIAN
 = 0x01,

317 
	gTSK_BIG_ENDIAN
 = 0x02

318 } 
	tTSK_ENDIAN_ENUM
;

324 
TSK_OFF_T
 
tsk_∑r£_off£t
(c⁄° 
TSK_TCHAR
 *);

325 
tsk_∑r£_≤um
(c⁄° 
TSK_TCHAR
 * 
a_≤um_°r
,

326 
TSK_PNUM_T
 * 
a_≤um
);

357 *
	tPOINTER
;

361 
uöt16_t
 
	tUINT2
;

364 
uöt32_t
 
	tUINT4
;

368 
uöt8_t
 
	tBYTE
;

370 #i‚de‡
TRUE


371 
	#FALSE
 0

	)

372 
	#TRUE
 ( !
FALSE
 )

	)

379 
UINT4
 
	g°©e
[4];

380 
UINT4
 
	gcou¡
[2];

381 
	gbuf„r
[64];

382 } 
	tTSK_MD5_CTX
;

384 
TSK_MD5_Inô
(
TSK_MD5_CTX
 *);

385 
TSK_MD5_Upd©e
(
TSK_MD5_CTX
 *, *, );

386 
TSK_MD5_FöÆ
([16], 
TSK_MD5_CTX
 *);

395 
UINT4
 
	gdige°
[5];

396 
UINT4
 
	gcou¡Lo
, 
	gcou¡Hi
;

397 
UINT4
 
	gd©a
[16];

398 
	gEndü¬ess
;

399 } 
	tTSK_SHA_CTX
;

403 
TSK_SHA_Inô
(
TSK_SHA_CTX
 *);

404 
TSK_SHA_Upd©e
(
TSK_SHA_CTX
 *, 
BYTE
 * 
buf„r
, 
cou¡
);

405 
TSK_SHA_FöÆ
(
BYTE
 * 
ouçut
, 
TSK_SHA_CTX
 *);

408 #ifde‡
__˝lu•lus


	@tsk3/base/tsk_base_i.h

10 #i‚de‡
_TSK_BASE_I_H


11 
	#_TSK_BASE_I_H


	)

14 #i‡
HAVE_CONFIG_H


15 
	~"tsk3/tsk_c⁄fig.h
"

20 #ifde‡
_LARGEFILE_SOURCE


21 #i‚de‡
_LARGEFILE64_SOURCE


22 
	#_LARGEFILE64_SOURCE
 1

	)

26 
	~"tsk_ba£.h
"

29 
	~<°rög.h
>

32 #ifde‡
__˝lu•lus


36 #i‚de‡
rounddown


37 
	#rounddown
(
x
, 
y
) \

38 ((((
x
Ë% (
y
)) == 0) ? (x) : \

39 (
	`roundup
((
x
),(
y
)Ë- (y)))

	)

42 *
tsk_mÆloc
(
size_t
);

43 *
tsk_ªÆloc
(*, 
size_t
);

46 #ifde‡
TSK_WIN32


47 
tsk_›töd
;

48 
TSK_TCHAR
 *
tsk_›èrg
;

49 
tsk_gë›t
(
¨gc
, 
TSK_TCHAR
 * c⁄° 
¨gv
[],

50 c⁄° 
TSK_TCHAR
 * 
›t°rög
);

56 
	#TSK_ERRSTR_L
 512

	)

57 
	#TSK_ERRSTR_PR_L
 ((
TSK_ERRSTR_L
 << 2Ë+ 64)

	)

59 
tsk_îr°r
[
TSK_ERRSTR_L
];

60 
tsk_îr°r2
[
TSK_ERRSTR_L
];

61 
tsk_îr°r_¥öt
[
TSK_ERRSTR_PR_L
];

69 
uöt8_t
 
tsk_guess_íd_u16
(
TSK_ENDIAN_ENUM
 *, uint8_t *,

70 
uöt16_t
);

71 
uöt8_t
 
tsk_guess_íd_u32
(
TSK_ENDIAN_ENUM
 *, uint8_t *,

72 
uöt32_t
);

80 
	#tsk_gëu16
(
ídün
, 
x
) \

81 (
uöt16_t
)(((
ídün
Ë=
TSK_LIT_ENDIAN
) ? \

82 (((
uöt8_t
 *)(
x
))[0] + (((uint8_t *)(x))[1] << 8)) : \

83 (((
uöt8_t
 *)(
x
))[1] + (((uöt8_à*)(x))[0] << 8)Ë)

	)

91 
	#tsk_gës16
(
ídün
, 
x
) \

92 ((
öt16_t
)
	`tsk_gëu16
(
ídün
, 
x
))

	)

101 
	#tsk_gëu32
(
ídün
, 
x
) \

102 (
uöt32_t
)–((
ídün
Ë=
TSK_LIT_ENDIAN
) ? \

103 ((((
uöt8_t
 *)(
x
))[0] << 0) + \

104 (((
uöt8_t
 *)(
x
))[1] << 8) + \

105 (((
uöt8_t
 *)(
x
))[2] << 16) + \

106 (((
uöt8_t
 *)(
x
))[3] << 24) ) \

108 ((((
uöt8_t
 *)(
x
))[3] << 0) + \

109 (((
uöt8_t
 *)(
x
))[2] << 8) + \

110 (((
uöt8_t
 *)(
x
))[1] << 16) + \

111 (((
uöt8_t
 *)(
x
))[0] << 24ËË)

	)

119 
	#tsk_gës32
(
ídün
, 
x
) \

120 ((
öt32_t
)
	`tsk_gëu32
(
ídün
, 
x
))

	)

128 
	#tsk_gëu48
(
ídün
, 
x
) \

129 (
uöt64_t
)–((
ídün
Ë=
TSK_LIT_ENDIAN
) ? \

130 ((
uöt64_t
) \

131 ((
uöt64_t
)((
uöt8_t
 *)(
x
))[0] << 0)+ \

132 ((
uöt64_t
)((
uöt8_t
 *)(
x
))[1] << 8) + \

133 ((
uöt64_t
)((
uöt8_t
 *)(
x
))[2] << 16) + \

134 ((
uöt64_t
)((
uöt8_t
 *)(
x
))[3] << 24) + \

135 ((
uöt64_t
)((
uöt8_t
 *)(
x
))[4] << 32) + \

136 ((
uöt64_t
)((
uöt8_t
 *)(
x
))[5] << 40)) \

138 ((
uöt64_t
) \

139 ((
uöt64_t
)((
uöt8_t
 *)(
x
))[5] << 0)+ \

140 ((
uöt64_t
)((
uöt8_t
 *)(
x
))[4] << 8) + \

141 ((
uöt64_t
)((
uöt8_t
 *)(
x
))[3] << 16) + \

142 ((
uöt64_t
)((
uöt8_t
 *)(
x
))[2] << 24) + \

143 ((
uöt64_t
)((
uöt8_t
 *)(
x
))[1] << 32) + \

144 ((
uöt64_t
)((
uöt8_t
 *)(
x
))[0] << 40)Ë)

	)

153 
	#tsk_gëu64
(
ídün
, 
x
) \

154 (
uöt64_t
)–((
ídün
Ë=
TSK_LIT_ENDIAN
) ? \

155 ((
uöt64_t
) \

156 ((
uöt64_t
)((
uöt8_t
 *)(
x
))[0] << 0) + \

157 ((
uöt64_t
)((
uöt8_t
 *)(
x
))[1] << 8) + \

158 ((
uöt64_t
)((
uöt8_t
 *)(
x
))[2] << 16) + \

159 ((
uöt64_t
)((
uöt8_t
 *)(
x
))[3] << 24) + \

160 ((
uöt64_t
)((
uöt8_t
 *)(
x
))[4] << 32) + \

161 ((
uöt64_t
)((
uöt8_t
 *)(
x
))[5] << 40) + \

162 ((
uöt64_t
)((
uöt8_t
 *)(
x
))[6] << 48) + \

163 ((
uöt64_t
)((
uöt8_t
 *)(
x
))[7] << 56)) \

165 ((
uöt64_t
) \

166 ((
uöt64_t
)((
uöt8_t
 *)(
x
))[7] << 0) + \

167 ((
uöt64_t
)((
uöt8_t
 *)(
x
))[6] << 8) + \

168 ((
uöt64_t
)((
uöt8_t
 *)(
x
))[5] << 16) + \

169 ((
uöt64_t
)((
uöt8_t
 *)(
x
))[4] << 24) + \

170 ((
uöt64_t
)((
uöt8_t
 *)(
x
))[3] << 32) + \

171 ((
uöt64_t
)((
uöt8_t
 *)(
x
))[2] << 40) + \

172 ((
uöt64_t
)((
uöt8_t
 *)(
x
))[1] << 48) + \

173 ((
uöt64_t
)((
uöt8_t
 *)(
x
))[0] << 56)Ë)

	)

181 
	#tsk_gës64
(
ídün
, 
x
) \

182 ((
öt64_t
)
	`tsk_gëu64
(
ídün
, 
x
))

	)

185 
	#TSK_IS_CNTRL
(
x
) \

186 (((
x
Ë< 0x20Ë&& ((xË>0x00))

	)

193 #i‚de‡
TSK_UNI_REPLACEMENT_CHAR


286 
	tUTF16
;

287 
	tUTF8
;

288 
	tBoﬁón
;

292 
	gTSKc⁄vîsi⁄OK
,

293 
	gTSKsour˚Exhau°ed
,

294 
	gTSKèrgëExhau°ed
,

295 
	gTSKsour˚IŒegÆ


296 } 
	tTSKC⁄vîsi⁄Resu…
;

299 
	gTSK°ri˘C⁄vîsi⁄
 = 0,

300 
	gTSKÀnõ¡C⁄vîsi⁄


301 } 
	tTSKC⁄vîsi⁄Fœgs
;

303 
TSKC⁄vîsi⁄Resu…
 
tsk_UTF8toUTF16
(c⁄° 
UTF8
 ** 
sour˚Sèπ
,

304 c⁄° 
UTF8
 * 
sour˚End
,

305 
UTF16
 ** 
èrgëSèπ
, UTF16 * 
èrgëEnd
, 
TSKC⁄vîsi⁄Fœgs
 
Êags
);

307 
TSKC⁄vîsi⁄Resu…
 
tsk_UTF16toUTF8
(
TSK_ENDIAN_ENUM
,

308 c⁄° 
UTF16
 ** 
sour˚Sèπ
, c⁄° UTF16 * 
sour˚End
,

309 
UTF8
 ** 
èrgëSèπ
, UTF8 * 
èrgëEnd
, 
TSKC⁄vîsi⁄Fœgs
 
Êags
);

311 
TSKC⁄vîsi⁄Resu…


312 
tsk_UTF16toUTF8_l˛‹dî
(c⁄° 
UTF16
 ** 
sour˚Sèπ
,

313 c⁄° 
UTF16
 * 
sour˚End
, 
UTF8
 ** 
èrgëSèπ
,

314 
UTF8
 * 
èrgëEnd
, 
TSKC⁄vîsi⁄Fœgs
 
Êags
);

317 
Boﬁón
 
tsk_isLegÆUTF8Sequí˚
(c⁄° 
UTF8
 * 
sour˚
,

318 c⁄° 
UTF8
 * 
sour˚End
);

324 #ifde‡
__˝lu•lus


	@tsk3/base/tsk_endian.c

13 
	~"tsk_ba£_i.h
"

21 
uöt8_t
 
	mídün
;

22 } 
	ttmp_ds
;

33 
uöt8_t


34 
	$tsk_guess_íd_u16
(
TSK_ENDIAN_ENUM
 * 
Êag
, 
uöt8_t
 * 
x
, 
uöt16_t
 
vÆ
)

37 i‡(
	`tsk_gëu16
(
TSK_LIT_ENDIAN
, 
x
Ë=
vÆ
) {

38 *
Êag
 = 
TSK_LIT_ENDIAN
;

43 i‡(
	`tsk_gëu16
(
TSK_BIG_ENDIAN
, 
x
Ë=
vÆ
) {

44 *
Êag
 = 
TSK_BIG_ENDIAN
;

50 
	}
}

60 
uöt8_t


61 
	$tsk_guess_íd_u32
(
TSK_ENDIAN_ENUM
 * 
Êag
, 
uöt8_t
 * 
x
, 
uöt32_t
 
vÆ
)

64 i‡(
	`tsk_gëu32
(
TSK_LIT_ENDIAN
, 
x
Ë=
vÆ
) {

65 *
Êag
 = 
TSK_LIT_ENDIAN
;

70 i‡(
	`tsk_gëu32
(
TSK_BIG_ENDIAN
, 
x
Ë=
vÆ
) {

71 *
Êag
 = 
TSK_BIG_ENDIAN
;

76 
	}
}

	@tsk3/base/tsk_error.c

9 
	~"tsk_ba£_i.h
"

18 *
	g¥og«me
 = "unknown";

19 
	gtsk_vîbo£
 = 0;

25 
uöt32_t
 
	gtsk_î∫o
 = 0;

32 
	gtsk_îr°r
[
TSK_ERRSTR_L
];

46 
	gtsk_îr°r2
[
TSK_ERRSTR_L
];

51 
	gtsk_îr°r_¥öt
[
TSK_ERRSTR_PR_L
];

55 c⁄° *
	gtsk_îr_aux_°r
[
TSK_ERR_IMG_MAX
] = {

61 c⁄° *
	gtsk_îr_img_°r
[
TSK_ERR_IMG_MAX
] = {

79 c⁄° *
	gtsk_îr_mm_°r
[
TSK_ERR_VS_MAX
] = {

90 c⁄° *
	gtsk_îr_fs_°r
[
TSK_ERR_FS_MAX
] = {

111 c⁄° *
	gtsk_îr_hdb_°r
[
TSK_ERR_HDB_MAX
] = {

135 
	$tsk_îr‹_gë
()

137 
size_t
 
pidx
 = 0;

139 i‡(
tsk_î∫o
 == 0)

140  
NULL
;

142 
	`mem£t
(
tsk_îr°r_¥öt
, 0, 
TSK_ERRSTR_PR_L
);

143 i‡(
tsk_î∫o
 & 
TSK_ERR_AUX
) {

144 i‡((
TSK_ERR_MASK
 & 
tsk_î∫o
Ë< 
TSK_ERR_AUX_MAX
)

145 
	`¢¥ötf
(&
tsk_îr°r_¥öt
[
pidx
], 
TSK_ERRSTR_PR_L
 -Öidx,

146 "%s", 
tsk_îr_aux_°r
[
tsk_î∫o
 & 
TSK_ERR_MASK
]);

148 
	`¢¥ötf
(&
tsk_îr°r_¥öt
[
pidx
], 
TSK_ERRSTR_PR_L
 -Öidx,

149 "auxtoﬁ†îr‹: %" 
PRIu32
, 
TSK_ERR_MASK
 & 
tsk_î∫o
);

151 i‡(
tsk_î∫o
 & 
TSK_ERR_IMG
) {

152 i‡((
TSK_ERR_MASK
 & 
tsk_î∫o
Ë< 
TSK_ERR_IMG_MAX
)

153 
	`¢¥ötf
(&
tsk_îr°r_¥öt
[
pidx
], 
TSK_ERRSTR_PR_L
 -Öidx,

154 "%s", 
tsk_îr_img_°r
[
tsk_î∫o
 & 
TSK_ERR_MASK
]);

156 
	`¢¥ötf
(&
tsk_îr°r_¥öt
[
pidx
], 
TSK_ERRSTR_PR_L
 -Öidx,

157 "imgtoﬁ†îr‹: %" 
PRIu32
, 
TSK_ERR_MASK
 & 
tsk_î∫o
);

159 i‡(
tsk_î∫o
 & 
TSK_ERR_VS
) {

160 i‡((
TSK_ERR_MASK
 & 
tsk_î∫o
Ë< 
TSK_ERR_VS_MAX
)

161 
	`¢¥ötf
(&
tsk_îr°r_¥öt
[
pidx
], 
TSK_ERRSTR_PR_L
 -Öidx,

162 "%s", 
tsk_îr_mm_°r
[
tsk_î∫o
 & 
TSK_ERR_MASK
]);

164 
	`¢¥ötf
(&
tsk_îr°r_¥öt
[
pidx
], 
TSK_ERRSTR_PR_L
 -Öidx,

165 "mmtoﬁ†îr‹: %" 
PRIu32
, 
TSK_ERR_MASK
 & 
tsk_î∫o
);

167 i‡(
tsk_î∫o
 & 
TSK_ERR_FS
) {

168 i‡((
TSK_ERR_MASK
 & 
tsk_î∫o
Ë< 
TSK_ERR_FS_MAX
)

169 
	`¢¥ötf
(&
tsk_îr°r_¥öt
[
pidx
], 
TSK_ERRSTR_PR_L
 -Öidx,

170 "%s", 
tsk_îr_fs_°r
[
tsk_î∫o
 & 
TSK_ERR_MASK
]);

172 
	`¢¥ötf
(&
tsk_îr°r_¥öt
[
pidx
], 
TSK_ERRSTR_PR_L
 -Öidx,

173 "f°oﬁ†îr‹: %" 
PRIu32
, 
TSK_ERR_MASK
 & 
tsk_î∫o
);

175 i‡(
tsk_î∫o
 & 
TSK_ERR_HDB
) {

176 i‡((
TSK_ERR_MASK
 & 
tsk_î∫o
Ë< 
TSK_ERR_HDB_MAX
)

177 
	`¢¥ötf
(&
tsk_îr°r_¥öt
[
pidx
], 
TSK_ERRSTR_PR_L
 -Öidx,

178 "%s", 
tsk_îr_hdb_°r
[
tsk_î∫o
 & 
TSK_ERR_MASK
]);

180 
	`¢¥ötf
(&
tsk_îr°r_¥öt
[
pidx
], 
TSK_ERRSTR_PR_L
 -Öidx,

181 "hashtoﬁ†îr‹: %" 
PRIu32
, 
TSK_ERR_MASK
 & 
tsk_î∫o
);

184 
	`¢¥ötf
(&
tsk_îr°r_¥öt
[
pidx
], 
TSK_ERRSTR_PR_L
 -Öidx,

185 "Unknow¿Eº‹: %" 
PRIu32
, 
tsk_î∫o
);

187 
pidx
 = 
	`°æí
(
tsk_îr°r_¥öt
);

190 i‡(
tsk_îr°r
[0] != '\0') {

191 
	`¢¥ötf
(&
tsk_îr°r_¥öt
[
pidx
], 
TSK_ERRSTR_PR_L
 -Öidx,

192 " (%s)", 
tsk_îr°r
);

193 
pidx
 = 
	`°æí
(
tsk_îr°r_¥öt
);

196 i‡(
tsk_îr°r2
[0] != '\0') {

197 
	`¢¥ötf
(&
tsk_îr°r_¥öt
[
pidx
], 
TSK_ERRSTR_PR_L
 -Öidx,

198 " (%s)", 
tsk_îr°r2
);

199 
pidx
 = 
	`°æí
(
tsk_îr°r_¥öt
);

201  (*Ë&
tsk_îr°r_¥öt
[0];

202 
	}
}

211 
	$tsk_îr‹_¥öt
(
FILE
 * 
hFûe
)

213 c⁄° *
°r
;

214 i‡(
tsk_î∫o
 == 0)

217 
°r
 = 
	`tsk_îr‹_gë
();

218 i‡(
°r
 !
NULL
) {

219 
	`tsk_Ârötf
(
hFûe
, "%s\n", 
°r
);

222 
	`tsk_Ârötf
(
hFûe
,

224 
tsk_î∫o
);

226 
	}
}

233 
	$tsk_îr‹_ª£t
()

235 
tsk_î∫o
 = 0;

236 
tsk_îr°r
[0] = '\0';

237 
tsk_îr°r2
[0] = '\0';

238 
	}
}

	@tsk3/base/tsk_list.c

9 
	~"tsk_ba£_i.h
"

23 
TSK_LIST
 *

24 
	$tsk_li°_¸óã
(
uöt64_t
 
a_key
)

26 
TSK_LIST
 *
ít
;

27 i‡((
ít
 = (
TSK_LIST
 *Ë
	`tsk_mÆloc
((TSK_LIST))Ë=
NULL
) {

28  
NULL
;

31 
ít
->
key
 = 
a_key
;

32 
ít
->
√xt
 = 
NULL
;

33 
ít
->
Àn
 = 1;

35  
ít
;

36 
	}
}

45 
uöt8_t


46 
	$tsk_li°_add
(
TSK_LIST
 ** 
a_tsk_li°_hód
, 
uöt64_t
 
a_key
)

48 
TSK_LIST
 *
tmp
;

51 i‡(*
a_tsk_li°_hód
 =
NULL
) {

52 
TSK_LIST
 *
ít
;

57 i‡((
ít
 = 
	`tsk_li°_¸óã
(
a_key
)Ë=
NULL
)

60 *
a_tsk_li°_hód
 = 
ít
;

65 i‡(
a_key
 > (*
a_tsk_li°_hód
)->
key
) {

74 i‡(
a_key
 =(*
a_tsk_li°_hód
)->
key
 + 1) {

75 (*
a_tsk_li°_hód
)->
key
++;

76 (*
a_tsk_li°_hód
)->
Àn
++;

79 
TSK_LIST
 *
ít
;

80 i‡((
ít
 = 
	`tsk_li°_¸óã
(
a_key
)Ë=
NULL
)

82 
ít
->
√xt
 = *
a_tsk_li°_hód
;

83 *
a_tsk_li°_hód
 = 
ít
;

88 i‡(
a_key
 =(*
a_tsk_li°_hód
)->
key
) {

94 
tmp
 = *
a_tsk_li°_hód
;

95 
tmp
 !
NULL
) {

98 i‡(
a_key
 > (
tmp
->
key
 -Åmp->
Àn
)) {

102 i‡(
a_key
 =(
tmp
->
key
 -Åmp->
Àn
)) {

104 i‡((
tmp
->
√xt
Ë&& (tmp->√xt->
key
 =
a_key
)) {

108 
tmp
->
Àn
++;

114 i‡(
tmp
->
√xt
 =
NULL
) {

115 
TSK_LIST
 *
ít
;

123 i‡((
ít
 = 
	`tsk_li°_¸óã
(
a_key
)Ë=
NULL
)

125 
tmp
->
√xt
 = 
ít
;

130 i‡(
a_key
 =
tmp
->
√xt
->
key
 + 1) {

131 
tmp
->
√xt
->
key
++;

132 
tmp
->
√xt
->
Àn
++;

135 i‡(
a_key
 > 
tmp
->
√xt
->
key
) {

136 
TSK_LIST
 *
ít
;

145 i‡((
ít
 = 
	`tsk_li°_¸óã
(
a_key
)Ë=
NULL
)

148 
ít
->
√xt
 = 
tmp
->next;

149 
tmp
->
√xt
 = 
ít
;

152 i‡(
a_key
 =
tmp
->
√xt
->
key
) {

155 
tmp
 =Åmp->
√xt
;

158 
	}
}

167 
uöt8_t


168 
	$tsk_li°_föd
(
TSK_LIST
 * 
a_tsk_li°_hód
, 
uöt64_t
 
a_key
)

170 
TSK_LIST
 *
tmp
;

172 
tmp
 = 
a_tsk_li°_hód
;

173 
tmp
 !
NULL
) {

175 i‡((
a_key
 <
tmp
->
key
Ë&& (a_key >Åmp->key -Åmp->
Àn
))

179 i‡(
a_key
 > 
tmp
->
key
)

182 
tmp
 =Åmp->
√xt
;

185 
	}
}

193 
	$tsk_li°_‰ì
(
TSK_LIST
 * 
a_tsk_li°_hód
)

195 
TSK_LIST
 *
tmp
;

197 
a_tsk_li°_hód
) {

198 
tmp
 = 
a_tsk_li°_hód
->
√xt
;

199 
	`‰ì
(
a_tsk_li°_hód
);

200 
a_tsk_li°_hód
 = 
tmp
;

202 
	}
}

	@tsk3/base/tsk_os.h

12 #i‚de‡
_TSK_OS_H


13 
	#_TSK_OS_H


	)

19 #i‡
deföed
(
sun
)

20 
	~<sys/sysma¸os.h
>

23 #i‡
deföed
(
__CYGWIN__
)

24 #i‚de‡
roundup


25 
	#roundup
(
x
, 
y
) \

26 ––((
x
)+((
y
Ë- 1)Ë/ (y)Ë* (yË)

	)

30 #i‡
deföed
(
__INTERNIX
)

31 
	#roundup
(
x
, 
y
) \

32 ––((
x
)+((
y
Ë- 1)Ë/ (y)Ë* (yË)

	)

37 #ifde‡
__MINGW32__


39 #i‚de‡
UNICODE


40 
	#UNICODE


	)

43 #i‚de‡
_UNICODE


44 
	#_UNICODE


	)

47 
	~<wödows.h
>

48 
	~<wch¨.h
>

50 
	#TSK_WIN32


	)

51 
	#roundup
(
x
, 
y
) \

52 ––((
x
)+((
y
Ë- 1)Ë/ (y)Ë* (yË)

	)

54 
	#f£eko
 
f£ek


	)

55 
	#daddr_t
 

	)

61 #ifde‡
_MSC_VER


62 
	#TSK_WIN32


	)

64 #i‚de‡
UNICODE


65 
	#UNICODE


	)

68 #i‚de‡
_UNICODE


69 
	#_UNICODE


	)

72 
	#WIN32_LEAN_AND_MEAN


	)

73 
	#_CRT_SECURE_NO_DEPRECATE
 1

	)

75 
	~<wödows.h
>

76 
	~<shñœpi.h
>

77 
	~<tch¨.h
>

78 
	~<io.h
>

79 
	~"öåö.h
"

82 
	t__öt8
 
	tuöt8_t
;

83 
__öt8
 
	töt8_t
;

84 
	t__öt16
 
	tuöt16_t
;

85 
__öt16
 
	töt16_t
;

86 
	t__öt32
 
	tuöt32_t
;

87 
__öt32
 
	töt32_t
;

88 
	t__öt64
 
	tuöt64_t
;

89 
__öt64
 
	töt64_t
;

92 
	tmode_t
;

93 
	tssize_t
;

96 
	#¢¥ötf
 
_¢¥ötf


	)

97 
	#°rˇ£cmp
(
°rög1
, 
°rög2
Ë
	`_°ricmp
(°rög1, såög2)

	)

99 
	#roundup
(
x
, 
y
) \

100 ––((
x
)+((
y
Ë- 1)Ë/ (y)Ë* (yË)

	)

102 
	#f£eko
 
_f£eki64


	)

113 #ifde‡
TSK_WIN32


116 
WCHAR
 
	tTSK_TCHAR
;

117 
	#_TSK_T
(
x
Ë
L
 ## 
	)
x

118 
	#TSTRTOK
 
wc°ok


	)

119 
	#TSTRLEN
 
wc¶í


	)

120 
	#TSTRCMP
 
wcscmp


	)

121 
	#TSTRNCMP
 
wc¢cmp


	)

122 
	#TSTRNCPY
 
wc¢˝y


	)

123 
	#TSTRNCAT
 
wc¢ˇt


	)

124 
	#TSTRCHR
 
wcschr


	)

125 
	#TSTRTOUL
 
wc°oul


	)

127 
	#TATOI
 
_wtoi


	)

128 
	#TFPRINTF
 
fw¥ötf


	)

129 
	#TSNPRINTF
 
_¢w¥ötf


	)

130 
	#PUTENV
 
_wpuãnv


	)

131 
	#TZSET
 
_tz£t


	)

132 
	#TSTAT
 
_w°©


	)

134 #i‡
deföed
(
_MSC_VER
)

135 
	#TSTRTOULL
 
_wc°oui64


	)

136 
	#STAT_STR
 
_°©64i32


	)

137 #ñi‡
deföed
(
__MINGW32__
)

138 
	#TSTRTOULL
 
wc°ouŒ


	)

139 
	#STAT_STR
 
_°©


	)

143 
	#PRIcTSK
 
	`_TSK_T
("S")

144 
	#PRIwTSK
 
	`_TSK_T
("s")

145 
	#PRIâocTSK
 "S"

146 
	#PRIuSIZE
 "Iu"

147 

	)

148 
	#u∆ök
 
_u∆ök


	)

150 
	#GETOPT
 
tsk_gë›t


151 
	#OPTIND
 
tsk_›töd


	)

152 
	#OPTARG
 
tsk_›èrg


	)

155 
	#°πok_r
(
a
,
b
,
c
Ë
	`°πok
◊,b)

	)

161 
	tTSK_TCHAR
;

162 
	#_TSK_T
(
x
Ë
	)
x

164 
	#TSTAT
 
°©


	)

165 
	#STAT_STR
 
°©


	)

166 
	#TSTRTOK
 
°πok


	)

167 
	#TSTRLEN
 
°æí


	)

168 
	#TSTRCMP
 
°rcmp


	)

169 
	#TSTRNCMP
 
°∫cmp


	)

170 
	#TSTRNCPY
 
°∫˝y


	)

171 
	#TSTRNCAT
 
°∫ˇt


	)

172 
	#TSTRCHR
 
°rchr


	)

173 
	#TSTRTOUL
 
°πoul


	)

174 
	#TSTRTOULL
 
°πouŒ


	)

175 
	#TATOI
 
©oi


	)

176 
	#TFPRINTF
 
Ârötf


	)

177 
	#TSNPRINTF
 
¢¥ötf


	)

179 
	#PUTENV
 
puãnv


	)

180 
	#TZSET
 
tz£t


	)

182 
	#PRIcTSK
 
	`_TSK_T
("s")

183 
	#PRIwTSK
 
	`_TSK_T
("S")

184 
	#PRIâocTSK
 "s"

185 
	#PRIuSIZE
 "zu"

186 

	)

187 
	#GETOPT
 
gë›t


188 
	#OPTIND
 
›töd


189 
	#OPTARG
 
›èrg


190 

	)

	@tsk3/base/tsk_parse.c

9 
	~"tsk_ba£_i.h
"

27 
TSK_OFF_T


28 
	$tsk_∑r£_off£t
(c⁄° 
TSK_TCHAR
 * 
a_off£t_°r
)

30 
TSK_TCHAR
 
off£t_l˛
[64], *
off£t_l˛_p
;

31 
TSK_DADDR_T
 
num_blk
;

32 
TSK_TCHAR
 *
˝
;

34 i‡(
a_off£t_°r
 =
NULL
) {

37 i‡(
	`TSTRLEN
(
a_off£t_°r
) > 63) {

38 
	`tsk_îr‹_ª£t
();

39 
tsk_î∫o
 = 
TSK_ERR_IMG_OFFSET
;

40 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

41 "tsk_∑r£: off£à°rög i†toÿl⁄g: %" 
PRIâocTSK
,

42 
a_off£t_°r
);

47 
	`TSTRNCPY
(
off£t_l˛
, 
a_off£t_°r
, 64);

48 
off£t_l˛_p
 = 
off£t_l˛
;

51 i‡(
	`TSTRCHR
(
off£t_l˛_p
, '@'Ë!
NULL
) {

52 
	`tsk_îr‹_ª£t
();

53 
tsk_î∫o
 = 
TSK_ERR_IMG_OFFSET
;

54 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

55 "tsk_∑r£: off£à°rög f‹m©Çÿl⁄gî suµ‹ãd. U£ -bÅÿ•ecify se˘‹ size: %" 
PRIâocTSK
,

56 
a_off£t_°r
);

60 
off£t_l˛_p
 = 
off£t_l˛
;

63 (
off£t_l˛_p
[0] != '\0') && (offset_lcl_p[0] == '0'))

64 
off£t_l˛_p
++;

66 
num_blk
 = 0;

67 i‡(
off£t_l˛_p
[0] != '\0') {

68 
num_blk
 = 
	`TSTRTOULL
(
off£t_l˛_p
, &
˝
, 0);

69 i‡(*
˝
 || *˝ =*
off£t_l˛_p
) {

70 
	`tsk_îr‹_ª£t
();

71 
tsk_î∫o
 = 
TSK_ERR_IMG_OFFSET
;

72 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

73 "tsk_∑r£: invÆid imagêoff£t: %" 
PRIâocTSK
,

74 
off£t_l˛_p
);

79  
num_blk
;

80 
	}
}

95 
	$tsk_∑r£_≤um
(c⁄° 
TSK_TCHAR
 * 
a_≤um_°r
, 
TSK_PNUM_T
 * 
a_≤um
)

97 
TSK_TCHAR
 *
˝
;

99 i‡(
a_≤um_°r
 =
NULL
) {

103 *
a_≤um
 = 
	`TSTRTOUL
(
a_≤um_°r
, &
˝
, 0);

104 i‡(*
˝
 || *˝ =*
a_≤um_°r
) {

105 
	`tsk_îr‹_ª£t
();

106 
tsk_î∫o
 = 
TSK_ERR_IMG_OFFSET
;

107 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

108 "tsk_∑r£: invÆidÖ¨tôi⁄áddªss: %" 
PRIâocTSK
,

109 
a_≤um_°r
);

114 
	}
}

	@tsk3/base/tsk_printf.c

18 
	~"tsk_ba£_i.h
"

19 
	~<°d¨g.h
>

32 #ifde‡
TSK_WIN32


34 
	$tsk_¥ötf_c⁄v
(
WCHAR
 * 
wbuf
, 
wÀn
, c⁄° *
msg
, 
va_li°
 * 
¨gs
)

36 *
cbuf
;

37 
UTF8
 *
±r8
;

38 
UTF16
 *
±r16
;

39 
ªtVÆ
;

40 
size_t
 
Àn
, 
˛í
;

42 
wbuf
[0] = '\0';

45 
˛í
 = 
wÀn
 * 3;

46 i‡(
NULL
 =(
cbuf
 = (*Ë
	`tsk_mÆloc
(
˛í
))) {

49 
	`mem£t
(
cbuf
, 0, 
˛í
);

50 #ifde‡
_MSC_VER


51 
	`v¢¥ötf_s
(
cbuf
, 
˛í
 - 1, 
_TRUNCATE
, 
msg
, *
¨gs
);

53 
	`v¢¥ötf
(
cbuf
, 
˛í
 - 1, 
msg
, *
¨gs
);

55 
Àn
 = 
	`°æí
(
cbuf
);

58 
±r8
 = (
UTF8
 *Ë
cbuf
;

59 
±r16
 = (
UTF16
 *Ë
wbuf
;

60 
ªtVÆ
 =

61 
	`tsk_UTF8toUTF16
((c⁄° 
UTF8
 **Ë&
±r8
, &±r8[
Àn
 + 1], &
±r16
,

62 &
±r16
[
wÀn
], 
TSKÀnõ¡C⁄vîsi⁄
);

63 i‡(
ªtVÆ
 !
TSKc⁄vîsi⁄OK
) {

64 *
±r16
 = '\0';

65 i‡(
tsk_vîbo£
)

66 
	`tsk_Ârötf
(
°dîr
,

70 
	`‰ì
(
cbuf
);

72 
	}
}

86 
	$tsk_Ârötf
(
FILE
 * 
fd
, c⁄° *
msg
, ...)

88 
va_li°
 
¨gs
;

89 
	`va_°¨t
(
¨gs
, 
msg
);

91 #ifde‡
TSK_WIN32


93 
WCHAR
 
wbuf
[2048];

94 
	`tsk_¥ötf_c⁄v
(
wbuf
, 2048, 
msg
, &
¨gs
);

95 
	`fw¥ötf
(
fd
, 
	`_TSK_T
("%s"), 
wbuf
);

98 
	`vÂrötf
(
fd
, 
msg
, 
¨gs
);

100 
	`va_íd
(
¨gs
);

101 
	}
}

113 
	$tsk_¥ötf
(c⁄° *
msg
, ...)

115 
va_li°
 
¨gs
;

116 
	`va_°¨t
(
¨gs
, 
msg
);

118 #ifde‡
TSK_WIN32


120 
WCHAR
 
wbuf
[2048];

121 
	`tsk_¥ötf_c⁄v
(
wbuf
, 2048, 
msg
, &
¨gs
);

122 
	`w¥ötf
(
	`_TSK_T
("%s"), 
wbuf
);

125 
	`v¥ötf
(
msg
, 
¨gs
);

127 
	`va_íd
(
¨gs
);

128 
	}
}

	@tsk3/base/tsk_stack.c

9 
	~"tsk_ba£_i.h
"

22 
TSK_STACK
 *

23 
	$tsk_°ack_¸óã
()

25 
TSK_STACK
 *
tsk_°ack
;

26 i‡((
tsk_°ack
 = (
TSK_STACK
 *Ë
	`tsk_mÆloc
((TSK_STACK))Ë=
NULL
) {

27  
NULL
;

30 
tsk_°ack
->
Àn
 = 64;

31 
tsk_°ack
->
t›
 = 0;

32 i‡((
tsk_°ack
->
vÆs
 =

33 (
uöt64_t
 *Ë
	`tsk_mÆloc
(
tsk_°ack
->
Àn
 * (uint64_t))) ==

34 
NULL
) {

35 
	`‰ì
(
tsk_°ack
);

36  
NULL
;

38  
tsk_°ack
;

39 
	}
}

48 
uöt8_t


49 
	$tsk_°ack_push
(
TSK_STACK
 * 
a_tsk_°ack
, 
uöt64_t
 
a_vÆ
)

51 i‡(
a_tsk_°ack
->
t›
 =a_tsk_°ack->
Àn
) {

52 
a_tsk_°ack
->
Àn
 += 64;

53 i‡((
a_tsk_°ack
->
vÆs
 =

54 (
uöt64_t
 *Ë
	`tsk_ªÆloc
((*Ë
a_tsk_°ack
->
vÆs
,

55 
a_tsk_°ack
->
Àn
 * (
uöt64_t
))Ë=
NULL
) {

59 
a_tsk_°ack
->
vÆs
[a_tsk_°ack->
t›
++] = 
a_vÆ
;

61 
	}
}

69 
	$tsk_°ack_p›
(
TSK_STACK
 * 
a_tsk_°ack
)

71 
a_tsk_°ack
->
t›
--;

72 
	}
}

81 
uöt8_t


82 
	$tsk_°ack_föd
(
TSK_STACK
 * 
a_tsk_°ack
, 
uöt64_t
 
a_vÆ
)

84 
size_t
 
i
;

86 
i
 = 0; i < 
a_tsk_°ack
->
t›
; i++) {

87 i‡(
a_tsk_°ack
->
vÆs
[
i
] =
a_vÆ
)

91 
	}
}

99 
	$tsk_°ack_‰ì
(
TSK_STACK
 * 
a_tsk_°ack
)

101 
	`‰ì
(
a_tsk_°ack
->
vÆs
);

102 
	`‰ì
(
a_tsk_°ack
);

103 
	}
}

	@tsk3/base/tsk_unicode.c

45 
	~"tsk_ba£_i.h
"

48 
	tUTF32
;

49 
	#TSK_UNI_REPLACEMENT_CHAR
 (
UTF32
)0x0000FFFD

	)

50 
	#TSK_UNI_MAX_BMP
 (
UTF32
)0x0000FFFF

	)

51 
	#TSK_UNI_MAX_UTF16
 (
UTF32
)0x0010FFFF

	)

52 
	#TSK_UNI_MAX_UTF32
 (
UTF32
)0x7FFFFFFF

	)

53 
	#TSK_UNI_MAX_LEGAL_UTF32
 (
UTF32
)0x0010FFFF

	)

56 c⁄° 
	ghÆfShi·
 = 10;

58 c⁄° 
UTF32
 
	ghÆfBa£
 = 0x0010000UL;

59 c⁄° 
UTF32
 
	ghÆfMask
 = 0x3FFUL;

61 
	#UNI_SUR_HIGH_START
 (
UTF32
)0xD800

	)

62 
	#UNI_SUR_HIGH_END
 (
UTF32
)0xDBFF

	)

63 
	#UNI_SUR_LOW_START
 (
UTF32
)0xDC00

	)

64 
	#UNI_SUR_LOW_END
 (
UTF32
)0xDFFF

	)

65 
	#Ál£
 0

	)

66 
	#åue
 1

	)

80 c⁄° 
	gåaûögByãsF‹UTF8
[256] = {

104 c⁄° 
UTF32
 
	goff£tsFromUTF8
[6] =

117 c⁄° 
UTF8
 
	gfú°ByãM¨k
[7] =

145 
TSKC⁄vîsi⁄Resu…


146 
	$tsk_UTF16toUTF8
(
TSK_ENDIAN_ENUM
 
ídün
, c⁄° 
UTF16
 ** 
sour˚Sèπ
,

147 c⁄° 
UTF16
 * 
sour˚End
, 
UTF8
 ** 
èrgëSèπ
,

148 
UTF8
 * 
èrgëEnd
, 
TSKC⁄vîsi⁄Fœgs
 
Êags
)

150 
TSKC⁄vîsi⁄Resu…
 
ªsu…
 = 
TSKc⁄vîsi⁄OK
;

151 c⁄° 
UTF16
 *
sour˚
 = *
sour˚Sèπ
;

152 
UTF8
 *
èrgë
 = *
èrgëSèπ
;

153 
sour˚
 < 
sour˚End
) {

154 
UTF32
 
ch
;

155 
byãsToWrôe
 = 0;

156 c⁄° 
UTF32
 
byãMask
 = 0xBF;

157 c⁄° 
UTF32
 
byãM¨k
 = 0x80;

158 c⁄° 
UTF16
 *
ﬁdSour˚
 = 
sour˚
;

159 
ch
 = 
	`tsk_gëu16
(
ídün
, (
uöt8_t
 *Ë
sour˚
);

160 
sour˚
++;

163 i‡(
ch
 >
UNI_SUR_HIGH_START
 && ch <
UNI_SUR_HIGH_END
) {

165 i‡(
sour˚
 < 
sour˚End
) {

166 
UTF32
 
ch2
 = 
	`tsk_gëu16
(
ídün
, (
uöt8_t
 *Ë
sour˚
);

168 i‡(
ch2
 >
UNI_SUR_LOW_START
 && ch2 <
UNI_SUR_LOW_END
) {

169 
ch
 = ((ch - 
UNI_SUR_HIGH_START
Ë<< 
hÆfShi·
)

170 + (
ch2
 - 
UNI_SUR_LOW_START
Ë+ 
hÆfBa£
;

171 ++
sour˚
;

173 i‡(
Êags
 =
TSK°ri˘C⁄vîsi⁄
) {

174 --
sour˚
;

175 
ªsu…
 = 
TSKsour˚IŒegÆ
;

180 --
sour˚
;

181 
ªsu…
 = 
TSKsour˚Exhau°ed
;

185 i‡(
Êags
 =
TSK°ri˘C⁄vîsi⁄
) {

187 i‡(
ch
 >
UNI_SUR_LOW_START
 && ch <
UNI_SUR_LOW_END
) {

188 --
sour˚
;

189 
ªsu…
 = 
TSKsour˚IŒegÆ
;

194 i‡(
ch
 < (
UTF32
) 0x80) {

195 
byãsToWrôe
 = 1;

197 i‡(
ch
 < (
UTF32
) 0x800) {

198 
byãsToWrôe
 = 2;

200 i‡(
ch
 < (
UTF32
) 0x10000) {

201 
byãsToWrôe
 = 3;

203 i‡(
ch
 < (
UTF32
) 0x110000) {

204 
byãsToWrôe
 = 4;

207 
byãsToWrôe
 = 3;

208 
ch
 = 
TSK_UNI_REPLACEMENT_CHAR
;

211 
èrgë
 +
byãsToWrôe
;

212 i‡(
èrgë
 > 
èrgëEnd
) {

213 
sour˚
 = 
ﬁdSour˚
;

214 
èrgë
 -
byãsToWrôe
;

215 
ªsu…
 = 
TSKèrgëExhau°ed
;

218 
byãsToWrôe
) {

220 *--
èrgë
 = (
UTF8
Ë((
ch
 | 
byãM¨k
Ë& 
byãMask
);

221 
ch
 >>= 6;

223 *--
èrgë
 = (
UTF8
Ë((
ch
 | 
byãM¨k
Ë& 
byãMask
);

224 
ch
 >>= 6;

226 *--
èrgë
 = (
UTF8
Ë((
ch
 | 
byãM¨k
Ë& 
byãMask
);

227 
ch
 >>= 6;

229 *--
èrgë
 = (
UTF8
Ë(
ch
 | 
fú°ByãM¨k
[
byãsToWrôe
]);

231 
èrgë
 +
byãsToWrôe
;

233 *
sour˚Sèπ
 = 
sour˚
;

234 *
èrgëSèπ
 = 
èrgë
;

235  
ªsu…
;

236 
	}
}

249 
TSKC⁄vîsi⁄Resu…


250 
	$tsk_UTF16toUTF8_l˛‹dî
(c⁄° 
UTF16
 ** 
sour˚Sèπ
,

251 c⁄° 
UTF16
 * 
sour˚End
, 
UTF8
 ** 
èrgëSèπ
,

252 
UTF8
 * 
èrgëEnd
, 
TSKC⁄vîsi⁄Fœgs
 
Êags
)

254 
TSKC⁄vîsi⁄Resu…
 
ªsu…
 = 
TSKc⁄vîsi⁄OK
;

255 c⁄° 
UTF16
 *
sour˚
 = *
sour˚Sèπ
;

256 
UTF8
 *
èrgë
 = *
èrgëSèπ
;

257 
sour˚
 < 
sour˚End
) {

258 
UTF32
 
ch
;

259 
byãsToWrôe
 = 0;

260 c⁄° 
UTF32
 
byãMask
 = 0xBF;

261 c⁄° 
UTF32
 
byãM¨k
 = 0x80;

262 c⁄° 
UTF16
 *
ﬁdSour˚
 = 
sour˚
;

263 
ch
 = *
sour˚
++;

266 i‡(
ch
 >
UNI_SUR_HIGH_START
 && ch <
UNI_SUR_HIGH_END
) {

268 i‡(
sour˚
 < 
sour˚End
) {

269 
UTF32
 
ch2
 = *
sour˚
;

271 i‡(
ch2
 >
UNI_SUR_LOW_START
 && ch2 <
UNI_SUR_LOW_END
) {

272 
ch
 = ((ch - 
UNI_SUR_HIGH_START
Ë<< 
hÆfShi·
)

273 + (
ch2
 - 
UNI_SUR_LOW_START
Ë+ 
hÆfBa£
;

274 ++
sour˚
;

276 i‡(
Êags
 =
TSK°ri˘C⁄vîsi⁄
) {

277 --
sour˚
;

278 
ªsu…
 = 
TSKsour˚IŒegÆ
;

283 --
sour˚
;

284 
ªsu…
 = 
TSKsour˚Exhau°ed
;

288 i‡(
Êags
 =
TSK°ri˘C⁄vîsi⁄
) {

290 i‡(
ch
 >
UNI_SUR_LOW_START
 && ch <
UNI_SUR_LOW_END
) {

291 --
sour˚
;

292 
ªsu…
 = 
TSKsour˚IŒegÆ
;

297 i‡(
ch
 < (
UTF32
) 0x80) {

298 
byãsToWrôe
 = 1;

300 i‡(
ch
 < (
UTF32
) 0x800) {

301 
byãsToWrôe
 = 2;

303 i‡(
ch
 < (
UTF32
) 0x10000) {

304 
byãsToWrôe
 = 3;

306 i‡(
ch
 < (
UTF32
) 0x110000) {

307 
byãsToWrôe
 = 4;

310 
byãsToWrôe
 = 3;

311 
ch
 = 
TSK_UNI_REPLACEMENT_CHAR
;

314 
èrgë
 +
byãsToWrôe
;

315 i‡(
èrgë
 > 
èrgëEnd
) {

316 
sour˚
 = 
ﬁdSour˚
;

317 
èrgë
 -
byãsToWrôe
;

318 
ªsu…
 = 
TSKèrgëExhau°ed
;

321 
byãsToWrôe
) {

323 *--
èrgë
 = (
UTF8
Ë((
ch
 | 
byãM¨k
Ë& 
byãMask
);

324 
ch
 >>= 6;

326 *--
èrgë
 = (
UTF8
Ë((
ch
 | 
byãM¨k
Ë& 
byãMask
);

327 
ch
 >>= 6;

329 *--
èrgë
 = (
UTF8
Ë((
ch
 | 
byãM¨k
Ë& 
byãMask
);

330 
ch
 >>= 6;

332 *--
èrgë
 = (
UTF8
Ë(
ch
 | 
fú°ByãM¨k
[
byãsToWrôe
]);

334 
èrgë
 +
byãsToWrôe
;

336 *
sour˚Sèπ
 = 
sour˚
;

337 *
èrgëSèπ
 = 
èrgë
;

338  
ªsu…
;

339 
	}
}

354 
Boﬁón


355 
	$isLegÆUTF8
(c⁄° 
UTF8
 * 
sour˚
, 
Àngth
)

357 
UTF8
 
a
;

358 c⁄° 
UTF8
 *
§˝å
 = 
sour˚
 + 
Àngth
;

359 
Àngth
) {

361  
Ál£
;

364 i‡((
a
 = (*--
§˝å
)) < 0x80 ||á > 0xBF)

365  
Ál£
;

367 i‡((
a
 = (*--
§˝å
)) < 0x80 ||á > 0xBF)

368  
Ál£
;

370 i‡((
a
 = (*--
§˝å
)) > 0xBF)

371  
Ál£
;

373 *
sour˚
) {

376 i‡(
a
 < 0xA0)

377  
Ál£
;

380 i‡(
a
 > 0x9F)

381  
Ál£
;

384 i‡(
a
 < 0x90)

385  
Ál£
;

388 i‡(
a
 > 0x8F)

389  
Ál£
;

392 i‡(
a
 < 0x80)

393  
Ál£
;

397 i‡(*
sour˚
 >= 0x80 && *source < 0xC2)

398  
Ál£
;

400 i‡(*
sour˚
 > 0xF4)

401  
Ál£
;

402  
åue
;

403 
	}
}

411 
Boﬁón


412 
	$tsk_isLegÆUTF8Sequí˚
(c⁄° 
UTF8
 * 
sour˚
, c⁄° UTF8 * 
sour˚End
)

414 
Àngth
 = 
åaûögByãsF‹UTF8
[*
sour˚
] + 1;

415 i‡(
sour˚
 + 
Àngth
 > 
sour˚End
) {

416  
Ál£
;

418  
	`isLegÆUTF8
(
sour˚
, 
Àngth
);

419 
	}
}

435 
TSKC⁄vîsi⁄Resu…


436 
	$tsk_UTF8toUTF16
(c⁄° 
UTF8
 ** 
sour˚Sèπ
,

437 c⁄° 
UTF8
 * 
sour˚End
, 
UTF16
 ** 
èrgëSèπ
,

438 
UTF16
 * 
èrgëEnd
, 
TSKC⁄vîsi⁄Fœgs
 
Êags
)

440 
TSKC⁄vîsi⁄Resu…
 
ªsu…
 = 
TSKc⁄vîsi⁄OK
;

441 c⁄° 
UTF8
 *
sour˚
 = *
sour˚Sèπ
;

442 
UTF16
 *
èrgë
 = *
èrgëSèπ
;

443 
sour˚
 < 
sour˚End
) {

444 
UTF32
 
ch
 = 0;

445 
exåaByãsToRód
 = 
åaûögByãsF‹UTF8
[*
sour˚
];

446 i‡(
sour˚
 + 
exåaByãsToRód
 >
sour˚End
) {

447 
ªsu…
 = 
TSKsour˚Exhau°ed
;

451 i‡(!
	`isLegÆUTF8
(
sour˚
, 
exåaByãsToRód
 + 1)) {

452 
ªsu…
 = 
TSKsour˚IŒegÆ
;

458 
exåaByãsToRód
) {

460 
ch
 +*
sour˚
++;

461 
ch
 <<= 6;

463 
ch
 +*
sour˚
++;

464 
ch
 <<= 6;

466 
ch
 +*
sour˚
++;

467 
ch
 <<= 6;

469 
ch
 +*
sour˚
++;

470 
ch
 <<= 6;

472 
ch
 +*
sour˚
++;

473 
ch
 <<= 6;

475 
ch
 +*
sour˚
++;

477 
ch
 -
off£tsFromUTF8
[
exåaByãsToRód
];

479 i‡(
èrgë
 >
èrgëEnd
) {

480 
sour˚
 -(
exåaByãsToRód
 + 1);

481 
ªsu…
 = 
TSKèrgëExhau°ed
;

484 i‡(
ch
 <
TSK_UNI_MAX_BMP
) {

486 i‡(
ch
 >
UNI_SUR_HIGH_START
 && ch <
UNI_SUR_LOW_END
) {

487 i‡(
Êags
 =
TSK°ri˘C⁄vîsi⁄
) {

488 
sour˚
 -(
exåaByãsToRód
 + 1);

489 
ªsu…
 = 
TSKsour˚IŒegÆ
;

493 *
èrgë
++ = 
TSK_UNI_REPLACEMENT_CHAR
;

497 *
èrgë
++ = (
UTF16
Ë
ch
;

500 i‡(
ch
 > 
TSK_UNI_MAX_UTF16
) {

501 i‡(
Êags
 =
TSK°ri˘C⁄vîsi⁄
) {

502 
ªsu…
 = 
TSKsour˚IŒegÆ
;

503 
sour˚
 -(
exåaByãsToRód
 + 1);

507 *
èrgë
++ = 
TSK_UNI_REPLACEMENT_CHAR
;

512 i‡(
èrgë
 + 1 >
èrgëEnd
) {

513 
sour˚
 -(
exåaByãsToRód
 + 1);

514 
ªsu…
 = 
TSKèrgëExhau°ed
;

517 
ch
 -
hÆfBa£
;

518 *
èrgë
++ = (
UTF16
Ë((
ch
 >> 
hÆfShi·
Ë+ 
UNI_SUR_HIGH_START
);

519 *
èrgë
++ = (
UTF16
Ë((
ch
 & 
hÆfMask
Ë+ 
UNI_SUR_LOW_START
);

522 *
sour˚Sèπ
 = 
sour˚
;

523 *
èrgëSèπ
 = 
èrgë
;

524  
ªsu…
;

525 
	}
}

	@tsk3/base/tsk_version.c

14 
	~"tsk_ba£_i.h
"

22 
	$tsk_vîsi⁄_¥öt
(
FILE
 * 
hFûe
)

24 
	`tsk_Ârötf
(
hFûe
, "ThêSÀuth Kô vî %s\n", 
TSK_VERSION_STR
);

26 
	}
}

34 
	$tsk_vîsi⁄_gë_°r
()

36  
TSK_VERSION_STR
;

37 
	}
}

	@tsk3/fs/dcalc_lib.c

31 
	~"tsk_fs_i.h
"

38 
TSK_DADDR_T
 
	mcou¡
;

39 
TSK_DADDR_T
 
	mun˙t
;

40 
uöt8_t
 
	mfound
;

41 
TSK_OFF_T
 
	mÊí
;

42 } 
	tBLKCALC_DATA
;

55 
TSK_WALK_RET_ENUM


56 
	$cou¡_dd_a˘
(c⁄° 
TSK_FS_BLOCK
 * 
fs_block
, *
±r
)

58 
BLKCALC_DATA
 *
d©a
 = (BLKCALC_DATA *Ë
±r
;

60 i‡(
fs_block
->
Êags
 & 
TSK_FS_BLOCK_FLAG_UNALLOC
)

61 
d©a
->
un˙t
++;

63 i‡(
d©a
->
cou¡
-- == 0) {

64 i‡(
fs_block
->
Êags
 & 
TSK_FS_BLOCK_FLAG_UNALLOC
)

65 
	`tsk_¥ötf
("%" 
PRIuDADDR
 "\n", 
d©a
->
un˙t
);

67 
¥ötf


70 
d©a
->
found
 = 1;

71  
TSK_WALK_STOP
;

73  
TSK_WALK_CONT
;

74 
	}
}

81 
TSK_WALK_RET_ENUM


82 
	$cou¡_blkls_a˘
(c⁄° 
TSK_FS_BLOCK
 * 
fs_block
, *
±r
)

84 
BLKCALC_DATA
 *
d©a
 = (BLKCALC_DATA *Ë
±r
;

86 i‡(
d©a
->
cou¡
-- == 0) {

87 
	`tsk_¥ötf
("%" 
PRIuDADDR
 "\n", 
fs_block
->
addr
);

88 
d©a
->
found
 = 1;

89  
TSK_WALK_STOP
;

91  
TSK_WALK_CONT
;

92 
	}
}

96 
TSK_WALK_RET_ENUM


97 
	$cou¡_¶ack_fûe_a˘
(
TSK_FS_FILE
 * 
fs_fûe
, 
TSK_OFF_T
 
a_off
,

98 
TSK_DADDR_T
 
addr
, *
buf
, 
size_t
 
size
, 
TSK_FS_BLOCK_FLAG_ENUM
 
Êags
,

99 *
±r
)

101 
BLKCALC_DATA
 *
d©a
 = (BLKCALC_DATA *Ë
±r
;

103 i‡(
tsk_vîbo£
)

104 
	`tsk_Ârötf
(
°dîr
,

105 "cou¡_¶ack_fûe_a˘: Remaöög Fûe: %" 
PRIuOFF


106 " Buf„r: %" 
PRIuSIZE
 "\n", 
d©a
->
Êí
, 
size
);

109 i‡(
d©a
->
Êí
 >
size
) {

110 
d©a
->
Êí
 -
size
;

113 i‡(
d©a
->
Êí
 == 0) {

114 i‡(
d©a
->
cou¡
-- == 0) {

115 
	`tsk_¥ötf
("%" 
PRIuDADDR
 "\n", 
addr
);

116 
d©a
->
found
 = 1;

117  
TSK_WALK_STOP
;

122 i‡(
d©a
->
Êí
 < 
size
) {

123 i‡(
d©a
->
cou¡
-- == 0) {

124 
	`tsk_¥ötf
("%" 
PRIuDADDR
 "\n", 
addr
);

125 
d©a
->
found
 = 1;

126  
TSK_WALK_STOP
;

129 
d©a
->
Êí
 = 0;

132  
TSK_WALK_CONT
;

133 
	}
}

135 
TSK_WALK_RET_ENUM


136 
	$cou¡_¶ack_öode_a˘
(
TSK_FS_FILE
 * 
fs_fûe
, *
±r
)

138 
BLKCALC_DATA
 *
d©a
 = (BLKCALC_DATA *Ë
±r
;

140 i‡(
tsk_vîbo£
)

141 
	`tsk_Ârötf
(
°dîr
,

142 "cou¡_¶ack_öode_a˘: Pro˚ssög më®d©a: %" 
PRIuINUM


143 "\n", 
fs_fûe
->
mëa
->
addr
);

146 i‡(
	`TSK_FS_TYPE_ISNTFS
(
fs_fûe
->
fs_öfo
->
·y≥
) == 0) {

147 
d©a
->
Êí
 = 
fs_fûe
->
mëa
->
size
;

148 i‡(
	`tsk_fs_fûe_wÆk
(
fs_fûe
,

149 
TSK_FS_FILE_WALK_FLAG_SLACK
, 
cou¡_¶ack_fûe_a˘
, 
±r
)) {

152 i‡(
tsk_vîbo£
)

153 
	`tsk_Ârötf
(
°dîr
, "Eº‹ wÆkög fûê%" 
PRIuINUM
,

154 
fs_fûe
->
mëa
->
addr
);

155 
	`tsk_îr‹_ª£t
();

161 
i
, 
˙t
;

163 
˙t
 = 
	`tsk_fs_fûe_©å_gësize
(
fs_fûe
);

164 
i
 = 0; i < 
˙t
; i++) {

165 c⁄° 
TSK_FS_ATTR
 *
fs_©å
 =

166 
	`tsk_fs_fûe_©å_gë_idx
(
fs_fûe
, 
i
);

167 i‡(!
fs_©å
)

170 i‡(
fs_©å
->
Êags
 & 
TSK_FS_ATTR_NONRES
) {

171 
d©a
->
Êí
 = 
fs_©å
->
size
;

172 i‡(
	`tsk_fs_fûe_wÆk_ty≥
(
fs_fûe
, 
fs_©å
->
ty≥
,

173 
fs_©å
->
id
, 
TSK_FS_FILE_WALK_FLAG_SLACK
,

174 
cou¡_¶ack_fûe_a˘
, 
±r
)) {

176 i‡(
tsk_vîbo£
)

177 
	`tsk_Ârötf
(
°dîr
,

178 "Eº‹ wÆkög fûê%" 
PRIuINUM
,

179 
fs_fûe
->
mëa
->
addr
);

180 
	`tsk_îr‹_ª£t
();

185  
TSK_WALK_CONT
;

186 
	}
}

192 
öt8_t


193 
	$tsk_fs_blkˇlc
(
TSK_FS_INFO
 * 
fs
, 
TSK_FS_BLKCALC_FLAG_ENUM
 
a_l˛Êags
,

194 
TSK_DADDR_T
 
a_˙t
)

196 
BLKCALC_DATA
 
d©a
;

198 
d©a
.
cou¡
 = 
a_˙t
;

199 
d©a
.
found
 = 0;

201 i‡(
a_l˛Êags
 =
TSK_FS_BLKCALC_BLKLS
) {

202 i‡(
	`tsk_fs_block_wÆk
(
fs
, fs->
fú°_block
, fs->
œ°_block
,

203 (
TSK_FS_BLOCK_FLAG_UNALLOC
 |

204 
TSK_FS_BLOCK_FLAG_META
 | 
TSK_FS_BLOCK_FLAG_CONT
),

205 
cou¡_blkls_a˘
, &
d©a
))

208 i‡(
a_l˛Êags
 =
TSK_FS_BLKCALC_DD
) {

209 i‡(
	`tsk_fs_block_wÆk
(
fs
, fs->
fú°_block
, fs->
œ°_block
,

210 (
TSK_FS_BLOCK_FLAG_ALLOC
 | 
TSK_FS_BLOCK_FLAG_UNALLOC
 |

211 
TSK_FS_BLOCK_FLAG_META
 | 
TSK_FS_BLOCK_FLAG_CONT
),

212 
cou¡_dd_a˘
, &
d©a
))

215 i‡(
a_l˛Êags
 =
TSK_FS_BLKCALC_SLACK
) {

216 i‡(
fs
->
	`öode_wÆk
(fs, fs->
fú°_öum
, fs->
œ°_öum
,

217 
TSK_FS_META_FLAG_ALLOC
, 
cou¡_¶ack_öode_a˘
, &
d©a
))

221 i‡(
d©a
.
found
 == 0) {

222 
	`tsk_¥ötf
("BlockÅooÜarge\n");

228 
	}
}

	@tsk3/fs/dcat_lib.c

23 
	~"tsk_fs_i.h
"

24 
	~<˘y≥.h
>

40 
	$°©s
(
TSK_FS_INFO
 * 
fs
)

42 
	`tsk_¥ötf
("%d: Sizêo‡AddªsßbÀ Unô\n", 
fs
->
block_size
);

43 
	}
}

56 
uöt8_t


57 
	$tsk_fs_blkˇt
(
TSK_FS_INFO
 * 
fs
, 
TSK_FS_BLKCAT_FLAG_ENUM
 
l˛Êags
,

58 
TSK_DADDR_T
 
addr
, TSK_DADDR_T 
ªad_num_unôs
)

60 *
buf
;

61 
ssize_t
 
˙t
;

62 
i
;

64 i‡(
l˛Êags
 & 
TSK_FS_BLKCAT_STAT
) {

65 
	`°©s
(
fs
);

69 i‡(
addr
 + 
ªad_num_unôs
 - 1 > 
fs
->
œ°_block
) {

70 
	`tsk_îr‹_ª£t
();

71 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

72 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

74 
PRIuDADDR
 ")", 
fs
->
œ°_block
);

78 #ifde‡
TSK_WIN32


79 i‡(-1 =
	`_£tmode
(
	`_fûío
(
°dout
), 
_O_BINARY
)) {

80 
	`tsk_îr‹_ª£t
();

81 
tsk_î∫o
 = 
TSK_ERR_FS_WRITE
;

82 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

84 
	`°ªº‹
(
î∫o
));

89 i‡(
l˛Êags
 & 
TSK_FS_BLKCAT_HTML
) {

90 
	`tsk_¥ötf
("<html>\n");

91 
	`tsk_¥ötf
("<head>\n");

92 
	`tsk_¥ötf
("<tôÀ>Unô: %" 
PRIuDADDR
 " Size: %" 
PRIuOFF


93 " byãs</tôÀ>\n", 
addr
, 
ªad_num_unôs
 * 
fs
->
block_size
);

94 
	`tsk_¥ötf
("</head>\n");

95 
	`tsk_¥ötf
("<body>\n");

99 i‡((
l˛Êags
 & 
TSK_FS_BLKCAT_HEX
Ë&& (l˛Êag†& 
TSK_FS_BLKCAT_HTML
))

100 
	`tsk_¥ötf
("<table border=0>\n");

102 i‡((
buf
 = 
	`tsk_mÆloc
(
fs
->
block_size
)Ë=
NULL
)

105 
i
 = 0; i < 
ªad_num_unôs
; i++) {

108 
˙t
 = 
	`tsk_fs_ªad_block
(
fs
, 
addr
 + 
i
, 
buf
, fs->
block_size
);

109 i‡(
˙t
 !
fs
->
block_size
) {

110 i‡(
˙t
 >= 0) {

111 
	`tsk_îr‹_ª£t
();

112 
tsk_î∫o
 = 
TSK_ERR_FS_READ
;

114 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

115 "blkˇt: Eº‹Ñódög blockáà%" 
PRIuDADDR
, 
addr
);

121 i‡(
l˛Êags
 & 
TSK_FS_BLKCAT_HEX
) {

122 
TSK_OFF_T
 
idx1
, 
idx2
;

124 
idx1
 = 0; idx1 < 
fs
->
block_size
; idx1 += 16) {

127 i‡(
l˛Êags
 & 
TSK_FS_BLKCAT_HTML
)

128 
	`tsk_¥ötf
("<å><td>%" 
PRIuOFF
 "</td>",

129 
i
 * 
fs
->
block_size
 + 
idx1
);

131 
	`tsk_¥ötf
("%" 
PRIuOFF
 "\t",

132 
i
 * 
fs
->
block_size
 + 
idx1
);

136 
idx2
 = 0; idx2 < 16; idx2++) {

137 i‡((
l˛Êags
 & 
TSK_FS_BLKCAT_HTML
)

138 && (0 =(
idx2
 % 4)))

139 
	`tsk_¥ötf
("<td>");

141 
	`tsk_¥ötf
("%.2x", 
buf
[
idx2
 + 
idx1
] & 0xff);

143 i‡(3 =(
idx2
 % 4)) {

144 i‡(
l˛Êags
 & 
TSK_FS_BLKCAT_HTML
)

145 
	`tsk_¥ötf
("</td>");

147 
	`tsk_¥ötf
(" ");

152 
	`tsk_¥ötf
("\t");

153 
idx2
 = 0; idx2 < 16; idx2++) {

154 i‡((
l˛Êags
 & 
TSK_FS_BLKCAT_HTML
)

155 && (0 =(
idx2
 % 4)))

156 
	`tsk_¥ötf
("<td>");

158 i‡((
	`ißscii
((Ë
buf
[
idx2
 + 
idx1
])) &&

159 (!
	`is˙ål
((Ë
buf
[
idx2
 + 
idx1
])))

160 
	`tsk_¥ötf
("%c", 
buf
[
idx2
 + 
idx1
]);

162 
	`tsk_¥ötf
(".");

164 i‡(3 =(
idx2
 % 4)) {

165 i‡(
l˛Êags
 & 
TSK_FS_BLKCAT_HTML
)

166 
	`tsk_¥ötf
("</td>");

168 
	`tsk_¥ötf
(" ");

172 i‡(
l˛Êags
 & 
TSK_FS_BLKCAT_HTML
)

173 
	`tsk_¥ötf
("</tr>");

174 
	`tsk_¥ötf
("\n");

180 i‡(
l˛Êags
 & 
TSK_FS_BLKCAT_ASCII
) {

181 
TSK_OFF_T
 
idx
;

182 
idx
 = 0; idx < 
fs
->
block_size
; idx++) {

184 i‡((
	`i•röt
((Ë
buf
[
idx
]))

185 || (
buf
[
idx
] == '\t')) {

186 
	`tsk_¥ötf
("%c", 
buf
[
idx
]);

188 i‡((
buf
[
idx
] == '\n')

189 || (
buf
[
idx
] == '\r')) {

190 i‡(
l˛Êags
 & 
TSK_FS_BLKCAT_HTML
)

191 
	`tsk_¥ötf
("<br>");

192 
	`tsk_¥ötf
("%c", 
buf
[
idx
]);

195 
	`tsk_¥ötf
(".");

201 i‡(
	`fwrôe
(
buf
, 
fs
->
block_size
, 1, 
°dout
) != 1) {

202 
	`tsk_îr‹_ª£t
();

203 
tsk_î∫o
 = 
TSK_ERR_FS_WRITE
;

204 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

206 
	`°ªº‹
(
î∫o
));

207 
	`‰ì
(
buf
);

213 
	`‰ì
(
buf
);

215 i‡(
l˛Êags
 & 
TSK_FS_BLKCAT_HEX
) {

216 i‡(
l˛Êags
 & 
TSK_FS_BLKCAT_HTML
)

217 
	`tsk_¥ötf
("</table>\n");

219 
	`tsk_¥ötf
("\n");

221 i‡(
l˛Êags
 & 
TSK_FS_BLKCAT_ASCII
) {

222 i‡(
l˛Êags
 & 
TSK_FS_BLKCAT_HTML
)

223 
	`tsk_¥ötf
("<br>");

224 
	`tsk_¥ötf
("\n");

227 i‡(
l˛Êags
 & 
TSK_FS_BLKCAT_HTML
)

228 
	`tsk_¥ötf
("<br>");

231 i‡(
l˛Êags
 & 
TSK_FS_BLKCAT_HTML
)

232 
	`tsk_¥ötf
("</body>\n</html>\n");

235 
	}
}

	@tsk3/fs/dls_lib.c

33 
	~"tsk_fs_i.h
"

35 #ifde‡
TSK_WIN32


36 
	~<wösock2.h
>

43 
uöt8_t


44 
	$¥öt_li°_hód
(
TSK_FS_INFO
 * 
fs
)

46 
ho°«mebuf
[
BUFSIZ
];

48 #i‚de‡
TSK_WIN32


49 i‡(
	`gëho°«me
(
ho°«mebuf
, (hostnamebuf) - 1) < 0) {

50 i‡(
tsk_vîbo£
)

51 
	`tsk_Ârötf
(
°dîr
, "blkls_lib:Érror getting hostname: %s\n",

52 
	`°ªº‹
(
î∫o
));

53 
	`°r˝y
(
ho°«mebuf
, "unknown");

55 
ho°«mebuf
[(hostnamebuf) - 1] = 0;

57 
	`°r˝y
(
ho°«mebuf
, "unknown");

63 
	`tsk_¥ötf
("class|host|image|first_time|unit\n");

64 
	`tsk_¥ötf
("blkls|%s||%" 
PRIu64
 "|%s\n", 
ho°«mebuf
,

65 (
uöt64_t
Ë
	`time
(
NULL
), 
fs
->
du«me
);

67 
	`tsk_¥ötf
("addr|alloc\n");

69 
	}
}

71 
TSK_WALK_RET_ENUM


72 
	$¥öt_li°
(c⁄° 
TSK_FS_BLOCK
 * 
fs_block
, *
±r
)

74 
	`tsk_¥ötf
("%" 
PRIuDADDR
 "|%s\n", 
fs_block
->
addr
,

75 (
fs_block
->
Êags
 & 
TSK_FS_BLOCK_FLAG_ALLOC
) ? "a" : "f");

76  
TSK_WALK_CONT
;

77 
	}
}

82 
TSK_WALK_RET_ENUM


83 
	$¥öt_block
(c⁄° 
TSK_FS_BLOCK
 * 
fs_block
, *
±r
)

85 i‡(
tsk_vîbo£
)

86 
	`tsk_Ârötf
(
°dîr
, "wrôêblock %" 
PRIuDADDR
 "\n",

87 
fs_block
->
addr
);

89 i‡(
	`fwrôe
(
fs_block
->
buf
, fs_block->
fs_öfo
->
block_size
, 1,

90 
°dout
) != 1) {

91 
	`tsk_îr‹_ª£t
();

92 
tsk_î∫o
 = 
TSK_ERR_FS_WRITE
;

93 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

94 "blkls_lib:Éº‹ wrôögÅÿ°dout: %s", 
	`°ªº‹
(
î∫o
));

95  
TSK_WALK_ERROR
;

98  
TSK_WALK_CONT
;

99 
	}
}

106 
TSK_OFF_T
 
	mÊí
;

107 } 
	tBLKLS_DATA
;

112 
TSK_WALK_RET_ENUM


113 
	$¶ack_fûe_a˘
(
TSK_FS_FILE
 * 
fs_fûe
, 
TSK_OFF_T
 
a_off
, 
TSK_DADDR_T
 
addr
,

114 *
buf
, 
size_t
 
size
, 
TSK_FS_BLOCK_FLAG_ENUM
 
Êags
, *
±r
)

116 
BLKLS_DATA
 *
d©a
 = (BLKLS_DATA *Ë
±r
;

118 i‡(
tsk_vîbo£
)

119 
	`tsk_Ârötf
(
°dîr
,

120 "¶ack_fûe_a˘: Fûe: %" 
PRIuINUM
 " Remaining File: %"

121 
PRIuOFF
 " Buf„r: %u\n", 
fs_fûe
->
mëa
->
addr
, 
d©a
->
Êí
,

122 
size
);

125 i‡(
d©a
->
Êí
 >
size
) {

126 
d©a
->
Êí
 -
size
;

129 i‡(
d©a
->
Êí
 == 0) {

130 i‡(
	`fwrôe
(
buf
, 
size
, 1, 
°dout
) != 1) {

131 
	`tsk_îr‹_ª£t
();

132 
tsk_î∫o
 = 
TSK_ERR_FS_WRITE
;

133 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

134 "blkls_lib:Éº‹ wrôögÅÿ°dout: %s", 
	`°ªº‹
(
î∫o
));

135  
TSK_WALK_ERROR
;

139 i‡(
d©a
->
Êí
 < 
size
) {

141 
	`mem£t
(
buf
, 0, (
size_t
Ë
d©a
->
Êí
);

142 i‡(
	`fwrôe
(
buf
, 
size
, 1, 
°dout
) != 1) {

143 
	`tsk_îr‹_ª£t
();

144 
tsk_î∫o
 = 
TSK_ERR_FS_WRITE
;

145 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

146 "blkls_lib:Éº‹ wrôögÅÿ°dout: %s", 
	`°ªº‹
(
î∫o
));

147  
TSK_WALK_ERROR
;

149 
d©a
->
Êí
 = 0;

152  
TSK_WALK_CONT
;

153 
	}
}

156 
TSK_WALK_RET_ENUM


157 
	$¶ack_öode_a˘
(
TSK_FS_FILE
 * 
fs_fûe
, *
±r
)

159 
BLKLS_DATA
 *
d©a
 = (BLKLS_DATA *Ë
±r
;

161 i‡(
tsk_vîbo£
)

162 
	`tsk_Ârötf
(
°dîr
,

163 "¶ack_öode_a˘: Pro˚ssög më®d©a: %" 
PRIuINUM
 "\n",

164 
fs_fûe
->
mëa
->
addr
);

168 i‡(
	`TSK_FS_TYPE_ISNTFS
(
fs_fûe
->
fs_öfo
->
·y≥
) == 0) {

169 
d©a
->
Êí
 = 
fs_fûe
->
mëa
->
size
;

170 i‡(
	`tsk_fs_fûe_wÆk
(
fs_fûe
,

171 
TSK_FS_FILE_WALK_FLAG_SLACK
, 
¶ack_fûe_a˘
, 
±r
)) {

172 i‡(
tsk_vîbo£
)

173 
	`tsk_Ârötf
(
°dîr
,

174 "¶ack_öode_a˘:Éº‹ wÆkög fûe: %" 
PRIuINUM
,

175 
fs_fûe
->
mëa
->
addr
);

176 
	`tsk_îr‹_ª£t
();

182 
i
, 
˙t
;

184 
˙t
 = 
	`tsk_fs_fûe_©å_gësize
(
fs_fûe
);

185 
i
 = 0; i < 
˙t
; i++) {

186 c⁄° 
TSK_FS_ATTR
 *
fs_©å
 =

187 
	`tsk_fs_fûe_©å_gë_idx
(
fs_fûe
, 
i
);

188 i‡(!
fs_©å
)

191 i‡(
fs_©å
->
Êags
 & 
TSK_FS_ATTR_NONRES
) {

192 
d©a
->
Êí
 = 
fs_©å
->
size
;

193 i‡(
	`tsk_fs_fûe_wÆk_ty≥
(
fs_fûe
, 
fs_©å
->
ty≥
,

194 
fs_©å
->
id
, 
TSK_FS_FILE_WALK_FLAG_SLACK
,

195 
¶ack_fûe_a˘
, 
±r
)) {

196 i‡(
tsk_vîbo£
)

197 
	`tsk_Ârötf
(
°dîr
,

199 
PRIuINUM
, 
fs_fûe
->
mëa
->
addr
);

200 
	`tsk_îr‹_ª£t
();

206  
TSK_WALK_CONT
;

207 
	}
}

212 
uöt8_t


213 
	$tsk_fs_blkls
(
TSK_FS_INFO
 * 
fs
, 
TSK_FS_BLKLS_FLAG_ENUM
 
a_blklsÊags
,

214 
TSK_DADDR_T
 
b°¨t
, TSK_DADDR_T 
bœ°
,

215 
TSK_FS_BLOCK_FLAG_ENUM
 
a_block_Êags
)

217 
BLKLS_DATA
 
d©a
;

219 i‡(
a_blklsÊags
 & 
TSK_FS_BLKLS_SLACK
) {

221 i‡(
fs
->
	`öode_wÆk
(fs, fs->
fú°_öum
, fs->
œ°_öum
,

222 
TSK_FS_META_FLAG_ALLOC
, 
¶ack_öode_a˘
, &
d©a
))

225 i‡(
a_blklsÊags
 & 
TSK_FS_BLKLS_LIST
) {

226 i‡(
	`¥öt_li°_hód
(
fs
))

229 i‡(
	`tsk_fs_block_wÆk
(
fs
, 
b°¨t
, 
bœ°
, 
a_block_Êags
, 
¥öt_li°
,

230 &
d©a
))

234 #ifde‡
TSK_WIN32


235 i‡(-1 =
	`_£tmode
(
	`_fûío
(
°dout
), 
_O_BINARY
)) {

236 
	`tsk_îr‹_ª£t
();

237 
tsk_î∫o
 = 
TSK_ERR_FS_WRITE
;

238 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

240 
	`°ªº‹
(
î∫o
));

244 i‡(
	`tsk_fs_block_wÆk
(
fs
, 
b°¨t
, 
bœ°
, 
a_block_Êags
,

245 
¥öt_block
, &
d©a
))

250 
	}
}

	@tsk3/fs/dstat_lib.c

25 
	~"tsk_fs_i.h
"

27 
	~"tsk_ffs.h
"

28 
	~"tsk_ext2fs.h
"

29 
	~"tsk_Átfs.h
"

32 
TSK_WALK_RET_ENUM


33 
	$blk°©_a˘
(c⁄° 
TSK_FS_BLOCK
 * 
fs_block
, *
±r
)

35 
	`tsk_¥ötf
("%s: %" 
PRIuDADDR
 "\n", 
fs_block
->
fs_öfo
->
du«me
,

36 
fs_block
->
addr
);

37 
	`tsk_¥ötf
("%sAllocated%s\n",

38 (
fs_block
->
Êags
 & 
TSK_FS_BLOCK_FLAG_ALLOC
) ? "" : "Not ",

39 (
fs_block
->
Êags
 & 
TSK_FS_BLOCK_FLAG_META
) ? " (Meta)" : "");

41 i‡(
	`TSK_FS_TYPE_ISFFS
(
fs_block
->
fs_öfo
->
·y≥
)) {

42 
FFS_INFO
 *
ffs
 = (FFS_INFO *Ë
fs_block
->
fs_öfo
;

43 
	`tsk_¥ötf
("Group: %" 
PRI_FFSGRP
 "\n", 
ffs
->
gΩ_num
);

45 i‡(
	`TSK_FS_TYPE_ISEXT
(
fs_block
->
fs_öfo
->
·y≥
)) {

46 
EXT2FS_INFO
 *
ext2fs
 = (EXT2FS_INFO *Ë
fs_block
->
fs_öfo
;

47 i‡(
fs_block
->
addr
 >
ext2fs
->
fú°_d©a_block
)

48 
	`tsk_¥ötf
("Group: %" 
PRI_EXT2GRP
 "\n", 
ext2fs
->
gΩ_num
);

50 i‡(
	`TSK_FS_TYPE_ISFAT
(
fs_block
->
fs_öfo
->
·y≥
)) {

51 
FATFS_INFO
 *
Átfs
 = (FATFS_INFO *Ë
fs_block
->
fs_öfo
;

53 i‡(
fs_block
->
addr
 >
Átfs
->
fú°˛u°£˘
) {

54 
	`tsk_¥ötf
("Clu°î: %" 
PRIuDADDR
 "\n",

55 (2 + (
fs_block
->
addr
 -

56 
Átfs
->
fú°˛u°£˘
Ë/ f©fs->
csize
));

60  
TSK_WALK_STOP
;

61 
	}
}

64 
uöt8_t


65 
	$tsk_fs_blk°©
(
TSK_FS_INFO
 * 
fs
, 
TSK_DADDR_T
 
addr
,

66 
TSK_FS_BLOCK_FLAG_ENUM
 
Êags
)

68  
	`tsk_fs_block_wÆk
(
fs
, 
addr
,áddr, 
Êags
, 
blk°©_a˘
, 
NULL
);

69 
	}
}

	@tsk3/fs/ext2fs.c

30 
	~"tsk_fs_i.h
"

31 
	~"tsk_ext2fs.h
"

39 
uöt8_t


40 
	$ext2fs_group_lﬂd
(
EXT2FS_INFO
 * 
ext2fs
, 
EXT2_GRPNUM_T
 
gΩ_num
)

42 
ext2fs_gd
 *
gd
;

43 
TSK_OFF_T
 
offs
;

44 
ssize_t
 
˙t
;

45 
TSK_FS_INFO
 *
fs
 = (TSK_FS_INFO *Ë
ext2fs
;

50 i‡(
gΩ_num
 < 0 || gΩ_num >
ext2fs
->
groups_cou¡
) {

51 
	`tsk_îr‹_ª£t
();

52 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

53 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

55 
PRI_EXT2GRP
 "", 
gΩ_num
);

60 i‡(
ext2fs
->
gΩ_buf
 =
NULL
) {

61 i‡((
ext2fs
->
gΩ_buf
 =

62 (
ext2fs_gd
 *Ë
	`tsk_mÆloc
(”xt2fs_gd))Ë=
NULL
) {

66 i‡(
ext2fs
->
gΩ_num
 == grp_num) {

70 
gd
 = 
ext2fs
->
gΩ_buf
;

76 
offs
 = 
ext2fs
->
groups_off£t
 + 
gΩ_num
 * (
ext2fs_gd
);

77 
˙t
 = 
	`tsk_fs_ªad
(&
ext2fs
->
fs_öfo
, 
offs
, (*Ë
gd
,

78 (
ext2fs_gd
));

79 i‡(
˙t
 !(
ext2fs_gd
)) {

80 i‡(
˙t
 >= 0) {

81 
	`tsk_îr‹_ª£t
();

82 
tsk_î∫o
 = 
TSK_ERR_FS_READ
;

84 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

85 "ext2fs_group_lﬂd: Grou∞des¸ùt‹ %" 
PRI_EXT2GRP
 "át %"

86 
PRIuOFF
, 
gΩ_num
, 
offs
);

92 i‡((
	`tsk_gëu32
(
fs
->
ídün
,

93 
gd
->
bg_block_bôm≠
Ë> 
fs
->
œ°_block
) ||

94 (
	`tsk_gëu32
(
fs
->
ídün
,

95 
gd
->
bg_öode_bôm≠
Ë> 
fs
->
œ°_block
) ||

96 (
	`tsk_gëu32
(
fs
->
ídün
, 
gd
->
bg_öode_èbÀ
Ë> fs->
œ°_block
)) {

97 
	`tsk_îr‹_ª£t
();

98 
tsk_î∫o
 = 
TSK_ERR_FS_CORRUPT
;

99 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

100 "extXfs_group_lﬂd: Grou∞%" 
PRI_EXT2GRP


102 
PRIuDADDR
, 
gΩ_num
, 
offs
);

107 
ext2fs
->
gΩ_num
 = grp_num;

109 i‡(
tsk_vîbo£
) {

110 
TSK_FS_INFO
 *
fs
 = (TSK_FS_INFO *Ë& 
ext2fs
->
fs_öfo
;

111 
	`tsk_Ârötf
(
°dîr
,

112 "\tgrou∞%" 
PRI_EXT2GRP
 ": %" 
PRIu16
 "/%" PRIu16

113 " fªêblocks/öodes\n", 
gΩ_num
, 
	`tsk_gëu16
(
fs
->
ídün
,

114 
gd
->
bg_‰ì_blocks_cou¡
),

115 
	`tsk_gëu16
(
fs
->
ídün
, 
gd
->
bg_‰ì_öodes_cou¡
));

119 
	}
}

124 
	$ext2fs_¥öt_m≠
(
uöt8_t
 * 
m≠
, 
Àn
)

126 
i
;

128 
i
 = 0; i < 
Àn
; i++) {

129 i‡(
i
 > 0 && i % 10 == 0)

130 
	`putc
('|', 
°dîr
);

131 
	`putc
(
	`is£t
(
m≠
, 
i
Ë? '1' : '.', 
°dîr
);

133 
	`putc
('\n', 
°dîr
);

134 
	}
}

141 
uöt8_t


142 
	$ext2fs_bm≠_lﬂd
(
EXT2FS_INFO
 * 
ext2fs
, 
EXT2_GRPNUM_T
 
gΩ_num
)

144 
TSK_FS_INFO
 *
fs
 = (TSK_FS_INFO *Ë& 
ext2fs
->
fs_öfo
;

145 
ssize_t
 
˙t
;

150 i‡((
ext2fs
->
gΩ_buf
 =
NULL
Ë|| (ext2fs->
gΩ_num
 != grp_num)) {

151 i‡(
	`ext2fs_group_lﬂd
(
ext2fs
, 
gΩ_num
)) {

156 i‡(
ext2fs
->
bm≠_buf
 =
NULL
) {

157 i‡((
ext2fs
->
bm≠_buf
 =

158 (
uöt8_t
 *Ë
	`tsk_mÆloc
(
fs
->
block_size
)Ë=
NULL
) {

162 i‡(
ext2fs
->
bm≠_gΩ_num
 =
gΩ_num
)

168 i‡(
	`tsk_gëu32
(
fs
->
ídün
,

169 
ext2fs
->
gΩ_buf
->
bg_block_bôm≠
Ë> 
fs
->
œ°_block
) {

170 
	`tsk_îr‹_ª£t
();

171 
tsk_î∫o
 = 
TSK_ERR_FS_BLK_NUM
;

172 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

173 "ext2fs_bm≠_lﬂd: BlockÅoÿœrgêf‹ image: %" 
PRIu32


174 "", 
	`tsk_gëu32
(
fs
->
ídün
, 
ext2fs
->
gΩ_buf
->
bg_block_bôm≠
));

178 
˙t
 = 
	`tsk_fs_ªad
(
fs
, (
TSK_DADDR_T
Ë
	`tsk_gëu32
(fs->
ídün
,

179 
ext2fs
->
gΩ_buf
->
bg_block_bôm≠
Ë* 
fs
->
block_size
,

180 (*Ë
ext2fs
->
bm≠_buf
,Éxt2fs->
fs_öfo
.
block_size
);

182 i‡(
˙t
 !
ext2fs
->
fs_öfo
.
block_size
) {

183 i‡(
˙t
 >= 0) {

184 
	`tsk_îr‹_ª£t
();

185 
tsk_î∫o
 = 
TSK_ERR_FS_READ
;

187 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

188 "ext2fs_bm≠_lﬂd: Bôm≠ grou∞%" 
PRI_EXT2GRP
 "át %"

189 
PRIu32
, 
gΩ_num
, 
	`tsk_gëu32
(
fs
->
ídün
,

190 
ext2fs
->
gΩ_buf
->
bg_block_bôm≠
));

193 
ext2fs
->
bm≠_gΩ_num
 = 
gΩ_num
;

195 i‡(
tsk_vîbo£
 > 1)

196 
	`ext2fs_¥öt_m≠
(
ext2fs
->
bm≠_buf
,

197 
	`tsk_gëu32
(
fs
->
ídün
, 
ext2fs
->fs->
s_blocks_≥r_group
));

200 
	}
}

207 
uöt8_t


208 
	$ext2fs_im≠_lﬂd
(
EXT2FS_INFO
 * 
ext2fs
, 
EXT2_GRPNUM_T
 
gΩ_num
)

210 
TSK_FS_INFO
 *
fs
 = (TSK_FS_INFO *Ë& 
ext2fs
->
fs_öfo
;

211 
ssize_t
 
˙t
;

216 i‡((
ext2fs
->
gΩ_buf
 =
NULL
Ë|| (ext2fs->
gΩ_num
 != grp_num)) {

217 i‡(
	`ext2fs_group_lﬂd
(
ext2fs
, 
gΩ_num
)) {

223 i‡(
ext2fs
->
im≠_buf
 =
NULL
) {

224 i‡((
ext2fs
->
im≠_buf
 =

225 (
uöt8_t
 *Ë
	`tsk_mÆloc
(
fs
->
block_size
)Ë=
NULL
) {

229 i‡(
ext2fs
->
im≠_gΩ_num
 =
gΩ_num
) {

236 i‡(
	`tsk_gëu32
(
fs
->
ídün
,

237 
ext2fs
->
gΩ_buf
->
bg_öode_bôm≠
Ë> 
fs
->
œ°_block
) {

238 
	`tsk_îr‹_ª£t
();

239 
tsk_î∫o
 = 
TSK_ERR_FS_BLK_NUM
;

240 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

241 "ext2fs_im≠_lﬂd: BlockÅoÿœrgêf‹ image: %" 
PRIu32


242 "", 
	`tsk_gëu32
(
fs
->
ídün
, 
ext2fs
->
gΩ_buf
->
bg_öode_bôm≠
));

245 
˙t
 = 
	`tsk_fs_ªad
(
fs
,

246 (
TSK_DADDR_T
Ë
	`tsk_gëu32
(
fs
->
ídün
,

247 
ext2fs
->
gΩ_buf
->
bg_öode_bôm≠
Ë* 
fs
->
block_size
,

248 (*Ë
ext2fs
->
im≠_buf
,Éxt2fs->
fs_öfo
.
block_size
);

250 i‡(
˙t
 !
ext2fs
->
fs_öfo
.
block_size
) {

251 i‡(
˙t
 >= 0) {

252 
	`tsk_îr‹_ª£t
();

253 
tsk_î∫o
 = 
TSK_ERR_FS_READ
;

255 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

256 "ext2fs_im≠_lﬂd: Inodêbôm≠ %" 
PRI_EXT2GRP
 "át %"

257 
PRIu32
, 
gΩ_num
, 
	`tsk_gëu32
(
fs
->
ídün
,

258 
ext2fs
->
gΩ_buf
->
bg_öode_bôm≠
));

261 
ext2fs
->
im≠_gΩ_num
 = 
gΩ_num
;

262 i‡(
tsk_vîbo£
 > 1)

263 
	`ext2fs_¥öt_m≠
(
ext2fs
->
im≠_buf
,

264 
	`tsk_gëu32
(
fs
->
ídün
, 
ext2fs
->fs->
s_öodes_≥r_group
));

267 
	}
}

274 
uöt8_t


275 
	$ext2fs_döode_lﬂd
(
EXT2FS_INFO
 * 
ext2fs
, 
TSK_INUM_T
 
öum
)

277 
ext2fs_öode
 *
döo
;

278 
EXT2_GRPNUM_T
 
gΩ_num
;

279 
TSK_OFF_T
 
addr
;

280 
ssize_t
 
˙t
;

281 
TSK_INUM_T
 
ªl_öum
;

282 
TSK_FS_INFO
 *
fs
 = (TSK_FS_INFO *Ë& 
ext2fs
->
fs_öfo
;

288 i‡((
öum
 < 
fs
->
fú°_öum
Ë|| (öum > fs->
œ°_öum
 - 1)) {

289 
	`tsk_îr‹_ª£t
();

290 
tsk_î∫o
 = 
TSK_ERR_FS_INODE_NUM
;

291 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

292 "ext2fs_döode_lﬂd:áddªss: %" 
PRIuINUM
, 
öum
);

297 i‡(
ext2fs
->
döo_buf
 =
NULL
) {

298 i‡((
ext2fs
->
döo_buf
 =

299 (
ext2fs_öode
 *Ë
	`tsk_mÆloc
(
ext2fs
->
öode_size
)Ë=
NULL
) {

303 i‡(
ext2fs
->
döo_öum
 =
öum
) {

307 
döo
 = 
ext2fs
->
döo_buf
;

312 
gΩ_num
 = (
EXT2_GRPNUM_T
Ë((
öum
 - 
fs
->
fú°_öum
) /

313 
	`tsk_gëu32
(
fs
->
ídün
, 
ext2fs
->fs->
s_öodes_≥r_group
));

315 i‡((
ext2fs
->
gΩ_buf
 =
NULL
Ë|| (ext2fs->
gΩ_num
 != grp_num)) {

316 i‡(
	`ext2fs_group_lﬂd
(
ext2fs
, 
gΩ_num
)) {

324 
ªl_öum
 =

325 (
öum
 - 1Ë- 
	`tsk_gëu32
(
fs
->
ídün
,

326 
ext2fs
->
fs
->
s_öodes_≥r_group
Ë* 
gΩ_num
;

327 
addr
 =

328 (
TSK_OFF_T
Ë
	`tsk_gëu32
(
fs
->
ídün
,

329 
ext2fs
->
gΩ_buf
->
bg_öode_èbÀ
Ë* (
TSK_OFF_T
Ë
fs
->
block_size
 +

330 
ªl_öum
 * (
TSK_OFF_T
Ë
ext2fs
->
öode_size
;

332 
˙t
 = 
	`tsk_fs_ªad
(
fs
, 
addr
, (*Ë
döo
, 
ext2fs
->
öode_size
);

333 i‡(
˙t
 !
ext2fs
->
öode_size
) {

334 i‡(
˙t
 >= 0) {

335 
	`tsk_îr‹_ª£t
();

336 
tsk_î∫o
 = 
TSK_ERR_FS_READ
;

338 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

339 "ext2fs_döode_lﬂd: Inodê%" 
PRIuINUM


340 " from %" 
PRIuOFF
, 
öum
, 
addr
);

344 
ext2fs
->
döo_öum
 = 
öum
;

345 i‡(
tsk_vîbo£
)

346 
	`tsk_Ârötf
(
°dîr
,

347 "%" 
PRIuINUM
 " m/l/s=%o/%d/%" 
PRIuOFF


348 " u/g=%d/%d macd=%" 
PRIu32
 "/%" PRIu32 "/%" PRIu32 "/%" PRIu32

349 "\n", 
öum
, 
	`tsk_gëu16
(
fs
->
ídün
, 
döo
->
i_mode
),

350 
	`tsk_gëu16
(
fs
->
ídün
, 
döo
->
i_∆ök
), (
	`tsk_gëu32
(fs->endian,

351 
döo
->
i_size
Ë+ (
	`tsk_gëu16
(
fs
->
ídün
,

352 
döo
->
i_mode
Ë& 
EXT2_IN_REG
Ë? (
uöt64_t
)

353 
	`tsk_gëu32
(
fs
->
ídün
, 
döo
->
i_size_high
) << 32 : 0),

354 
	`tsk_gëu16
(
fs
->
ídün
, 
döo
->
i_uid
) + (tsk_getu16(fs->endian,

355 
döo
->
i_uid_high
Ë<< 16), 
	`tsk_gëu16
(
fs
->
ídün
,

356 
döo
->
i_gid
Ë+ (
	`tsk_gëu16
(
fs
->
ídün
,

357 
döo
->
i_gid_high
Ë<< 16), 
	`tsk_gëu32
(
fs
->
ídün
,

358 
döo
->
i_mtime
), 
	`tsk_gëu32
(
fs
->
ídün
, döo->
i_©ime
),

359 
	`tsk_gëu32
(
fs
->
ídün
, 
döo
->
i_˘ime
),Åsk_getu32(fs->endian,

360 
döo
->
i_dtime
));

363 
	}
}

369 
uöt8_t


370 
	$ext2fs_döode_c›y
(
EXT2FS_INFO
 * 
ext2fs
, 
TSK_FS_META
 * 
fs_mëa
)

372 
i
;

373 
ext2fs_öode
 *
ö
 = 
ext2fs
->
döo_buf
;

374 
TSK_FS_INFO
 *
fs
 = (TSK_FS_INFO *Ë& 
ext2fs
->
fs_öfo
;

375 
ext2fs_sb
 *
sb
 = 
ext2fs
->
fs
;

376 
EXT2_GRPNUM_T
 
gΩ_num
;

377 
TSK_INUM_T
 
iba£
 = 0;

378 
TSK_DADDR_T
 *
addr_±r
;

380 i‡(
ext2fs
->
döo_buf
 =
NULL
) {

381 
	`tsk_îr‹_ª£t
();

382 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

383 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

388 
fs_mëa
->
©å_°©e
 = 
TSK_FS_META_ATTR_EMPTY
;

389 i‡(
fs_mëa
->
©å
) {

390 
	`tsk_fs_©åli°_m¨kunu£d
(
fs_mëa
->
©å
);

394 
	`tsk_gëu16
(
fs
->
ídün
, 
ö
->
i_mode
Ë& 
EXT2_IN_FMT
) {

395 
EXT2_IN_REG
:

396 
fs_mëa
->
ty≥
 = 
TSK_FS_META_TYPE_REG
;

398 
EXT2_IN_DIR
:

399 
fs_mëa
->
ty≥
 = 
TSK_FS_META_TYPE_DIR
;

401 
EXT2_IN_SOCK
:

402 
fs_mëa
->
ty≥
 = 
TSK_FS_META_TYPE_SOCK
;

404 
EXT2_IN_LNK
:

405 
fs_mëa
->
ty≥
 = 
TSK_FS_META_TYPE_LNK
;

407 
EXT2_IN_BLK
:

408 
fs_mëa
->
ty≥
 = 
TSK_FS_META_TYPE_BLK
;

410 
EXT2_IN_CHR
:

411 
fs_mëa
->
ty≥
 = 
TSK_FS_META_TYPE_CHR
;

413 
EXT2_IN_FIFO
:

414 
fs_mëa
->
ty≥
 = 
TSK_FS_META_TYPE_FIFO
;

417 
fs_mëa
->
ty≥
 = 
TSK_FS_META_TYPE_UNDEF
;

422 
fs_mëa
->
mode
 = 0;

423 i‡(
	`tsk_gëu16
(
fs
->
ídün
, 
ö
->
i_mode
Ë& 
EXT2_IN_ISUID
)

424 
fs_mëa
->
mode
 |
TSK_FS_META_MODE_ISUID
;

425 i‡(
	`tsk_gëu16
(
fs
->
ídün
, 
ö
->
i_mode
Ë& 
EXT2_IN_ISGID
)

426 
fs_mëa
->
mode
 |
TSK_FS_META_MODE_ISGID
;

427 i‡(
	`tsk_gëu16
(
fs
->
ídün
, 
ö
->
i_mode
Ë& 
EXT2_IN_ISVTX
)

428 
fs_mëa
->
mode
 |
TSK_FS_META_MODE_ISVTX
;

430 i‡(
	`tsk_gëu16
(
fs
->
ídün
, 
ö
->
i_mode
Ë& 
EXT2_IN_IRUSR
)

431 
fs_mëa
->
mode
 |
TSK_FS_META_MODE_IRUSR
;

432 i‡(
	`tsk_gëu16
(
fs
->
ídün
, 
ö
->
i_mode
Ë& 
EXT2_IN_IWUSR
)

433 
fs_mëa
->
mode
 |
TSK_FS_META_MODE_IWUSR
;

434 i‡(
	`tsk_gëu16
(
fs
->
ídün
, 
ö
->
i_mode
Ë& 
EXT2_IN_IXUSR
)

435 
fs_mëa
->
mode
 |
TSK_FS_META_MODE_IXUSR
;

437 i‡(
	`tsk_gëu16
(
fs
->
ídün
, 
ö
->
i_mode
Ë& 
EXT2_IN_IRGRP
)

438 
fs_mëa
->
mode
 |
TSK_FS_META_MODE_IRGRP
;

439 i‡(
	`tsk_gëu16
(
fs
->
ídün
, 
ö
->
i_mode
Ë& 
EXT2_IN_IWGRP
)

440 
fs_mëa
->
mode
 |
TSK_FS_META_MODE_IWGRP
;

441 i‡(
	`tsk_gëu16
(
fs
->
ídün
, 
ö
->
i_mode
Ë& 
EXT2_IN_IXGRP
)

442 
fs_mëa
->
mode
 |
TSK_FS_META_MODE_IXGRP
;

444 i‡(
	`tsk_gëu16
(
fs
->
ídün
, 
ö
->
i_mode
Ë& 
EXT2_IN_IROTH
)

445 
fs_mëa
->
mode
 |
TSK_FS_META_MODE_IROTH
;

446 i‡(
	`tsk_gëu16
(
fs
->
ídün
, 
ö
->
i_mode
Ë& 
EXT2_IN_IWOTH
)

447 
fs_mëa
->
mode
 |
TSK_FS_META_MODE_IWOTH
;

448 i‡(
	`tsk_gëu16
(
fs
->
ídün
, 
ö
->
i_mode
Ë& 
EXT2_IN_IXOTH
)

449 
fs_mëa
->
mode
 |
TSK_FS_META_MODE_IXOTH
;

451 
fs_mëa
->
∆ök
 = 
	`tsk_gëu16
(
fs
->
ídün
, 
ö
->
i_∆ök
);

453 
fs_mëa
->
size
 = 
	`tsk_gëu32
(
fs
->
ídün
, 
ö
->
i_size
);

455 
fs_mëa
->
addr
 = 
ext2fs
->
döo_öum
;

464 i‡((
fs_mëa
->
ty≥
 =
TSK_FS_META_TYPE_REG
) &&

465 (
	`tsk_gëu32
(
fs
->
ídün
, 
sb
->
s_„©uª_ro_com∑t
) &

466 
EXT2FS_FEATURE_RO_COMPAT_LARGE_FILE
)) {

467 
fs_mëa
->
size
 +=

468 ((
uöt64_t
Ë
	`tsk_gëu32
(
fs
->
ídün
, 
ö
->
i_size_high
) << 32);

471 
fs_mëa
->
uid
 =

472 
	`tsk_gëu16
(
fs
->
ídün
, 
ö
->
i_uid
) + (tsk_getu16(fs->endian,

473 
ö
->
i_uid_high
) << 16);

474 
fs_mëa
->
gid
 =

475 
	`tsk_gëu16
(
fs
->
ídün
, 
ö
->
i_gid
) + (tsk_getu16(fs->endian,

476 
ö
->
i_gid_high
) << 16);

477 
fs_mëa
->
mtime
 = 
	`tsk_gëu32
(
fs
->
ídün
, 
ö
->
i_mtime
);

478 
fs_mëa
->
©ime
 = 
	`tsk_gëu32
(
fs
->
ídün
, 
ö
->
i_©ime
);

479 
fs_mëa
->
˘ime
 = 
	`tsk_gëu32
(
fs
->
ídün
, 
ö
->
i_˘ime
);

480 
fs_mëa
->
¸time
 = 0;

481 
fs_mëa
->
time2
.
ext2
.
dtime
 = 
	`tsk_gëu32
(
fs
->
ídün
, 
ö
->
i_dtime
);

482 
fs_mëa
->
mtime_«no
 = fs_mëa->
©ime_«no
 = fs_mëa->
˘ime_«no
 =

483 
fs_mëa
->
¸time_«no
 = 0;

484 
fs_mëa
->
time2
.
ext2
.
dtime_«no
 = 0;

485 
fs_mëa
->
£q
 = 0;

487 i‡(
fs_mëa
->
lök
) {

488 
	`‰ì
(
fs_mëa
->
lök
);

489 
fs_mëa
->
lök
 = 
NULL
;

492 i‡(
fs_mëa
->
c⁄ã¡_Àn
 !
EXT2FS_FILE_CONTENT_LEN
) {

493 i‡((
fs_mëa
 =

494 
	`tsk_fs_mëa_ªÆloc
(
fs_mëa
,

495 
EXT2FS_FILE_CONTENT_LEN
)Ë=
NULL
) {

500 
addr_±r
 = (
TSK_DADDR_T
 *Ë
fs_mëa
->
c⁄ã¡_±r
;

501 
i
 = 0; i < 
EXT2FS_NDADDR
 + 
EXT2FS_NIADDR
; i++)

502 
addr_±r
[
i
] = 
	`tsk_gës32
(
fs
->
ídün
, 
ö
->
i_block
[i]);

508 i‡((
fs_mëa
->
ty≥
 =
TSK_FS_META_TYPE_LNK
)

509 && (
fs_mëa
->
size
 < 
EXT2FS_MAXPATHLEN
) && (fs_meta->size >= 0)) {

510 
cou¡
 = 0;

511 
i
;

513 i‡((
fs_mëa
->
lök
 =

514 
	`tsk_mÆloc
((
size_t
Ë(
fs_mëa
->
size
 + 1))Ë=
NULL
)

518 i‡(
fs_mëa
->
size
 < 4 * (
EXT2FS_NDADDR
 + 
EXT2FS_NIADDR
)) {

519 
j
;

521 
i
 = 0; i < (
EXT2FS_NDADDR
 + 
EXT2FS_NIADDR
) &&

522 
cou¡
 < 
fs_mëa
->
size
; 
i
++) {

523 *
a_±r
 = (*Ë&
ö
->
i_block
[
i
];

524 
j
 = 0; j < 4 && 
cou¡
 < 
fs_mëa
->
size
; j++) {

525 
fs_mëa
->
lök
[
cou¡
++] = 
a_±r
[
j
];

528 
fs_mëa
->
lök
[
cou¡
] = '\0';

531 
	`mem£t
(
fs_mëa
->
c⁄ã¡_±r
, 0, fs_mëa->
c⁄ã¡_Àn
);

536 
TSK_FS_INFO
 *
fs
 = (TSK_FS_INFO *Ë& 
ext2fs
->
fs_öfo
;

537 *
d©a_buf
;

538 *
a_±r
 = 
fs_mëa
->
lök
;

539 
TSK_DADDR_T
 *
addr_±r
 = 
fs_mëa
->
c⁄ã¡_±r
;;

541 i‡((
d©a_buf
 = 
	`tsk_mÆloc
(
fs
->
block_size
)Ë=
NULL
)

546 
i
 = 0; i < 
EXT2FS_NDADDR
 && 
cou¡
 < 
fs_mëa
->
size
; i++) {

547 
ssize_t
 
˙t
;

549 
ªad_cou¡
 =

550 (
fs_mëa
->
size
 - 
cou¡
 <

551 
fs
->
block_size
Ë? (Ë(
fs_mëa
->
size
 -

552 
cou¡
Ë: (Ë(
fs
->
block_size
);

554 
˙t
 = 
	`tsk_fs_ªad_block
(
fs
,

555 
addr_±r
[
i
], 
d©a_buf
, 
fs
->
block_size
);

557 i‡(
˙t
 !
fs
->
block_size
) {

558 i‡(
˙t
 >= 0) {

559 
	`tsk_îr‹_ª£t
();

560 
tsk_î∫o
 = 
TSK_ERR_FS_READ
;

562 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

564 
PRIuDADDR
, 
addr_±r
[
i
]);

565 
	`‰ì
(
d©a_buf
);

569 
	`mem˝y
(
a_±r
, 
d©a_buf
, 
ªad_cou¡
);

570 
cou¡
 +
ªad_cou¡
;

571 
a_±r
 = (*Ë((
uöçå_t
Ëa_±∏+ 
cou¡
);

575 *
a_±r
 = '\0';

576 
	`‰ì
(
d©a_buf
);

580 
i
 = 0;

581 
fs_mëa
->
lök
[
i
] != '\0') {

582 i‡(
	`TSK_IS_CNTRL
(
fs_mëa
->
lök
[
i
]))

583 
fs_mëa
->
lök
[
i
] = '^';

584 
i
++;

589 
gΩ_num
 = (
EXT2_GRPNUM_T
Ë((
ext2fs
->
döo_öum
 - 
fs
->
fú°_öum
) /

590 
	`tsk_gëu32
(
fs
->
ídün
, 
ext2fs
->fs->
s_öodes_≥r_group
));

592 i‡(
ext2fs
->
im≠_gΩ_num
 !
gΩ_num
) {

593 i‡(
	`ext2fs_im≠_lﬂd
(
ext2fs
, 
gΩ_num
)) {

598 
iba£
 =

599 
gΩ_num
 * 
	`tsk_gëu32
(
fs
->
ídün
,

600 
ext2fs
->
fs
->
s_öodes_≥r_group
Ë+ fs->
fú°_öum
;

605 
fs_mëa
->
Êags
 = (
	`is£t
(
ext2fs
->
im≠_buf
,Éxt2fs->
döo_öum
 - 
iba£
) ?

606 
TSK_FS_META_FLAG_ALLOC
 : 
TSK_FS_META_FLAG_UNALLOC
);

611 
fs_mëa
->
Êags
 |(fs_mëa->
˘ime
 ?

612 
TSK_FS_META_FLAG_USED
 : 
TSK_FS_META_FLAG_UNUSED
);

615 
	}
}

625 
uöt8_t


626 
	$ext2fs_öode_lookup
(
TSK_FS_INFO
 * 
fs
, 
TSK_FS_FILE
 * 
a_fs_fûe
,

627 
TSK_INUM_T
 
öum
)

629 
EXT2FS_INFO
 *
ext2fs
 = (EXT2FS_INFO *Ë
fs
;

631 i‡(
a_fs_fûe
 =
NULL
) {

632 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

633 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

638 i‡(
a_fs_fûe
->
mëa
 =
NULL
) {

639 i‡((
a_fs_fûe
->
mëa
 =

640 
	`tsk_fs_mëa_Æloc
(
EXT2FS_FILE_CONTENT_LEN
)Ë=
NULL
)

644 
	`tsk_fs_mëa_ª£t
(
a_fs_fûe
->
mëa
);

648 i‡(
öum
 =
	`TSK_FS_ORPHANDIR_INUM
(
fs
)) {

649 i‡(
	`tsk_fs_dú_make_‹ph™_dú_mëa
(
fs
, 
a_fs_fûe
->
mëa
))

655 i‡(
	`ext2fs_döode_lﬂd
(
ext2fs
, 
öum
)) {

659 i‡(
	`ext2fs_döode_c›y
(
ext2fs
, 
a_fs_fûe
->
mëa
)) {

664 
	}
}

676 
uöt8_t


677 
	$ext2fs_öode_wÆk
(
TSK_FS_INFO
 * 
fs
, 
TSK_INUM_T
 
°¨t_öum
,

678 
TSK_INUM_T
 
íd_öum
, 
TSK_FS_META_FLAG_ENUM
 
Êags
,

679 
TSK_FS_META_WALK_CB
 
a_a˘i⁄
, *
a_±r
)

681 *
my«me
 = "extXfs_inode_walk";

682 
EXT2FS_INFO
 *
ext2fs
 = (EXT2FS_INFO *Ë
fs
;

683 
EXT2_GRPNUM_T
 
gΩ_num
;

684 
TSK_INUM_T
 
öum
;

685 
TSK_INUM_T
 
íd_öum_tmp
;

686 
TSK_INUM_T
 
iba£
 = 0;

687 
TSK_FS_FILE
 *
fs_fûe
;

688 
myÊags
;

691 
	`tsk_îr‹_ª£t
();

696 i‡(
°¨t_öum
 < 
fs
->
fú°_öum
 || sèπ_öum > fs->
œ°_öum
) {

697 
	`tsk_îr‹_ª£t
();

698 
tsk_î∫o
 = 
TSK_ERR_FS_WALK_RNG
;

699 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

700 "%s: sèπ inode: %" 
PRIuINUM
 "", 
my«me
, 
°¨t_öum
);

704 i‡(
íd_öum
 < 
fs
->
fú°_öum
 ||Énd_öum > fs->
œ°_öum


705 || 
íd_öum
 < 
°¨t_öum
) {

706 
	`tsk_îr‹_ª£t
();

707 
tsk_î∫o
 = 
TSK_ERR_FS_WALK_RNG
;

708 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

709 "%s:Énd inode: %" 
PRIuINUM
 "", 
my«me
, 
íd_öum
);

714 i‡(
Êags
 & 
TSK_FS_META_FLAG_ORPHAN
) {

715 
Êags
 |
TSK_FS_META_FLAG_UNALLOC
;

716 
Êags
 &~
TSK_FS_META_FLAG_ALLOC
;

717 
Êags
 |
TSK_FS_META_FLAG_USED
;

718 
Êags
 &~
TSK_FS_META_FLAG_UNUSED
;

721 i‡(((
Êags
 & 
TSK_FS_META_FLAG_ALLOC
) == 0) &&

722 ((
Êags
 & 
TSK_FS_META_FLAG_UNALLOC
) == 0)) {

723 
Êags
 |(
TSK_FS_META_FLAG_ALLOC
 | 
TSK_FS_META_FLAG_UNALLOC
);

729 i‡(((
Êags
 & 
TSK_FS_META_FLAG_USED
) == 0) &&

730 ((
Êags
 & 
TSK_FS_META_FLAG_UNUSED
) == 0)) {

731 
Êags
 |(
TSK_FS_META_FLAG_USED
 | 
TSK_FS_META_FLAG_UNUSED
);

741 i‡((
Êags
 & 
TSK_FS_META_FLAG_ORPHAN
)

742 && (
fs
->
li°_öum_«med
 =
NULL
)) {

744 i‡(
	`tsk_fs_dú_lﬂd_öum_«med
(
fs
Ë!
TSK_OK
) {

745 
	`°∫ˇt
(
tsk_îr°r2
,

747 
TSK_ERRSTR_L
);

753 i‡((
fs_fûe
 = 
	`tsk_fs_fûe_Æloc
(
fs
)Ë=
NULL
)

755 i‡((
fs_fûe
->
mëa
 =

756 
	`tsk_fs_mëa_Æloc
(
EXT2FS_FILE_CONTENT_LEN
)Ë=
NULL
)

761 i‡(
íd_öum
 =
	`TSK_FS_ORPHANDIR_INUM
(
fs
))

762 
íd_öum_tmp
 = 
íd_öum
 - 1;

764 
íd_öum_tmp
 = 
íd_öum
;

769 
öum
 = 
°¨t_öum
; inum <
íd_öum_tmp
; inum++) {

770 
ªtvÆ
;

776 
gΩ_num
 =

777 (
EXT2_GRPNUM_T
Ë((
öum
 - 1Ë/ 
	`tsk_gëu32
(
fs
->
ídün
,

778 
ext2fs
->
fs
->
s_öodes_≥r_group
));

779 i‡((
ext2fs
->
im≠_buf
 =
NULL
)

780 || (
ext2fs
->
im≠_gΩ_num
 !
gΩ_num
)) {

781 i‡(
	`ext2fs_im≠_lﬂd
(
ext2fs
, 
gΩ_num
)) {

784 
iba£
 =

785 
gΩ_num
 * 
	`tsk_gëu32
(
fs
->
ídün
,

786 
ext2fs
->
fs
->
s_öodes_≥r_group
) + 1;

790 i‡(
öum
 =
°¨t_öum
) {

791 
iba£
 =

792 
gΩ_num
 * 
	`tsk_gëu32
(
fs
->
ídün
,

793 
ext2fs
->
fs
->
s_öodes_≥r_group
) + 1;

799 
myÊags
 = (
	`is£t
(
ext2fs
->
im≠_buf
, 
öum
 - 
iba£
) ?

800 
TSK_FS_META_FLAG_ALLOC
 : 
TSK_FS_META_FLAG_UNALLOC
);

801 i‡((
Êags
 & 
myÊags
) != myflags)

804 i‡(
	`ext2fs_döode_lﬂd
(
ext2fs
, 
öum
)) {

805 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

813 
myÊags
 |(
	`tsk_gëu32
(
fs
->
ídün
, 
ext2fs
->
döo_buf
->
i_˘ime
) ?

814 
TSK_FS_META_FLAG_USED
 : 
TSK_FS_META_FLAG_UNUSED
);

816 i‡((
Êags
 & 
myÊags
) != myflags)

822 i‡((
myÊags
 & 
TSK_FS_META_FLAG_UNALLOC
) &&

823 (
Êags
 & 
TSK_FS_META_FLAG_ORPHAN
) &&

824 (
	`tsk_li°_föd
(
fs
->
li°_öum_«med
, 
öum
))) {

833 i‡(
	`ext2fs_döode_c›y
(
ext2fs
, 
fs_fûe
->
mëa
)) {

834 
	`tsk_fs_mëa_˛o£
(
fs_fûe
->
mëa
);

838 
ªtvÆ
 = 
	`a_a˘i⁄
(
fs_fûe
, 
a_±r
);

839 i‡(
ªtvÆ
 =
TSK_WALK_STOP
) {

840 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

843 i‡(
ªtvÆ
 =
TSK_WALK_ERROR
) {

844 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

850 i‡((
íd_öum
 =
	`TSK_FS_ORPHANDIR_INUM
(
fs
))

851 && (
Êags
 & 
TSK_FS_META_FLAG_ALLOC
)

852 && (
Êags
 & 
TSK_FS_META_FLAG_USED
)) {

853 
ªtvÆ
;

855 i‡(
	`tsk_fs_dú_make_‹ph™_dú_mëa
(
fs
, 
fs_fûe
->
mëa
)) {

856 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

860 
ªtvÆ
 = 
	`a_a˘i⁄
(
fs_fûe
, 
a_±r
);

861 i‡(
ªtvÆ
 =
TSK_WALK_STOP
) {

862 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

865 i‡(
ªtvÆ
 =
TSK_WALK_ERROR
) {

866 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

874 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

876 
	}
}

880 
TSK_FS_BLOCK_FLAG_ENUM


881 
	$ext2fs_block_gëÊags
(
TSK_FS_INFO
 * 
a_fs
, 
TSK_DADDR_T
 
a_addr
)

883 
EXT2FS_INFO
 *
ext2fs
 = (EXT2FS_INFO *Ë
a_fs
;

884 
Êags
;

885 
EXT2_GRPNUM_T
 
gΩ_num
;

886 
TSK_DADDR_T
 
dba£
 = 0;

887 
TSK_DADDR_T
 
dmö
 = 0;

891 i‡(
a_addr
 == 0)

892  
TSK_FS_BLOCK_FLAG_CONT
 | 
TSK_FS_BLOCK_FLAG_ALLOC
;

893 i‡(
a_addr
 < 
ext2fs
->
fú°_d©a_block
)

894  
TSK_FS_BLOCK_FLAG_META
 | 
TSK_FS_BLOCK_FLAG_ALLOC
;

896 
gΩ_num
 = 
	`ext2_dtog_l˛
(
a_fs
, 
ext2fs
->
fs
, 
a_addr
);

899 i‡((
ext2fs
->
bm≠_buf
 =
NULL
)

900 || (
ext2fs
->
bm≠_gΩ_num
 !
gΩ_num
)) {

902 i‡(
	`ext2fs_bm≠_lﬂd
(
ext2fs
, 
gΩ_num
)) {

906 i‡(
tsk_vîbo£
)

907 
	`tsk_Ârötf
(
°dîr
,

908 "ext2_block_wÆk:Üﬂdög grou∞%" 
PRI_EXT2GRP


909 " dba£ %" 
PRIuDADDR
 " bmap +%" PRIuDADDR

910 " im≠ +%" 
PRIuDADDR
 " inos +%" PRIuDADDR "..%"

911 
PRIuDADDR
 "\n", 
gΩ_num
, 
dba£
,

912 (
TSK_DADDR_T
Ë
	`tsk_gëu32
(
a_fs
->
ídün
,

913 
ext2fs
->
gΩ_buf
->
bg_block_bôm≠
)

914 - 
dba£
, (
TSK_DADDR_T
Ë
	`tsk_gëu32
(
a_fs
->
ídün
,

915 
ext2fs
->
gΩ_buf
->
bg_öode_bôm≠
Ë- 
dba£
,

916 (
TSK_DADDR_T
Ë
	`tsk_gëu32
(
a_fs
->
ídün
,

917 
ext2fs
->
gΩ_buf
->
bg_öode_èbÀ
Ë- 
dba£
,

918 
dmö
 - 1 - 
dba£
);

929 
	#INODE_TABLE_SIZE
(
ext2fs
) \

930 ((
	`tsk_gëu32
(
a_fs
->
ídün
, 
ext2fs
->
fs
->
s_öodes_≥r_group
Ë*Éxt2fs->
öode_size
 - 1) \

931 / 
a_fs
->
block_size
 + 1)

	)

933 
dba£
 = 
	`ext2_cgba£_l˛
(
a_fs
, 
ext2fs
->
fs
, 
gΩ_num
);

934 
dmö
 =

935 
	`tsk_gëu32
(
a_fs
->
ídün
,

936 
ext2fs
->
gΩ_buf
->
bg_öode_èbÀ
Ë+ 
	`INODE_TABLE_SIZE
(ext2fs);

955 
Êags
 = (
	`is£t
(
ext2fs
->
bm≠_buf
, 
a_addr
 - 
dba£
) ?

956 
TSK_FS_BLOCK_FLAG_ALLOC
 : 
TSK_FS_BLOCK_FLAG_UNALLOC
);

958 i‡((
a_addr
 >
dba£


959 && 
a_addr
 < 
	`tsk_gëu32
(
a_fs
->
ídün
,

960 
ext2fs
->
gΩ_buf
->
bg_block_bôm≠
))

961 || (
a_addr
 =
	`tsk_gëu32
(
a_fs
->
ídün
,

962 
ext2fs
->
gΩ_buf
->
bg_block_bôm≠
))

963 || (
a_addr
 =
	`tsk_gëu32
(
a_fs
->
ídün
,

964 
ext2fs
->
gΩ_buf
->
bg_öode_bôm≠
))

965 || (
a_addr
 >
	`tsk_gëu32
(
a_fs
->
ídün
,

966 
ext2fs
->
gΩ_buf
->
bg_öode_èbÀ
)

967 && 
a_addr
 < 
dmö
))

968 
Êags
 |
TSK_FS_BLOCK_FLAG_META
;

970 
Êags
 |
TSK_FS_BLOCK_FLAG_CONT
;

972  
Êags
;

973 
	}
}

984 
uöt8_t


985 
	$ext2fs_block_wÆk
(
TSK_FS_INFO
 * 
a_fs
, 
TSK_DADDR_T
 
a_°¨t_blk
,

986 
TSK_DADDR_T
 
a_íd_blk
, 
TSK_FS_BLOCK_WALK_FLAG_ENUM
 
a_Êags
,

987 
TSK_FS_BLOCK_WALK_CB
 
a_a˘i⁄
, *
a_±r
)

989 *
my«me
 = "extXfs_block_walk";

990 
TSK_FS_BLOCK
 *
fs_block
;

991 
TSK_DADDR_T
 
addr
;

994 
	`tsk_îr‹_ª£t
();

999 i‡(
a_°¨t_blk
 < 
a_fs
->
fú°_block
 ||á_°¨t_blk >á_fs->
œ°_block
) {

1000 
	`tsk_îr‹_ª£t
();

1001 
tsk_î∫o
 = 
TSK_ERR_FS_WALK_RNG
;

1002 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

1003 "%s: sèπ block: %" 
PRIuDADDR
, 
my«me
, 
a_°¨t_blk
);

1006 i‡(
a_íd_blk
 < 
a_fs
->
fú°_block
 ||á_íd_blk >á_fs->
œ°_block


1007 || 
a_íd_blk
 < 
a_°¨t_blk
) {

1008 
	`tsk_îr‹_ª£t
();

1009 
tsk_î∫o
 = 
TSK_ERR_FS_WALK_RNG
;

1010 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

1011 "%s:Énd block: %" 
PRIuDADDR
, 
my«me
, 
a_íd_blk
);

1016 i‡(((
a_Êags
 & 
TSK_FS_BLOCK_WALK_FLAG_ALLOC
) == 0) &&

1017 ((
a_Êags
 & 
TSK_FS_BLOCK_WALK_FLAG_UNALLOC
) == 0)) {

1018 
a_Êags
 |=

1019 (
TSK_FS_BLOCK_WALK_FLAG_ALLOC
 |

1020 
TSK_FS_BLOCK_WALK_FLAG_UNALLOC
);

1022 i‡(((
a_Êags
 & 
TSK_FS_BLOCK_WALK_FLAG_META
) == 0) &&

1023 ((
a_Êags
 & 
TSK_FS_BLOCK_WALK_FLAG_CONT
) == 0)) {

1024 
a_Êags
 |=

1025 (
TSK_FS_BLOCK_WALK_FLAG_CONT
 | 
TSK_FS_BLOCK_WALK_FLAG_META
);

1029 i‡((
fs_block
 = 
	`tsk_fs_block_Æloc
(
a_fs
)Ë=
NULL
) {

1038 
addr
 = 
a_°¨t_blk
;ádd∏<
a_íd_blk
;áddr++) {

1039 
ªtvÆ
;

1040 
myÊags
;

1042 
myÊags
 = 
	`ext2fs_block_gëÊags
(
a_fs
, 
addr
);

1045 i‡((
myÊags
 & 
TSK_FS_BLOCK_FLAG_META
)

1046 && (!(
a_Êags
 & 
TSK_FS_BLOCK_WALK_FLAG_META
)))

1048 i‡((
myÊags
 & 
TSK_FS_BLOCK_FLAG_CONT
)

1049 && (!(
a_Êags
 & 
TSK_FS_BLOCK_WALK_FLAG_CONT
)))

1051 i‡((
myÊags
 & 
TSK_FS_BLOCK_FLAG_ALLOC
)

1052 && (!(
a_Êags
 & 
TSK_FS_BLOCK_WALK_FLAG_ALLOC
)))

1054 i‡((
myÊags
 & 
TSK_FS_BLOCK_FLAG_UNALLOC
)

1055 && (!(
a_Êags
 & 
TSK_FS_BLOCK_WALK_FLAG_UNALLOC
)))

1058 i‡(
	`tsk_fs_block_gë
(
a_fs
, 
fs_block
, 
addr
Ë=
NULL
) {

1059 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

1060 "ext2fs_block_wÆk: block %" 
PRIuDADDR
, 
addr
);

1061 
	`tsk_fs_block_‰ì
(
fs_block
);

1065 
ªtvÆ
 = 
	`a_a˘i⁄
(
fs_block
, 
a_±r
);

1066 i‡(
ªtvÆ
 =
TSK_WALK_STOP
) {

1069 i‡(
ªtvÆ
 =
TSK_WALK_ERROR
) {

1070 
	`tsk_fs_block_‰ì
(
fs_block
);

1078 
	`tsk_fs_block_‰ì
(
fs_block
);

1080 
	}
}

1084 
uöt8_t


1085 
	$ext2fs_fscheck
(
TSK_FS_INFO
 * 
fs
, 
FILE
 * 
hFûe
)

1087 
	`tsk_îr‹_ª£t
();

1088 
tsk_î∫o
 = 
TSK_ERR_FS_UNSUPFUNC
;

1089 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

1092 
	}
}

1103 
uöt8_t


1104 
	$ext2fs_fs°©
(
TSK_FS_INFO
 * 
fs
, 
FILE
 * 
hFûe
)

1106 
i
;

1107 
EXT2FS_INFO
 *
ext2fs
 = (EXT2FS_INFO *Ë
fs
;

1108 
ext2fs_sb
 *
sb
 = 
ext2fs
->
fs
;

1109 
ibpg
;

1110 
time_t
 
tm±ime
;

1114 
	`tsk_îr‹_ª£t
();

1116 
	`tsk_Ârötf
(
hFûe
, "FILE SYSTEM INFORMATION\n");

1117 
	`tsk_Ârötf
(
hFûe
, "--------------------------------------------\n");

1119 
	`tsk_Ârötf
(
hFûe
, "File System Type: %s\n",

1120 (
fs
->
·y≥
 =
TSK_FS_TYPE_EXT3
) ? "Ext3" : "Ext2");

1121 
	`tsk_Ârötf
(
hFûe
, "VﬁumêName: %s\n", 
sb
->
s_vﬁume_«me
);

1122 
	`tsk_Ârötf
(
hFûe
, "VﬁumêID: %" 
PRIx64
 "%" PRIx64 "\n",

1123 
	`tsk_gëu64
(
fs
->
ídün
, &
sb
->
s_uuid
[8]),Åsk_getu64(fs->endian,

1124 &
sb
->
s_uuid
[0]));

1126 
tm±ime
 = 
	`tsk_gëu32
(
fs
->
ídün
, 
sb
->
s_wtime
);

1127 
	`tsk_Ârötf
(
hFûe
, "\nLast Writtenát: %s",

1128 (
tm±ime
 > 0Ë? 
	`as˘ime
(
	`loˇ…ime
(&tmptime)) : "empty");

1129 
tm±ime
 = 
	`tsk_gëu32
(
fs
->
ídün
, 
sb
->
s_œ°check
);

1130 
	`tsk_Ârötf
(
hFûe
, "Last Checkedát: %s",

1131 (
tm±ime
 > 0Ë? 
	`as˘ime
(
	`loˇ…ime
(&tmptime)) : "empty");

1133 
tm±ime
 = 
	`tsk_gëu32
(
fs
->
ídün
, 
sb
->
s_mtime
);

1134 
	`tsk_Ârötf
(
hFûe
, "\nLast Mountedát: %s",

1135 (
tm±ime
 > 0Ë? 
	`as˘ime
(
	`loˇ…ime
(&tmptime)) : "empty");

1138 i‡(
	`tsk_gëu16
(
fs
->
ídün
, 
sb
->
s_°©e
Ë& 
EXT2FS_STATE_VALID
)

1139 
	`tsk_Ârötf
(
hFûe
, "UnmountedÖroperly\n");

1141 
	`tsk_Ârötf
(
hFûe
, "Unmounted Improperly\n");

1143 i‡(
sb
->
s_œ°_mou¡ed
 != '\0')

1144 
	`tsk_Ârötf
(
hFûe
, "La° mou¡ed on: %s\n", 
sb
->
s_œ°_mou¡ed
);

1146 
	`tsk_Ârötf
(
hFûe
, "\nSource OS: ");

1147 
	`tsk_gëu32
(
fs
->
ídün
, 
sb
->
s_¸ót‹_os
)) {

1148 
EXT2FS_OS_LINUX
:

1149 
	`tsk_Ârötf
(
hFûe
, "Linux\n");

1151 
EXT2FS_OS_HURD
:

1152 
	`tsk_Ârötf
(
hFûe
, "HURD\n");

1154 
EXT2FS_OS_MASIX
:

1155 
	`tsk_Ârötf
(
hFûe
, "MASIX\n");

1157 
EXT2FS_OS_FREEBSD
:

1158 
	`tsk_Ârötf
(
hFûe
, "FreeBSD\n");

1160 
EXT2FS_OS_LITES
:

1161 
	`tsk_Ârötf
(
hFûe
, "LITES\n");

1164 
	`tsk_Ârötf
(
hFûe
, "%" 
PRIx32
 "\n", 
	`tsk_gëu32
(
fs
->
ídün
,

1165 
sb
->
s_¸ót‹_os
));

1169 i‡(
	`tsk_gëu32
(
fs
->
ídün
, 
sb
->
s_ªv_Àvñ
Ë=
EXT2FS_REV_ORIG
)

1170 
	`tsk_Ârötf
(
hFûe
, "Static Structure\n");

1172 
	`tsk_Ârötf
(
hFûe
, "Dynamic Structure\n");

1176 i‡(
	`tsk_gëu32
(
fs
->
ídün
, 
sb
->
s_„©uª_com∑t
)) {

1177 
	`tsk_Ârötf
(
hFûe
, "Compat Features: ");

1179 i‡(
	`tsk_gëu32
(
fs
->
ídün
, 
sb
->
s_„©uª_com∑t
) &

1180 
EXT2FS_FEATURE_COMPAT_DIR_PREALLOC
)

1181 
	`tsk_Ârötf
(
hFûe
, "Dir Prealloc, ");

1182 i‡(
	`tsk_gëu32
(
fs
->
ídün
, 
sb
->
s_„©uª_com∑t
) &

1183 
EXT2FS_FEATURE_COMPAT_IMAGIC_INODES
)

1184 
	`tsk_Ârötf
(
hFûe
, "iMagic inodes, ");

1185 i‡(
	`tsk_gëu32
(
fs
->
ídün
, 
sb
->
s_„©uª_com∑t
) &

1186 
EXT2FS_FEATURE_COMPAT_HAS_JOURNAL
)

1187 
	`tsk_Ârötf
(
hFûe
, "Journal, ");

1188 i‡(
	`tsk_gëu32
(
fs
->
ídün
, 
sb
->
s_„©uª_com∑t
) &

1189 
EXT2FS_FEATURE_COMPAT_EXT_ATTR
)

1190 
	`tsk_Ârötf
(
hFûe
, "Ext Attributes, ");

1191 i‡(
	`tsk_gëu32
(
fs
->
ídün
, 
sb
->
s_„©uª_com∑t
) &

1192 
EXT2FS_FEATURE_COMPAT_RESIZE_INO
)

1193 
	`tsk_Ârötf
(
hFûe
, "Resize Inode, ");

1194 i‡(
	`tsk_gëu32
(
fs
->
ídün
, 
sb
->
s_„©uª_com∑t
) &

1195 
EXT2FS_FEATURE_COMPAT_DIR_INDEX
)

1196 
	`tsk_Ârötf
(
hFûe
, "Dir Index");

1198 
	`tsk_Ârötf
(
hFûe
, "\n");

1201 i‡(
	`tsk_gëu32
(
fs
->
ídün
, 
sb
->
s_„©uª_öcom∑t
)) {

1202 
	`tsk_Ârötf
(
hFûe
, "InCompat Features: ");

1204 i‡(
	`tsk_gëu32
(
fs
->
ídün
, 
sb
->
s_„©uª_öcom∑t
) &

1205 
EXT2FS_FEATURE_INCOMPAT_COMPRESSION
)

1206 
	`tsk_Ârötf
(
hFûe
, "Compression, ");

1207 i‡(
	`tsk_gëu32
(
fs
->
ídün
, 
sb
->
s_„©uª_öcom∑t
) &

1208 
EXT2FS_FEATURE_INCOMPAT_FILETYPE
)

1209 
	`tsk_Ârötf
(
hFûe
, "Filetype, ");

1210 i‡(
	`tsk_gëu32
(
fs
->
ídün
, 
sb
->
s_„©uª_öcom∑t
) &

1211 
EXT2FS_FEATURE_INCOMPAT_RECOVER
)

1212 
	`tsk_Ârötf
(
hFûe
, "Needs Recovery, ");

1213 i‡(
	`tsk_gëu32
(
fs
->
ídün
, 
sb
->
s_„©uª_öcom∑t
) &

1214 
EXT2FS_FEATURE_INCOMPAT_JOURNAL_DEV
)

1215 
	`tsk_Ârötf
(
hFûe
, "Journal Dev");

1217 
	`tsk_Ârötf
(
hFûe
, "\n");

1220 i‡(
	`tsk_gëu32
(
fs
->
ídün
, 
sb
->
s_„©uª_ro_com∑t
)) {

1221 
	`tsk_Ârötf
(
hFûe
, "Read Only Compat Features: ");

1223 i‡(
	`tsk_gëu32
(
fs
->
ídün
, 
sb
->
s_„©uª_ro_com∑t
) &

1224 
EXT2FS_FEATURE_RO_COMPAT_SPARSE_SUPER
)

1225 
	`tsk_Ârötf
(
hFûe
, "Sparse Super, ");

1226 i‡(
	`tsk_gëu32
(
fs
->
ídün
, 
sb
->
s_„©uª_ro_com∑t
) &

1227 
EXT2FS_FEATURE_RO_COMPAT_LARGE_FILE
)

1228 
	`tsk_Ârötf
(
hFûe
, "Has Large Files, ");

1229 i‡(
	`tsk_gëu32
(
fs
->
ídün
, 
sb
->
s_„©uª_ro_com∑t
) &

1230 
EXT2FS_FEATURE_RO_COMPAT_BTREE_DIR
)

1231 
	`tsk_Ârötf
(
hFûe
, "Btree Dir");

1233 
	`tsk_Ârötf
(
hFûe
, "\n");

1237 i‡(
	`tsk_gëu32
(
fs
->
ídün
, 
sb
->
s_„©uª_com∑t
) &

1238 
EXT2FS_FEATURE_COMPAT_HAS_JOURNAL
) {

1240 
	`tsk_Ârötf
(
hFûe
, "\nJou∫Æ ID: %" 
PRIx64
 "%" PRIx64 "\n",

1241 
	`tsk_gëu64
(
fs
->
ídün
, &
sb
->
s_jou∫Æ_uuid
[8]),

1242 
	`tsk_gëu64
(
fs
->
ídün
, &
sb
->
s_jou∫Æ_uuid
[0]));

1244 i‡(
	`tsk_gëu32
(
fs
->
ídün
, 
sb
->
s_jou∫Æ_öum
) != 0)

1245 
	`tsk_Ârötf
(
hFûe
, "Jou∫Æ Inode: %" 
PRIu32
 "\n",

1246 
	`tsk_gëu32
(
fs
->
ídün
, 
sb
->
s_jou∫Æ_öum
));

1248 i‡(
	`tsk_gëu32
(
fs
->
ídün
, 
sb
->
s_jou∫Æ_dev
) != 0)

1249 
	`tsk_Ârötf
(
hFûe
, "Jou∫Æ Devi˚: %" 
PRIu32
 "\n",

1250 
	`tsk_gëu32
(
fs
->
ídün
, 
sb
->
s_jou∫Æ_dev
));

1255 
	`tsk_Ârötf
(
hFûe
, "\nMETADATA INFORMATION\n");

1256 
	`tsk_Ârötf
(
hFûe
, "--------------------------------------------\n");

1258 
	`tsk_Ârötf
(
hFûe
, "InodêR™ge: %" 
PRIuINUM
 " - %" PRIuINUM "\n",

1259 
fs
->
fú°_öum
, fs->
œ°_öum
);

1260 
	`tsk_Ârötf
(
hFûe
, "RoŸ Dúe˘‹y: %" 
PRIuINUM
 "\n", 
fs
->
roŸ_öum
);

1262 
	`tsk_Ârötf
(
hFûe
, "FªêInodes: %" 
PRIu32
 "\n",

1263 
	`tsk_gëu32
(
fs
->
ídün
, 
sb
->
s_‰ì_öode_cou¡
));

1266 i‡(
	`tsk_gëu32
(
fs
->
ídün
, 
sb
->
s_œ°_‹ph™
)) {

1267 
uöt32_t
 
‹_ö
;

1268 
	`tsk_Ârötf
(
hFûe
, "Orphan Inodes: ");

1269 
‹_ö
 = 
	`tsk_gëu32
(
fs
->
ídün
, 
sb
->
s_œ°_‹ph™
);

1271 
‹_ö
) {

1272 
TSK_FS_FILE
 *
fs_fûe
;

1274 i‡((
‹_ö
 > 
fs
->
œ°_öum
Ë|| (‹_ö < fs->
fú°_öum
))

1277 
	`tsk_Ârötf
(
hFûe
, "%" 
PRIu32
 ", ", 
‹_ö
);

1279 i‡((
fs_fûe
 = 
	`tsk_fs_fûe_Æloc
(
fs
)Ë=
NULL
) {

1281 
	`tsk_îr‹_ª£t
();

1286 i‡(
	`ext2fs_öode_lookup
(
fs
, 
fs_fûe
, 
‹_ö
)) {

1288 
	`tsk_îr‹_ª£t
();

1292 
‹_ö
 = (
uöt32_t
Ë
fs_fûe
->
mëa
->
time2
.
ext2
.
dtime
;

1293 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

1295 
	`tsk_Ârötf
(
hFûe
, "\n");

1298 
	`tsk_Ârötf
(
hFûe
, "\nCONTENT INFORMATION\n");

1299 
	`tsk_Ârötf
(
hFûe
, "--------------------------------------------\n");

1301 
	`tsk_Ârötf
(
hFûe
, "Block R™ge: %" 
PRIuDADDR
 " - %" PRIuDADDR "\n",

1302 
fs
->
fú°_block
, fs->
œ°_block
);

1304 i‡(
fs
->
œ°_block
 !fs->
œ°_block_a˘
)

1305 
	`tsk_Ârötf
(
hFûe
,

1306 "TŸÆ R™gêö Image: %" 
PRIuDADDR
 " - %" PRIuDADDR "\n",

1307 
fs
->
fú°_block
, fs->
œ°_block_a˘
);

1309 
	`tsk_Ârötf
(
hFûe
, "Block Size: %u\n", 
fs
->
block_size
);

1311 i‡(
	`tsk_gëu32
(
fs
->
ídün
, 
sb
->
s_fú°_d©a_block
))

1312 
	`tsk_Ârötf
(
hFûe
,

1313 "Re£rved Block†Bef‹êBlock Groups: %" 
PRIu32
 "\n",

1314 
	`tsk_gëu32
(
fs
->
ídün
, 
sb
->
s_fú°_d©a_block
));

1316 
	`tsk_Ârötf
(
hFûe
, "FªêBlocks: %" 
PRIu32
 "\n",

1317 
	`tsk_gëu32
(
fs
->
ídün
, 
sb
->
s_‰ì_blocks_cou¡
));

1319 
	`tsk_Ârötf
(
hFûe
, "\nBLOCK GROUP INFORMATION\n");

1320 
	`tsk_Ârötf
(
hFûe
, "--------------------------------------------\n");

1322 
	`tsk_Ârötf
(
hFûe
, "Numbî o‡Block Groups: %" 
PRI_EXT2GRP
 "\n",

1323 
ext2fs
->
groups_cou¡
);

1325 
	`tsk_Ârötf
(
hFûe
, "Inode†≥∏group: %" 
PRIu32
 "\n",

1326 
	`tsk_gëu32
(
fs
->
ídün
, 
sb
->
s_öodes_≥r_group
));

1327 
	`tsk_Ârötf
(
hFûe
, "Block†≥∏group: %" 
PRIu32
 "\n",

1328 
	`tsk_gëu32
(
fs
->
ídün
, 
sb
->
s_blocks_≥r_group
));

1332 
ibpg
 =

1333 (
	`tsk_gëu32
(
fs
->
ídün
,

1334 
sb
->
s_öodes_≥r_group
Ë* 
ext2fs
->
öode_size
 + 
fs
->
block_size
 -

1335 1Ë/ 
fs
->
block_size
;

1337 
i
 = 0; i < 
ext2fs
->
groups_cou¡
; i++) {

1338 
TSK_DADDR_T
 
cg_ba£
;

1339 
TSK_INUM_T
 
öum
;

1341 i‡(
	`ext2fs_group_lﬂd
(
ext2fs
, 
i
)) {

1344 
	`tsk_Ârötf
(
hFûe
, "\nGroup: %d:\n", 
i
);

1346 
öum
 =

1347 
fs
->
fú°_öum
 + 
	`tsk_gës32
(fs->
ídün
,

1348 
sb
->
s_öodes_≥r_group
Ë* 
i
;

1349 
	`tsk_Ârötf
(
hFûe
, " InodêR™ge: %" 
PRIuINUM
 " - ", 
öum
);

1351 i‡((
öum
 + 
	`tsk_gës32
(
fs
->
ídün
, 
sb
->
s_öodes_≥r_group
) - 1) <

1352 
fs
->
œ°_öum
)

1353 
	`tsk_Ârötf
(
hFûe
, "%" 
PRIuINUM
 "\n",

1354 
öum
 + 
	`tsk_gës32
(
fs
->
ídün
, 
sb
->
s_öodes_≥r_group
) - 1);

1356 
	`tsk_Ârötf
(
hFûe
, "%" 
PRIuINUM
 "\n", 
fs
->
œ°_öum
);

1359 
cg_ba£
 = 
	`ext2_cgba£_l˛
(
fs
, 
sb
, 
i
);

1361 
	`tsk_Ârötf
(
hFûe
,

1362 " Block R™ge: %" 
PRIuDADDR
 " - %" PRIuDADDR "\n", 
cg_ba£
,

1363 ((
	`ext2_cgba£_l˛
(
fs
, 
sb
,

1364 
i
 + 1) - 1) <

1365 
fs
->
œ°_block
Ë? (
	`ext2_cgba£_l˛
(fs, 
sb
,

1366 
i
 + 1Ë- 1Ë: 
fs
->
œ°_block
);

1369 
	`tsk_Ârötf
(
hFûe
, " Layout:\n");

1374 i‡(((
	`tsk_gëu32
(
fs
->
ídün
, 
ext2fs
->fs->
s_„©uª_ro_com∑t
) &

1375 
EXT2FS_FEATURE_RO_COMPAT_SPARSE_SUPER
) &&

1376 (
cg_ba£
 !
	`tsk_gëu32
(
fs
->
ídün
,

1377 
ext2fs
->
gΩ_buf
->
bg_block_bôm≠
)))

1378 || ((
	`tsk_gëu32
(
fs
->
ídün
,

1379 
ext2fs
->
fs
->
s_„©uª_ro_com∑t
) &

1380 
EXT2FS_FEATURE_RO_COMPAT_SPARSE_SUPER
) == 0)) {

1382 
TSK_OFF_T
 
boff
;

1385 
	`tsk_Ârötf
(
hFûe
,

1386 " Su≥∏Block: %" 
PRIuDADDR
 " - %" PRIuDADDR "\n",

1387 
cg_ba£
,

1388 
cg_ba£
 +

1389 (((
ext2fs_sb
Ë+ 
fs
->
block_size
 -

1390 1Ë/ 
fs
->
block_size
) - 1);

1392 
boff
 = 
	`roundup
((
ext2fs_sb
), 
fs
->
block_size
);

1395 
	`tsk_Ârötf
(
hFûe
,

1396 " Grou∞Des¸ùt‹ TabÀ: %" 
PRIuDADDR
 " - ",

1397 (
cg_ba£
 + (
boff
 + 
fs
->
block_size
 - 1) / fs->block_size));

1399 
boff
 +(
ext2fs
->
groups_cou¡
 * (
ext2fs_gd
));

1400 
	`tsk_Ârötf
(
hFûe
, "%" 
PRIuDADDR
 "\n",

1401 ((
cg_ba£
 +

1402 (
boff
 + 
fs
->
block_size
 - 1) / fs->block_size) -

1408 
	`tsk_Ârötf
(
hFûe
, " D©®bôm≠: %" 
PRIu32
 " - %" PRIu32 "\n",

1409 
	`tsk_gëu32
(
fs
->
ídün
, 
ext2fs
->
gΩ_buf
->
bg_block_bôm≠
),

1410 
	`tsk_gëu32
(
fs
->
ídün
, 
ext2fs
->
gΩ_buf
->
bg_block_bôm≠
));

1414 
	`tsk_Ârötf
(
hFûe
, " Inodêbôm≠: %" 
PRIu32
 " - %" PRIu32 "\n",

1415 
	`tsk_gëu32
(
fs
->
ídün
, 
ext2fs
->
gΩ_buf
->
bg_öode_bôm≠
),

1416 
	`tsk_gëu32
(
fs
->
ídün
, 
ext2fs
->
gΩ_buf
->
bg_öode_bôm≠
));

1419 
	`tsk_Ârötf
(
hFûe
, " InodêTabÀ: %" 
PRIu32
 " - %" PRIu32 "\n",

1420 
	`tsk_gëu32
(
fs
->
ídün
, 
ext2fs
->
gΩ_buf
->
bg_öode_èbÀ
),

1421 
	`tsk_gëu32
(
fs
->
ídün
,

1422 
ext2fs
->
gΩ_buf
->
bg_öode_èbÀ
Ë+ 
ibpg
 - 1);

1425 
	`tsk_Ârötf
(
hFûe
, " Data Blocks: ");

1428 i‡((
	`tsk_gëu32
(
fs
->
ídün
, 
ext2fs
->fs->
s_„©uª_ro_com∑t
) &

1429 
EXT2FS_FEATURE_RO_COMPAT_SPARSE_SUPER
) &&

1430 (
cg_ba£
 =
	`tsk_gëu32
(
fs
->
ídün
,

1431 
ext2fs
->
gΩ_buf
->
bg_block_bôm≠
))) {

1438 
	`tsk_Ârötf
(
hFûe
, "%" 
PRIu32
 " - %" PRIu32 ", ",

1439 
	`tsk_gëu32
(
fs
->
ídün
,

1440 
ext2fs
->
gΩ_buf
->
bg_öode_bôm≠
) + 1,

1441 
	`tsk_gëu32
(
fs
->
ídün
,

1442 
ext2fs
->
gΩ_buf
->
bg_öode_èbÀ
) - 1);

1445 
	`tsk_Ârötf
(
hFûe
, "%" 
PRIuDADDR
 " - %" PRIuDADDR "\n",

1446 (
uöt64_t
Ë
	`tsk_gëu32
(
fs
->
ídün
,

1447 
ext2fs
->
gΩ_buf
->
bg_öode_èbÀ
Ë+ 
ibpg
,

1448 ((
	`ext2_cgba£_l˛
(
fs
, 
sb
, 
i
 + 1) - 1) <

1449 
fs
->
œ°_block
Ë? (
	`ext2_cgba£_l˛
(fs, 
sb
,

1450 
i
 + 1Ë- 1Ë: 
fs
->
œ°_block
);

1457 i‡(
i
 !(
ext2fs
->
groups_cou¡
 - 1)) {

1458 
	`tsk_Ârötf
(
hFûe
,

1459 " FªêInodes: %" 
PRIu16
 " (%" 
PRIu32
 "%%)\n",

1460 
	`tsk_gëu16
(
fs
->
ídün
,

1461 
ext2fs
->
gΩ_buf
->
bg_‰ì_öodes_cou¡
),

1462 (100 * 
	`tsk_gëu16
(
fs
->
ídün
,

1463 
ext2fs
->
gΩ_buf
->
bg_‰ì_öodes_cou¡
)) /

1464 
	`tsk_gëu32
(
fs
->
ídün
, 
sb
->
s_öodes_≥r_group
));

1466 
	`tsk_Ârötf
(
hFûe
,

1467 " FªêBlocks: %" 
PRIu16
 " (%" 
PRIu32
 "%%)\n",

1468 
	`tsk_gëu16
(
fs
->
ídün
,

1469 
ext2fs
->
gΩ_buf
->
bg_‰ì_blocks_cou¡
),

1470 (100 * 
	`tsk_gëu16
(
fs
->
ídün
,

1471 
ext2fs
->
gΩ_buf
->
bg_‰ì_blocks_cou¡
)) /

1472 
	`tsk_gëu32
(
fs
->
ídün
, 
sb
->
s_blocks_≥r_group
));

1475 
TSK_INUM_T
 
öum_À·
;

1476 
TSK_DADDR_T
 
blk_À·
;

1478 
öum_À·
 =

1479 
fs
->
œ°_öum
 % 
	`tsk_gës32
(fs->
ídün
,

1480 
sb
->
s_öodes_≥r_group
);

1481 i‡(
öum_À·
 == 0)

1482 
öum_À·
 = 
	`tsk_gëu32
(
fs
->
ídün
, 
sb
->
s_öodes_≥r_group
);

1484 
	`tsk_Ârötf
(
hFûe
, " FªêInodes: %" 
PRIu16
 " (%d%%)\n",

1485 
	`tsk_gëu16
(
fs
->
ídün
,

1486 
ext2fs
->
gΩ_buf
->
bg_‰ì_öodes_cou¡
),

1487 (100 * 
	`tsk_gëu16
(
fs
->
ídün
,

1488 
ext2fs
->
gΩ_buf
->
bg_‰ì_öodes_cou¡
)) /

1489 
öum_À·
);

1492 
blk_À·
 =

1493 
fs
->
block_cou¡
 % 
	`tsk_gëu32
(fs->
ídün
,

1494 
sb
->
s_blocks_≥r_group
);

1495 i‡(
blk_À·
 == 0)

1496 
blk_À·
 = 
	`tsk_gëu32
(
fs
->
ídün
, 
sb
->
s_blocks_≥r_group
);

1498 
	`tsk_Ârötf
(
hFûe
, " FªêBlocks: %" 
PRIu16
 " (%d%%)\n",

1499 
	`tsk_gëu16
(
fs
->
ídün
,

1500 
ext2fs
->
gΩ_buf
->
bg_‰ì_blocks_cou¡
),

1501 (100 * 
	`tsk_gëu16
(
fs
->
ídün
,

1502 
ext2fs
->
gΩ_buf
->
bg_‰ì_blocks_cou¡
)) /

1503 
blk_À·
);

1506 
	`tsk_Ârötf
(
hFûe
, " TŸÆ Dúe˘‹õs: %" 
PRIu16
 "\n",

1507 
	`tsk_gëu16
(
fs
->
ídün
, 
ext2fs
->
gΩ_buf
->
bg_u£d_dús_cou¡
));

1511 
	}
}

1517 
	$ext2fs_make_a˛_°r
(*
°r
, 
Àn
, 
uöt16_t
 
≥rm
)

1519 
i
 = 0;

1521 i‡(
≥rm
 & 
EXT2_PACL_PERM_READ
) {

1522 
	`¢¥ötf
(&
°r
[
i
], 
Àn
 - 1, "Read");

1523 
i
 += 4;

1525 i‡(
≥rm
 & 
EXT2_PACL_PERM_WRITE
) {

1526 i‡(
i
) {

1527 
	`¢¥ötf
(&
°r
[
i
], 
Àn
 - 1, ", ");

1528 
i
 += 2;

1530 
	`¢¥ötf
(&
°r
[
i
], 
Àn
 - 1, "Write");

1531 
i
 += 5;

1533 i‡(
≥rm
 & 
EXT2_PACL_PERM_EXEC
) {

1534 i‡(
i
) {

1535 
	`¢¥ötf
(&
°r
[
i
], 
Àn
 - 1, ", ");

1536 
i
 += 2;

1538 
	`¢¥ötf
(&
°r
[
i
], 
Àn
 - 1, "Execute");

1539 
i
 += 7;

1541 
	}
}

1545 
FILE
 *
	mhFûe
;

1546 
	midx
;

1547 } 
	tEXT2FS_PRINT_ADDR
;

1551 
TSK_WALK_RET_ENUM


1552 
	$¥öt_addr_a˘
(
TSK_FS_FILE
 * 
fs_fûe
, 
TSK_OFF_T
 
a_off
, 
TSK_DADDR_T
 
addr
,

1553 *
buf
, 
size_t
 
size
, 
TSK_FS_BLOCK_FLAG_ENUM
 
Êags
, *
a_±r
)

1555 
TSK_FS_INFO
 *
fs
 = 
fs_fûe
->
fs_öfo
;

1556 
EXT2FS_PRINT_ADDR
 *
¥öt
 = (EXT2FS_PRINT_ADDR *Ë
a_±r
;

1558 i‡(
Êags
 & 
TSK_FS_BLOCK_FLAG_CONT
) {

1559 
i
, 
s
;

1561 
i
 = 0, 
s
 = (Ë
size
; s > 0; s -
fs
->
block_size
, i++) {

1564 i‡(
addr
)

1565 
	`tsk_Ârötf
(
¥öt
->
hFûe
, "%" 
PRIuDADDR
 " ", 
addr
 + 
i
);

1567 
	`tsk_Ârötf
(
¥öt
->
hFûe
, "0 ");

1569 i‡(++(
¥öt
->
idx
) == 8) {

1570 
	`tsk_Ârötf
(
¥öt
->
hFûe
, "\n");

1571 
¥öt
->
idx
 = 0;

1576  
TSK_WALK_CONT
;

1577 
	}
}

1591 
uöt8_t


1592 
	$ext2fs_i°©
(
TSK_FS_INFO
 * 
fs
, 
FILE
 * 
hFûe
, 
TSK_INUM_T
 
öum
,

1593 
TSK_DADDR_T
 
numblock
, 
öt32_t
 
£c_skew
)

1595 
EXT2FS_INFO
 *
ext2fs
 = (EXT2FS_INFO *Ë
fs
;

1596 
TSK_FS_META
 *
fs_mëa
;

1597 
TSK_FS_FILE
 *
fs_fûe
;

1598 
ls
[12];

1599 
EXT2FS_PRINT_ADDR
 
¥öt
;

1600 c⁄° 
TSK_FS_ATTR
 *
fs_©å_ödú
;

1603 
	`tsk_îr‹_ª£t
();

1605 i‡((
fs_fûe
 = 
	`tsk_fs_fûe_›í_mëa
(
fs
, 
NULL
, 
öum
)) == NULL) {

1608 
fs_mëa
 = 
fs_fûe
->
mëa
;

1610 
	`tsk_Ârötf
(
hFûe
, "öode: %" 
PRIuINUM
 "\n", 
öum
);

1611 
	`tsk_Ârötf
(
hFûe
, "%sAllocated\n",

1612 (
fs_mëa
->
Êags
 & 
TSK_FS_META_FLAG_ALLOC
) ? "" : "Not ");

1614 
	`tsk_Ârötf
(
hFûe
, "Group: %" 
PRIuGID
 "\n", 
ext2fs
->
gΩ_num
);

1617 i‡(
ext2fs
->
döo_buf
)

1618 
	`tsk_Ârötf
(
hFûe
, "Gíî©i⁄ Id: %" 
PRIu32
 "\n",

1619 
	`tsk_gëu32
(
fs
->
ídün
, 
ext2fs
->
döo_buf
->
i_gíî©i⁄
));

1621 i‡(
fs_mëa
->
lök
)

1622 
	`tsk_Ârötf
(
hFûe
, "symbﬁi¯lökÅo: %s\n", 
fs_mëa
->
lök
);

1624 
	`tsk_Ârötf
(
hFûe
, "uid / gid: %" 
PRIuUID
 " / %" 
PRIuGID
 "\n",

1625 
fs_mëa
->
uid
, fs_mëa->
gid
);

1627 
	`tsk_fs_mëa_make_ls
(
fs_mëa
, 
ls
, (ls));

1628 
	`tsk_Ârötf
(
hFûe
, "mode: %s\n", 
ls
);

1630 i‡(
ext2fs
->
döo_buf
) {

1632 i‡((
fs_mëa
->
ty≥
 =
TSK_FS_META_TYPE_BLK
)

1633 || (
fs_mëa
->
ty≥
 =
TSK_FS_META_TYPE_CHR
)) {

1634 
	`tsk_Ârötf
(
hFûe
,

1635 "Devi˚ Maj‹: %" 
PRIu8
 " Minor: %" PRIu8 "\n",

1636 
ext2fs
->
döo_buf
->
i_block
[0][1],

1637 
ext2fs
->
döo_buf
->
i_block
[0][0]);

1640 i‡(
	`tsk_gëu32
(
fs
->
ídün
, 
ext2fs
->
döo_buf
->
i_Êags
)) {

1641 
	`tsk_Ârötf
(
hFûe
, "Flags: ");

1642 i‡(
	`tsk_gëu32
(
fs
->
ídün
,

1643 
ext2fs
->
döo_buf
->
i_Êags
Ë& 
EXT2_IN_SECDEL
)

1644 
	`tsk_Ârötf
(
hFûe
, "Secure Delete, ");

1646 i‡(
	`tsk_gëu32
(
fs
->
ídün
,

1647 
ext2fs
->
döo_buf
->
i_Êags
Ë& 
EXT2_IN_UNRM
)

1648 
	`tsk_Ârötf
(
hFûe
, "Undelete, ");

1650 i‡(
	`tsk_gëu32
(
fs
->
ídün
,

1651 
ext2fs
->
döo_buf
->
i_Êags
Ë& 
EXT2_IN_COMP
)

1652 
	`tsk_Ârötf
(
hFûe
, "Compressed, ");

1654 i‡(
	`tsk_gëu32
(
fs
->
ídün
,

1655 
ext2fs
->
döo_buf
->
i_Êags
Ë& 
EXT2_IN_SYNC
)

1656 
	`tsk_Ârötf
(
hFûe
, "Sync Updates, ");

1658 i‡(
	`tsk_gëu32
(
fs
->
ídün
,

1659 
ext2fs
->
döo_buf
->
i_Êags
Ë& 
EXT2_IN_IMM
)

1660 
	`tsk_Ârötf
(
hFûe
, "Immutable, ");

1662 i‡(
	`tsk_gëu32
(
fs
->
ídün
,

1663 
ext2fs
->
döo_buf
->
i_Êags
Ë& 
EXT2_IN_APPEND
)

1664 
	`tsk_Ârötf
(
hFûe
, "Append Only, ");

1666 i‡(
	`tsk_gëu32
(
fs
->
ídün
,

1667 
ext2fs
->
döo_buf
->
i_Êags
Ë& 
EXT2_IN_NODUMP
)

1668 
	`tsk_Ârötf
(
hFûe
, "Do Not Dump, ");

1670 i‡(
	`tsk_gëu32
(
fs
->
ídün
,

1671 
ext2fs
->
döo_buf
->
i_Êags
Ë& 
EXT2_IN_NOA
)

1672 
	`tsk_Ârötf
(
hFûe
, "No A-Time, ");

1674 
	`tsk_Ârötf
(
hFûe
, "\n");

1678 
	`tsk_Ârötf
(
hFûe
, "size: %" 
PRIuOFF
 "\n", 
fs_mëa
->
size
);

1679 
	`tsk_Ârötf
(
hFûe
, "num o‡löks: %d\n", 
fs_mëa
->
∆ök
);

1681 i‡(
ext2fs
->
döo_buf
) {

1687 i‡(
	`tsk_gëu32
(
fs
->
ídün
, 
ext2fs
->
döo_buf
->
i_fûe_a˛
) != 0) {

1688 *
buf
;

1689 
ext2fs_ó_hódî
 *
ó_hód
;

1690 
ext2fs_ó_íåy
 *
ó_íåy
;

1691 
ssize_t
 
˙t
;

1693 i‡((
buf
 = 
	`tsk_mÆloc
(
fs
->
block_size
)Ë=
NULL
) {

1694 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

1698 
	`tsk_Ârötf
(
hFûe
,

1699 "\nExãnded Aâribuã† (Block: %" 
PRIu32
 ")\n",

1700 
	`tsk_gëu32
(
fs
->
ídün
, 
ext2fs
->
döo_buf
->
i_fûe_a˛
));

1703 i‡(
	`tsk_gëu32
(
fs
->
ídün
,

1704 
ext2fs
->
döo_buf
->
i_fûe_a˛
Ë> 
fs
->
œ°_block
) {

1705 
	`tsk_Ârötf
(
hFûe
,

1707 
egªss_ó
;

1710 
˙t
 = 
	`tsk_fs_ªad
(
fs
,

1711 (
TSK_DADDR_T
Ë
	`tsk_gëu32
(
fs
->
ídün
,

1712 
ext2fs
->
döo_buf
->
i_fûe_a˛
Ë* 
fs
->
block_size
,

1713 
buf
, 
fs
->
block_size
);

1715 i‡(
˙t
 !
fs
->
block_size
) {

1716 i‡(
˙t
 >= 0) {

1717 
	`tsk_îr‹_ª£t
();

1718 
tsk_î∫o
 = 
TSK_ERR_FS_READ
;

1720 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

1721 "ext2fs_i°©: ACL block %" 
PRIu32
,

1722 
	`tsk_gëu32
(
fs
->
ídün
, 
ext2fs
->
döo_buf
->
i_fûe_a˛
));

1723 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

1724 
	`‰ì
(
buf
);

1730 
ó_hód
 = (
ext2fs_ó_hódî
 *Ë
buf
;

1731 i‡(
	`tsk_gëu32
(
fs
->
ídün
, 
ó_hód
->
magic
Ë!
EXT2_EA_MAGIC
) {

1732 
	`tsk_Ârötf
(
hFûe
,

1733 "Inc‹ª˘Éxãndedáâribuã hódî: %" 
PRIx32
 "\n",

1734 
	`tsk_gëu32
(
fs
->
ídün
, 
ó_hód
->
magic
));

1739 
ó_íåy
 = (
ext2fs_ó_íåy
 *Ë& 
ó_hód
->
íåy
;

1740 ((
uöçå_t
Ë
ó_íåy
 <

1741 ((
uöçå_t
Ë
buf
 + 
fs
->
block_size
 -

1742 (
ext2fs_ó_íåy
)));

1743 
ó_íåy
 =

1744 (
ext2fs_ó_íåy
 *Ë((
uöçå_t
Ë
ó_íåy
 +

1745 
	`EXT2_EA_LEN
(
ó_íåy
->
∆í
))) {

1747 
«me
[256];

1750 i‡((
ó_íåy
->
∆í
 =0Ë&& (ó_íåy->
nidx
 == 0) &&

1751 (
	`tsk_gëu16
(
fs
->
ídün
, 
ó_íåy
->
vÆ_off
) == 0))

1755 i‡(
	`tsk_gëu32
(
fs
->
ídün
, 
ó_íåy
->
vÆ_blk
) != 0) {

1756 
	`tsk_Ârötf
(
hFûe
,

1763 i‡((
	`tsk_gëu32
(
fs
->
ídün
,

1764 
ó_íåy
->
vÆ_off
Ë> 
fs
->
block_size
)

1765 || ((
	`tsk_gëu16
(
fs
->
ídün
,

1766 
ó_íåy
->
vÆ_off
Ë+ 
	`tsk_gëu32
(
fs
->
ídün
,

1767 
ó_íåy
->
vÆ_size
)Ë> 
fs
->
block_size
)) {

1773 
	`°∫˝y
(
«me
, (*Ë&
ó_íåy
->«me,Éa_íåy->
∆í
);

1774 
«me
[
ó_íåy
->
∆í
] = '\0';

1778 i‡((
ó_íåy
->
nidx
 =
EXT2_EA_IDX_USER
) ||

1779 (
ó_íåy
->
nidx
 =
EXT2_EA_IDX_TRUSTED
) ||

1780 (
ó_íåy
->
nidx
 =
EXT2_EA_IDX_SECURITY
)) {

1781 
vÆ
[256];

1783 
	`°∫˝y
(
vÆ
,

1784 &
buf
[
	`tsk_gëu16
(
fs
->
ídün
, 
ó_íåy
->
vÆ_off
)],

1785 
	`tsk_gëu32
(
fs
->
ídün
,

1786 
ó_íåy
->
vÆ_size
) >

1787 256 ? 256 : 
	`tsk_gëu32
(
fs
->
ídün
,

1788 
ó_íåy
->
vÆ_size
));

1790 
vÆ
[
	`tsk_gëu32
(
fs
->
ídün
, 
ó_íåy
->
vÆ_size
) > 256 ?

1791 256 : 
	`tsk_gëu32
(
fs
->
ídün
, 
ó_íåy
->
vÆ_size
)] =

1794 i‡(
ó_íåy
->
nidx
 =
EXT2_EA_IDX_USER
)

1795 
	`tsk_Ârötf
(
hFûe
, "u£r.%s=%s\n", 
«me
, 
vÆ
);

1796 i‡(
ó_íåy
->
nidx
 =
EXT2_EA_IDX_TRUSTED
)

1797 
	`tsk_Ârötf
(
hFûe
, "åu°.%s=%s\n", 
«me
, 
vÆ
);

1798 i‡(
ó_íåy
->
nidx
 =
EXT2_EA_IDX_SECURITY
)

1799 
	`tsk_Ârötf
(
hFûe
, "£curôy.%s=%s\n", 
«me
, 
vÆ
);

1805 i‡((
ó_íåy
->
nidx
 =
EXT2_EA_IDX_POSIX_ACL_ACCESS
)

1806 || (
ó_íåy
->
nidx
 =
EXT2_EA_IDX_POSIX_ACL_DEFAULT
)) {

1808 
ext2fs_pos_a˛_íåy_lo
 *
a˛_lo
;

1809 
ext2fs_pos_a˛_hód
 *
a˛_hód
;

1811 i‡(
ó_íåy
->
nidx
 =
EXT2_EA_IDX_POSIX_ACL_ACCESS
)

1812 
	`tsk_Ârötf
(
hFûe
,

1814 i‡(
ó_íåy
->
nidx
 ==

1815 
EXT2_EA_IDX_POSIX_ACL_DEFAULT
)

1816 
	`tsk_Ârötf
(
hFûe
,

1820 
a˛_hód
 =

1821 (
ext2fs_pos_a˛_hód
 *) &

1822 
buf
[
	`tsk_gëu16
(
fs
->
ídün
, 
ó_íåy
->
vÆ_off
)];

1824 i‡(
	`tsk_gëu32
(
fs
->
ídün
, 
a˛_hód
->
vî
) != 1) {

1825 
	`tsk_Ârötf
(
hFûe
,

1826 "InvÆid ACL Hódî Vîsi⁄: %" 
PRIu32
 "\n",

1827 
	`tsk_gëu32
(
fs
->
ídün
, 
a˛_hód
->
vî
));

1832 
a˛_lo
 =

1833 (
ext2fs_pos_a˛_íåy_lo
 *Ë((
uöçå_t
Ë
a˛_hód
 +

1834 (
ext2fs_pos_a˛_hód
));

1838 (
uöçå_t
Ë
a˛_lo
 <

1839 ((
uöçå_t
Ë
buf
 +

1840 
	`tsk_gëu16
(
fs
->
ídün
,

1841 
ó_íåy
->
vÆ_off
Ë+ 
	`tsk_gëu32
(
fs
->
ídün
,

1842 
ó_íåy
->
vÆ_size
))) {

1844 
≥rm
[64];

1845 
Àn
;

1848 
	`ext2fs_make_a˛_°r
(
≥rm
, 64,

1849 
	`tsk_gëu16
(
fs
->
ídün
, 
a˛_lo
->
≥rm
));

1851 
	`tsk_gëu16
(
fs
->
ídün
, 
a˛_lo
->
èg
)) {

1852 
EXT2_PACL_TAG_USERO
:

1853 
	`tsk_Ârötf
(
hFûe
, " uid: %" 
PRIuUID
 ": %s\n",

1854 
fs_mëa
->
uid
, 
≥rm
);

1855 
Àn
 = (
ext2fs_pos_a˛_íåy_sh
);

1858 
EXT2_PACL_TAG_GRPO
:

1859 
	`tsk_Ârötf
(
hFûe
, " gid: %" 
PRIuGID
 ": %s\n",

1860 
fs_mëa
->
gid
, 
≥rm
);

1861 
Àn
 = (
ext2fs_pos_a˛_íåy_sh
);

1863 
EXT2_PACL_TAG_OTHER
:

1864 
	`tsk_Ârötf
(
hFûe
, " othî: %s\n", 
≥rm
);

1865 
Àn
 = (
ext2fs_pos_a˛_íåy_sh
);

1867 
EXT2_PACL_TAG_MASK
:

1868 
	`tsk_Ârötf
(
hFûe
, " mask: %s\n", 
≥rm
);

1869 
Àn
 = (
ext2fs_pos_a˛_íåy_sh
);

1873 
EXT2_PACL_TAG_GRP
:

1874 
	`tsk_Ârötf
(
hFûe
, " gid: %" 
PRIu32
 ": %s\n",

1875 
	`tsk_gëu32
(
fs
->
ídün
, 
a˛_lo
->
id
), 
≥rm
);

1876 
Àn
 = (
ext2fs_pos_a˛_íåy_lo
);

1879 
EXT2_PACL_TAG_USER
:

1880 
	`tsk_Ârötf
(
hFûe
, " uid: %" 
PRIu32
 ": %s\n",

1881 
	`tsk_gëu32
(
fs
->
ídün
, 
a˛_lo
->
id
), 
≥rm
);

1883 
Àn
 = (
ext2fs_pos_a˛_íåy_lo
);

1887 
	`tsk_Ârötf
(
hFûe
, "Unknown ACLÅag: %d\n",

1888 
	`tsk_gëu16
(
fs
->
ídün
, 
a˛_lo
->
èg
));

1889 
Àn
 = (
ext2fs_pos_a˛_íåy_sh
);

1892 
a˛_lo
 =

1893 (
ext2fs_pos_a˛_íåy_lo
 *Ë((
uöçå_t
Ë
a˛_lo


1894 + 
Àn
);

1898 
	`tsk_Ârötf
(
hFûe
,

1900 
ó_íåy
->
nidx
);

1903 
egªss_ó
:

1905 
	`‰ì
(
buf
);

1909 i‡(
£c_skew
 != 0) {

1910 
	`tsk_Ârötf
(
hFûe
, "\nAdjusted Inode Times:\n");

1911 
fs_mëa
->
mtime
 -
£c_skew
;

1912 
fs_mëa
->
©ime
 -
£c_skew
;

1913 
fs_mëa
->
˘ime
 -
£c_skew
;

1915 
	`tsk_Ârötf
(
hFûe
, "Ac˚s£d:\t%s", 
	`˘ime
(&
fs_mëa
->
©ime
));

1916 
	`tsk_Ârötf
(
hFûe
, "FûêModifõd:\t%s", 
	`˘ime
(&
fs_mëa
->
mtime
));

1917 
	`tsk_Ârötf
(
hFûe
, "InodêModifõd:\t%s", 
	`˘ime
(&
fs_mëa
->
˘ime
));

1919 i‡(
fs_mëa
->
time2
.
ext2
.
dtime
) {

1920 
fs_mëa
->
time2
.
ext2
.
dtime
 -
£c_skew
;

1921 
	`tsk_Ârötf
(
hFûe
, "Deleted:\t%s",

1922 
	`˘ime
(&
fs_mëa
->
time2
.
ext2
.
dtime
));

1923 
fs_mëa
->
time2
.
ext2
.
dtime
 +
£c_skew
;

1926 
fs_mëa
->
mtime
 +
£c_skew
;

1927 
fs_mëa
->
©ime
 +
£c_skew
;

1928 
fs_mëa
->
˘ime
 +
£c_skew
;

1930 
	`tsk_Ârötf
(
hFûe
, "\nOriginal Inode Times:\n");

1933 
	`tsk_Ârötf
(
hFûe
, "\nInode Times:\n");

1936 
	`tsk_Ârötf
(
hFûe
, "Ac˚s£d:\t%s", 
	`˘ime
(&
fs_mëa
->
©ime
));

1937 
	`tsk_Ârötf
(
hFûe
, "FûêModifõd:\t%s", 
	`˘ime
(&
fs_mëa
->
mtime
));

1938 
	`tsk_Ârötf
(
hFûe
, "InodêModifõd:\t%s", 
	`˘ime
(&
fs_mëa
->
˘ime
));

1940 i‡(
fs_mëa
->
time2
.
ext2
.
dtime
)

1941 
	`tsk_Ârötf
(
hFûe
, "Deleted:\t%s",

1942 
	`˘ime
(&
fs_mëa
->
time2
.
ext2
.
dtime
));

1944 i‡(
numblock
 > 0)

1945 
fs_mëa
->
size
 = 
numblock
 * 
fs
->
block_size
;

1947 
	`tsk_Ârötf
(
hFûe
, "\nDirect Blocks:\n");

1949 
¥öt
.
idx
 = 0;

1950 
¥öt
.
hFûe
 = hFile;

1952 i‡(
	`tsk_fs_fûe_wÆk
(
fs_fûe
, 
TSK_FS_FILE_WALK_FLAG_AONLY
,

1953 
¥öt_addr_a˘
, (*Ë&
¥öt
)) {

1954 
	`tsk_Ârötf
(
hFûe
, "\nErrorÑeading file: ");

1955 
	`tsk_îr‹_¥öt
(
hFûe
);

1956 
	`tsk_îr‹_ª£t
();

1958 i‡(
¥öt
.
idx
 != 0) {

1959 
	`tsk_Ârötf
(
hFûe
, "\n");

1962 
fs_©å_ödú
 = 
	`tsk_fs_fûe_©å_gë_ty≥
(
fs_fûe
,

1963 
TSK_FS_ATTR_TYPE_UNIX_INDIR
, 0, 0);

1964 i‡(
fs_©å_ödú
) {

1965 
	`tsk_Ârötf
(
hFûe
, "\nIndirect Blocks:\n");

1967 
¥öt
.
idx
 = 0;

1969 i‡(
	`tsk_fs_©å_wÆk
(
fs_©å_ödú
, 
TSK_FS_FILE_WALK_FLAG_AONLY
,

1970 
¥öt_addr_a˘
, (*Ë&
¥öt
)) {

1971 
	`tsk_Ârötf
(
hFûe
, "\nErrorÑeading indirectáttribute: ");

1972 
	`tsk_îr‹_¥öt
(
hFûe
);

1973 
	`tsk_îr‹_ª£t
();

1975 i‡(
¥öt
.
idx
 != 0) {

1976 
	`tsk_Ârötf
(
hFûe
, "\n");

1980 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

1982 
	}
}

1988 
	$ext2fs_˛o£
(
TSK_FS_INFO
 * 
fs
)

1990 
EXT2FS_INFO
 *
ext2fs
 = (EXT2FS_INFO *Ë
fs
;

1992 
fs
->
èg
 = 0;

1993 
	`‰ì
((*Ë
ext2fs
->
fs
);

1994 i‡(
ext2fs
->
döo_buf
 !
NULL
)

1995 
	`‰ì
((*Ë
ext2fs
->
döo_buf
);

1997 i‡(
ext2fs
->
gΩ_buf
 !
NULL
)

1998 
	`‰ì
((*Ë
ext2fs
->
gΩ_buf
);

2000 i‡(
ext2fs
->
bm≠_buf
 !
NULL
)

2001 
	`‰ì
((*Ë
ext2fs
->
bm≠_buf
);

2003 i‡(
ext2fs
->
im≠_buf
 !
NULL
)

2004 
	`‰ì
((*Ë
ext2fs
->
im≠_buf
);

2006 i‡(
fs
->
li°_öum_«med
) {

2007 
	`tsk_li°_‰ì
(
fs
->
li°_öum_«med
);

2008 
fs
->
li°_öum_«med
 = 
NULL
;

2011 
	`‰ì
(
ext2fs
);

2012 
	}
}

2024 
TSK_FS_INFO
 *

2025 
	$ext2fs_›í
(
TSK_IMG_INFO
 * 
img_öfo
, 
TSK_OFF_T
 
off£t
,

2026 
TSK_FS_TYPE_ENUM
 
·y≥
, 
uöt8_t
 
ã°
)

2028 
EXT2FS_INFO
 *
ext2fs
;

2029 
Àn
;

2030 
TSK_FS_INFO
 *
fs
;

2031 
ssize_t
 
˙t
;

2034 
	`tsk_îr‹_ª£t
();

2036 i‡(
	`TSK_FS_TYPE_ISEXT
(
·y≥
) == 0) {

2037 
	`tsk_îr‹_ª£t
();

2038 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

2039 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

2041  
NULL
;

2044 i‡((
ext2fs
 = (
EXT2FS_INFO
 *Ë
	`tsk_mÆloc
((*ext2fs))Ë=
NULL
)

2045  
NULL
;

2047 
fs
 = &(
ext2fs
->
fs_öfo
);

2049 
fs
->
·y≥
 = ftype;

2050 
fs
->
Êags
 = 0;

2051 
fs
->
img_öfo
 = img_info;

2052 
fs
->
off£t
 = offset;

2053 
fs
->
èg
 = 
TSK_FS_INFO_TAG
;

2058 
Àn
 = (
ext2fs_sb
);

2059 i‡((
ext2fs
->
fs
 = (
ext2fs_sb
 *Ë
	`tsk_mÆloc
(
Àn
)Ë=
NULL
) {

2060 
fs
->
èg
 = 0;

2061 
	`‰ì
(
ext2fs
);

2062  
NULL
;

2065 
˙t
 = 
	`tsk_fs_ªad
(
fs
, 
EXT2FS_SBOFF
, (*Ë
ext2fs
->fs, 
Àn
);

2066 i‡(
˙t
 !
Àn
) {

2067 i‡(
˙t
 >= 0) {

2068 
	`tsk_îr‹_ª£t
();

2069 
tsk_î∫o
 = 
TSK_ERR_FS_READ
;

2071 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
, "ext2fs_open: superblock");

2072 
fs
->
èg
 = 0;

2073 
	`‰ì
(
ext2fs
->
fs
);

2074 
	`‰ì
(
ext2fs
);

2075  
NULL
;

2081 i‡(
	`tsk_fs_guessu16
(
fs
, 
ext2fs
->fs->
s_magic
, 
EXT2FS_FS_MAGIC
)) {

2082 
fs
->
èg
 = 0;

2083 
	`‰ì
(
ext2fs
->
fs
);

2084 
	`‰ì
(
ext2fs
);

2085 
	`tsk_îr‹_ª£t
();

2086 
tsk_î∫o
 = 
TSK_ERR_FS_MAGIC
;

2087 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

2089  
NULL
;

2092 i‡(
tsk_vîbo£
) {

2093 i‡(
	`tsk_gëu32
(
fs
->
ídün
, 
ext2fs
->fs->
s_„©uª_ro_com∑t
) &

2094 
EXT2FS_FEATURE_RO_COMPAT_SPARSE_SUPER
)

2095 
	`tsk_Ârötf
(
°dîr
, "File system has sparse super blocks\n");

2097 
	`tsk_Ârötf
(
°dîr
, "Fú° d©®block i†%" 
PRIu32
 "\n",

2098 
	`tsk_gëu32
(
fs
->
ídün
, 
ext2fs
->fs->
s_fú°_d©a_block
));

2102 i‡(
·y≥
 =
TSK_FS_TYPE_EXT_DETECT
) {

2103 i‡(
	`tsk_gëu32
(
fs
->
ídün
, 
ext2fs
->fs->
s_„©uª_com∑t
) &

2104 
EXT2FS_FEATURE_COMPAT_HAS_JOURNAL
)

2105 
fs
->
·y≥
 = 
TSK_FS_TYPE_EXT3
;

2107 
fs
->
·y≥
 = 
TSK_FS_TYPE_EXT2
;

2109 
fs
->
du«me
 = "Fragment";

2113 i‡(
	`tsk_gëu32
(
fs
->
ídün
, 
ext2fs
->fs->
s_„©uª_öcom∑t
) &

2114 
EXT2FS_FEATURE_INCOMPAT_FILETYPE
)

2115 
ext2fs
->
dì¡ry_ty≥
 = 
EXT2_DE_V2
;

2117 
ext2fs
->
dì¡ry_ty≥
 = 
EXT2_DE_V1
;

2123 
fs
->
öum_cou¡
 = 
	`tsk_gëu32
(fs->
ídün
, 
ext2fs
->fs->
s_öodes_cou¡
) + 1;

2124 
fs
->
œ°_öum
 = fs->
öum_cou¡
;

2125 
fs
->
fú°_öum
 = 
EXT2FS_FIRSTINO
;

2126 
fs
->
roŸ_öum
 = 
EXT2FS_ROOTINO
;

2128 i‡(
fs
->
öum_cou¡
 < 10) {

2129 
fs
->
èg
 = 0;

2130 
	`‰ì
(
ext2fs
->
fs
);

2131 
	`‰ì
(
ext2fs
);

2132 
	`tsk_îr‹_ª£t
();

2133 
tsk_î∫o
 = 
TSK_ERR_FS_MAGIC
;

2134 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

2136  
NULL
;

2142 
ext2fs
->
öode_size
 = 
	`tsk_gëu16
(
fs
->
ídün
,Éxt2fs->fs->
s_öode_size
);

2143 i‡(
ext2fs
->
öode_size
 < (
ext2fs_öode
)) {

2144 
ext2fs
->
öode_size
 = (
ext2fs_öode
);

2145 i‡(
tsk_vîbo£
)

2146 
	`tsk_Ârötf
(
°dîr
,

2154 
fs
->
dev_bsize
 = 
img_öfo
->
£˘‹_size
;

2155 
fs
->
block_cou¡
 = 
	`tsk_gëu32
(fs->
ídün
, 
ext2fs
->fs->
s_blocks_cou¡
);

2156 
fs
->
fú°_block
 = 0;

2157 
fs
->
œ°_block_a˘
 = fs->
œ°_block
 = fs->
block_cou¡
 - 1;

2158 
ext2fs
->
fú°_d©a_block
 =

2159 
	`tsk_gëu32
(
fs
->
ídün
, 
ext2fs
->fs->
s_fú°_d©a_block
);

2161 i‡(
	`tsk_gëu32
(
fs
->
ídün
, 
ext2fs
->fs->
s_log_block_size
) !=

2162 
	`tsk_gëu32
(
fs
->
ídün
, 
ext2fs
->fs->
s_log_‰ag_size
)) {

2163 
fs
->
èg
 = 0;

2164 
	`‰ì
(
ext2fs
->
fs
);

2165 
	`‰ì
(
ext2fs
);

2166 
	`tsk_îr‹_ª£t
();

2167 
tsk_î∫o
 = 
TSK_ERR_FS_UNSUPFUNC
;

2168 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

2170  
NULL
;

2173 
fs
->
block_size
 =

2174 
EXT2FS_MIN_BLOCK_SIZE
 << 
	`tsk_gëu32
(
fs
->
ídün
,

2175 
ext2fs
->
fs
->
s_log_block_size
);

2178 i‡((
TSK_DADDR_T
Ë((
img_öfo
->
size
 - 
off£t
Ë/ 
fs
->
block_size
) <

2179 
fs
->
block_cou¡
)

2180 
fs
->
œ°_block_a˘
 =

2181 (
img_öfo
->
size
 - 
off£t
Ë/ 
fs
->
block_size
 - 1;

2186 
ext2fs
->
groups_off£t
 =

2187 
	`roundup
((
EXT2FS_SBOFF
 + (
ext2fs_sb
)), 
fs
->
block_size
);

2189 
ext2fs
->
groups_cou¡
 =

2190 (
EXT2_GRPNUM_T
Ë((
	`tsk_gëu32
(
fs
->
ídün
,

2191 
ext2fs
->
fs
->
s_blocks_cou¡
Ë-Éxt2fs->
fú°_d©a_block
 +

2192 
	`tsk_gëu32
(
fs
->
ídün
,

2193 
ext2fs
->
fs
->
s_blocks_≥r_group
) -

2194 1Ë/ 
	`tsk_gëu32
(
fs
->
ídün
, 
ext2fs
->fs->
s_blocks_≥r_group
));

2198 
fs
->
fs_id_u£d
 = 0; fs->fs_id_used < 16; fs->fs_id_used++) {

2199 
fs
->
fs_id
[fs->
fs_id_u£d
] = 
ext2fs
->fs->
s_uuid
[fs->fs_id_used];

2203 
fs
->
öode_wÆk
 = 
ext2fs_öode_wÆk
;

2204 
fs
->
block_wÆk
 = 
ext2fs_block_wÆk
;

2205 
fs
->
block_gëÊags
 = 
ext2fs_block_gëÊags
;

2207 
fs
->
gë_deÁu…_©å_ty≥
 = 
tsk_fs_unix_gë_deÁu…_©å_ty≥
;

2208 
fs
->
lﬂd_©ås
 = 
tsk_fs_unix_make_d©a_run
;

2210 
fs
->
fûe_add_mëa
 = 
ext2fs_öode_lookup
;

2211 
fs
->
dú_›í_mëa
 = 
ext2fs_dú_›í_mëa
;

2212 
fs
->
fs°©
 = 
ext2fs_fs°©
;

2213 
fs
->
fscheck
 = 
ext2fs_fscheck
;

2214 
fs
->
i°©
 = 
ext2fs_i°©
;

2215 
fs
->
«me_cmp
 = 
tsk_fs_unix_«me_cmp
;

2216 
fs
->
˛o£
 = 
ext2fs_˛o£
;

2220 
fs
->
jou∫_öum
 = 
	`tsk_gëu32
(fs->
ídün
, 
ext2fs
->fs->
s_jou∫Æ_öum
);

2221 
fs
->
jblk_wÆk
 = 
ext2fs_jblk_wÆk
;

2222 
fs
->
jíåy_wÆk
 = 
ext2fs_jíåy_wÆk
;

2223 
fs
->
j›í
 = 
ext2fs_j›í
;

2227 
ext2fs
->
im≠_buf
 = 
NULL
;

2228 
ext2fs
->
im≠_gΩ_num
 = 0xffffffff;

2231 
ext2fs
->
bm≠_buf
 = 
NULL
;

2232 
ext2fs
->
bm≠_gΩ_num
 = 0xffffffff;

2235 
ext2fs
->
döo_buf
 = 
NULL
;

2236 
ext2fs
->
döo_öum
 = 0xffffffff;

2239 
ext2fs
->
gΩ_buf
 = 
NULL
;

2240 
ext2fs
->
gΩ_num
 = 0xffffffff;

2242 
fs
->
li°_öum_«med
 = 
NULL
;

2248 i‡(
tsk_vîbo£
)

2249 
	`tsk_Ârötf
(
°dîr
,

2250 "öode†%" 
PRIu32
 "ÑoŸ inÿ%" 
PRIuINUM
 " blocks %" PRIu32

2251 " blocks/grou∞%" 
PRIu32
 "\n", 
	`tsk_gëu32
(
fs
->
ídün
,

2252 
ext2fs
->
fs
->
s_öodes_cou¡
),

2253 
fs
->
roŸ_öum
, 
	`tsk_gëu32
(fs->
ídün
,

2254 
ext2fs
->
fs
->
s_blocks_cou¡
), 
	`tsk_gëu32
(fs->
ídün
,

2255 
ext2fs
->
fs
->
s_blocks_≥r_group
));

2257  (
fs
);

2258 
	}
}

	@tsk3/fs/ext2fs_dent.c

27 
	~<˘y≥.h
>

28 
	~"tsk_fs_i.h
"

29 
	~"tsk_ext2fs.h
"

33 
uöt8_t


34 
	$ext2fs_dít_c›y
(
EXT2FS_INFO
 * 
ext2fs
,

35 *
ext2_dít
, 
TSK_FS_NAME
 * 
fs_«me
)

37 
TSK_FS_INFO
 *
fs
 = &(
ext2fs
->
fs_öfo
);

38 
i
;

40 i‡(
ext2fs
->
dì¡ry_ty≥
 =
EXT2_DE_V1
) {

41 
ext2fs_díåy1
 *
dú
 = (ext2fs_díåy1 *Ë
ext2_dít
;

43 
fs_«me
->
mëa_addr
 = 
	`tsk_gëu32
(
fs
->
ídün
, 
dú
->
öode
);

46 i‡(
	`tsk_gëu16
(
fs
->
ídün
, 
dú
->
«me_Àn
Ë>
fs_«me
->
«me_size
) {

47 
	`tsk_îr‹_ª£t
();

48 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

49 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

50 "ext2fs_dít_c›y: NamêS∑˚ÅoÿSmÆ»%d %" 
PRIuSIZE
 "",

51 
	`tsk_gëu16
(
fs
->
ídün
, 
dú
->
«me_Àn
), 
fs_«me
->
«me_size
);

56 
	`°∫˝y
(
fs_«me
->
«me
, 
dú
->«me, 
	`tsk_gëu16
(
fs
->
ídün
,

57 
dú
->
«me_Àn
));

58 
fs_«me
->
«me
[
	`tsk_gëu16
(
fs
->
ídün
, 
dú
->
«me_Àn
)] = '\0';

60 
fs_«me
->
ty≥
 = 
TSK_FS_NAME_TYPE_UNDEF
;

63 
ext2fs_díåy2
 *
dú
 = (ext2fs_díåy2 *Ë
ext2_dít
;

65 
fs_«me
->
mëa_addr
 = 
	`tsk_gëu32
(
fs
->
ídün
, 
dú
->
öode
);

68 i‡(
dú
->
«me_Àn
 >
fs_«me
->
«me_size
) {

69 
	`tsk_îr‹_ª£t
();

70 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

71 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

72 "ext2_dít_c›y: NamêS∑˚ÅoÿSmÆ»%d %" 
PRIuSIZE
 "",

73 
dú
->
«me_Àn
, 
fs_«me
->
«me_size
);

78 
	`°∫˝y
(
fs_«me
->
«me
, 
dú
->«me, dú->
«me_Àn
);

79 
fs_«me
->
«me
[
dú
->
«me_Àn
] = '\0';

81 
dú
->
ty≥
) {

82 
EXT2_DE_REG
:

83 
fs_«me
->
ty≥
 = 
TSK_FS_NAME_TYPE_REG
;

85 
EXT2_DE_DIR
:

86 
fs_«me
->
ty≥
 = 
TSK_FS_NAME_TYPE_DIR
;

88 
EXT2_DE_CHR
:

89 
fs_«me
->
ty≥
 = 
TSK_FS_NAME_TYPE_CHR
;

91 
EXT2_DE_BLK
:

92 
fs_«me
->
ty≥
 = 
TSK_FS_NAME_TYPE_BLK
;

94 
EXT2_DE_FIFO
:

95 
fs_«me
->
ty≥
 = 
TSK_FS_NAME_TYPE_FIFO
;

97 
EXT2_DE_SOCK
:

98 
fs_«me
->
ty≥
 = 
TSK_FS_NAME_TYPE_SOCK
;

100 
EXT2_DE_LNK
:

101 
fs_«me
->
ty≥
 = 
TSK_FS_NAME_TYPE_LNK
;

103 
EXT2_DE_UNKNOWN
:

105 
fs_«me
->
ty≥
 = 
TSK_FS_NAME_TYPE_UNDEF
;

111 
i
 = 0;

112 
fs_«me
->
«me
[
i
] != '\0') {

113 i‡(
	`TSK_IS_CNTRL
(
fs_«me
->
«me
[
i
]))

114 
fs_«me
->
«me
[
i
] = '^';

115 
i
++;

118 
fs_«me
->
Êags
 = 0;

121 
	}
}

128 
TSK_RETVAL_ENUM


129 
	$ext2fs_dít_∑r£_block
(
EXT2FS_INFO
 * 
ext2fs
, 
TSK_FS_DIR
 * 
a_fs_dú
,

130 
uöt8_t
 
a_is_dñ
, 
TSK_LIST
 ** 
li°_£í
, *
buf
, 
Àn
)

132 
TSK_FS_INFO
 *
fs
 = &(
ext2fs
->
fs_öfo
);

134 
dñÀn
 = 0;

135 
idx
;

136 
uöt16_t
 
ª˛í
;

137 
uöt32_t
 
öode
;

138 *
dúPå
;

139 
TSK_FS_NAME
 *
fs_«me
;

140 
möª˛í
 = 4;

142 i‡((
fs_«me
 = 
	`tsk_fs_«me_Æloc
(
EXT2FS_MAXNAMLEN
 + 1, 0)Ë=
NULL
)

143  
TSK_ERR
;

148 
idx
 = 0; idx <
Àn
 - 
	`EXT2FS_DIRSIZ_l˛
(1); idx +
möª˛í
) {

150 
«mñí
;

151 
dúPå
 = &
buf
[
idx
];

153 i‡(
ext2fs
->
dì¡ry_ty≥
 =
EXT2_DE_V1
) {

154 
ext2fs_díåy1
 *
dú
 = (ext2fs_díåy1 *Ë
dúPå
;

155 
öode
 = 
	`tsk_gëu32
(
fs
->
ídün
, 
dú
->inode);

156 
«mñí
 = 
	`tsk_gëu16
(
fs
->
ídün
, 
dú
->
«me_Àn
);

157 
ª˛í
 = 
	`tsk_gëu16
(
fs
->
ídün
, 
dú
->
ªc_Àn
);

160 
ext2fs_díåy2
 *
dú
 = (ext2fs_díåy2 *Ë
dúPå
;

161 
öode
 = 
	`tsk_gëu32
(
fs
->
ídün
, 
dú
->inode);

162 
«mñí
 = 
dú
->
«me_Àn
;

163 
ª˛í
 = 
	`tsk_gëu16
(
fs
->
ídün
, 
dú
->
ªc_Àn
);

166 
möª˛í
 = 
	`EXT2FS_DIRSIZ_l˛
(
«mñí
);

172 i‡((
öode
 > 
fs
->
œ°_öum
) ||

173 (
«mñí
 > 
EXT2FS_MAXNAMLEN
) || (namelen == 0) ||

174 (
ª˛í
 < 
möª˛í
Ë|| (ª˛í % 4Ë|| (
idx
 +Ñe˛í > 
Àn
)) {

176 
möª˛í
 = 4;

177 i‡(
dñÀn
 > 0)

178 
dñÀn
 -= 4;

184 i‡((
dñÀn
Ë&& (dñÀ¿< 
möª˛í
)) {

185 
möª˛í
 = 4;

186 
dñÀn
 -= 4;

190 i‡(
	`ext2fs_dít_c›y
(
ext2fs
, 
dúPå
, 
fs_«me
)) {

191 
	`tsk_fs_«me_‰ì
(
fs_«me
);

192  
TSK_ERR
;

196 i‡((
dñÀn
 > 0Ë|| (
öode
 =0Ë|| (
a_is_dñ
)) {

197 
fs_«me
->
Êags
 = 
TSK_FS_NAME_FLAG_UNALLOC
;

198 i‡(
dñÀn
 > 0)

199 
dñÀn
 -
möª˛í
;

203 
fs_«me
->
Êags
 = 
TSK_FS_NAME_FLAG_ALLOC
;

205 i‡(
	`tsk_fs_dú_add
(
a_fs_dú
, 
fs_«me
)) {

206 
	`tsk_fs_«me_‰ì
(
fs_«me
);

207  
TSK_ERR
;

220 i‡((
ª˛í
 - 
möª˛í
 >
	`EXT2FS_DIRSIZ_l˛
(1))

221 && (
dñÀn
 <= 0))

222 
dñÀn
 = 
ª˛í
 - 
möª˛í
;

225 
	`tsk_fs_«me_‰ì
(
fs_«me
);

226  
TSK_OK
;

227 
	}
}

244 
TSK_RETVAL_ENUM


245 
	$ext2fs_dú_›í_mëa
(
TSK_FS_INFO
 * 
a_fs
, 
TSK_FS_DIR
 ** 
a_fs_dú
,

246 
TSK_INUM_T
 
a_addr
)

248 
EXT2FS_INFO
 *
ext2fs
 = (EXT2FS_INFO *Ë
a_fs
;

249 *
dúbuf
, *
dú±r
;

250 
TSK_OFF_T
 
size
;

251 
TSK_FS_LOAD_FILE
 
lﬂd_fûe
;

252 
TSK_FS_DIR
 *
fs_dú
;

253 
TSK_LIST
 *
li°_£í
 = 
NULL
;

258 
TSK_RETVAL_ENUM
 
ªtvÆ_tmp
;

259 
TSK_RETVAL_ENUM
 
ªtvÆ_föÆ
 = 
TSK_OK
;

261 i‡(
a_addr
 < 
a_fs
->
fú°_öum
 ||á_add∏>á_fs->
œ°_öum
) {

262 
	`tsk_îr‹_ª£t
();

263 
tsk_î∫o
 = 
TSK_ERR_FS_WALK_RNG
;

264 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

265 "ext2fs_dú_›í_mëa: inodêvÆue: %" 
PRIuINUM
 "\n", 
a_addr
);

266  
TSK_ERR
;

268 i‡(
a_fs_dú
 =
NULL
) {

269 
	`tsk_îr‹_ª£t
();

270 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

271 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

273  
TSK_ERR
;

276 i‡(
tsk_vîbo£
)

277 
	`tsk_Ârötf
(
°dîr
,

278 "ext2fs_dú_›í_mëa: Pro˚ssög dúe˘‹y %" 
PRIuINUM


279 "\n", 
a_addr
);

281 
fs_dú
 = *
a_fs_dú
;

282 i‡(
fs_dú
) {

283 
	`tsk_fs_dú_ª£t
(
fs_dú
);

286 i‡((*
a_fs_dú
 = 
fs_dú
 = 
	`tsk_fs_dú_Æloc
(
a_fs
, 128)Ë=
NULL
) {

287  
TSK_ERR
;

292 i‡(
a_addr
 =
	`TSK_FS_ORPHANDIR_INUM
(
a_fs
)) {

293  
	`tsk_fs_dú_föd_‹ph™s
(
a_fs
, 
fs_dú
);

296 i‡((
fs_dú
->
fs_fûe
 =

297 
	`tsk_fs_fûe_›í_mëa
(
a_fs
, 
NULL
, 
a_addr
)) == NULL) {

298 
	`tsk_îr‹_ª£t
();

299 
	`°∫ˇt
(
tsk_îr°r2
, " -Éxt2fs_dir_open_meta",

300 
TSK_ERRSTR_L
 - 
	`°æí
(
tsk_îr°r2
));

301  
TSK_COR
;

304 
size
 = 
	`roundup
(
fs_dú
->
fs_fûe
->
mëa
->size, 
a_fs
->
block_size
);

305 i‡((
dúbuf
 = 
	`tsk_mÆloc
((
size_t
Ë
size
)Ë=
NULL
) {

306  
TSK_ERR
;

310 
lﬂd_fûe
.
À·
 =Üﬂd_fûe.
tŸÆ
 = (
size_t
Ë
size
;

311 
lﬂd_fûe
.
ba£
 =Üﬂd_fûe.
cur
 = 
dúbuf
;

313 i‡(
	`tsk_fs_fûe_wÆk
(
fs_dú
->
fs_fûe
,

314 
TSK_FS_FILE_WALK_FLAG_SLACK
,

315 
tsk_fs_lﬂd_fûe_a˘i⁄
, (*Ë&
lﬂd_fûe
)) {

316 
	`tsk_îr‹_ª£t
();

317 
	`°∫ˇt
(
tsk_îr°r2
, " -Éxt2fs_dir_open_meta",

318 
TSK_ERRSTR_L
 - 
	`°æí
(
tsk_îr°r2
));

319 
	`‰ì
(
dúbuf
);

320  
TSK_COR
;

324 i‡(
lﬂd_fûe
.
À·
 > 0) {

325 
	`tsk_îr‹_ª£t
();

326 
tsk_î∫o
 = 
TSK_ERR_FS_FWALK
;

327 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

329 
PRIuINUM
 "\n", 
a_addr
);

330 
	`‰ì
(
dúbuf
);

331  
TSK_COR
;

333 
dú±r
 = 
dúbuf
;

335 (
öt64_t
Ë
size
 > 0) {

336 
Àn
 =

337 (
a_fs
->
block_size
 < 
size
) ?á_fs->block_size : () size;

339 
ªtvÆ_tmp
 =

340 
	`ext2fs_dít_∑r£_block
(
ext2fs
, 
fs_dú
,

341 (
fs_dú
->
fs_fûe
->

342 
mëa
->
Êags
 & 
TSK_FS_META_FLAG_UNALLOC
) ? 1 : 0,

343 &
li°_£í
, 
dú±r
, 
Àn
);

345 i‡(
ªtvÆ_tmp
 =
TSK_ERR
) {

346 
ªtvÆ_föÆ
 = 
TSK_ERR
;

349 i‡(
ªtvÆ_tmp
 =
TSK_COR
) {

350 
ªtvÆ_föÆ
 = 
TSK_COR
;

353 
size
 -
Àn
;

354 
dú±r
 = (*Ë((
uöçå_t
Ëdú±∏+ 
Àn
);

356 
	`‰ì
(
dúbuf
);

360 i‡(
a_addr
 =
a_fs
->
roŸ_öum
) {

361 
TSK_FS_NAME
 *
fs_«me
 = 
	`tsk_fs_«me_Æloc
(256, 0);

362 i‡(
fs_«me
 =
NULL
)

363  
TSK_ERR
;

365 i‡(
	`tsk_fs_dú_make_‹ph™_dú_«me
(
a_fs
, 
fs_«me
)) {

366 
	`tsk_fs_«me_‰ì
(
fs_«me
);

367  
TSK_ERR
;

370 i‡(
	`tsk_fs_dú_add
(
fs_dú
, 
fs_«me
)) {

371 
	`tsk_fs_«me_‰ì
(
fs_«me
);

372  
TSK_ERR
;

374 
	`tsk_fs_«me_‰ì
(
fs_«me
);

377  
ªtvÆ_föÆ
;

378 
	}
}

	@tsk3/fs/ext2fs_journal.c

21 
	~"tsk_fs_i.h
"

22 
	~"tsk_ext2fs.h
"

27 
	#big_tsk_gëu32
(
x
) \

28 (
uöt32_t
)((((
uöt8_t
 *)
x
)[3] << 0) + \

29 (((
uöt8_t
 *)
x
)[2] << 8) + \

30 (((
uöt8_t
 *)
x
)[1] << 16) + \

31 (((
uöt8_t
 *)
x
)[0] << 24Ë)

	)

38 
TSK_WALK_RET_ENUM


39 
	$lﬂd_sb_a˘i⁄
(
TSK_FS_FILE
 * 
fs_fûe
, 
TSK_OFF_T
 
a_off
, 
TSK_DADDR_T
 
addr
,

40 *
buf
, 
size_t
 
size
, 
TSK_FS_BLOCK_FLAG_ENUM
 
Êags
, *
±r
)

42 
TSK_FS_INFO
 *
fs
 = 
fs_fûe
->
fs_öfo
;

43 
ext2fs_jou∫_sb
 *
sb
;

44 
EXT2FS_INFO
 *
ext2fs
 = (EXT2FS_INFO *Ë
fs
;

45 
EXT2FS_JINFO
 *
jöfo
 = 
ext2fs
->jinfo;

47 i‡(
size
 < 1024) {

48 
	`tsk_îr‹_ª£t
();

49 
tsk_î∫o
 = 
TSK_ERR_FS_UNSUPFUNC
;

50 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

52  
TSK_WALK_ERROR
;

55 
sb
 = (
ext2fs_jou∫_sb
 *Ë
buf
;

57 i‡(
	`big_tsk_gëu32
(
sb
->
magic
Ë!
EXT2_JMAGIC
) {

58 
	`tsk_îr‹_ª£t
();

59 
tsk_î∫o
 = 
TSK_ERR_FS_MAGIC
;

60 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

61 "Jou∫Æ inodê%" 
PRIuINUM


62 " d€†nŸ havê®vÆid magi¯vÆue: %" 
PRIx32
,

63 
jöfo
->
j_öum
, 
	`big_tsk_gëu32
(
sb
->
magic
));

64  
TSK_WALK_ERROR
;

67 
jöfo
->
bsize
 = 
	`big_tsk_gëu32
(
sb
->bsize);

68 
jöfo
->
fú°_block
 = 
	`big_tsk_gëu32
(
sb
->
fú°_blk
);

69 
jöfo
->
œ°_block
 = 
	`big_tsk_gëu32
(
sb
->
num_blk
) - 1;

70 
jöfo
->
°¨t_blk
 = 
	`big_tsk_gëu32
(
sb
->start_blk);

71 
jöfo
->
°¨t_£q
 = 
	`big_tsk_gëu32
(
sb
->start_seq);

73  
TSK_WALK_STOP
;

74 
	}
}

80 
uöt8_t


81 
	$ext2fs_j›í
(
TSK_FS_INFO
 * 
fs
, 
TSK_INUM_T
 
öum
)

83 
EXT2FS_INFO
 *
ext2fs
 = (EXT2FS_INFO *Ë
fs
;

84 
EXT2FS_JINFO
 *
jöfo
;

87 
	`tsk_îr‹_ª£t
();

89 i‡(!
fs
) {

90 
	`tsk_îr‹_ª£t
();

91 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

92 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
, "ext2fs_jopen: fs isÇull");

96 
ext2fs
->
jöfo
 = jinfo =

97 (
EXT2FS_JINFO
 *Ë
	`tsk_mÆloc
((EXT2FS_JINFO));

98 i‡(
jöfo
 =
NULL
) {

101 
jöfo
->
j_öum
 = 
öum
;

103 
jöfo
->
fs_fûe
 = 
	`tsk_fs_fûe_›í_mëa
(
fs
, 
NULL
, 
öum
);

104 i‡(!
jöfo
->
fs_fûe
) {

105 
	`‰ì
(
jöfo
);

110 i‡(
	`tsk_fs_fûe_wÆk
(
jöfo
->
fs_fûe
, 0, 
lﬂd_sb_a˘i⁄
, 
NULL
)) {

111 
	`tsk_îr‹_ª£t
();

112 
tsk_î∫o
 = 
TSK_ERR_FS_FWALK
;

113 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
, "ErrorÜoadingÉxt3 journal");

114 
	`tsk_fs_fûe_˛o£
(
jöfo
->
fs_fûe
);

115 
	`‰ì
(
jöfo
);

119 i‡(
tsk_vîbo£
)

120 
	`tsk_Ârötf
(
°dîr
,

121 "jou∫Æ o≥√dáàöodê%" 
PRIuINUM
 " bsize: %" 
PRIu32


122 " Fú° JBlk: %" 
PRIuDADDR
 " Last JBlk: %" PRIuDADDR "\n",

123 
öum
, 
jöfo
->
bsize
, jöfo->
fú°_block
, jöfo->
œ°_block
);

126 
	}
}

133 
uöt8_t


134 
	$ext2fs_jíåy_wÆk
(
TSK_FS_INFO
 * 
fs
, 
Êags
,

135 
TSK_FS_JENTRY_WALK_CB
 
a˘i⁄
, *
±r
)

137 
EXT2FS_INFO
 *
ext2fs
 = (EXT2FS_INFO *Ë
fs
;

138 
EXT2FS_JINFO
 *
jöfo
 = 
ext2fs
->jinfo;

139 *
jou∫
;

140 
TSK_FS_LOAD_FILE
 
buf1
;

141 
TSK_DADDR_T
 
i
;

142 
b_desc_£í
 = 0;

145 
	`tsk_îr‹_ª£t
();

148 i‡((
jöfo
 =
NULL
Ë|| (jöfo->
fs_fûe
 == NULL)

149 || (
jöfo
->
fs_fûe
->
mëa
 =
NULL
)) {

150 
	`tsk_îr‹_ª£t
();

151 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

152 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

157 i‡(
jöfo
->
fs_fûe
->
mëa
->
size
 !=

158 (
jöfo
->
œ°_block
 + 1Ë* jöfo->
bsize
) {

159 
	`tsk_îr‹_ª£t
();

160 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

161 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

167 
buf1
.
À·
 = buf1.
tŸÆ
 = (
size_t
Ë
jöfo
->
fs_fûe
->
mëa
->
size
;

168 
jou∫
 = 
buf1
.
cur
 = buf1.
ba£
 = 
	`tsk_mÆloc
(buf1.
À·
);

169 i‡(
jou∫
 =
NULL
) {

173 i‡(
	`tsk_fs_fûe_wÆk
(
jöfo
->
fs_fûe
,

174 0, 
tsk_fs_lﬂd_fûe_a˘i⁄
, (*Ë&
buf1
)) {

175 
	`‰ì
(
jou∫
);

179 i‡(
buf1
.
À·
 > 0) {

180 
	`tsk_îr‹_ª£t
();

181 
tsk_î∫o
 = 
TSK_ERR_FS_FWALK
;

182 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

184 
	`‰ì
(
jou∫
);

192 
	`tsk_¥ötf
("JBlk\tDescriptrion\n");

196 
i
 = 0; i < 
jöfo
->
œ°_block
; i++) {

197 
ext2fs_jou∫_hód
 *
hód
;

206 
hód
 = (
ext2fs_jou∫_hód
 *Ë& 
jou∫
[
i
 * 
jöfo
->
bsize
];

207 i‡(
	`big_tsk_gëu32
(
hód
->
magic
Ë!
EXT2_JMAGIC
) {

208 i‡(
i
 < 
jöfo
->
fú°_block
) {

209 
	`tsk_¥ötf
("%" 
PRIuDADDR
 ":\tUnu£d\n", 
i
);

215 i‡(
b_desc_£í
 == 0) {

216 
ext2fs_jou∫_hód
 *
hód2
 = 
NULL
;

217 
TSK_DADDR_T
 
a
;

218 
√xt_hód
 = 0, 
√xt_£q
 = 0;

219 
ext2fs_jou∫_díåy
 *
díåy
;

224 
b_desc_£í
 = 1;

226 
a
 = 
i
;á < 
jöfo
->
œ°_block
;á++) {

227 
hód2
 =

228 (
ext2fs_jou∫_hód
 *Ë& 
jou∫
[
a
 * 
jöfo
->
bsize
];

229 i‡((
	`big_tsk_gëu32
(
hód2
->
magic
Ë=
EXT2_JMAGIC
)) {

230 
√xt_hód
 = 
a
;

231 
√xt_£q
 = 
	`big_tsk_gëu32
(
hód2
->
íåy_£q
);

236 i‡(
√xt_hód
 == 0) {

237 
	`tsk_¥ötf
("%" 
PRIuDADDR
 ":\tFS Block Unknown\n", 
i
);

241 
a
 = 
jöfo
->
œ°_block
;á > 
i
;á--) {

242 
hód2
 =

243 (
ext2fs_jou∫_hód
 *Ë& 
jou∫
[
a
 * 
jöfo
->
bsize
];

244 i‡((
	`big_tsk_gëu32
(
hód2
->
magic
Ë=
EXT2_JMAGIC
)

245 && (
	`big_tsk_gëu32
(
hód2
->
íåy_ty≥
) ==

246 
EXT2_J_ETYPE_DESC
)

247 && (
√xt_£q
 =
	`big_tsk_gëu32
(
hód2
->
íåy_£q
))) {

258 i‡(
a
 =
i
) {

259 
	`tsk_¥ötf
("%" 
PRIuDADDR
 ":\tFS Block Unknown\n", 
i
);

264 
díåy
 =

265 (
ext2fs_jou∫_díåy
 *Ë((
uöçå_t
Ë
hód2
 +

266 (
ext2fs_jou∫_hód
));;

270 (
uöçå_t
Ë
díåy
 <=

271 ((
uöçå_t
Ë
hód2
 + 
jöfo
->
bsize
 -

272 (
ext2fs_jou∫_hód
))) {

276 i‡(++
a
 <
jöfo
->
œ°_block
) {

277 
ext2fs_jou∫_hód
 *
hód3
;

280 
hód3
 =

281 (
ext2fs_jou∫_hód
 *Ë& 
jou∫
[
i
 *

282 
jöfo
->
bsize
];

283 i‡((
	`big_tsk_gëu32
(
hód3
->
magic
Ë=
EXT2_JMAGIC
)) {

284 
i
--;

290 
	`tsk_¥ötf
("%" 
PRIuDADDR
 ":\tFS Block %" 
PRIu32


291 "\n", 
i
, 
	`big_tsk_gëu32
(
díåy
->
fs_blk
));

294 i‡(++
i
 > 
jöfo
->
œ°_block
)

300 i‡(
	`big_tsk_gëu32
(
díåy
->
Êag
Ë& 
EXT2_J_DENTRY_LAST
)

304 i‡(
	`big_tsk_gëu32
(
díåy
->
Êag
) &

305 
EXT2_J_DENTRY_SAMEID
)

306 
díåy
 =

307 (
ext2fs_jou∫_díåy
 *Ë((
uöçå_t
Ë
díåy
 +

308 (
ext2fs_jou∫_díåy
));

311 
díåy
 =

312 (
ext2fs_jou∫_díåy
 *Ë((
uöçå_t
Ë
díåy
 +

313 (
ext2fs_jou∫_díåy
)

320 
	`tsk_¥ötf
("%" 
PRIuDADDR


321 ":\tU«Œoˇãd FS Block Unknown\n", 
i
);

326 i‡((
	`big_tsk_gëu32
(
hód
->
íåy_ty≥
Ë=
EXT2_J_ETYPE_SB1
) ||

327 (
	`big_tsk_gëu32
(
hód
->
íåy_ty≥
Ë=
EXT2_J_ETYPE_SB2
)) {

328 
	`tsk_¥ötf
("%" 
PRIuDADDR
 ":\tSu≥rblock (£q: %" 
PRIu32
 ")\n",

329 
i
, 
	`big_tsk_gëu32
(
hód
->
íåy_£q
));

333 i‡(
	`big_tsk_gëu32
(
hód
->
íåy_ty≥
Ë=
EXT2_J_ETYPE_REV
) {

334 
	`tsk_¥ötf
("%" 
PRIuDADDR
 ":\t%sRevokêBlock (£q: %" 
PRIu32


335 ")\n", 
i
, ((ò< 
jöfo
->
°¨t_blk
)

336 || (
	`big_tsk_gëu32
(
hód
->
íåy_£q
) <

337 
jöfo
->
°¨t_£q
)) ? "Unallocated " : "Allocated ",

338 
	`big_tsk_gëu32
(
hód
->
íåy_£q
));

342 i‡(
	`big_tsk_gëu32
(
hód
->
íåy_ty≥
Ë=
EXT2_J_ETYPE_COM
) {

343 
	`tsk_¥ötf
("%" 
PRIuDADDR
 ":\t%sCommô Block (£q: %" 
PRIu32


344 ")\n", 
i
, ((ò< 
jöfo
->
°¨t_blk
)

345 || (
	`big_tsk_gëu32
(
hód
->
íåy_£q
) <

346 
jöfo
->
°¨t_£q
)) ? "Unallocated " : "Allocated ",

347 
	`big_tsk_gëu32
(
hód
->
íåy_£q
));

351 i‡(
	`big_tsk_gëu32
(
hód
->
íåy_ty≥
Ë=
EXT2_J_ETYPE_DESC
) {

352 
ext2fs_jou∫_díåy
 *
díåy
;

353 
ext2fs_jou∫_hód
 *
hód2
;

354 
u«Œoc
 = 0;

356 
b_desc_£í
 = 1;

360 i‡((
i
 < 
jöfo
->
°¨t_blk
) ||

361 (
	`big_tsk_gëu32
(
hód
->
íåy_£q
Ë< 
jöfo
->
°¨t_£q
))

362 
u«Œoc
 = 1;

364 
	`tsk_¥ötf
("%" 
PRIuDADDR
 ":\t%sDes¸ùt‹ Block (£q: %" 
PRIu32


365 ")\n", 
i
, (
u«Œoc
) ? "Unallocated " : "Allocated ",

366 
	`big_tsk_gëu32
(
hód
->
íåy_£q
));

368 
díåy
 =

369 (
ext2fs_jou∫_díåy
 *Ë((
uöçå_t
Ë
hód
 +

370 (
ext2fs_jou∫_hód
));;

373 (
uöçå_t
Ë
díåy
 <=

374 ((
uöçå_t
Ë
hód
 + 
jöfo
->
bsize
 -

375 (
ext2fs_jou∫_hód
))) {

379 i‡(++
i
 > 
jöfo
->
œ°_block
)

384 
hód2
 = (
ext2fs_jou∫_hód
 *Ë& 
jou∫
[
i
 * 
jöfo
->
bsize
];

385 i‡((
	`big_tsk_gëu32
(
hód2
->
magic
Ë=
EXT2_JMAGIC
) &&

386 (
	`big_tsk_gëu32
(
hód2
->
íåy_£q
) >=

387 
	`big_tsk_gëu32
(
hód
->
íåy_£q
))) {

388 
i
--;

394 
	`tsk_¥ötf
("%" 
PRIuDADDR
 ":\t%sFS Block %" 
PRIu32
 "\n", 
i
,

395 (
u«Œoc
) ? "Unallocated " : "Allocated ",

396 
	`big_tsk_gëu32
(
díåy
->
fs_blk
));

399 i‡(
	`big_tsk_gëu32
(
díåy
->
Êag
Ë& 
EXT2_J_DENTRY_LAST
)

403 i‡(
	`big_tsk_gëu32
(
díåy
->
Êag
) &

404 
EXT2_J_DENTRY_SAMEID
)

405 
díåy
 =

406 (
ext2fs_jou∫_díåy
 *Ë((
uöçå_t
Ë
díåy
 +

407 (
ext2fs_jou∫_díåy
));

410 
díåy
 =

411 (
ext2fs_jou∫_díåy
 *Ë((
uöçå_t
Ë
díåy
 +

412 (
ext2fs_jou∫_díåy
) + 16);

417 
	`‰ì
(
jou∫
);

419 
	}
}

430 
uöt8_t


431 
	$ext2fs_jblk_wÆk
(
TSK_FS_INFO
 * 
fs
, 
TSK_DADDR_T
 
°¨t
, TSK_DADDR_T 
íd
,

432 
Êags
, 
TSK_FS_JBLK_WALK_CB
 
a˘i⁄
, *
±r
)

434 
EXT2FS_INFO
 *
ext2fs
 = (EXT2FS_INFO *Ë
fs
;

435 
EXT2FS_JINFO
 *
jöfo
 = 
ext2fs
->jinfo;

436 *
jou∫
;

437 
TSK_FS_LOAD_FILE
 
buf1
;

438 
TSK_DADDR_T
 
i
;

439 
ext2fs_jou∫_hód
 *
hód
;

442 
	`tsk_îr‹_ª£t
();

444 i‡((
jöfo
 =
NULL
Ë|| (jöfo->
fs_fûe
 == NULL)

445 || (
jöfo
->
fs_fûe
->
mëa
 =
NULL
)) {

446 
	`tsk_îr‹_ª£t
();

447 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

448 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

453 i‡(
jöfo
->
œ°_block
 < 
íd
) {

454 
	`tsk_îr‹_ª£t
();

455 
tsk_î∫o
 = 
TSK_ERR_FS_WALK_RNG
;

456 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

461 i‡(
°¨t
 !
íd
) {

462 
	`tsk_îr‹_ª£t
();

463 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

464 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

469 i‡(
jöfo
->
fs_fûe
->
mëa
->
size
 !=

470 (
jöfo
->
œ°_block
 + 1Ë* jöfo->
bsize
) {

471 
	`tsk_îr‹_ª£t
();

472 
tsk_î∫o
 = 
TSK_ERR_FS_UNSUPFUNC
;

473 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

482 
buf1
.
À·
 = buf1.
tŸÆ
 = (
size_t
Ë((
íd
 + 1Ë* 
jöfo
->
bsize
);

483 
jou∫
 = 
buf1
.
cur
 = buf1.
ba£
 = 
	`tsk_mÆloc
(buf1.
À·
);

484 i‡(
jou∫
 =
NULL
) {

488 i‡(
	`tsk_fs_fûe_wÆk
(
jöfo
->
fs_fûe
, 0, 
tsk_fs_lﬂd_fûe_a˘i⁄
,

489 (*Ë&
buf1
)) {

490 
	`‰ì
(
jou∫
);

494 i‡(
buf1
.
À·
 > 0) {

495 
	`tsk_îr‹_ª£t
();

496 
tsk_î∫o
 = 
TSK_ERR_FS_FWALK
;

497 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

499 
	`‰ì
(
jou∫
);

503 
hód
 = (
ext2fs_jou∫_hód
 *Ë& 
jou∫
[
íd
 * 
jöfo
->
bsize
];

512 i‡(
	`big_tsk_gëu32
(
hód
->
magic
Ë!
EXT2_JMAGIC
) {

515 
i
 = 
íd
 - 1; i >= 0; i--) {

516 
ext2fs_jou∫_díåy
 *
díåy
;

517 
TSK_DADDR_T
 
diff
;

519 
hód
 = (
ext2fs_jou∫_hód
 *Ë& 
jou∫
[
i
 * 
jöfo
->
bsize
];

521 i‡(
	`big_tsk_gëu32
(
hód
->
magic
Ë!
EXT2_JMAGIC
)

526 i‡(
	`big_tsk_gëu32
(
hód
->
íåy_ty≥
Ë=
EXT2_J_ETYPE_COM
)

530 i‡(
	`big_tsk_gëu32
(
hód
->
íåy_ty≥
Ë!
EXT2_J_ETYPE_DESC
)

539 
diff
 = 
íd
 - 
i
;

541 
díåy
 =

542 (
ext2fs_jou∫_díåy
 *Ë(&
jou∫
[
i
 * 
jöfo
->
bsize
] +

543 (
ext2fs_jou∫_hód
));

545 (
uöçå_t
Ë
díåy
 <=

546 ((
uöçå_t
Ë& 
jou∫
[(
i
 + 1Ë* 
jöfo
->
bsize
] -

547 (
ext2fs_jou∫_hód
))) {

549 i‡(--
diff
 == 0) {

550 i‡(
	`big_tsk_gëu32
(
díåy
->
Êag
Ë& 
EXT2_J_DENTRY_ESC
) {

551 
jou∫
[
íd
 * 
jöfo
->
bsize
] = 0xC0;

552 
jou∫
[
íd
 * 
jöfo
->
bsize
 + 1] = 0x3B;

553 
jou∫
[
íd
 * 
jöfo
->
bsize
 + 2] = 0x39;

554 
jou∫
[
íd
 * 
jöfo
->
bsize
 + 3] = 0x98;

560 i‡(
	`big_tsk_gëu32
(
díåy
->
Êag
Ë& 
EXT2_J_DENTRY_SAMEID
)

561 
díåy
 =

562 (
ext2fs_jou∫_díåy
 *Ë((
uöçå_t
Ë
díåy
 +

563 (
ext2fs_jou∫_díåy
));

565 
díåy
 =

566 (
ext2fs_jou∫_díåy
 *Ë((
uöçå_t
Ë
díåy
 +

567 (
ext2fs_jou∫_díåy
) + 16);

574 i‡(
	`fwrôe
(&
jou∫
[
íd
 * 
jöfo
->
bsize
], jöfo->bsize, 1, 
°dout
) != 1) {

575 
	`tsk_îr‹_ª£t
();

576 
tsk_î∫o
 = 
TSK_ERR_FS_WRITE
;

577 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

579 
	`‰ì
(
jou∫
);

583 
	`‰ì
(
jou∫
);

585 
	}
}

	@tsk3/fs/fatfs.c

26 
	~"tsk_fs_i.h
"

27 
	~"tsk_Átfs.h
"

59 
	$gëFATCacheIdx
(
FATFS_INFO
 * 
Átfs
, 
TSK_DADDR_T
 
£˘
)

61 
i
, 
cidx
;

62 
ssize_t
 
˙t
;

63 
TSK_FS_INFO
 *
fs
 = (TSK_FS_INFO *Ë& 
Átfs
->
fs_öfo
;

66 
i
 = 0; i < 
FAT_CACHE_N
; i++) {

67 i‡((
Átfs
->
Átc_âl
[
i
] > 0) &&

68 (
£˘
 >
Átfs
->
Átc_addr
[
i
]) &&

69 (
£˘
 < (
Átfs
->
Átc_addr
[
i
] + 
FAT_CACHE_S
))) {

70 
a
;

73 
a
 = 0;á < 
FAT_CACHE_N
;á++) {

74 i‡(
Átfs
->
Átc_âl
[
a
] == 0)

77 i‡(
Átfs
->
Átc_âl
[
a
] < f©fs->Átc_âl[
i
])

78 
Átfs
->
Átc_âl
[
a
]++;

80 
Átfs
->
Átc_âl
[
i
] = 1;

83  
i
;

91 
cidx
 = 0;

92 
i
 = 0; i < 
FAT_CACHE_N
; i++) {

93 i‡((
Átfs
->
Átc_âl
[
i
] == 0) ||

94 (
Átfs
->
Átc_âl
[
i
] >
FAT_CACHE_N
)) {

95 
cidx
 = 
i
;

102 
˙t
 =

103 
	`tsk_fs_ªad
(
fs
, 
£˘
 * fs->
block_size
, 
Átfs
->
Átc_buf
[
cidx
],

104 
FAT_CACHE_B
);

105 i‡(
˙t
 !
FAT_CACHE_B
) {

106 i‡(
˙t
 >= 0) {

107 
	`tsk_îr‹_ª£t
();

108 
tsk_î∫o
 = 
TSK_ERR_FS_READ
;

110 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

111 "gëFATCacheIdx: FAT: %" 
PRIuDADDR
, 
£˘
);

116 i‡(
Átfs
->
Átc_âl
[
cidx
] == 0)

117 
Átfs
->
Átc_âl
[
cidx
] = 
FAT_CACHE_N
 + 1;

119 
i
 = 0; i < 
FAT_CACHE_N
; i++) {

120 i‡(
Átfs
->
Átc_âl
[
i
] == 0)

123 i‡(
Átfs
->
Átc_âl
[
i
] < f©fs->Átc_âl[
cidx
])

124 
Átfs
->
Átc_âl
[
i
]++;

127 
Átfs
->
Átc_âl
[
cidx
] = 1;

128 
Átfs
->
Átc_addr
[
cidx
] = 
£˘
;

129  
cidx
;

130 
	}
}

145 
uöt8_t


146 
	$Átfs_gëFAT
(
FATFS_INFO
 * 
Átfs
, 
TSK_DADDR_T
 
˛u°
, TSK_DADDR_T * 
vÆue
)

148 
uöt8_t
 *
a_±r
;

149 
uöt16_t
 
tmp16
;

150 
TSK_FS_INFO
 *
fs
 = (TSK_FS_INFO *Ë& 
Átfs
->
fs_öfo
;

151 
TSK_DADDR_T
 
£˘
, 
offs
;

152 
ssize_t
 
˙t
;

153 
cidx
;

156 i‡(
˛u°
 > 
Átfs
->
œ°˛u°
) {

158 i‡((
˛u°
 =
Átfs
->
œ°˛u°
 + 1) &&

159 ((
Átfs
->
fú°˛u°£˘
 + f©fs->
csize
 * f©fs->
˛u°˙t
 -

160 1Ë!
fs
->
œ°_block
)) {

161 i‡(
tsk_vîbo£
)

162 
	`tsk_Ârötf
(
°dîr
,

167 
	`tsk_îr‹_ª£t
();

168 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

169 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

170 "Átfs_gëFAT: invÆid clu°îáddªss: %" 
PRIuDADDR
, 
˛u°
);

174 
Átfs
->
fs_öfo
.
·y≥
) {

175 
TSK_FS_TYPE_FAT12
:

176 i‡(
˛u°
 & 0xf000) {

177 
	`tsk_îr‹_ª£t
();

178 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

179 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

180 "Átfs_gëFAT: TSK_FS_TYPE_FAT12 Clu°î %" 
PRIuDADDR


181 "Åoÿœrge", 
˛u°
);

186 
£˘
 = 
Átfs
->
fú°Át£˘
 +

187 ((
˛u°
 + (˛u° >> 1)Ë>> 
Átfs
->
ssize_sh
);

191 i‡(-1 =(
cidx
 = 
	`gëFATCacheIdx
(
Átfs
, 
£˘
)))

195 
offs
 = ((
£˘
 - 
Átfs
->
Átc_addr
[
cidx
]Ë<< f©fs->
ssize_sh
) +

196 (
˛u°
 + (˛u° >> 1)Ë% 
Átfs
->
ssize
;

202 i‡(
offs
 =(
FAT_CACHE_B
 - 1)) {

205 
˙t
 =

206 
	`tsk_fs_ªad
(
fs
, 
£˘
 * fs->
block_size
,

207 
Átfs
->
Átc_buf
[
cidx
], 
FAT_CACHE_B
);

208 i‡(
˙t
 !
FAT_CACHE_B
) {

209 i‡(
˙t
 >= 0) {

210 
	`tsk_îr‹_ª£t
();

211 
tsk_î∫o
 = 
TSK_ERR_FS_READ
;

213 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

215 
PRIuDADDR
, 
£˘
);

218 
Átfs
->
Átc_addr
[
cidx
] = 
£˘
;

220 
offs
 = (
˛u°
 + (˛u° >> 1)Ë% 
Átfs
->
ssize
;

224 
a_±r
 = (
uöt8_t
 *Ë
Átfs
->
Átc_buf
[
cidx
] + 
offs
;

226 
tmp16
 = 
	`tsk_gëu16
(
fs
->
ídün
, 
a_±r
);

229 i‡(
˛u°
 & 1)

230 
tmp16
 >>= 4;

232 *
vÆue
 = 
tmp16
 & 
FATFS_12_MASK
;

235 i‡((*
vÆue
 > (
Átfs
->
œ°˛u°
)) &&

236 (*
vÆue
 < (0x0ffffff7 & 
FATFS_12_MASK
))) {

237 i‡(
tsk_vîbo£
)

238 
	`tsk_Ârötf
(
°dîr
,

239 "Átfs_gëFAT: TSK_FS_TYPE_FAT12 clu°î (%" 
PRIuDADDR


240 "Ëtoÿœrgê(%" 
PRIuDADDR
 "Ë-Ñe£âög\n", 
˛u°
,

241 *
vÆue
);

242 *
vÆue
 = 0;

246 
TSK_FS_TYPE_FAT16
:

248 
£˘
 = 
Átfs
->
fú°Át£˘
 + ((
˛u°
 << 1Ë>> f©fs->
ssize_sh
);

249 i‡(-1 =(
cidx
 = 
	`gëFATCacheIdx
(
Átfs
, 
£˘
)))

253 
a_±r
 = (
uöt8_t
 *Ë
Átfs
->
Átc_buf
[
cidx
] +

254 ((
£˘
 - 
Átfs
->
Átc_addr
[
cidx
]Ë<< f©fs->
ssize_sh
) +

255 ((
˛u°
 << 1Ë% 
Átfs
->
ssize
);

257 *
vÆue
 = 
	`tsk_gëu16
(
fs
->
ídün
, 
a_±r
Ë& 
FATFS_16_MASK
;

260 i‡((*
vÆue
 > (
Átfs
->
œ°˛u°
)) &&

261 (*
vÆue
 < (0x0ffffff7 & 
FATFS_16_MASK
))) {

262 i‡(
tsk_vîbo£
)

263 
	`tsk_Ârötf
(
°dîr
,

265 
PRIuDADDR
 "Åoÿœrgê-Ñe£âög\n", 
˛u°
);

266 *
vÆue
 = 0;

270 
TSK_FS_TYPE_FAT32
:

272 
£˘
 = 
Átfs
->
fú°Át£˘
 + ((
˛u°
 << 2Ë>> f©fs->
ssize_sh
);

273 i‡(-1 =(
cidx
 = 
	`gëFATCacheIdx
(
Átfs
, 
£˘
)))

277 
a_±r
 = (
uöt8_t
 *Ë
Átfs
->
Átc_buf
[
cidx
] +

278 ((
£˘
 - 
Átfs
->
Átc_addr
[
cidx
]Ë<< f©fs->
ssize_sh
) +

279 (
˛u°
 << 2Ë% 
Átfs
->
ssize
;

281 *
vÆue
 = 
	`tsk_gëu32
(
fs
->
ídün
, 
a_±r
Ë& 
FATFS_32_MASK
;

284 i‡((*
vÆue
 > 
Átfs
->
œ°˛u°
) &&

285 (*
vÆue
 < (0x0ffffff7 & 
FATFS_32_MASK
))) {

286 i‡(
tsk_vîbo£
)

287 
	`tsk_Ârötf
(
°dîr
,

288 "Átfs_gëFAT: c⁄ã¡†o‡íåy %" 
PRIuDADDR


289 "Åoÿœrgê-Ñe£âög\n", 
˛u°
);

291 *
vÆue
 = 0;

296 
	`tsk_îr‹_ª£t
();

297 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

298 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

299 "Átfs_gëFAT: Unknow¿FATÅy≥: %d", 
Átfs
->
fs_öfo
.
·y≥
);

302 
	}
}

306 
öt8_t


307 
	$Átfs_is_˛u°Æloc
(
FATFS_INFO
 * 
Átfs
, 
TSK_DADDR_T
 
˛u°
)

309 
TSK_DADDR_T
 
c⁄ã¡
;

310 i‡(
	`Átfs_gëFAT
(
Átfs
, 
˛u°
, &
c⁄ã¡
))

312 i‡(
c⁄ã¡
 =
FATFS_UNALLOC
)

316 
	}
}

327 
öt8_t


328 
	$Átfs_is_£˘Æloc
(
FATFS_INFO
 * 
Átfs
, 
TSK_DADDR_T
 
£˘
)

330 
TSK_FS_INFO
 *
fs
 = (TSK_FS_INFO *Ë
Átfs
;

334 i‡(
£˘
 < 
Átfs
->
fú°˛u°£˘
)

338 i‡((
£˘
 <
fs
->
œ°_block
) &&

339 (
£˘
 >(
Átfs
->
fú°˛u°£˘
 + f©fs->
csize
 * f©fs->
˛u°˙t
)))

342  
	`Átfs_is_˛u°Æloc
(
Átfs
, 
	`FATFS_SECT_2_CLUST
(Átfs, 
£˘
));

343 
	}
}

348 
TSK_FS_BLOCK_FLAG_ENUM


349 
	$Átfs_block_gëÊags
(
TSK_FS_INFO
 * 
a_fs
, 
TSK_DADDR_T
 
a_addr
)

351 
FATFS_INFO
 *
Átfs
 = (FATFS_INFO *Ë
a_fs
;

352 
Êags
 = 0;

355 i‡(
a_addr
 < 
Átfs
->
fú°d©a£˘
) {

356 
Êags
 = 
TSK_FS_BLOCK_FLAG_META
 | 
TSK_FS_BLOCK_FLAG_ALLOC
;

359 i‡(
a_addr
 < 
Átfs
->
fú°˛u°£˘
) {

360 
Êags
 = 
TSK_FS_BLOCK_FLAG_CONT
 | 
TSK_FS_BLOCK_FLAG_ALLOC
;

363 
ªtvÆ
;

364 
Êags
 = 
TSK_FS_BLOCK_FLAG_CONT
;

367 
ªtvÆ
 = 
	`Átfs_is_£˘Æloc
(
Átfs
, 
a_addr
);

368 i‡(
ªtvÆ
 != -1) {

369 i‡(
ªtvÆ
 == 1)

370 
Êags
 |
TSK_FS_BLOCK_FLAG_ALLOC
;

372 
Êags
 |
TSK_FS_BLOCK_FLAG_UNALLOC
;

375  
Êags
;

376 
	}
}

393 
uöt8_t


394 
	$Átfs_block_wÆk
(
TSK_FS_INFO
 * 
fs
, 
TSK_DADDR_T
 
a_°¨t_blk
,

395 
TSK_DADDR_T
 
a_íd_blk
, 
TSK_FS_BLOCK_WALK_FLAG_ENUM
 
a_Êags
,

396 
TSK_FS_BLOCK_WALK_CB
 
a_a˘i⁄
, *
a_±r
)

398 *
my«me
 = "fatfs_block_walk";

399 
FATFS_INFO
 *
Átfs
 = (FATFS_INFO *Ë
fs
;

400 *
d©a_buf
 = 
NULL
;

401 
ssize_t
 
˙t
;

402 
TSK_FS_BLOCK
 *
fs_block
;

404 
TSK_DADDR_T
 
addr
;

405 
myÊags
;

406 
i
;

409 
	`tsk_îr‹_ª£t
();

414 i‡(
a_°¨t_blk
 < 
fs
->
fú°_block
 ||á_°¨t_blk > fs->
œ°_block
) {

415 
	`tsk_îr‹_ª£t
();

416 
tsk_î∫o
 = 
TSK_ERR_FS_WALK_RNG
;

417 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

418 "%s: Sèπ block: %" 
PRIuDADDR
 "", 
my«me
, 
a_°¨t_blk
);

421 i‡(
a_íd_blk
 < 
fs
->
fú°_block
 ||á_íd_blk > fs->
œ°_block
) {

422 
	`tsk_îr‹_ª£t
();

423 
tsk_î∫o
 = 
TSK_ERR_FS_WALK_RNG
;

424 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

425 "%s: End block: %" 
PRIuDADDR
 "", 
my«me
, 
a_íd_blk
);

429 i‡(
tsk_vîbo£
)

430 
	`tsk_Ârötf
(
°dîr
,

431 "Átfs_block_wÆk: Block WÆkög %" 
PRIuDADDR
 "Åo %"

432 
PRIuDADDR
 "\n", 
a_°¨t_blk
, 
a_íd_blk
);

436 i‡(((
a_Êags
 & 
TSK_FS_BLOCK_WALK_FLAG_ALLOC
) == 0) &&

437 ((
a_Êags
 & 
TSK_FS_BLOCK_WALK_FLAG_UNALLOC
) == 0)) {

438 
a_Êags
 |=

439 (
TSK_FS_BLOCK_WALK_FLAG_ALLOC
 |

440 
TSK_FS_BLOCK_WALK_FLAG_UNALLOC
);

442 i‡(((
a_Êags
 & 
TSK_FS_BLOCK_WALK_FLAG_META
) == 0) &&

443 ((
a_Êags
 & 
TSK_FS_BLOCK_WALK_FLAG_CONT
) == 0)) {

444 
a_Êags
 |=

445 (
TSK_FS_BLOCK_WALK_FLAG_CONT
 | 
TSK_FS_BLOCK_WALK_FLAG_META
);

448 i‡((
fs_block
 = 
	`tsk_fs_block_Æloc
(
fs
)Ë=
NULL
) {

454 
addr
 = 
a_°¨t_blk
;

457 i‡((
a_°¨t_blk
 < 
Átfs
->
fú°˛u°£˘
)

458 && (
a_Êags
 & 
TSK_FS_BLOCK_WALK_FLAG_ALLOC
)) {

460 i‡(
tsk_vîbo£
)

461 
	`tsk_Ârötf
(
°dîr
,

463 
PRIuDADDR
 "\n", 
Átfs
->
fú°˛u°£˘
);

465 i‡((
d©a_buf
 = (*Ë
	`tsk_mÆloc
(
fs
->
block_size
 * 8)Ë=
NULL
) {

466 
	`tsk_fs_block_‰ì
(
fs_block
);

471 ; 
addr
 < 
Átfs
->
fú°˛u°£˘
 &&ádd∏<
a_íd_blk
;) {

473 
˙t
 =

474 
	`tsk_fs_ªad_block
(
fs
, 
addr
, 
d©a_buf
, fs->
block_size
 * 8);

475 i‡(
˙t
 !
fs
->
block_size
 * 8) {

476 i‡(
˙t
 >= 0) {

477 
	`tsk_îr‹_ª£t
();

478 
tsk_î∫o
 = 
TSK_ERR_FS_READ
;

480 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

482 
PRIuDADDR
, 
addr
);

483 
	`‰ì
(
d©a_buf
);

484 
	`tsk_fs_block_‰ì
(
fs_block
);

490 
i
 = 0;

491 
i
 < 8 && (
addr
Ë<
a_íd_blk


492 && (
addr
Ë< 
Átfs
->
fú°˛u°£˘
; 
i
++,áddr++) {

493 
ªtvÆ
;

495 
myÊags
 = 
TSK_FS_BLOCK_FLAG_ALLOC
;

499 i‡(
addr
 < 
Átfs
->
fú°d©a£˘
)

500 
myÊags
 |
TSK_FS_BLOCK_FLAG_META
;

503 
myÊags
 |
TSK_FS_BLOCK_FLAG_CONT
;

506 i‡((
myÊags
 & 
TSK_FS_BLOCK_FLAG_META
)

507 && (!(
a_Êags
 & 
TSK_FS_BLOCK_WALK_FLAG_META
)))

509 i‡((
myÊags
 & 
TSK_FS_BLOCK_FLAG_CONT
)

510 && (!(
a_Êags
 & 
TSK_FS_BLOCK_WALK_FLAG_CONT
)))

514 
	`tsk_fs_block_£t
(
fs
, 
fs_block
, 
addr
,

515 
myÊags
 | 
TSK_FS_BLOCK_FLAG_RAW
,

516 &
d©a_buf
[
i
 * 
fs
->
block_size
]);

518 
ªtvÆ
 = 
	`a_a˘i⁄
(
fs_block
, 
a_±r
);

519 i‡(
ªtvÆ
 =
TSK_WALK_STOP
) {

520 
	`‰ì
(
d©a_buf
);

521 
	`tsk_fs_block_‰ì
(
fs_block
);

524 i‡(
ªtvÆ
 =
TSK_WALK_ERROR
) {

525 
	`‰ì
(
d©a_buf
);

526 
	`tsk_fs_block_‰ì
(
fs_block
);

532 
	`‰ì
(
d©a_buf
);

535 i‡(
addr
 >
a_íd_blk
) {

536 
	`tsk_fs_block_‰ì
(
fs_block
);

542 i‡(
addr
 < 
Átfs
->
fú°˛u°£˘
) {

543 
addr
 = 
Átfs
->
fú°˛u°£˘
;

553 
addr
 = 
	`FATFS_CLUST_2_SECT
(
Átfs
, (
	`FATFS_SECT_2_CLUST
(fatfs,áddr)));

555 i‡((
d©a_buf
 = 
	`tsk_mÆloc
(
fs
->
block_size
 * 
Átfs
->
csize
)Ë=
NULL
) {

556 
	`tsk_fs_block_‰ì
(
fs_block
);

560 i‡(
tsk_vîbo£
)

561 
	`tsk_Ârötf
(
°dîr
,

562 "Átfs_block_wÆk: WÆkög d©®¨ó block†(%" 
PRIuDADDR


563 "Åÿ%" 
PRIuDADDR
 ")\n", 
addr
, 
a_íd_blk
);

565 ; 
addr
 <
a_íd_blk
;ádd∏+
Átfs
->
csize
) {

566 
ªtvÆ
;

567 
size_t
 
ªad_size
;

570 
ªtvÆ
 = 
	`Átfs_is_£˘Æloc
(
Átfs
, 
addr
);

571 i‡(
ªtvÆ
 == -1) {

572 
	`‰ì
(
d©a_buf
);

573 
	`tsk_fs_block_‰ì
(
fs_block
);

576 i‡(
ªtvÆ
 == 1) {

577 
myÊags
 = 
TSK_FS_BLOCK_FLAG_ALLOC
;

580 
myÊags
 = 
TSK_FS_BLOCK_FLAG_UNALLOC
;

584 
myÊags
 |
TSK_FS_BLOCK_FLAG_CONT
;

587 i‡((
myÊags
 & 
TSK_FS_BLOCK_FLAG_CONT
)

588 && (!(
a_Êags
 & 
TSK_FS_BLOCK_WALK_FLAG_CONT
)))

590 i‡((
myÊags
 & 
TSK_FS_BLOCK_FLAG_ALLOC
)

591 && (!(
a_Êags
 & 
TSK_FS_BLOCK_WALK_FLAG_ALLOC
)))

593 i‡((
myÊags
 & 
TSK_FS_BLOCK_FLAG_UNALLOC
)

594 && (!(
a_Êags
 & 
TSK_FS_BLOCK_WALK_FLAG_UNALLOC
)))

599 i‡(
a_íd_blk
 - 
addr
 + 1 < 
Átfs
->
csize
)

600 
ªad_size
 = (
size_t
Ë(
a_íd_blk
 - 
addr
 + 1);

602 
ªad_size
 = 
Átfs
->
csize
;

604 
˙t
 = 
tsk_fs_ªad_block


605 (
fs
, 
addr
, 
d©a_buf
, fs->
block_size
 * 
ªad_size
);

606 i‡(
˙t
 !
fs
->
block_size
 * 
ªad_size
) {

607 i‡(
˙t
 >= 0) {

608 
	`tsk_îr‹_ª£t
();

609 
tsk_î∫o
 = 
TSK_ERR_FS_READ
;

611 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

612 "Átfs_block_wÆk: block: %" 
PRIuDADDR
, 
addr
);

613 
	`‰ì
(
d©a_buf
);

614 
	`tsk_fs_block_‰ì
(
fs_block
);

619 
i
 = 0; i < 
ªad_size
; i++) {

620 
ªtvÆ
;

622 i‡(
addr
 + 
i
 < 
a_°¨t_blk
)

624 i‡(
addr
 + 
i
 > 
a_íd_blk
)

627 
	`tsk_fs_block_£t
(
fs
, 
fs_block
, 
addr
 + 
i
,

628 
myÊags
 | 
TSK_FS_BLOCK_FLAG_RAW
,

629 &
d©a_buf
[
i
 * 
fs
->
block_size
]);

631 
ªtvÆ
 = 
	`a_a˘i⁄
(
fs_block
, 
a_±r
);

632 i‡(
ªtvÆ
 =
TSK_WALK_STOP
) {

633 
	`‰ì
(
d©a_buf
);

634 
	`tsk_fs_block_‰ì
(
fs_block
);

637 i‡(
ªtvÆ
 =
TSK_WALK_ERROR
) {

638 
	`‰ì
(
d©a_buf
);

639 
	`tsk_fs_block_‰ì
(
fs_block
);

645 
	`‰ì
(
d©a_buf
);

646 
	`tsk_fs_block_‰ì
(
fs_block
);

648 
	}
}

655 
uöt8_t


656 
	$Átfs_fscheck
(
TSK_FS_INFO
 * 
fs
, 
FILE
 * 
hFûe
)

658 
	`tsk_îr‹_ª£t
();

659 
tsk_î∫o
 = 
TSK_ERR_FS_UNSUPFUNC
;

660 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

685 
	}
}

696 
uöt8_t


697 
	$Átfs_fs°©
(
TSK_FS_INFO
 * 
fs
, 
FILE
 * 
hFûe
)

699 
i
;

700 
a
;

701 
TSK_DADDR_T
 
√xt
, 
¢ext
, 
s°¨t
, 
£nd
;

702 
FATFS_INFO
 *
Átfs
 = (FATFS_INFO *Ë
fs
;

703 
Átfs_sb
 *
sb
 = 
Átfs
->sb;

704 *
d©a_buf
;

705 
Átfs_díåy
 *
de
;

706 
ssize_t
 
˙t
;

709 
	`tsk_îr‹_ª£t
();

711 i‡((
d©a_buf
 = (*Ë
	`tsk_mÆloc
(
fs
->
block_size
)Ë=
NULL
) {

718 
˙t
 = 
	`tsk_fs_ªad_block
(
fs
, 
Átfs
->
roŸ£˘
, 
d©a_buf
, fs->
block_size
);

719 i‡(
˙t
 !
fs
->
block_size
) {

720 i‡(
˙t
 >= 0) {

721 
	`tsk_îr‹_ª£t
();

722 
tsk_î∫o
 = 
TSK_ERR_FS_READ
;

724 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

725 "Átfs_fs°©:ÑoŸ dúe˘‹y: %" 
PRIuDADDR
, 
Átfs
->
roŸ£˘
);

726 
	`‰ì
(
d©a_buf
);

732 
de
 = (
Átfs_díåy
 *Ë
d©a_buf
;

733 
i
 = 0; i < 
Átfs
->
ssize
; i +(*
de
)) {

734 i‡(
de
->
©åib
 =
FATFS_ATTR_VOLUME
)

736 
de
++;

739 i‡(
de
->
©åib
 !
FATFS_ATTR_VOLUME
)

740 
de
 = 
NULL
;

745 
	`tsk_Ârötf
(
hFûe
, "FILE SYSTEM INFORMATION\n");

746 
	`tsk_Ârötf
(
hFûe
, "--------------------------------------------\n");

748 
	`tsk_Ârötf
(
hFûe
, "File System Type: FAT");

749 i‡(
fs
->
·y≥
 =
TSK_FS_TYPE_FAT12
)

750 
	`tsk_Ârötf
(
hFûe
, "12\n");

751 i‡(
fs
->
·y≥
 =
TSK_FS_TYPE_FAT16
)

752 
	`tsk_Ârötf
(
hFûe
, "16\n");

753 i‡(
fs
->
·y≥
 =
TSK_FS_TYPE_FAT32
)

754 
	`tsk_Ârötf
(
hFûe
, "32\n");

756 
	`tsk_Ârötf
(
hFûe
, "\n");

758 
	`tsk_Ârötf
(
hFûe
, "\nOEM Name: %c%c%c%c%c%c%c%c\n", 
sb
->
€m«me
[0],

759 
sb
->
€m«me
[1], sb->oemname[2], sb->oemname[3], sb->oemname[4],

760 
sb
->
€m«me
[5], sb->oemname[6], sb->oemname[7]);

763 i‡(
Átfs
->
fs_öfo
.
·y≥
 !
TSK_FS_TYPE_FAT32
) {

764 
	`tsk_Ârötf
(
hFûe
, "VﬁumêID: 0x%" 
PRIx32
 "\n",

765 
	`tsk_gëu32
(
fs
->
ídün
, 
sb
->
a
.
f16
.
vﬁ_id
));

767 
	`tsk_Ârötf
(
hFûe
,

769 
sb
->
a
.
f16
.
vﬁ_œb
[0], sb->a.f16.vol_lab[1],

770 
sb
->
a
.
f16
.
vﬁ_œb
[2], sb->a.f16.vol_lab[3],

771 
sb
->
a
.
f16
.
vﬁ_œb
[4], sb->a.f16.vol_lab[5],

772 
sb
->
a
.
f16
.
vﬁ_œb
[6], sb->a.f16.vol_lab[7],

773 
sb
->
a
.
f16
.
vﬁ_œb
[8], sb->a.f16.vol_lab[9],

774 
sb
->
a
.
f16
.
vﬁ_œb
[10]);

776 i‡((
de
Ë&& (de->
«me
)) {

777 
	`tsk_Ârötf
(
hFûe
,

779 
de
->
«me
[0], de->name[1], de->name[2], de->name[3],

780 
de
->
«me
[4], de->name[5], de->name[6], de->name[7],

781 
de
->
ext
[0], de->ext[1], de->ext[2]);

784 
	`tsk_Ârötf
(
hFûe
, "Volume Label (Root Directory):\n");

787 
	`tsk_Ârötf
(
hFûe
, "File System Type Label: %c%c%c%c%c%c%c%c\n",

788 
sb
->
a
.
f16
.
fs_ty≥
[0], sb->a.f16.fs_type[1],

789 
sb
->
a
.
f16
.
fs_ty≥
[2], sb->a.f16.fs_type[3],

790 
sb
->
a
.
f16
.
fs_ty≥
[4], sb->a.f16.fs_type[5],

791 
sb
->
a
.
f16
.
fs_ty≥
[6], sb->a.f16.fs_type[7]);

795 *
Át_fsöfo_buf
;

796 
Átfs_fsöfo
 *
Át_öfo
;

798 i‡((
Át_fsöfo_buf
 = (*)

799 
	`tsk_mÆloc
((
Átfs_fsöfo
))Ë=
NULL
) {

800 
	`‰ì
(
d©a_buf
);

804 
	`tsk_Ârötf
(
hFûe
, "VﬁumêID: 0x%" 
PRIx32
 "\n",

805 
	`tsk_gëu32
(
fs
->
ídün
, 
sb
->
a
.
f32
.
vﬁ_id
));

807 
	`tsk_Ârötf
(
hFûe
,

809 
sb
->
a
.
f32
.
vﬁ_œb
[0], sb->a.f32.vol_lab[1],

810 
sb
->
a
.
f32
.
vﬁ_œb
[2], sb->a.f32.vol_lab[3],

811 
sb
->
a
.
f32
.
vﬁ_œb
[4], sb->a.f32.vol_lab[5],

812 
sb
->
a
.
f32
.
vﬁ_œb
[6], sb->a.f32.vol_lab[7],

813 
sb
->
a
.
f32
.
vﬁ_œb
[8], sb->a.f32.vol_lab[9],

814 
sb
->
a
.
f32
.
vﬁ_œb
[10]);

816 i‡((
de
Ë&& (de->
«me
)) {

817 
	`tsk_Ârötf
(
hFûe
,

819 
de
->
«me
[0], de->name[1], de->name[2], de->name[3],

820 
de
->
«me
[4], de->name[5], de->name[6], de->name[7],

821 
de
->
ext
[0], de->ext[1], de->ext[2]);

824 
	`tsk_Ârötf
(
hFûe
, "Volume Label (Root Directory):\n");

827 
	`tsk_Ârötf
(
hFûe
, "File System Type Label: %c%c%c%c%c%c%c%c\n",

828 
sb
->
a
.
f32
.
fs_ty≥
[0], sb->a.f32.fs_type[1],

829 
sb
->
a
.
f32
.
fs_ty≥
[2], sb->a.f32.fs_type[3],

830 
sb
->
a
.
f32
.
fs_ty≥
[4], sb->a.f32.fs_type[5],

831 
sb
->
a
.
f32
.
fs_ty≥
[6], sb->a.f32.fs_type[7]);

835 i‡(
	`tsk_gëu16
(
fs
->
ídün
, 
sb
->
a
.
f32
.
fsöfo
)) {

836 
˙t
 =

837 
	`tsk_fs_ªad_block
(
fs
, (
TSK_DADDR_T
Ë
	`tsk_gëu16
(fs->
ídün
,

838 
sb
->
a
.
f32
.
fsöfo
), 
Át_fsöfo_buf
,

839 (
Átfs_fsöfo
));

841 i‡(
˙t
 !(
Átfs_fsöfo
)) {

842 i‡(
˙t
 >= 0) {

843 
	`tsk_îr‹_ª£t
();

844 
tsk_î∫o
 = 
TSK_ERR_FS_READ
;

846 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

848 
PRIuDADDR
, (
TSK_DADDR_T
Ë
	`tsk_gëu16
(
fs
->
ídün
,

849 
sb
->
a
.
f32
.
fsöfo
));

850 
	`‰ì
(
d©a_buf
);

851 
	`‰ì
(
Át_fsöfo_buf
);

856 
Át_öfo
 = (
Átfs_fsöfo
 *Ë
Át_fsöfo_buf
;

857 
	`tsk_Ârötf
(
hFûe
,

858 "NexàFªêSe˘‹ (FS Info): %" 
PRIuDADDR
 "\n",

859 
	`FATFS_CLUST_2_SECT
(
Átfs
, 
	`tsk_gëu32
(
fs
->
ídün
,

860 
Át_öfo
->
√xt‰ì
)));

862 
	`tsk_Ârötf
(
hFûe
,

863 "FªêSe˘‹ Cou¡ (FS Info): %" 
PRIu32
 "\n",

864 (
	`tsk_gëu32
(
fs
->
ídün
,

865 
Át_öfo
->
‰ì˙t
Ë* 
Átfs
->
csize
));

867 
	`‰ì
(
Át_fsöfo_buf
);

871 
	`‰ì
(
d©a_buf
);

873 
	`tsk_Ârötf
(
hFûe
, "\nSe˘‹†bef‹êfûêsy°em: %" 
PRIu32
 "\n",

874 
	`tsk_gëu32
(
fs
->
ídün
, 
sb
->
¥ev£˘
));

876 
	`tsk_Ârötf
(
hFûe
, "\nFile System Layout (in sectors)\n");

878 
	`tsk_Ârötf
(
hFûe
, "TŸÆ R™ge: %" 
PRIuDADDR
 " - %" PRIuDADDR "\n",

879 
fs
->
fú°_block
, fs->
œ°_block
);

881 i‡(
fs
->
œ°_block
 !fs->
œ°_block_a˘
)

882 
	`tsk_Ârötf
(
hFûe
,

883 "TŸÆ R™gêö Image: %" 
PRIuDADDR
 " - %" PRIuDADDR "\n",

884 
fs
->
fú°_block
, fs->
œ°_block_a˘
);

886 
	`tsk_Ârötf
(
hFûe
, "* Re£rved: 0 - %" 
PRIuDADDR
 "\n",

887 
Átfs
->
fú°Át£˘
 - 1);

889 
	`tsk_Ârötf
(
hFûe
, "** Boot Sector: 0\n");

891 i‡(
Átfs
->
fs_öfo
.
·y≥
 =
TSK_FS_TYPE_FAT32
) {

892 
	`tsk_Ârötf
(
hFûe
, "** FS InfÿSe˘‹: %" 
PRIu16
 "\n",

893 
	`tsk_gëu16
(
fs
->
ídün
, 
sb
->
a
.
f32
.
fsöfo
));

895 
	`tsk_Ârötf
(
hFûe
, "** Backu∞BoŸ Se˘‹: %" 
PRIu32
 "\n",

896 
	`tsk_gëu32
(
fs
->
ídün
, 
sb
->
a
.
f32
.
bs_backup
));

899 
i
 = 0; i < 
Átfs
->
numÁt
; i++) {

900 
TSK_DADDR_T
 
ba£
 = 
Átfs
->
fú°Át£˘
 + 
i
 * (Átfs->
£˘≥rÁt
);

902 
	`tsk_Ârötf
(
hFûe
, "* FAT %d: %" 
PRIuDADDR
 " - %" PRIuDADDR "\n",

903 
i
, 
ba£
, (ba£ + 
Átfs
->
£˘≥rÁt
 - 1));

906 
	`tsk_Ârötf
(
hFûe
, "* D©®Aªa: %" 
PRIuDADDR
 " - %" PRIuDADDR "\n",

907 
Átfs
->
fú°d©a£˘
, 
fs
->
œ°_block
);

909 i‡(
Átfs
->
fs_öfo
.
·y≥
 !
TSK_FS_TYPE_FAT32
) {

910 
TSK_DADDR_T
 
x
 = 
Átfs
->
csize
 * f©fs->
˛u°˙t
;

912 
	`tsk_Ârötf
(
hFûe
,

913 "** RoŸ Dúe˘‹y: %" 
PRIuDADDR
 " - %" PRIuDADDR "\n",

914 
Átfs
->
fú°d©a£˘
, f©fs->
fú°˛u°£˘
 - 1);

916 
	`tsk_Ârötf
(
hFûe
,

917 "** Clu°î Aªa: %" 
PRIuDADDR
 " - %" PRIuDADDR "\n",

918 
Átfs
->
fú°˛u°£˘
, (Átfs->fú°˛u°£˘ + 
x
 - 1));

920 i‡((
Átfs
->
fú°˛u°£˘
 + 
x
 - 1Ë!
fs
->
œ°_block
) {

921 
	`tsk_Ârötf
(
hFûe
,

922 "** N⁄-˛u°îed: %" 
PRIuDADDR
 " - %" PRIuDADDR "\n",

923 (
Átfs
->
fú°˛u°£˘
 + 
x
), 
fs
->
œ°_block
);

927 
TSK_LIST
 *
li°_£í
 = 
NULL
;

928 
TSK_DADDR_T
 
x
 = 
Átfs
->
csize
 * (Átfs->
œ°˛u°
 - 1);

929 
TSK_DADDR_T
 
˛u°
, 
˛u°_p
;

931 
	`tsk_Ârötf
(
hFûe
,

932 "** Clu°î Aªa: %" 
PRIuDADDR
 " - %" PRIuDADDR "\n",

933 
Átfs
->
fú°˛u°£˘
, (Átfs->fú°˛u°£˘ + 
x
 - 1));

936 
˛u°_p
 = 
Átfs
->
roŸ£˘
;

937 
˛u°
 = 
	`FATFS_SECT_2_CLUST
(
Átfs
, f©fs->
roŸ£˘
);

938 (
˛u°
Ë&& (0 =
	`FATFS_ISEOF
(˛u°, 
FATFS_32_MASK
))) {

939 
TSK_DADDR_T
 
nxt
;

940 
˛u°_p
 = 
˛u°
;

943 i‡(
	`tsk_li°_föd
(
li°_£í
, 
˛u°
)) {

944 i‡(
tsk_vîbo£
)

945 
	`tsk_Ârötf
(
°dîr
,

949 i‡(
	`tsk_li°_add
(&
li°_£í
, 
˛u°
)) {

950 
	`tsk_li°_‰ì
(
li°_£í
);

951 
li°_£í
 = 
NULL
;

955 i‡(
	`Átfs_gëFAT
(
Átfs
, 
˛u°
, &
nxt
))

957 
˛u°
 = 
nxt
;

959 
	`tsk_li°_‰ì
(
li°_£í
);

960 
li°_£í
 = 
NULL
;

962 
	`tsk_Ârötf
(
hFûe
,

963 "*** RoŸ Dúe˘‹y: %" 
PRIuDADDR
 " - %" PRIuDADDR "\n",

964 
Átfs
->
roŸ£˘
, (
	`FATFS_CLUST_2_SECT
(Átfs, 
˛u°_p
 + 1) - 1));

966 i‡((
Átfs
->
fú°˛u°£˘
 + 
x
 - 1Ë!
fs
->
œ°_block
) {

967 
	`tsk_Ârötf
(
hFûe
,

968 "** N⁄-˛u°îed: %" 
PRIuDADDR
 " - %" PRIuDADDR "\n",

969 (
Átfs
->
fú°˛u°£˘
 + 
x
), 
fs
->
œ°_block
);

974 
	`tsk_Ârötf
(
hFûe
, "\nMETADATA INFORMATION\n");

975 
	`tsk_Ârötf
(
hFûe
, "--------------------------------------------\n");

977 
	`tsk_Ârötf
(
hFûe
, "R™ge: %" 
PRIuINUM
 " - %" PRIuINUM "\n",

978 
fs
->
fú°_öum
, fs->
œ°_öum
);

979 
	`tsk_Ârötf
(
hFûe
, "RoŸ Dúe˘‹y: %" 
PRIuINUM
 "\n", 
fs
->
roŸ_öum
);

982 
	`tsk_Ârötf
(
hFûe
, "\nCONTENT INFORMATION\n");

983 
	`tsk_Ârötf
(
hFûe
, "--------------------------------------------\n");

984 
	`tsk_Ârötf
(
hFûe
, "Se˘‹ Size: %" 
PRIu16
 "\n", 
Átfs
->
ssize
);

985 
	`tsk_Ârötf
(
hFûe
, "Clu°î Size: %" 
PRIu32
 "\n",

986 (
uöt32_t
Ë
Átfs
->
csize
 << f©fs->
ssize_sh
);

988 
	`tsk_Ârötf
(
hFûe
, "TŸÆ Clu°î R™ge: 2 - %" 
PRIuDADDR
 "\n",

989 
Átfs
->
œ°˛u°
);

994 
˙t
 = 0;

995 
i
 = 2; i <
Átfs
->
œ°˛u°
; i++) {

996 
TSK_DADDR_T
 
íåy
;

997 
TSK_DADDR_T
 
£˘
;

1000 i‡(
	`Átfs_gëFAT
(
Átfs
, 
i
, &
íåy
))

1003 i‡(
	`FATFS_ISBAD
(
íåy
, 
Átfs
->
mask
) == 0) {

1007 i‡(
˙t
 == 0)

1008 
	`tsk_Ârötf
(
hFûe
, "Bad Sectors: ");

1010 
£˘
 = 
	`FATFS_CLUST_2_SECT
(
Átfs
, 
i
);

1011 
a
 = 0;á < 
Átfs
->
csize
;á++) {

1012 
	`tsk_Ârötf
(
hFûe
, "%" 
PRIuDADDR
 " ", 
£˘
 + 
a
);

1013 i‡((++
˙t
 % 8) == 0)

1014 
	`tsk_Ârötf
(
hFûe
, "\n");

1017 i‡((
˙t
 > 0) && ((cnt % 8) != 0))

1018 
	`tsk_Ârötf
(
hFûe
, "\n");

1023 
	`tsk_Ârötf
(
hFûe
, "\nFAT CONTENTS (in sectors)\n");

1024 
	`tsk_Ârötf
(
hFûe
, "--------------------------------------------\n");

1027 
s°¨t
 = 
Átfs
->
fú°˛u°£˘
;

1030 
i
 = 2; i <
Átfs
->
œ°˛u°
; i++) {

1035 
£nd
 = 
	`FATFS_CLUST_2_SECT
(
Átfs
, 
i
 + 1) - 1;

1038 i‡(
	`Átfs_gëFAT
(
Átfs
, 
i
, &
√xt
))

1041 
¢ext
 = 
	`FATFS_CLUST_2_SECT
(
Átfs
, 
√xt
);

1044 i‡((
√xt
 & 
Átfs
->
mask
Ë=(
i
 + 1)) {

1051 i‡((
√xt
 & 
Átfs
->
mask
)) {

1052 i‡(
	`FATFS_ISEOF
(
√xt
, 
Átfs
->
mask
))

1053 
	`tsk_Ârötf
(
hFûe
,

1054 "%" 
PRIuDADDR
 "-%" PRIuDADDR " (%" PRIuDADDR

1055 "Ë-> EOF\n", 
s°¨t
, 
£nd
, send - sstart + 1);

1056 i‡(
	`FATFS_ISBAD
(
√xt
, 
Átfs
->
mask
))

1057 
	`tsk_Ârötf
(
hFûe
,

1058 "%" 
PRIuDADDR
 "-%" PRIuDADDR " (%" PRIuDADDR

1059 "Ë-> BAD\n", 
s°¨t
, 
£nd
, send - sstart + 1);

1061 
	`tsk_Ârötf
(
hFûe
,

1062 "%" 
PRIuDADDR
 "-%" PRIuDADDR " (%" PRIuDADDR

1063 "Ë-> %" 
PRIuDADDR
 "\n", 
s°¨t
, 
£nd
,

1064 
£nd
 - 
s°¨t
 + 1, 
¢ext
);

1068 
s°¨t
 = 
£nd
 + 1;

1072 
	}
}

1082 
FILE
 *
	mhFûe
;

1083 
	midx
;

1084 
	mi°©_£í
;

1085 } 
	tFATFS_PRINT_ADDR
;

1087 
TSK_WALK_RET_ENUM


1088 
	$¥öt_addr_a˘
(
TSK_FS_FILE
 * 
fs_fûe
, 
TSK_OFF_T
 
a_off
, 
TSK_DADDR_T
 
addr
,

1089 *
buf
, 
size_t
 
size
, 
TSK_FS_BLOCK_FLAG_ENUM
 
a_Êags
, *
a_±r
)

1091 
FATFS_PRINT_ADDR
 *
¥öt
 = (FATFS_PRINT_ADDR *Ë
a_±r
;

1093 
	`tsk_Ârötf
(
¥öt
->
hFûe
, "%" 
PRIuDADDR
 " ", 
addr
);

1095 i‡(++(
¥öt
->
idx
) == 8) {

1096 
	`tsk_Ârötf
(
¥öt
->
hFûe
, "\n");

1097 
¥öt
->
idx
 = 0;

1099 
¥öt
->
i°©_£í
 = 1;

1101  
TSK_WALK_CONT
;

1102 
	}
}

1117 
uöt8_t


1118 
	$Átfs_i°©
(
TSK_FS_INFO
 * 
fs
, 
FILE
 * 
hFûe
, 
TSK_INUM_T
 
öum
,

1119 
TSK_DADDR_T
 
numblock
, 
öt32_t
 
£c_skew
)

1121 
TSK_FS_META
 *
fs_mëa
;

1122 
TSK_FS_FILE
 *
fs_fûe
;

1123 
TSK_FS_META_NAME_LIST
 *
fs_«me_li°
;

1124 
FATFS_INFO
 *
Átfs
 = (FATFS_INFO *Ë
fs
;

1125 
FATFS_PRINT_ADDR
 
¥öt
;

1128 
	`tsk_îr‹_ª£t
();

1130 i‡((
fs_fûe
 = 
	`tsk_fs_fûe_›í_mëa
(
fs
, 
NULL
, 
öum
)) == NULL) {

1133 
fs_mëa
 = 
fs_fûe
->
mëa
;

1135 
	`tsk_Ârötf
(
hFûe
, "Dúe˘‹y E¡ry: %" 
PRIuINUM
 "\n", 
öum
);

1137 
	`tsk_Ârötf
(
hFûe
, "%sAllocated\n",

1138 (
fs_mëa
->
Êags
 & 
TSK_FS_META_FLAG_UNALLOC
) ? "Not " : "");

1140 
	`tsk_Ârötf
(
hFûe
, "File Attributes: ");

1143 i‡(
Átfs
->
dï
 =
NULL
) {

1144 i‡(
öum
 =
FATFS_ROOTINO
)

1145 
	`tsk_Ârötf
(
hFûe
, "Directory\n");

1146 i‡(
fs_fûe
->
mëa
->
ty≥
 =
TSK_FS_META_TYPE_VIRT
)

1147 
	`tsk_Ârötf
(
hFûe
, "Virtual\n");

1149 
	`tsk_Ârötf
(
hFûe
, "File\n");

1151 i‡((
Átfs
->
dï
->
©åib
 & 
FATFS_ATTR_LFN
) == FATFS_ATTR_LFN) {

1152 
	`tsk_Ârötf
(
hFûe
, "Long File Name\n");

1155 i‡(
Átfs
->
dï
->
©åib
 & 
FATFS_ATTR_DIRECTORY
)

1156 
	`tsk_Ârötf
(
hFûe
, "Directory");

1157 i‡(
Átfs
->
dï
->
©åib
 & 
FATFS_ATTR_VOLUME
)

1158 
	`tsk_Ârötf
(
hFûe
, "Volume Label");

1160 
	`tsk_Ârötf
(
hFûe
, "File");

1162 i‡(
Átfs
->
dï
->
©åib
 & 
FATFS_ATTR_READONLY
)

1163 
	`tsk_Ârötf
(
hFûe
, ", Read Only");

1164 i‡(
Átfs
->
dï
->
©åib
 & 
FATFS_ATTR_HIDDEN
)

1165 
	`tsk_Ârötf
(
hFûe
, ", Hidden");

1166 i‡(
Átfs
->
dï
->
©åib
 & 
FATFS_ATTR_SYSTEM
)

1167 
	`tsk_Ârötf
(
hFûe
, ", System");

1168 i‡(
Átfs
->
dï
->
©åib
 & 
FATFS_ATTR_ARCHIVE
)

1169 
	`tsk_Ârötf
(
hFûe
, ", Archive");

1171 
	`tsk_Ârötf
(
hFûe
, "\n");

1174 
	`tsk_Ârötf
(
hFûe
, "Size: %" 
PRIuOFF
 "\n", 
fs_mëa
->
size
);

1176 i‡(
fs_mëa
->
«me2
) {

1177 
fs_«me_li°
 = 
fs_mëa
->
«me2
;

1178 
	`tsk_Ârötf
(
hFûe
, "Name: %s\n", 
fs_«me_li°
->
«me
);

1181 i‡(
£c_skew
 != 0) {

1182 
	`tsk_Ârötf
(
hFûe
, "\nAdjusted Directory Entry Times:\n");

1183 
fs_mëa
->
mtime
 -
£c_skew
;

1184 
fs_mëa
->
©ime
 -
£c_skew
;

1185 
fs_mëa
->
¸time
 -
£c_skew
;

1187 
	`tsk_Ârötf
(
hFûe
, "Wrôãn:\t%s", 
	`˘ime
(&
fs_mëa
->
mtime
));

1188 
	`tsk_Ârötf
(
hFûe
, "Ac˚s£d:\t%s", 
	`˘ime
(&
fs_mëa
->
©ime
));

1189 
	`tsk_Ârötf
(
hFûe
, "Cª©ed:\t%s", 
	`˘ime
(&
fs_mëa
->
¸time
));

1191 
fs_mëa
->
mtime
 +
£c_skew
;

1192 
fs_mëa
->
©ime
 +
£c_skew
;

1193 
fs_mëa
->
¸time
 +
£c_skew
;

1195 
	`tsk_Ârötf
(
hFûe
, "\nOriginal Directory Entry Times:\n");

1198 
	`tsk_Ârötf
(
hFûe
, "\nDirectory Entry Times:\n");

1200 
	`tsk_Ârötf
(
hFûe
, "Wrôãn:\t%s", 
	`˘ime
(&
fs_mëa
->
mtime
));

1201 
	`tsk_Ârötf
(
hFûe
, "Ac˚s£d:\t%s", 
	`˘ime
(&
fs_mëa
->
©ime
));

1202 
	`tsk_Ârötf
(
hFûe
, "Cª©ed:\t%s", 
	`˘ime
(&
fs_mëa
->
¸time
));

1204 
	`tsk_Ârötf
(
hFûe
, "\nSectors:\n");

1207 i‡(
numblock
 > 0)

1208 
fs_mëa
->
size
 = 
numblock
 * 
fs
->
block_size
;

1210 
¥öt
.
i°©_£í
 = 0;

1211 
¥öt
.
idx
 = 0;

1212 
¥öt
.
hFûe
 = hFile;

1214 i‡(
	`tsk_fs_fûe_wÆk
(
fs_fûe
,

1215 (
TSK_FS_FILE_WALK_FLAG_AONLY
 | 
TSK_FS_FILE_WALK_FLAG_SLACK
),

1216 
¥öt_addr_a˘
, (*Ë&
¥öt
)) {

1217 
	`tsk_Ârötf
(
hFûe
, "\nErrorÑeading file\n");

1218 
	`tsk_îr‹_¥öt
(
hFûe
);

1219 
	`tsk_îr‹_ª£t
();

1221 i‡(
¥öt
.
idx
 != 0) {

1222 
	`tsk_Ârötf
(
hFûe
, "\n");

1225 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

1227 
	}
}

1231 
uöt8_t


1232 
	$Átfs_j›í
(
TSK_FS_INFO
 * 
fs
, 
TSK_INUM_T
 
öum
)

1234 
	`tsk_îr‹_ª£t
();

1235 
tsk_î∫o
 = 
TSK_ERR_FS_UNSUPFUNC
;

1236 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
, "FAT doesÇot haveá journal\n");

1238 
	}
}

1241 
uöt8_t


1242 
	$Átfs_jíåy_wÆk
(
TSK_FS_INFO
 * 
fs
, 
a_Êags
,

1243 
TSK_FS_JENTRY_WALK_CB
 
a_a˘i⁄
, *
a_±r
)

1245 
	`tsk_îr‹_ª£t
();

1246 
tsk_î∫o
 = 
TSK_ERR_FS_UNSUPFUNC
;

1247 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
, "FAT doesÇot haveá journal\n");

1249 
	}
}

1253 
uöt8_t


1254 
	$Átfs_jblk_wÆk
(
TSK_FS_INFO
 * 
fs
, 
TSK_DADDR_T
 
°¨t
, TSK_DADDR_T 
íd
,

1255 
a_Êags
, 
TSK_FS_JBLK_WALK_CB
 
a_a˘i⁄
, *
a_±r
)

1257 
	`tsk_îr‹_ª£t
();

1258 
tsk_î∫o
 = 
TSK_ERR_FS_UNSUPFUNC
;

1259 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
, "FAT doesÇot haveá journal\n");

1261 
	}
}

1263 
TSK_FS_ATTR_TYPE_ENUM


1264 
	$Átfs_gë_deÁu…_©å_ty≥
(c⁄° 
TSK_FS_FILE
 * 
a_fûe
)

1266  
TSK_FS_ATTR_TYPE_DEFAULT
;

1267 
	}
}

1271 
	$Átfs_˛o£
(
TSK_FS_INFO
 * 
fs
)

1273 
FATFS_INFO
 *
Átfs
 = (FATFS_INFO *Ë
fs
;

1274 
fs
->
èg
 = 0;

1276 
	`‰ì
(
Átfs
->
döodes
);

1278 i‡(
Átfs
->
dú_buf
)

1279 
	`‰ì
(
Átfs
->
dú_buf
);

1280 i‡(
Átfs
->
∑r_buf
)

1281 
	`‰ì
(
Átfs
->
∑r_buf
);

1283 
	`tsk_li°_‰ì
(
fs
->
li°_öum_«med
);

1284 
fs
->
li°_öum_«med
 = 
NULL
;

1285 
	`‰ì
(
Átfs
->
sb
);

1286 
	`‰ì
(
fs
);

1287 
	}
}

1300 
TSK_FS_INFO
 *

1301 
	$Átfs_›í
(
TSK_IMG_INFO
 * 
img_öfo
, 
TSK_OFF_T
 
off£t
,

1302 
TSK_FS_TYPE_ENUM
 
·y≥
, 
uöt8_t
 
ã°
)

1304 *
my«me
 = "fatfs_open";

1305 
FATFS_INFO
 *
Átfs
;

1306 
Àn
;

1307 
TSK_FS_INFO
 *
fs
;

1308 
Átfs_sb
 *
Átsb
;

1309 
TSK_DADDR_T
 
£˘‹s
;

1310 
ssize_t
 
˙t
;

1311 
i
;

1314 
	`tsk_îr‹_ª£t
();

1316 i‡(
	`TSK_FS_TYPE_ISFAT
(
·y≥
) == 0) {

1317 
	`tsk_îr‹_ª£t
();

1318 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

1319 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
, "%s: InvÆid FS Ty≥", 
my«me
);

1320  
NULL
;

1323 i‡((
Átfs
 = (
FATFS_INFO
 *Ë
	`tsk_mÆloc
((*Átfs))Ë=
NULL
)

1324  
NULL
;

1326 
fs
 = &(
Átfs
->
fs_öfo
);

1327 
fs
->
·y≥
 = ftype;

1329 
fs
->
img_öfo
 = img_info;

1330 
fs
->
off£t
 = offset;

1331 
fs
->
èg
 = 
TSK_FS_INFO_TAG
;

1336 
Àn
 = (
Átfs_sb
);

1337 
Átsb
 = 
Átfs
->
sb
 = (
Átfs_sb
 *Ë
	`tsk_mÆloc
(
Àn
);

1338 i‡(
Átsb
 =
NULL
) {

1339 
fs
->
èg
 = 0;

1340 
	`‰ì
(
Átfs
);

1341  
NULL
;

1347 
i
 = 0; i < 2; i++) {

1348 
TSK_OFF_T
 
sb_off
;

1350 i‡(
i
 == 0)

1351 
sb_off
 = 0;

1353 
sb_off
 = 6 * 
img_öfo
->
£˘‹_size
;

1355 
˙t
 = 
	`tsk_fs_ªad
(
fs
, 
sb_off
, (*Ë
Átsb
, 
Àn
);

1356 i‡(
˙t
 !
Àn
) {

1357 i‡(
˙t
 >= 0) {

1358 
	`tsk_îr‹_ª£t
();

1359 
tsk_î∫o
 = 
TSK_ERR_FS_READ
;

1361 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
, "%s: boŸ se˘‹", 
my«me
);

1362 
fs
->
èg
 = 0;

1363 
	`‰ì
(
Átfs
->
sb
);

1364 
	`‰ì
(
Átfs
);

1365  
NULL
;

1369 i‡(
	`tsk_fs_guessu16
(
fs
, 
Átsb
->
magic
, 
FATFS_FS_MAGIC
)) {

1372 i‡((
i
 == 0)

1373 && (
	`tsk_gëu16
(
TSK_LIT_ENDIAN
, 
Átsb
->
magic
) == 0)) {

1377 
fs
->
èg
 = 0;

1378 
	`‰ì
(
Átsb
);

1379 
	`‰ì
(
Átfs
);

1380 
	`tsk_îr‹_ª£t
();

1381 
tsk_î∫o
 = 
TSK_ERR_FS_MAGIC
;

1382 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

1384  
NULL
;

1392 
fs
->
dev_bsize
 = 
img_öfo
->
£˘‹_size
;

1396 
Átfs
->
ssize
 = 
	`tsk_gëu16
(
fs
->
ídün
, 
Átsb
->ssize);

1397 i‡(
Átfs
->
ssize
 == 512) {

1398 
Átfs
->
ssize_sh
 = 9;

1400 i‡(
Átfs
->
ssize
 == 1024) {

1401 
Átfs
->
ssize_sh
 = 10;

1403 i‡(
Átfs
->
ssize
 == 2048) {

1404 
Átfs
->
ssize_sh
 = 11;

1406 i‡(
Átfs
->
ssize
 == 4096) {

1407 
Átfs
->
ssize_sh
 = 12;

1410 
	`tsk_îr‹_ª£t
();

1411 
tsk_î∫o
 = 
TSK_ERR_FS_MAGIC
;

1412 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

1414 
Átfs
->
ssize
, 
fs
->
dev_bsize
);

1415 
fs
->
èg
 = 0;

1416 
	`‰ì
(
Átsb
);

1417 
	`‰ì
(
Átfs
);

1418  
NULL
;

1422 
Átfs
->
csize
 = 
Átsb
->csize;

1423 i‡((
Átfs
->
csize
 != 0x01) &&

1424 (
Átfs
->
csize
 != 0x02) &&

1425 (
Átfs
->
csize
 != 0x04) &&

1426 (
Átfs
->
csize
 != 0x08) &&

1427 (
Átfs
->
csize
 != 0x10) &&

1428 (
Átfs
->
csize
 != 0x20) &&

1429 (
Átfs
->
csize
 != 0x40) && (fatfs->csize != 0x80)) {

1430 
fs
->
èg
 = 0;

1431 
	`‰ì
(
Átsb
);

1432 
	`‰ì
(
Átfs
);

1433 
	`tsk_îr‹_ª£t
();

1434 
tsk_î∫o
 = 
TSK_ERR_FS_MAGIC
;

1435 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

1437  
NULL
;

1441 
Átfs
->
numÁt
 = 
Átsb
->numfat;

1442 i‡((
Átfs
->
numÁt
 == 0) || (fatfs->numfat > 8)) {

1443 
fs
->
èg
 = 0;

1444 
	`‰ì
(
Átsb
);

1445 
	`‰ì
(
Átfs
);

1446 
	`tsk_îr‹_ª£t
();

1447 
tsk_î∫o
 = 
TSK_ERR_FS_MAGIC
;

1448 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

1450  
NULL
;

1455 
Átfs
->
numroŸ
 = 
	`tsk_gëu16
(
fs
->
ídün
, 
Átsb
->numroot);

1459 i‡(0 =(
£˘‹s
 = 
	`tsk_gëu16
(
fs
->
ídün
, 
Átsb
->
£˘‹s16
)))

1460 
£˘‹s
 = 
	`tsk_gëu32
(
fs
->
ídün
, 
Átsb
->
£˘‹s32
);

1463 i‡(0 =(
Átfs
->
£˘≥rÁt
 =

1464 
	`tsk_gëu16
(
fs
->
ídün
, 
Átsb
->
£˘≥rÁt16
)))

1465 
Átfs
->
£˘≥rÁt
 =

1466 
	`tsk_gëu32
(
fs
->
ídün
, 
Átsb
->
a
.
f32
.
£˘≥rÁt32
);

1468 i‡(
Átfs
->
£˘≥rÁt
 == 0) {

1469 
fs
->
èg
 = 0;

1470 
	`‰ì
(
Átsb
);

1471 
	`‰ì
(
Átfs
);

1472 
	`tsk_îr‹_ª£t
();

1473 
tsk_î∫o
 = 
TSK_ERR_FS_MAGIC
;

1474 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

1476  
NULL
;

1479 
Átfs
->
fú°Át£˘
 = 
	`tsk_gëu16
(
fs
->
ídün
, 
Átsb
->
ª£rved
);

1480 i‡((
Átfs
->
fú°Át£˘
 =0Ë|| (Átfs->fú°Át£˘ > 
£˘‹s
)) {

1481 
	`tsk_îr‹_ª£t
();

1482 
tsk_î∫o
 = 
TSK_ERR_FS_WALK_RNG
;

1483 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

1485 
PRIuDADDR
 ")", 
Átfs
->
fú°Át£˘
);

1487 
fs
->
èg
 = 0;

1488 
	`‰ì
(
Átsb
);

1489 
	`‰ì
(
Átfs
);

1490  
NULL
;

1503 
Átfs
->
fú°d©a£˘
 = f©fs->
fú°Át£˘
 +

1504 
Átfs
->
£˘≥rÁt
 * f©fs->
numÁt
;

1513 
Átfs
->
fú°˛u°£˘
 = f©fs->
fú°d©a£˘
 +

1514 ((
Átfs
->
numroŸ
 * 32 + f©fs->
ssize
 - 1) / fatfs->ssize);

1517 
Átfs
->
˛u°˙t
 = (
£˘‹s
 - f©fs->
fú°˛u°£˘
Ë/ f©fs->
csize
;

1520 
Átfs
->
œ°˛u°
 = 1 + f©fs->
˛u°˙t
;

1528 i‡(
·y≥
 =
TSK_FS_TYPE_FAT_DETECT
) {

1530 i‡(
Átfs
->
˛u°˙t
 < 4085) {

1531 
·y≥
 = 
TSK_FS_TYPE_FAT12
;

1533 i‡(
Átfs
->
˛u°˙t
 < 65525) {

1534 
·y≥
 = 
TSK_FS_TYPE_FAT16
;

1537 
·y≥
 = 
TSK_FS_TYPE_FAT32
;

1540 
Átfs
->
fs_öfo
.
·y≥
 = ftype;

1545 i‡((
·y≥
 =
TSK_FS_TYPE_FAT12
)

1546 && (
Átfs
->
˛u°˙t
 >= 4085)) {

1547 
fs
->
èg
 = 0;

1548 
	`‰ì
(
Átsb
);

1549 
	`‰ì
(
Átfs
);

1550 
	`tsk_îr‹_ª£t
();

1551 
tsk_î∫o
 = 
TSK_ERR_FS_MAGIC
;

1552 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

1554  
NULL
;

1558 i‡((
·y≥
 =
TSK_FS_TYPE_FAT32
Ë&& (
Átfs
->
numroŸ
 != 0)) {

1559 
fs
->
èg
 = 0;

1560 
	`‰ì
(
Átsb
);

1561 
	`‰ì
(
Átfs
);

1562 
	`tsk_îr‹_ª£t
();

1563 
tsk_î∫o
 = 
TSK_ERR_FS_MAGIC
;

1564 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

1566  
NULL
;

1569 i‡((
·y≥
 !
TSK_FS_TYPE_FAT32
Ë&& (
Átfs
->
numroŸ
 == 0)) {

1570 
fs
->
èg
 = 0;

1571 
	`‰ì
(
Átsb
);

1572 
	`‰ì
(
Átfs
);

1573 
	`tsk_îr‹_ª£t
();

1574 
tsk_î∫o
 = 
TSK_ERR_FS_MAGIC
;

1575 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

1577  
NULL
;

1582 i‡(
·y≥
 =
TSK_FS_TYPE_FAT12
) {

1583 
Átfs
->
mask
 = 
FATFS_12_MASK
;

1585 i‡(
·y≥
 =
TSK_FS_TYPE_FAT16
) {

1586 
Átfs
->
mask
 = 
FATFS_16_MASK
;

1588 i‡(
·y≥
 =
TSK_FS_TYPE_FAT32
) {

1589 
Átfs
->
mask
 = 
FATFS_32_MASK
;

1592 
fs
->
èg
 = 0;

1593 
	`‰ì
(
Átsb
);

1594 
	`‰ì
(
Átfs
);

1595 
	`tsk_îr‹_ª£t
();

1596 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

1597 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

1598 "Unknow¿FATÅy≥ i¿Átfs_›í: %d\n", 
·y≥
);

1599  
NULL
;

1601 
fs
->
du«me
 = "Sector";

1606 i‡(
·y≥
 =
TSK_FS_TYPE_FAT32
)

1607 
Átfs
->
roŸ£˘
 = 
	`FATFS_CLUST_2_SECT
(fatfs,

1608 
	`tsk_gëu32
(
fs
->
ídün
, 
Átsb
->
a
.
f32
.
roŸ˛u°
));

1610 
Átfs
->
roŸ£˘
 = f©fs->
fú°d©a£˘
;

1612 
i
 = 0; i < 
FAT_CACHE_N
; i++) {

1613 
Átfs
->
Átc_addr
[
i
] = 0;

1614 
Átfs
->
Átc_âl
[
i
] = 0;

1618 i‡((
Átfs
->
döodes
 = (*)

1619 
	`tsk_mÆloc
(
Átfs
->
csize
 << f©fs->
ssize_sh
)Ë=
NULL
) {

1620 
fs
->
èg
 = 0;

1621 
	`‰ì
(
Átsb
);

1622 
	`‰ì
(
Átfs
);

1623  
NULL
;

1631 
fs
->
fú°_block
 = 0;

1632 
fs
->
block_cou¡
 = 
£˘‹s
;

1633 
fs
->
œ°_block
 = fs->
œ°_block_a˘
 = fs->
block_cou¡
 - 1;

1634 
fs
->
block_size
 = 
Átfs
->
ssize
;

1637 i‡((
TSK_DADDR_T
Ë((
img_öfo
->
size
 - 
off£t
Ë/ 
fs
->
block_size
) <

1638 
fs
->
block_cou¡
)

1639 
fs
->
œ°_block_a˘
 =

1640 (
img_öfo
->
size
 - 
off£t
Ë/ 
fs
->
block_size
 - 1;

1647 
Átfs
->
díåy_˙t_£
 = f©fs->
ssize
 / (
Átfs_díåy
);

1648 
Átfs
->
díåy_˙t_˛
 = f©fs->
díåy_˙t_£
 * f©fs->
csize
;

1650 
fs
->
roŸ_öum
 = 
FATFS_ROOTINO
;

1651 
fs
->
fú°_öum
 = 
FATFS_FIRSTINO
;

1653 
fs
->
œ°_öum
 =

1654 (
	`FATFS_SECT_2_INODE
(
Átfs
,

1655 
fs
->
œ°_block_a˘
 + 1Ë- 1Ë+ 
FATFS_NUM_SPECFILE
;

1656 
fs
->
öum_cou¡
 = fs->
œ°_öum
 - fs->
fú°_öum
 + 1;

1660 
fs
->
fs_id_u£d
 = 0; fs->fs_id_used < 4; fs->fs_id_used++) {

1661 i‡(
·y≥
 =
TSK_FS_TYPE_FAT32
)

1662 
fs
->
fs_id
[fs->
fs_id_u£d
] =

1663 
Átsb
->
a
.
f32
.
vﬁ_id
[
fs
->
fs_id_u£d
];

1665 
fs
->
fs_id
[fs->
fs_id_u£d
] =

1666 
Átsb
->
a
.
f16
.
vﬁ_id
[
fs
->
fs_id_u£d
];

1673 
fs
->
block_wÆk
 = 
Átfs_block_wÆk
;

1674 
fs
->
block_gëÊags
 = 
Átfs_block_gëÊags
;

1676 
fs
->
öode_wÆk
 = 
Átfs_öode_wÆk
;

1677 
fs
->
i°©
 = 
Átfs_i°©
;

1678 
fs
->
fûe_add_mëa
 = 
Átfs_öode_lookup
;

1680 
fs
->
gë_deÁu…_©å_ty≥
 = 
Átfs_gë_deÁu…_©å_ty≥
;

1681 
fs
->
lﬂd_©ås
 = 
Átfs_make_d©a_run
;

1683 
fs
->
dú_›í_mëa
 = 
Átfs_dú_›í_mëa
;

1684 
fs
->
«me_cmp
 = 
Átfs_«me_cmp
;

1686 
fs
->
fs°©
 = 
Átfs_fs°©
;

1687 
fs
->
fscheck
 = 
Átfs_fscheck
;

1689 
fs
->
˛o£
 = 
Átfs_˛o£
;

1691 
fs
->
jblk_wÆk
 = 
Átfs_jblk_wÆk
;

1692 
fs
->
jíåy_wÆk
 = 
Átfs_jíåy_wÆk
;

1693 
fs
->
j›í
 = 
Átfs_j›í
;

1694 
fs
->
jou∫_öum
 = 0;

1697 
fs
->
li°_öum_«med
 = 
NULL
;

1699  (
fs
);

1700 
	}
}

	@tsk3/fs/fatfs_dent.c

26 
	~"tsk_fs_i.h
"

27 
	~"tsk_Átfs.h
"

51 
uöt8_t
 
	m«me
[
FATFS_MAXNAMLEN_UTF8
];

52 
uöt16_t
 
	m°¨t
;

53 
uöt8_t
 
	mchk
;

54 
uöt8_t
 
	m£q
;

55 } 
	tFATFS_LFN
;

65 
TSK_WALK_RET_ENUM


66 
	$föd_∑ª¡_a˘
(
TSK_FS_FILE
 * 
fs_fûe
, c⁄° *
a_∑th
, *
±r
)

68 
TSK_INUM_T
 
∑r_öum
 = *(TSK_INUM_T *Ë
±r
;

70 i‡((
fs_fûe
->
mëa
 =
NULL
Ë|| (fs_fûe->mëa->
ty≥
 !
TSK_FS_META_TYPE_DIR
))

71  
TSK_WALK_CONT
;

73 i‡(
fs_fûe
->
mëa
->
addr
 =
∑r_öum
)

74  
TSK_WALK_STOP
;

76  
TSK_WALK_CONT
;

77 
	}
}

80 
uöt8_t


81 
	$Átfs_dú_buf_add
(
FATFS_INFO
 * 
Átfs
, 
TSK_INUM_T
 
∑r_öum
,

82 
TSK_INUM_T
 
dú_öum
)

84 
size_t
 
q
;

86 
q
 = 0; q < 
Átfs
->
dú_buf_√xt
; q++) {

87 i‡(
Átfs
->
dú_buf
[
q
] =
dú_öum
) {

94 i‡(
Átfs
->
dú_buf_√xt
 =Átfs->
dú_buf_size
) {

95 
Átfs
->
dú_buf_size
 += 256;

96 i‡((
Átfs
->
dú_buf
 =

97 (
TSK_INUM_T
 *Ë
	`tsk_ªÆloc
(
Átfs
->
dú_buf
,

98 
Átfs
->
dú_buf_size
 * (
TSK_INUM_T
))Ë=
NULL
) {

101 i‡((
Átfs
->
∑r_buf
 =

102 (
TSK_INUM_T
 *Ë
	`tsk_ªÆloc
(
Átfs
->
∑r_buf
,

103 
Átfs
->
dú_buf_size
 * (
TSK_INUM_T
))Ë=
NULL
) {

109 
Átfs
->
dú_buf
[Átfs->
dú_buf_√xt
] = 
dú_öum
;

110 
Átfs
->
∑r_buf
[Átfs->
dú_buf_√xt
] = 
∑r_öum
;

111 
Átfs
->
dú_buf_√xt
++;

113 
	}
}

129 
TSK_RETVAL_ENUM


130 
	$Átfs_dít_∑r£_buf
(
FATFS_INFO
 * 
Átfs
, 
TSK_FS_DIR
 * 
a_fs_dú
, *
buf
,

131 
TSK_OFF_T
 
Àn
, 
TSK_DADDR_T
 * 
addrs
)

133 
idx
, 
sidx
;

134 
a
, 
b
;

135 
TSK_INUM_T
 
öode
, 
iba£
;

136 
Átfs_díåy
 *
dï
;

137 
TSK_FS_INFO
 *
fs
 = (TSK_FS_INFO *Ë& 
Átfs
->
fs_öfo
;

138 
£˘Æloc
;

139 
TSK_FS_NAME
 *
fs_«me
;

140 
FATFS_LFN
 
l‚öfo
;

142 i‡(
buf
 =
NULL
) {

143 
	`tsk_îr‹_ª£t
();

144 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

145 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

147  
TSK_ERR
;

150 
dï
 = (
Átfs_díåy
 *Ë
buf
;

152 i‡((
fs_«me
 = 
	`tsk_fs_«me_Æloc
(
FATFS_MAXNAMLEN_UTF8
, 32)Ë=
NULL
) {

153  
TSK_ERR
;

156 
	`mem£t
(&
l‚öfo
, 0, (
FATFS_LFN
));

157 
l‚öfo
.
°¨t
 = 
FATFS_MAXNAMLEN_UTF8
 - 1;

159 
sidx
 = 0; sidx < (Ë(
Àn
 / 
Átfs
->
ssize
); sidx++) {

162 
iba£
 = 
	`FATFS_SECT_2_INODE
(
Átfs
, 
addrs
[
sidx
]);

164 i‡(
iba£
 > 
fs
->
œ°_öum
) {

165 
	`tsk_îr‹_ª£t
();

166 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

167 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

169 
	`tsk_fs_«me_‰ì
(
fs_«me
);

170  
TSK_COR
;

173 i‡(
tsk_vîbo£
)

174 
	`tsk_Ârötf
(
°dîr
,

175 "Átfs_dít_∑r£_buf: P¨sög se˘‹ %" 
PRIuDADDR


176 "\n", 
addrs
[
sidx
]);

178 i‡((
£˘Æloc
 = 
	`Átfs_is_£˘Æloc
(
Átfs
, 
addrs
[
sidx
])) == -1) {

179 i‡(
tsk_vîbo£
) {

180 
	`tsk_Ârötf
(
°dîr
,

182 
PRIuDADDR
 "\n", 
addrs
[
sidx
]);

183 
	`tsk_îr‹_¥öt
(
°dîr
);

185 
	`tsk_îr‹_ª£t
();

190 
idx
 = 0; idx < 
Átfs
->
díåy_˙t_£
; idx++, 
dï
++) {

191 
Átfs_díåy
 *
dú
;

192 
i
;

195 i‡(0 =
	`Átfs_isdíåy
(
Átfs
, 
dï
)) {

196 i‡(
tsk_vîbo£
)

197 
	`tsk_Ârötf
(
°dîr
,

199 
idx
);

204 
dú
 = (
Átfs_díåy
 *Ë
dï
;

206 
öode
 = 
iba£
 + 
idx
;

211 i‡((
dú
->
©åib
 & 
FATFS_ATTR_LFN
) == FATFS_ATTR_LFN) {

212 
Átfs_díåy_l‚
 *
dúl
 = (Átfs_díåy_l‚ *Ë
dú
;

217 i‡(((
dúl
->
£q
 & 
FATFS_LFN_SEQ_FIRST
)

218 && (
dúl
->
£q
 !
FATFS_SLOT_DELETED
))

219 || (
dúl
->
chksum
 !
l‚öfo
.
chk
)) {

224 
l‚öfo
.
£q
 = 
dúl
->£q & 
FATFS_LFN_SEQ_MASK
;

225 
l‚öfo
.
chk
 = 
dúl
->
chksum
;

226 
l‚öfo
.
°¨t
 = 
FATFS_MAXNAMLEN_UTF8
 - 1;

229 i‡(
dúl
->
£q
 !
l‚öfo
.seq - 1) {

235 
a
 = 3;á >= 0;á--) {

236 i‡((
l‚öfo
.
°¨t
 > 0))

237 
l‚öfo
.
«me
[l‚öfo.
°¨t
--] = 
dúl
->
∑π3
[
a
];

239 
a
 = 11;á >= 0;á--) {

240 i‡((
l‚öfo
.
°¨t
 > 0))

241 
l‚öfo
.
«me
[l‚öfo.
°¨t
--] = 
dúl
->
∑π2
[
a
];

243 
a
 = 9;á >= 0;á--) {

244 i‡((
l‚öfo
.
°¨t
 > 0))

245 
l‚öfo
.
«me
[l‚öfo.
°¨t
--] = 
dúl
->
∑π1
[
a
];

253 i‡((
dú
->
©åib
 & 
FATFS_ATTR_VOLUME
) ==

254 
FATFS_ATTR_VOLUME
) {

255 
a
 = 0;

257 
b
 = 0; b < 8; b++) {

258 i‡((
dú
->
«me
[
b
] >= 0x20) && (dir->name[b] != 0xff)) {

259 
fs_«me
->
«me
[
a
++] = 
dú
->«me[
b
];

262 
fs_«me
->
«me
[
a
++] = '^';

265 
b
 = 0; b < 3; b++) {

266 i‡((
dú
->
ext
[
b
] >= 0x20) && (dir->ext[b] != 0xff)) {

267 
fs_«me
->
«me
[
a
++] = 
dú
->
ext
[
b
];

270 
fs_«me
->
«me
[
a
++] = '^';

274 
fs_«me
->
«me
[
a
] = '\0';

276 i‡(
a
 + 22 < 
FATFS_MAXNAMLEN_UTF8
) {

277 *
vﬁ°r
 = " (Volume Label Entry)";

278 
	`°∫ˇt
(
fs_«me
->
«me
, 
vﬁ°r
,

279 
FATFS_MAXNAMLEN_UTF8
 - 
a
);

285 *
«me_±r
;

289 i‡(
l‚öfo
.
°¨t
 !
FATFS_MAXNAMLEN_UTF8
 - 1) {

290 
ªtVÆ
;

295 
UTF16
 *
«me16
 =

296 (
UTF16
 *Ë((
uöçå_t
Ë& 
l‚öfo
.
«me
[lfninfo.

297 
°¨t
 + 1]);

298 
UTF8
 *
«me8
 = (UTF8 *Ë
fs_«me
->
«me
;

300 
ªtVÆ
 =

301 
	`tsk_UTF16toUTF8
(
fs
->
ídün
,

302 (c⁄° 
UTF16
 **Ë&
«me16
,

303 (
UTF16
 *Ë& 
l‚öfo
.
«me
[
FATFS_MAXNAMLEN_UTF8
],

304 &
«me8
,

305 (
UTF8
 *Ë((
uöçå_t
Ë
«me8
 +

306 
FATFS_MAXNAMLEN_UTF8
), 
TSKÀnõ¡C⁄vîsi⁄
);

308 i‡(
ªtVÆ
 !
TSKc⁄vîsi⁄OK
) {

309 
	`tsk_îr‹_ª£t
();

310 
tsk_î∫o
 = 
TSK_ERR_FS_UNICODE
;

311 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

313 
ªtVÆ
);

318 i‡((
uöçå_t
Ë
«me8
 >

319 (
uöçå_t
Ë
fs_«me
->
«me
 + 
FATFS_MAXNAMLEN_UTF8
)

320 
fs_«me
->
«me
[
FATFS_MAXNAMLEN_UTF8
 - 1] = '\0';

322 *
«me8
 = '\0';

325 
i
 = 0;

326 
fs_«me
->
«me
[
i
] != '\0') {

327 i‡(
	`TSK_IS_CNTRL
(
fs_«me
->
«me
[
i
]))

328 
fs_«me
->
«me
[
i
] = '^';

329 
i
++;

332 
l‚öfo
.
°¨t
 = 
FATFS_MAXNAMLEN_UTF8
 - 1;

333 
«me_±r
 = 
fs_«me
->
shπ_«me
;

338 
fs_«me
->
shπ_«me
[0] = '\0';

339 
«me_±r
 = 
fs_«me
->
«me
;

345 
a
 = 0;

346 
b
 = 0; b < 8; b++) {

347 i‡((
dú
->
«me
[
b
] != 0) && (dir->name[b] != 0xff) &&

348 (
dú
->
«me
[
b
] != 0x20)) {

350 i‡((
b
 == 0)

351 && (
dú
->
«me
[0] =
FATFS_SLOT_DELETED
)) {

352 
«me_±r
[
a
++] = '_';

354 i‡((
dú
->
lowîˇ£
 & 
FATFS_CASE_LOWER_BASE
)

355 && (
dú
->
«me
[
b
] >= 'A')

356 && (
dú
->
«me
[
b
] <= 'Z')) {

357 
«me_±r
[
a
++] = 
dú
->
«me
[
b
] + 32;

360 
«me_±r
[
a
++] = 
dú
->
«me
[
b
];

365 
b
 = 0; b < 3; b++) {

366 i‡((
dú
->
ext
[
b
] != 0) && (dir->ext[b] != 0xff) &&

367 (
dú
->
ext
[
b
] != 0x20)) {

368 i‡(
b
 == 0)

369 
«me_±r
[
a
++] = '.';

370 i‡((
dú
->
lowîˇ£
 & 
FATFS_CASE_LOWER_EXT
) &&

371 (
dú
->
ext
[
b
] >= 'A') && (dir->ext[b] <= 'Z'))

372 
«me_±r
[
a
++] = 
dú
->
ext
[
b
] + 32;

374 
«me_±r
[
a
++] = 
dú
->
ext
[
b
];

377 
«me_±r
[
a
] = '\0';

381 
i
 = 0;

382 
fs_«me
->
«me
[
i
] != '\0') {

383 i‡(
	`TSK_IS_CNTRL
(
fs_«me
->
«me
[
i
]))

384 
fs_«me
->
«me
[
i
] = '^';

385 
i
++;

389 i‡((
dú
->
©åib
 & 
FATFS_ATTR_DIRECTORY
) ==

390 
FATFS_ATTR_DIRECTORY
)

391 
fs_«me
->
ty≥
 = 
TSK_FS_NAME_TYPE_DIR
;

393 
fs_«me
->
ty≥
 = 
TSK_FS_NAME_TYPE_REG
;

396 
fs_«me
->
mëa_addr
 = 
öode
;

403 i‡(
	`TSK_FS_ISDOT
(
fs_«me
->
«me
)) {

404 i‡(
fs_«me
->
«me
[1] == '\0') {

405 
öode
 = 
fs_«me
->
mëa_addr
 =

406 
a_fs_dú
->
fs_fûe
->
mëa
->
addr
;

410 i‡(
fs_«me
->
«me
[1] == '.') {

411 
size_t
 
q
;

412 
uöt8_t
 
dú_found
 = 0;

413 
q
 = 0; q < 
Átfs
->
dú_buf_√xt
; q++) {

414 i‡(
Átfs
->
dú_buf
[
q
] ==

415 
a_fs_dú
->
fs_fûe
->
mëa
->
addr
) {

416 
öode
 = 
fs_«me
->
mëa_addr
 = 
Átfs
->
∑r_buf
[
q
];

417 
dú_found
 = 1;

422 i‡((
dú_found
 =0Ë&& (
fs
->
isOΩh™Hu¡ög
)) {

426 
öode
 = 
fs_«me
->
mëa_addr
 = 0;

427 
dú_found
 = 1;

429 i‡((
dú_found
 == 0)

430 && (
addrs
[0] =
Átfs
->
fú°d©a£˘
)) {

433 
öode
 = 
fs_«me
->
mëa_addr
 = 0;

434 
dú_found
 = 1;

436 i‡(
dú_found
 == 0) {

440 i‡(
	`tsk_fs_dú_wÆk
(
fs
, fs->
roŸ_öum
,

441 
TSK_FS_DIR_WALK_FLAG_ALLOC
 | 
TSK_FS_DIR_WALK_FLAG_UNALLOC
 |

442 
TSK_FS_DIR_WALK_FLAG_RECURSE
,

443 
föd_∑ª¡_a˘
,

444 (*Ë&
a_fs_dú
->
fs_fûe
->
mëa
->
addr
)) {

448 
q
 = 0; q < 
Átfs
->
dú_buf_√xt
; q++) {

449 i‡(
Átfs
->
dú_buf
[
q
] ==

450 
a_fs_dú
->
fs_fûe
->
mëa
->
addr
) {

451 
öode
 = 
fs_«me
->
mëa_addr
 =

452 
Átfs
->
∑r_buf
[
q
];

453 
dú_found
 = 1;

459 i‡(
dú_found
 == 0)

460 
öode
 = 
fs_«me
->
mëa_addr
 =

461 
	`TSK_FS_ORPHANDIR_INUM
(
fs
);

469 i‡(
fs_«me
->
ty≥
 =
TSK_FS_NAME_TYPE_DIR
) {

470 i‡(
	`Átfs_dú_buf_add
(
Átfs
,

471 
a_fs_dú
->
fs_fûe
->
mëa
->
addr
, 
öode
))

472  
TSK_ERR
;

481 i‡(
£˘Æloc
 == 1) {

482 
fs_«me
->
Êags
 = (
dï
->
«me
[0] =
FATFS_SLOT_DELETED
) ?

483 
TSK_FS_NAME_FLAG_UNALLOC
 : 
TSK_FS_NAME_FLAG_ALLOC
;

486 
fs_«me
->
Êags
 = 
TSK_FS_NAME_FLAG_UNALLOC
;

489 
	`tsk_fs_dú_add
(
a_fs_dú
, 
fs_«me
);

492 
	`tsk_fs_«me_‰ì
(
fs_«me
);

494  
TSK_OK
;

495 
	}
}

510 *
	mcurdú±r
;

513 
size_t
 
	mdúÀ·
;

516 
TSK_DADDR_T
 *
	maddrbuf
;

519 
size_t
 
	maddrsize
;

522 
size_t
 
	maddridx
;

524 } 
	tFATFS_LOAD_DIR
;

532 
TSK_WALK_RET_ENUM


533 
	$Átfs_dít_a˘i⁄
(
TSK_FS_FILE
 * 
fs_fûe
, 
TSK_OFF_T
 
a_off
, 
TSK_DADDR_T
 
addr
,

534 *
buf
, 
size_t
 
size
, 
TSK_FS_BLOCK_FLAG_ENUM
 
Êags
, *
±r
)

536 
FATFS_LOAD_DIR
 *
lﬂd
 = (FATFS_LOAD_DIR *Ë
±r
;

539 
size_t
 
Àn
 = (
lﬂd
->
dúÀ·
 < 
size
) ?Üoad->dirleft : size;

542 
	`mem˝y
(
lﬂd
->
curdú±r
, 
buf
, 
Àn
);

543 
lﬂd
->
curdú±r
 = (*Ë((
uöçå_t
Ëlﬂd->curdú±∏+ 
Àn
);

544 
lﬂd
->
dúÀ·
 -
Àn
;

549 i‡(
lﬂd
->
addridx
 =lﬂd->
addrsize
) {

550 
	`tsk_îr‹_ª£t
();

551 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

552 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

554 (Ë
lﬂd
->
addridx
);

555  
TSK_WALK_ERROR
;

559 
lﬂd
->
addrbuf
[lﬂd->
addridx
++] = 
addr
;

561 i‡(
lﬂd
->
dúÀ·
)

562  
TSK_WALK_CONT
;

564  
TSK_WALK_STOP
;

565 
	}
}

582 
TSK_RETVAL_ENUM


583 
	$Átfs_dú_›í_mëa
(
TSK_FS_INFO
 * 
a_fs
, 
TSK_FS_DIR
 ** 
a_fs_dú
,

584 
TSK_INUM_T
 
a_addr
)

586 
TSK_OFF_T
 
size
, 
Àn
;

587 
FATFS_INFO
 *
Átfs
 = (FATFS_INFO *Ë
a_fs
;

588 *
dúbuf
;

589 
TSK_DADDR_T
 *
addrbuf
;

590 
FATFS_LOAD_DIR
 
lﬂd
;

591 
ªtvÆ
;

593 
TSK_FS_DIR
 *
fs_dú
;

595 i‡((
a_addr
 < 
a_fs
->
fú°_öum
Ë|| (a_add∏>á_fs->
œ°_öum
)) {

596 
	`tsk_îr‹_ª£t
();

597 
tsk_î∫o
 = 
TSK_ERR_FS_WALK_RNG
;

598 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

599 "Átfs_dú_›í_mëa: invÆidá_add∏vÆue: %" 
PRIuINUM
 "\n",

600 
a_addr
);

601  
TSK_ERR
;

603 i‡(
a_fs_dú
 =
NULL
) {

604 
	`tsk_îr‹_ª£t
();

605 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

606 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

608  
TSK_ERR
;

611 
fs_dú
 = *
a_fs_dú
;

612 i‡(
fs_dú
) {

613 
	`tsk_fs_dú_ª£t
(
fs_dú
);

616 i‡((*
a_fs_dú
 = 
fs_dú
 = 
	`tsk_fs_dú_Æloc
(
a_fs
, 128)Ë=
NULL
) {

617  
TSK_ERR
;

622 i‡(
a_addr
 =
	`TSK_FS_ORPHANDIR_INUM
(
a_fs
)) {

623 
size_t
 
i
;

624 
TSK_RETVAL_ENUM
 
ªtvÆ2
 = 
	`tsk_fs_dú_föd_‹ph™s
(
a_fs
, 
fs_dú
);

626 i‡(
ªtvÆ2
 =
TSK_ERR
)

627  
ªtvÆ2
;

630 
i
 = 0; i < 
fs_dú
->
«mes_u£d
; i++) {

631 i‡(
fs_dú
->
«mes
[
i
].
ty≥
 =
TSK_FS_NAME_TYPE_DIR
) {

632 i‡(
	`Átfs_dú_buf_add
(
Átfs
, 
a_addr
,

633 
fs_dú
->
«mes
[
i
].
mëa_addr
))

634  
TSK_ERR
;

637  
ªtvÆ2
;

641 
fs_dú
->
fs_fûe
 = 
	`tsk_fs_fûe_›í_mëa
(
a_fs
, 
NULL
, 
a_addr
);

642 i‡(
fs_dú
->
fs_fûe
 =
NULL
) {

643 
	`tsk_îr‹_ª£t
();

644 
tsk_î∫o
 = 
TSK_ERR_FS_INODE_NUM
;

645 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

646 "Átfs_dú_›í_mëa: %" 
PRIuINUM
 " isÇotá valid inode",

647 
a_addr
);

648  
TSK_COR
;

651 
size
 = 
fs_dú
->
fs_fûe
->
mëa
->size;

652 
Àn
 = 
	`roundup
(
size
, 
Átfs
->
ssize
);

654 i‡(
tsk_vîbo£
)

655 
	`tsk_Ârötf
(
°dîr
,

656 "Átfs_dú_›í_mëa: Pro˚ssög dúe˘‹y %" 
PRIuINUM
 "\n",

657 
a_addr
);

659 i‡(
size
 == 0) {

660 i‡(
tsk_vîbo£
)

661 
	`tsk_Ârötf
(
°dîr
,

663  
TSK_OK
;

667 i‡((
dúbuf
 = 
	`tsk_mÆloc
((
size_t
Ë
Àn
)Ë=
NULL
) {

668  
TSK_ERR
;

670 
lﬂd
.
curdú±r
 = 
dúbuf
;

671 
lﬂd
.
dúÀ·
 = (
size_t
Ë
size
;

676 
lﬂd
.
addrsize
 = (
size_t
Ë(
Àn
 / 
Átfs
->
ssize
);

677 
addrbuf
 =

678 (
TSK_DADDR_T
 *Ë
	`tsk_mÆloc
(
lﬂd
.
addrsize
 * (TSK_DADDR_T));

679 i‡(
addrbuf
 =
NULL
) {

680 
	`‰ì
(
dúbuf
);

681  
TSK_ERR
;

685 
lﬂd
.
addridx
 = 0;

686 
lﬂd
.
addrbuf
 =áddrbuf;

689 i‡(
	`tsk_fs_fûe_wÆk
(
fs_dú
->
fs_fûe
,

690 
TSK_FS_FILE_WALK_FLAG_SLACK
,

691 
Átfs_dít_a˘i⁄
, (*Ë&
lﬂd
)) {

692 
	`°∫ˇt
(
tsk_îr°r2
, " - fatfs_dir_open_meta",

693 
TSK_ERRSTR_L
 - 
	`°æí
(
tsk_îr°r2
));

694 
	`‰ì
(
dúbuf
);

695 
	`‰ì
(
addrbuf
);

696  
TSK_COR
;

700 i‡(
lﬂd
.
dúÀ·
 > 0) {

701 
	`tsk_îr‹_ª£t
();

702 
tsk_î∫o
 = 
TSK_ERR_FS_FWALK
;

703 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

704 "Átfs_dú_›í_mëa: Eº‹Ñódög dúe˘‹y %" 
PRIuINUM
,

705 
a_addr
);

708 
	`‰ì
(
dúbuf
);

709 
	`‰ì
(
addrbuf
);

710  
TSK_COR
;

713 
ªtvÆ
 = 
	`Átfs_dít_∑r£_buf
(
Átfs
, 
fs_dú
, 
dúbuf
, 
Àn
, 
addrbuf
);

715 
	`‰ì
(
dúbuf
);

716 
	`‰ì
(
addrbuf
);

719 i‡(
a_addr
 =
a_fs
->
roŸ_öum
) {

720 
TSK_FS_NAME
 *
fs_«me
 = 
	`tsk_fs_«me_Æloc
(256, 0);

721 i‡(
fs_«me
 =
NULL
)

722  
TSK_ERR
;

725 
	`°∫˝y
(
fs_«me
->
«me
, 
FATFS_MBRNAME
, fs_«me->
«me_size
);

726 
fs_«me
->
mëa_addr
 = 
	`FATFS_MBRINO
(
a_fs
);

727 
fs_«me
->
ty≥
 = 
TSK_FS_NAME_TYPE_VIRT
;

728 
fs_«me
->
Êags
 = 
TSK_FS_NAME_FLAG_ALLOC
;

729 i‡(
	`tsk_fs_dú_add
(
fs_dú
, 
fs_«me
)) {

730 
	`tsk_fs_«me_‰ì
(
fs_«me
);

731  
TSK_ERR
;

735 
	`°∫˝y
(
fs_«me
->
«me
, 
FATFS_FAT1NAME
, fs_«me->
«me_size
);

736 
fs_«me
->
mëa_addr
 = 
	`FATFS_FAT1INO
(
a_fs
);

737 
fs_«me
->
ty≥
 = 
TSK_FS_NAME_TYPE_VIRT
;

738 
fs_«me
->
Êags
 = 
TSK_FS_NAME_FLAG_ALLOC
;

739 i‡(
	`tsk_fs_dú_add
(
fs_dú
, 
fs_«me
)) {

740 
	`tsk_fs_«me_‰ì
(
fs_«me
);

741  
TSK_ERR
;

745 
	`°∫˝y
(
fs_«me
->
«me
, 
FATFS_FAT2NAME
, fs_«me->
«me_size
);

746 
fs_«me
->
mëa_addr
 = 
	`FATFS_FAT2INO
(
a_fs
);

747 
fs_«me
->
ty≥
 = 
TSK_FS_NAME_TYPE_VIRT
;

748 
fs_«me
->
Êags
 = 
TSK_FS_NAME_FLAG_ALLOC
;

749 i‡(
	`tsk_fs_dú_add
(
fs_dú
, 
fs_«me
)) {

750 
	`tsk_fs_«me_‰ì
(
fs_«me
);

751  
TSK_ERR
;

755 i‡(
	`tsk_fs_dú_make_‹ph™_dú_«me
(
a_fs
, 
fs_«me
)) {

756 
	`tsk_fs_«me_‰ì
(
fs_«me
);

757  
TSK_ERR
;

759 i‡(
	`tsk_fs_dú_add
(
fs_dú
, 
fs_«me
)) {

760 
	`tsk_fs_«me_‰ì
(
fs_«me
);

761  
TSK_ERR
;

763 
	`tsk_fs_«me_‰ì
(
fs_«me
);

766  
ªtvÆ
;

767 
	}
}

770 
	$Átfs_«me_cmp
(
TSK_FS_INFO
 * 
a_fs_öfo
, c⁄° *
s1
, c⁄° *
s2
)

772  
	`°rˇ£cmp
(
s1
, 
s2
);

773 
	}
}

	@tsk3/fs/fatfs_meta.c

25 
	~"tsk_fs_i.h
"

26 
	~"tsk_Átfs.h
"

35 
uöt8_t


36 
	$is_83_«me
(
Átfs_díåy
 * 
de
)

38 i‡(!
de
)

43 i‡((
de
->
«me
[0] !
FATFS_SLOT_E5
) && (de->name[0] != '.') &&

44 (
	`FATFS_IS_83_NAME
(
de
->
«me
[0]) == 0))

48 i‡(
de
->
«me
[0] == 0x20)

52 i‡(
de
->
«me
[1] == '.') {

53 i‡(
de
->
«me
[0] != '.')

56 i‡(
	`FATFS_IS_83_NAME
(
de
->
«me
[1]) == 0)

59 i‡((
	`FATFS_IS_83_NAME
(
de
->
«me
[2]) == 0) ||

60 (
	`FATFS_IS_83_NAME
(
de
->
«me
[3]) == 0) ||

61 (
	`FATFS_IS_83_NAME
(
de
->
«me
[4]) == 0) ||

62 (
	`FATFS_IS_83_NAME
(
de
->
«me
[5]) == 0) ||

63 (
	`FATFS_IS_83_NAME
(
de
->
«me
[6]) == 0) ||

64 (
	`FATFS_IS_83_NAME
(
de
->
«me
[7]) == 0) ||

65 (
	`FATFS_IS_83_EXT
(
de
->
ext
[0]) == 0) ||

66 (
	`FATFS_IS_83_EXT
(
de
->
ext
[1]) == 0) ||

67 (
	`FATFS_IS_83_EXT
(
de
->
ext
[2]) == 0))

75 i‡((
de
->
©åib
 & 
FATFS_ATTR_VOLUME
) != FATFS_ATTR_VOLUME) {

76 i‡(((
de
->
«me
[1] == 0x20) && (de->name[2] != 0x20)) ||

77 ((
de
->
«me
[2] == 0x20) && (de->name[3] != 0x20)) ||

78 ((
de
->
«me
[3] == 0x20) && (de->name[4] != 0x20)) ||

79 ((
de
->
«me
[4] == 0x20) && (de->name[5] != 0x20)) ||

80 ((
de
->
«me
[5] == 0x20) && (de->name[6] != 0x20)) ||

81 ((
de
->
«me
[6] == 0x20) && (de->name[7] != 0x20)) ||

82 ((
de
->
ext
[1] == 0x20) && (de->ext[2] != 0x20)))

87 
	}
}

97 
time_t


98 
	$dos2unixtime
(
uöt16_t
 
d©e
, uöt16_à
time
, 
uöt8_t
 
timëís
)

100 
tm
 
tm1
;

101 
time_t
 
ªt
;

103 i‡(
d©e
 == 0)

106 
	`mem£t
(&
tm1
, 0, (
tm
));

108 
tm1
.
tm_£c
 = ((
time
 & 
FATFS_SEC_MASK
Ë>> 
FATFS_SEC_SHIFT
) * 2;

109 i‡((
tm1
.
tm_£c
 < 0) || (tm1.tm_sec > 60))

110 
tm1
.
tm_£c
 = 0;

112 i‡(
timëís
 > 100)

113 
tm1
.
tm_£c
++;

115 
tm1
.
tm_mö
 = ((
time
 & 
FATFS_MIN_MASK
Ë>> 
FATFS_MIN_SHIFT
);

116 i‡((
tm1
.
tm_mö
 < 0) || (tm1.tm_min > 59))

117 
tm1
.
tm_mö
 = 0;

119 
tm1
.
tm_hour
 = ((
time
 & 
FATFS_HOUR_MASK
Ë>> 
FATFS_HOUR_SHIFT
);

120 i‡((
tm1
.
tm_hour
 < 0) || (tm1.tm_hour > 23))

121 
tm1
.
tm_hour
 = 0;

123 
tm1
.
tm_mday
 = ((
d©e
 & 
FATFS_DAY_MASK
Ë>> 
FATFS_DAY_SHIFT
);

124 i‡((
tm1
.
tm_mday
 < 1) || (tm1.tm_mday > 31))

125 
tm1
.
tm_mday
 = 0;

127 
tm1
.
tm_m⁄
 = ((
d©e
 & 
FATFS_MON_MASK
Ë>> 
FATFS_MON_SHIFT
) - 1;

128 i‡((
tm1
.
tm_m⁄
 < 0) || (tm1.tm_mon > 11))

129 
tm1
.
tm_m⁄
 = 0;

135 
tm1
.
tm_yór
 = ((
d©e
 & 
FATFS_YEAR_MASK
Ë>> 
FATFS_YEAR_SHIFT
) + 80;

136 i‡((
tm1
.
tm_yór
 < 0) || (tm1.tm_year > 137))

137 
tm1
.
tm_yór
 = 0;

141 
tm1
.
tm_isd°
 = -1;

143 
ªt
 = 
	`mktime
(&
tm1
);

145 i‡(
ªt
 < 0) {

146 i‡(
tsk_vîbo£
)

147 
	`tsk_Ârötf
(
°dîr
,

149 ((
time
 & 
FATFS_HOUR_MASK
Ë>> 
FATFS_HOUR_SHIFT
),

150 ((
time
 & 
FATFS_MIN_MASK
Ë>> 
FATFS_MIN_SHIFT
),

151 ((
time
 & 
FATFS_SEC_MASK
Ë>> 
FATFS_SEC_SHIFT
) * 2,

152 ((
d©e
 & 
FATFS_MON_MASK
Ë>> 
FATFS_MON_SHIFT
) - 1,

153 ((
d©e
 & 
FATFS_DAY_MASK
Ë>> 
FATFS_DAY_SHIFT
),

154 ((
d©e
 & 
FATFS_YEAR_MASK
Ë>> 
FATFS_YEAR_SHIFT
) + 80);

158  
ªt
;

159 
	}
}

162 
uöt32_t


163 
	$dos2«no£c
(
uöt8_t
 
timëís
)

165 
timëís
 %= 100;

166  
timëís
 * 10000000;

167 
	}
}

173 
TSK_FS_META_TYPE_ENUM


174 
	$©å2ty≥
(
uöt16_t
 
©å
)

176 i‡(
©å
 & 
FATFS_ATTR_DIRECTORY
)

177  
TSK_FS_META_TYPE_DIR
;

179  
TSK_FS_META_TYPE_REG
;

180 
	}
}

184 
	$©å2mode
(
uöt16_t
 
©å
)

186 
mode
;

189 
mode
 =

190 (
TSK_FS_META_MODE_IXUSR
 | 
TSK_FS_META_MODE_IXGRP
 |

191 
TSK_FS_META_MODE_IXOTH
);

193 i‡((
©å
 & 
FATFS_ATTR_READONLY
) == 0)

194 
mode
 |=

195 (
TSK_FS_META_MODE_IRUSR
 | 
TSK_FS_META_MODE_IRGRP
 |

196 
TSK_FS_META_MODE_IROTH
);

198 i‡((
©å
 & 
FATFS_ATTR_HIDDEN
) == 0)

199 
mode
 |=

200 (
TSK_FS_META_MODE_IWUSR
 | 
TSK_FS_META_MODE_IWGRP
 |

201 
TSK_FS_META_MODE_IWOTH
);

203  
mode
;

204 
	}
}

223 
TSK_RETVAL_ENUM


224 
	$Átfs_döode_c›y
(
FATFS_INFO
 * 
Átfs
, 
TSK_FS_META
 * 
fs_mëa
,

225 
Átfs_díåy
 * 
ö
, 
TSK_DADDR_T
 
£˘
, 
TSK_INUM_T
 
öum
)

227 
ªtvÆ
;

228 
i
;

229 
TSK_FS_INFO
 *
fs
 = (TSK_FS_INFO *Ë& 
Átfs
->
fs_öfo
;

230 
TSK_DADDR_T
 *
addr_±r
;

232 i‡(
fs_mëa
->
c⁄ã¡_Àn
 < 
FATFS_FILE_CONTENT_LEN
) {

233 i‡((
fs_mëa
 =

234 
	`tsk_fs_mëa_ªÆloc
(
fs_mëa
,

235 
FATFS_FILE_CONTENT_LEN
)Ë=
NULL
) {

240 
fs_mëa
->
©å_°©e
 = 
TSK_FS_META_ATTR_EMPTY
;

241 i‡(
fs_mëa
->
©å
) {

242 
	`tsk_fs_©åli°_m¨kunu£d
(
fs_mëa
->
©å
);

245 
fs_mëa
->
mode
 = 
	`©å2mode
(
ö
->
©åib
);

246 
fs_mëa
->
ty≥
 = 
	`©å2ty≥
(
ö
->
©åib
);

248 
fs_mëa
->
addr
 = 
öum
;

252 
ªtvÆ
 = 
	`Átfs_is_£˘Æloc
(
Átfs
, 
£˘
);

253 i‡(
ªtvÆ
 == -1) {

254  
TSK_ERR
;

256 i‡(
ªtvÆ
 == 1) {

257 
fs_mëa
->
Êags
 = ((
ö
->
«me
[0] =
FATFS_SLOT_DELETED
) ?

258 
TSK_FS_META_FLAG_UNALLOC
 : 
TSK_FS_META_FLAG_ALLOC
);

261 
fs_mëa
->
Êags
 = 
TSK_FS_META_FLAG_UNALLOC
;

265 
fs_mëa
->
Êags
 |((
ö
->
«me
[0] =
FATFS_SLOT_EMPTY
) ?

266 
TSK_FS_META_FLAG_UNUSED
 : 
TSK_FS_META_FLAG_USED
);

268 i‡((
ö
->
©åib
 & 
FATFS_ATTR_LFN
) == FATFS_ATTR_LFN) {

270 
fs_mëa
->
∆ök
 = 0;

271 
fs_mëa
->
size
 = 0;

272 
fs_mëa
->
mtime
 = 0;

273 
fs_mëa
->
©ime
 = 0;

274 
fs_mëa
->
˘ime
 = 0;

275 
fs_mëa
->
¸time
 = 0;

276 
fs_mëa
->
mtime_«no
 = fs_mëa->
©ime_«no
 = fs_mëa->
˘ime_«no
 =

277 
fs_mëa
->
¸time_«no
 = 0;

281 
fs_mëa
->
∆ök
 = (
ö
->
«me
[0] =
FATFS_SLOT_DELETED
) ? 0 : 1;

282 
fs_mëa
->
size
 = (
TSK_OFF_T
Ë
	`tsk_gëu32
(
fs
->
ídün
, 
ö
->size);

285 i‡(
	`FATFS_ISDATE
(
	`tsk_gëu16
(
fs
->
ídün
, 
ö
->
wd©e
)))

286 
fs_mëa
->
mtime
 =

287 
	`dos2unixtime
(
	`tsk_gëu16
(
fs
->
ídün
, 
ö
->
wd©e
),

288 
	`tsk_gëu16
(
fs
->
ídün
, 
ö
->
wtime
), 0);

290 
fs_mëa
->
mtime
 = 0;

291 
fs_mëa
->
mtime_«no
 = 0;

293 i‡(
	`FATFS_ISDATE
(
	`tsk_gëu16
(
fs
->
ídün
, 
ö
->
ad©e
)))

294 
fs_mëa
->
©ime
 =

295 
	`dos2unixtime
(
	`tsk_gëu16
(
fs
->
ídün
, 
ö
->
ad©e
), 0, 0);

297 
fs_mëa
->
©ime
 = 0;

298 
fs_mëa
->
©ime_«no
 = 0;

305 i‡(
	`FATFS_ISDATE
(
	`tsk_gëu16
(
fs
->
ídün
, 
ö
->
cd©e
))) {

306 
fs_mëa
->
¸time
 =

307 
	`dos2unixtime
(
	`tsk_gëu16
(
fs
->
ídün
, 
ö
->
cd©e
),

308 
	`tsk_gëu16
(
fs
->
ídün
, 
ö
->
˘ime
), in->
˘imëí
);

309 
fs_mëa
->
¸time_«no
 = 
	`dos2«no£c
(
ö
->
˘imëí
);

312 
fs_mëa
->
¸time
 = 0;

313 
fs_mëa
->
¸time_«no
 = 0;

317 
fs_mëa
->
˘ime
 = 0;

318 
fs_mëa
->
˘ime_«no
 = 0;

322 
fs_mëa
->
uid
 = 0;

323 
fs_mëa
->
gid
 = 0;

324 
fs_mëa
->
£q
 = 0;

328 i‡(
fs_mëa
->
«me2
 =
NULL
) {

329 i‡((
fs_mëa
->
«me2
 = (
TSK_FS_META_NAME_LIST
 *)

330 
	`tsk_mÆloc
((
TSK_FS_META_NAME_LIST
))Ë=
NULL
)

331  
TSK_ERR
;

332 
fs_mëa
->
«me2
->
√xt
 = 
NULL
;

338 i‡((
ö
->
©åib
 & 
FATFS_ATTR_LFN
) == FATFS_ATTR_LFN) {

339 
Átfs_díåy_l‚
 *
l‚
 = (Átfs_díåy_l‚ *Ë
ö
;

342 
UTF8
 *
«me8
 = (UTF8 *Ë
fs_mëa
->
«me2
->
«me
;

343 
UTF16
 *
«me16
 = (UTF16 *Ë
l‚
->
∑π1
;

345 
ªtVÆ
 = 
	`tsk_UTF16toUTF8
(
fs
->
ídün
, (c⁄° 
UTF16
 **Ë&
«me16
,

346 (
UTF16
 *Ë& 
l‚
->
∑π1
[10],

347 &
«me8
,

348 (
UTF8
 *Ë((
uöçå_t
Ë
fs_mëa
->
«me2
->
«me
 +

349 (
fs_mëa
->
«me2
->
«me
)),

350 
TSKÀnõ¡C⁄vîsi⁄
);

352 i‡(
ªtVÆ
 !
TSKc⁄vîsi⁄OK
) {

353 
	`tsk_îr‹_ª£t
();

354 
tsk_î∫o
 = 
TSK_ERR_FS_UNICODE
;

355 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

357 
ªtVÆ
);

358 *
«me8
 = '\0';

360  
TSK_COR
;

364 
«me16
 = (
UTF16
 *Ë
l‚
->
∑π2
;

365 
ªtVÆ
 = 
	`tsk_UTF16toUTF8
(
fs
->
ídün
, (c⁄° 
UTF16
 **Ë&
«me16
,

366 (
UTF16
 *Ë& 
l‚
->
∑π2
[12],

367 &
«me8
,

368 (
UTF8
 *Ë((
uöçå_t
Ë
fs_mëa
->
«me2
->
«me
 +

369 (
fs_mëa
->
«me2
->
«me
)), 
TSKÀnõ¡C⁄vîsi⁄
);

371 i‡(
ªtVÆ
 !
TSKc⁄vîsi⁄OK
) {

372 
	`tsk_îr‹_ª£t
();

373 
tsk_î∫o
 = 
TSK_ERR_FS_UNICODE
;

374 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

376 
ªtVÆ
);

377 *
«me8
 = '\0';

379  
TSK_COR
;

383 
«me16
 = (
UTF16
 *Ë
l‚
->
∑π3
;

384 
ªtVÆ
 = 
	`tsk_UTF16toUTF8
(
fs
->
ídün
, (c⁄° 
UTF16
 **Ë&
«me16
,

385 (
UTF16
 *Ë& 
l‚
->
∑π3
[4],

386 &
«me8
,

387 (
UTF8
 *Ë((
uöçå_t
Ë
fs_mëa
->
«me2
->
«me
 +

388 (
fs_mëa
->
«me2
->
«me
)), 
TSKÀnõ¡C⁄vîsi⁄
);

390 i‡(
ªtVÆ
 !
TSKc⁄vîsi⁄OK
) {

391 
	`tsk_îr‹_ª£t
();

392 
tsk_î∫o
 = 
TSK_ERR_FS_UNICODE
;

393 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

395 
ªtVÆ
);

396 *
«me8
 = '\0';

398  
TSK_COR
;

402 i‡((
uöçå_t
Ë
«me8
 >

403 (
uöçå_t
Ë
fs_mëa
->
«me2
->
«me
 +

404 (
fs_mëa
->
«me2
->
«me
))

405 
fs_mëa
->
«me2
->
«me
[(fs_meta->name2->name) - 1] = '\0';

407 *
«me8
 = '\0';

412 i‡((
ö
->
©åib
 & 
FATFS_ATTR_VOLUME
) == FATFS_ATTR_VOLUME) {

413 
a
;

415 
i
 = 0;

416 
a
 = 0;á < 8;á++) {

417 i‡((
ö
->
«me
[
a
] != 0x00) && (in->name[a] != 0xff))

418 
fs_mëa
->
«me2
->
«me
[
i
++] = 
ö
->«me[
a
];

420 
a
 = 0;á < 3;á++) {

421 i‡((
ö
->
ext
[
a
] != 0x00) && (in->ext[a] != 0xff))

422 
fs_mëa
->
«me2
->
«me
[
i
++] = 
ö
->
ext
[
a
];

424 
fs_mëa
->
«me2
->
«me
[
i
] = '\0';

430 
i
 = 0; (ò< 8Ë&& (
ö
->
«me
[i] != 0) && (in->name[i] != ' ');

431 
i
++) {

432 i‡((
i
 =0Ë&& (
ö
->
«me
[0] =
FATFS_SLOT_DELETED
))

433 
fs_mëa
->
«me2
->
«me
[0] = '_';

434 i‡((
ö
->
lowîˇ£
 & 
FATFS_CASE_LOWER_BASE
) &&

435 (
ö
->
«me
[
i
] >= 'A') && (in->name[i] <= 'Z'))

436 
fs_mëa
->
«me2
->
«me
[
i
] = 
ö
->name[i] + 32;

438 
fs_mëa
->
«me2
->
«me
[
i
] = 
ö
->name[i];

441 i‡((
ö
->
ext
[0]) && (in->ext[0] != ' ')) {

442 
a
;

443 
fs_mëa
->
«me2
->
«me
[
i
++] = '.';

444 
a
 = 0;

445 (
a
 < 3Ë&& (
ö
->
ext
[a] != 0) && (in->ext[a] != ' ');

446 
a
++, 
i
++) {

447 i‡((
ö
->
lowîˇ£
 & 
FATFS_CASE_LOWER_EXT
)

448 && (
ö
->
ext
[
a
] >= 'A') && (in->ext[a] <= 'Z'))

449 
fs_mëa
->
«me2
->
«me
[
i
] = 
ö
->
ext
[
a
] + 32;

451 
fs_mëa
->
«me2
->
«me
[
i
] = 
ö
->
ext
[
a
];

454 
fs_mëa
->
«me2
->
«me
[
i
] = '\0';

458 
i
 = 0;

459 
fs_mëa
->
«me2
->
«me
[
i
] != '\0') {

460 i‡(
	`TSK_IS_CNTRL
(
fs_mëa
->
«me2
->
«me
[
i
]))

461 
fs_mëa
->
«me2
->
«me
[
i
] = '^';

462 
i
++;

466 
addr_±r
 = (
TSK_DADDR_T
 *Ë
fs_mëa
->
c⁄ã¡_±r
;

467 i‡((
ö
->
©åib
 & 
FATFS_ATTR_LFN
) == FATFS_ATTR_LFN) {

468 
addr_±r
[0] = 0;

471 
addr_±r
[0] = 
	`FATFS_DENTRY_CLUST
(
fs
, 
ö
Ë& 
Átfs
->
mask
;

477 i‡((
ö
->
©åib
 & 
FATFS_ATTR_DIRECTORY
) &&

478 ((
ö
->
©åib
 & 
FATFS_ATTR_LFN
) != FATFS_ATTR_LFN)) {

479 i‡(
fs_mëa
->
Êags
 & 
TSK_FS_META_FLAG_ALLOC
) {

480 
TSK_LIST
 *
li°_£í
 = 
NULL
;

483 
TSK_DADDR_T
 
˛u°
 = 
	`FATFS_DENTRY_CLUST
(
fs
, 
ö
);

484 
˙um
 = 0;

486 (
˛u°
Ë&& (0 =
	`FATFS_ISEOF
(˛u°, 
Átfs
->
mask
))) {

487 
TSK_DADDR_T
 
nxt
;

490 i‡(
	`tsk_li°_föd
(
li°_£í
, 
˛u°
)) {

491 i‡(
tsk_vîbo£
)

492 
	`tsk_Ârötf
(
°dîr
,

496 i‡(
	`tsk_li°_add
(&
li°_£í
, 
˛u°
)) {

497 
	`tsk_li°_‰ì
(
li°_£í
);

498 
li°_£í
 = 
NULL
;

499  
TSK_ERR
;

502 
˙um
++;

504 i‡(
	`Átfs_gëFAT
(
Átfs
, 
˛u°
, &
nxt
))

507 
˛u°
 = 
nxt
;

510 
	`tsk_li°_‰ì
(
li°_£í
);

511 
li°_£í
 = 
NULL
;

513 
fs_mëa
->
size
 =

514 (
TSK_OFF_T
Ë((
˙um
 * 
Átfs
->
csize
Ë<< f©fs->
ssize_sh
);

524 i‡(
	`Átfs_is_˛u°Æloc
(
Átfs
, 
	`FATFS_DENTRY_CLUST
(
fs
,

525 
ö
)) == 1)

526 
fs_mëa
->
size
 = 0;

528 
fs_mëa
->
size
 = 
Átfs
->
csize
 << f©fs->
ssize_sh
;

533  
TSK_OK
;

534 
	}
}

546 
uöt8_t


547 
	$Átfs_make_roŸ
(
FATFS_INFO
 * 
Átfs
, 
TSK_FS_META
 * 
fs_mëa
)

550 
TSK_DADDR_T
 *
addr_±r
;

552 
fs_mëa
->
ty≥
 = (
TSK_FS_META_TYPE_DIR
);

553 
fs_mëa
->
mode
 = 0;

554 
fs_mëa
->
∆ök
 = 1;

555 
fs_mëa
->
addr
 = 
FATFS_ROOTINO
;

556 
fs_mëa
->
Êags
 = (
TSK_FS_META_FLAG_USED
 | 
TSK_FS_META_FLAG_ALLOC
);

557 
fs_mëa
->
uid
 = fs_mëa->
gid
 = 0;

558 
fs_mëa
->
mtime
 = fs_mëa->
©ime
 = fs_mëa->
˘ime
 = fs_mëa->
¸time
 = 0;

559 
fs_mëa
->
mtime_«no
 = fs_mëa->
©ime_«no
 = fs_mëa->
˘ime_«no
 =

560 
fs_mëa
->
¸time_«no
 = 0;

562 i‡(
fs_mëa
->
«me2
 =
NULL
) {

563 i‡((
fs_mëa
->
«me2
 = (
TSK_FS_META_NAME_LIST
 *)

564 
	`tsk_mÆloc
((
TSK_FS_META_NAME_LIST
))Ë=
NULL
)

566 
fs_mëa
->
«me2
->
√xt
 = 
NULL
;

568 
fs_mëa
->
«me2
->
«me
[0] = '\0';

570 
fs_mëa
->
©å_°©e
 = 
TSK_FS_META_ATTR_EMPTY
;

571 i‡(
fs_mëa
->
©å
) {

572 
	`tsk_fs_©åli°_m¨kunu£d
(
fs_mëa
->
©å
);

574 
addr_±r
 = (
TSK_DADDR_T
 *Ë
fs_mëa
->
c⁄ã¡_±r
;

579 i‡(
Átfs
->
fs_öfo
.
·y≥
 !
TSK_FS_TYPE_FAT32
) {

580 
TSK_DADDR_T
 
¢um
;

584 
addr_±r
[0] = 1;

587 
¢um
 = 
Átfs
->
fú°˛u°£˘
 - f©fs->
fú°d©a£˘
;

590 
fs_mëa
->
size
 = 
¢um
 << 
Átfs
->
ssize_sh
;

594 
TSK_DADDR_T
 
˙um
;

595 
TSK_DADDR_T
 
˛u°
;

596 
TSK_LIST
 *
li°_£í
 = 
NULL
;

599 
˛u°
 = 
	`FATFS_SECT_2_CLUST
(
Átfs
, f©fs->
roŸ£˘
);

600 
addr_±r
[0] = 
˛u°
;

602 
˙um
 = 0;

603 (
˛u°
Ë&& (0 =
	`FATFS_ISEOF
(˛u°, 
FATFS_32_MASK
))) {

604 
TSK_DADDR_T
 
nxt
;

607 i‡(
	`tsk_li°_föd
(
li°_£í
, 
˛u°
)) {

608 i‡(
tsk_vîbo£
)

609 
	`tsk_Ârötf
(
°dîr
,

613 i‡(
	`tsk_li°_add
(&
li°_£í
, 
˛u°
)) {

614 
	`tsk_li°_‰ì
(
li°_£í
);

615 
li°_£í
 = 
NULL
;

619 
˙um
++;

620 i‡(
	`Átfs_gëFAT
(
Átfs
, 
˛u°
, &
nxt
))

623 
˛u°
 = 
nxt
;

625 
	`tsk_li°_‰ì
(
li°_£í
);

626 
li°_£í
 = 
NULL
;

627 
fs_mëa
->
size
 = (
˙um
 * 
Átfs
->
csize
Ë<< f©fs->
ssize_sh
;

630 
	}
}

641 
uöt8_t


642 
	$Átfs_make_mbr
(
FATFS_INFO
 * 
Átfs
, 
TSK_FS_META
 * 
fs_mëa
)

644 
TSK_DADDR_T
 *
addr_±r
;

645 
TSK_FS_INFO
 *
fs
 = (TSK_FS_INFO *Ë
Átfs
;

647 
fs_mëa
->
ty≥
 = 
TSK_FS_META_TYPE_VIRT
;

648 
fs_mëa
->
mode
 = 0;

649 
fs_mëa
->
∆ök
 = 1;

650 
fs_mëa
->
addr
 = 
	`FATFS_MBRINO
(
fs
);

651 
fs_mëa
->
Êags
 = (
TSK_FS_META_FLAG_USED
 | 
TSK_FS_META_FLAG_ALLOC
);

652 
fs_mëa
->
uid
 = fs_mëa->
gid
 = 0;

653 
fs_mëa
->
mtime
 = fs_mëa->
©ime
 = fs_mëa->
˘ime
 = fs_mëa->
¸time
 = 0;

654 
fs_mëa
->
mtime_«no
 = fs_mëa->
©ime_«no
 = fs_mëa->
˘ime_«no
 =

655 
fs_mëa
->
¸time_«no
 = 0;

657 i‡(
fs_mëa
->
«me2
 =
NULL
) {

658 i‡((
fs_mëa
->
«me2
 = (
TSK_FS_META_NAME_LIST
 *)

659 
	`tsk_mÆloc
((
TSK_FS_META_NAME_LIST
))Ë=
NULL
)

661 
fs_mëa
->
«me2
->
√xt
 = 
NULL
;

663 
	`°∫˝y
(
fs_mëa
->
«me2
->
«me
, 
FATFS_MBRNAME
,

664 
TSK_FS_META_NAME_LIST_NSIZE
);

666 
fs_mëa
->
©å_°©e
 = 
TSK_FS_META_ATTR_EMPTY
;

667 i‡(
fs_mëa
->
©å
) {

668 
	`tsk_fs_©åli°_m¨kunu£d
(
fs_mëa
->
©å
);

671 
addr_±r
 = (
TSK_DADDR_T
 *Ë
fs_mëa
->
c⁄ã¡_±r
;

672 
addr_±r
[0] = 0;

673 
fs_mëa
->
size
 = 512;

676 
	}
}

687 
uöt8_t


688 
	$Átfs_make_Át
(
FATFS_INFO
 * 
Átfs
, 
uöt8_t
 
a_which
, 
TSK_FS_META
 * 
fs_mëa
)

690 
TSK_FS_INFO
 *
fs
 = (TSK_FS_INFO *Ë
Átfs
;

691 
TSK_DADDR_T
 *
addr_±r
;

693 
fs_mëa
->
ty≥
 = 
TSK_FS_META_TYPE_VIRT
;

694 
fs_mëa
->
mode
 = 0;

695 
fs_mëa
->
∆ök
 = 1;

697 
fs_mëa
->
Êags
 = (
TSK_FS_META_FLAG_USED
 | 
TSK_FS_META_FLAG_ALLOC
);

698 
fs_mëa
->
uid
 = fs_mëa->
gid
 = 0;

699 
fs_mëa
->
mtime
 = fs_mëa->
©ime
 = fs_mëa->
˘ime
 = fs_mëa->
¸time
 = 0;

700 
fs_mëa
->
mtime_«no
 = fs_mëa->
©ime_«no
 = fs_mëa->
˘ime_«no
 =

701 
fs_mëa
->
¸time_«no
 = 0;

703 i‡(
fs_mëa
->
«me2
 =
NULL
) {

704 i‡((
fs_mëa
->
«me2
 = (
TSK_FS_META_NAME_LIST
 *)

705 
	`tsk_mÆloc
((
TSK_FS_META_NAME_LIST
))Ë=
NULL
)

707 
fs_mëa
->
«me2
->
√xt
 = 
NULL
;

710 i‡(
a_which
 == 1) {

711 
fs_mëa
->
addr
 = 
	`FATFS_FAT1INO
(
fs
);

712 
	`°∫˝y
(
fs_mëa
->
«me2
->
«me
, 
FATFS_FAT1NAME
,

713 
TSK_FS_META_NAME_LIST_NSIZE
);

714 
addr_±r
 = (
TSK_DADDR_T
 *Ë
fs_mëa
->
c⁄ã¡_±r
;

715 
addr_±r
[0] = 
Átfs
->
fú°Át£˘
;

717 i‡(
a_which
 == 2) {

718 
fs_mëa
->
addr
 = 
	`FATFS_FAT2INO
(
fs
);

719 
	`°∫˝y
(
fs_mëa
->
«me2
->
«me
, 
FATFS_FAT2NAME
,

720 
TSK_FS_META_NAME_LIST_NSIZE
);

721 
addr_±r
 = (
TSK_DADDR_T
 *Ë
fs_mëa
->
c⁄ã¡_±r
;

722 
addr_±r
[0] = 
Átfs
->
fú°Át£˘
 + f©fs->
£˘≥rÁt
;

728 
fs_mëa
->
©å_°©e
 = 
TSK_FS_META_ATTR_EMPTY
;

729 i‡(
fs_mëa
->
©å
) {

730 
	`tsk_fs_©åli°_m¨kunu£d
(
fs_mëa
->
©å
);

733 
fs_mëa
->
size
 = 
Átfs
->
£˘≥rÁt
 * 
fs
->
block_size
;

736 
	}
}

745 
uöt8_t


746 
	$Átfs_isdíåy
(
FATFS_INFO
 * 
Átfs
, 
Átfs_díåy
 * 
de
)

748 
TSK_FS_INFO
 *
fs
 = (TSK_FS_INFO *Ë& 
Átfs
->
fs_öfo
;

749 i‡(!
de
)

754 i‡((
de
->
©åib
 & 
FATFS_ATTR_LFN
) == FATFS_ATTR_LFN) {

755 
Átfs_díåy_l‚
 *
de_l‚
 = (Átfs_díåy_l‚ *Ë
de
;

757 i‡((
de_l‚
->
£q
 > (
FATFS_LFN_SEQ_FIRST
 | 0x0f))

758 && (
de_l‚
->
£q
 !
FATFS_SLOT_DELETED
))

764 i‡(
de
->
lowîˇ£
 & ~(
FATFS_CASE_LOWER_ALL
))

766 i‡(
de
->
©åib
 & ~(
FATFS_ATTR_ALL
))

770 i‡(
de
->
©åib
 & 
FATFS_ATTR_NORMAL
) {

771 i‡((
de
->
©åib
 & 
FATFS_ATTR_VOLUME
) ||

772 (
de
->
©åib
 & 
FATFS_ATTR_DIRECTORY
))

775 i‡(
de
->
©åib
 & 
FATFS_ATTR_VOLUME
) {

776 i‡((
de
->
©åib
 & 
FATFS_ATTR_DIRECTORY
) ||

777 (
de
->
©åib
 & 
FATFS_ATTR_READONLY
) ||

778 (
de
->
©åib
 & 
FATFS_ATTR_ARCHIVE
))

785 i‡((
	`tsk_gëu16
(
fs
->
ídün
, 
de
->
˘ime
) != 0) &&

786 (
	`FATFS_ISTIME
(
	`tsk_gëu16
(
fs
->
ídün
, 
de
->
˘ime
)) == 0))

788 i‡((
	`tsk_gëu16
(
fs
->
ídün
, 
de
->
wtime
) != 0) &&

789 (
	`FATFS_ISTIME
(
	`tsk_gëu16
(
fs
->
ídün
, 
de
->
wtime
)) == 0))

791 i‡((
	`tsk_gëu16
(
fs
->
ídün
, 
de
->
cd©e
) != 0) &&

792 (
	`FATFS_ISDATE
(
	`tsk_gëu16
(
fs
->
ídün
, 
de
->
cd©e
)) == 0))

794 i‡(
de
->
˘imëí
 > 200)

796 i‡((
	`tsk_gëu16
(
fs
->
ídün
, 
de
->
ad©e
) != 0) &&

797 (
	`FATFS_ISDATE
(
	`tsk_gëu16
(
fs
->
ídün
, 
de
->
ad©e
)) == 0))

799 i‡((
	`tsk_gëu16
(
fs
->
ídün
, 
de
->
wd©e
) != 0) &&

800 (
	`FATFS_ISDATE
(
	`tsk_gëu16
(
fs
->
ídün
, 
de
->
wd©e
)) == 0))

804 i‡((
	`FATFS_DENTRY_CLUST
(
fs
, 
de
Ë> (
Átfs
->
œ°˛u°
)) &&

805 (
	`FATFS_ISEOF
(
	`FATFS_DENTRY_CLUST
(
fs
, 
de
), 
Átfs
->
mask
) == 0))

809 i‡(
	`tsk_gëu32
(
fs
->
ídün
, 
de
->
size
) >

810 ((
Átfs
->
˛u°˙t
 * f©fs->
csize
Ë<< f©fs->
ssize_sh
))

813  
	`is_83_«me
(
de
);

816 
	}
}

826 
TSK_WALK_RET_ENUM


827 
	$öode_wÆk_fûe_a˘
(
TSK_FS_FILE
 * 
fs_fûe
, 
TSK_OFF_T
 
a_off
,

828 
TSK_DADDR_T
 
addr
, *
buf
, 
size_t
 
size
,

829 
TSK_FS_BLOCK_FLAG_ENUM
 
a_Êags
, *
a_±r
)

831 
	`£tbô
((
uöt8_t
 *Ë
a_±r
, 
addr
);

832  
TSK_WALK_CONT
;

833 
	}
}

836 
TSK_WALK_RET_ENUM


837 
	$öode_wÆk_dít_a˘
(
TSK_FS_FILE
 * 
fs_fûe
, c⁄° *
a_∑th
, *
a_±r
)

839 i‡((
fs_fûe
->
mëa
 =
NULL
)

840 || (
fs_fûe
->
mëa
->
ty≥
 !
TSK_FS_META_TYPE_DIR
))

841  
TSK_WALK_CONT
;

844 i‡(
	`tsk_fs_fûe_wÆk
(
fs_fûe
,

845 
TSK_FS_FILE_WALK_FLAG_SLACK
 | 
TSK_FS_FILE_WALK_FLAG_AONLY
,

846 
öode_wÆk_fûe_a˘
, 
a_±r
)) {

847 
	`tsk_îr‹_ª£t
();

850  
TSK_WALK_CONT
;

851 
	}
}

861 
uöt8_t


862 
	$Átfs_öode_wÆk
(
TSK_FS_INFO
 * 
fs
, 
TSK_INUM_T
 
°¨t_öum
,

863 
TSK_INUM_T
 
íd_öum
, 
TSK_FS_META_FLAG_ENUM
 
a_Êags
,

864 
TSK_FS_META_WALK_CB
 
a_a˘i⁄
, *
a_±r
)

866 *
my«me
 = "fatfs_inode_walk";

867 
FATFS_INFO
 *
Átfs
 = (FATFS_INFO *Ë
fs
;

868 
TSK_INUM_T
 
íd_öum_tmp
;

869 
TSK_FS_FILE
 *
fs_fûe
;

870 
TSK_DADDR_T
 
£˘
, 
s£˘
, 
l£˘
;

871 
Átfs_díåy
 *
dï
;

872 
myÊags
, 
didx
;

873 
uöt8_t
 *
£˘_Æloc
;

874 
ssize_t
 
˙t
;

875 
uöt8_t
 
d⁄e
 = 0;

878 
	`tsk_îr‹_ª£t
();

883 i‡(
°¨t_öum
 < 
fs
->
fú°_öum
 || sèπ_öum > fs->
œ°_öum
) {

884 
	`tsk_îr‹_ª£t
();

885 
tsk_î∫o
 = 
TSK_ERR_FS_WALK_RNG
;

886 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

887 "%s: Sèπ inode: %" 
PRIuINUM
 "", 
my«me
, 
°¨t_öum
);

890 i‡(
íd_öum
 < 
fs
->
fú°_öum
 ||Énd_öum > fs->
œ°_öum


891 || 
íd_öum
 < 
°¨t_öum
) {

892 
	`tsk_îr‹_ª£t
();

893 
tsk_î∫o
 = 
TSK_ERR_FS_WALK_RNG
;

894 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

895 "%s: End inode: %" 
PRIuINUM
 "", 
my«me
, 
íd_öum
);

899 i‡(
tsk_vîbo£
)

900 
	`tsk_Ârötf
(
°dîr
,

901 "Átfs_öode_wÆk: InodêWÆkög %" 
PRIuINUM
 "Åo %"

902 
PRIuINUM
 "\n", 
°¨t_öum
, 
íd_öum
);

905 i‡(
a_Êags
 & 
TSK_FS_META_FLAG_ORPHAN
) {

906 
a_Êags
 |
TSK_FS_META_FLAG_UNALLOC
;

907 
a_Êags
 &~
TSK_FS_META_FLAG_ALLOC
;

908 
a_Êags
 |
TSK_FS_META_FLAG_USED
;

909 
a_Êags
 &~
TSK_FS_META_FLAG_UNUSED
;

913 i‡(((
a_Êags
 & 
TSK_FS_META_FLAG_ALLOC
) == 0) &&

914 ((
a_Êags
 & 
TSK_FS_META_FLAG_UNALLOC
) == 0)) {

915 
a_Êags
 |(
TSK_FS_META_FLAG_ALLOC
 | 
TSK_FS_META_FLAG_UNALLOC
);

921 i‡(((
a_Êags
 & 
TSK_FS_META_FLAG_USED
) == 0) &&

922 ((
a_Êags
 & 
TSK_FS_META_FLAG_UNUSED
) == 0)) {

923 
a_Êags
 |(
TSK_FS_META_FLAG_USED
 | 
TSK_FS_META_FLAG_UNUSED
);

932 i‡((
a_Êags
 & 
TSK_FS_META_FLAG_ORPHAN
)

933 && (
fs
->
li°_öum_«med
 =
NULL
)) {

935 i‡(
	`tsk_fs_dú_lﬂd_öum_«med
(
fs
Ë!
TSK_OK
) {

936 
	`°∫ˇt
(
tsk_îr°r2
,

938 
TSK_ERRSTR_L
);

943 i‡((
fs_fûe
 = 
	`tsk_fs_fûe_Æloc
(
fs
)Ë=
NULL
)

946 i‡((
fs_fûe
->
mëa
 =

947 
	`tsk_fs_mëa_Æloc
(
FATFS_FILE_CONTENT_LEN
)Ë=
NULL
)

952 i‡(
°¨t_öum
 =
FATFS_ROOTINO
) {

954 i‡(((
TSK_FS_META_FLAG_ALLOC
 & 
a_Êags
) == TSK_FS_META_FLAG_ALLOC)

955 && ((
TSK_FS_META_FLAG_USED
 & 
a_Êags
) == TSK_FS_META_FLAG_USED)

956 && ((
TSK_FS_META_FLAG_ORPHAN
 & 
a_Êags
) == 0)) {

957 
ªtvÆ
;

959 i‡(
	`Átfs_make_roŸ
(
Átfs
, 
fs_fûe
->
mëa
)) {

960 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

964 
ªtvÆ
 = 
	`a_a˘i⁄
(
fs_fûe
, 
a_±r
);

965 i‡(
ªtvÆ
 =
TSK_WALK_STOP
) {

966 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

969 i‡(
ªtvÆ
 =
TSK_WALK_ERROR
) {

970 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

975 
°¨t_öum
++;

978 i‡(
°¨t_öum
 =
íd_öum
) {

979 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

993 i‡(
tsk_vîbo£
)

994 
	`tsk_Ârötf
(
°dîr
,

997 i‡((
£˘_Æloc
 =

998 (
uöt8_t
 *Ë
	`tsk_mÆloc
((
size_t
Ë((
fs
->
block_cou¡
 +

999 7Ë/ 8))Ë=
NULL
) {

1000 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

1003 i‡((
a_Êags
 & 
TSK_FS_META_FLAG_ORPHAN
) == 0) {

1006 i‡(
	`Átfs_make_roŸ
(
Átfs
, 
fs_fûe
->
mëa
)) {

1007 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

1008 
	`‰ì
(
£˘_Æloc
);

1012 i‡(
	`tsk_fs_fûe_wÆk
(
fs_fûe
,

1013 
TSK_FS_FILE_WALK_FLAG_SLACK
 | 
TSK_FS_FILE_WALK_FLAG_AONLY
,

1014 
öode_wÆk_fûe_a˘
, (*Ë
£˘_Æloc
)) {

1015 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

1016 
	`‰ì
(
£˘_Æloc
);

1021 i‡(
	`tsk_fs_dú_wÆk
(
fs
, fs->
roŸ_öum
,

1022 
TSK_FS_DIR_WALK_FLAG_ALLOC
 | 
TSK_FS_DIR_WALK_FLAG_RECURSE
 |

1023 
TSK_FS_DIR_WALK_FLAG_NOORPHAN
, 
öode_wÆk_dít_a˘
,

1024 (*Ë
£˘_Æloc
)) {

1025 
	`°∫ˇt
(
tsk_îr°r2
,

1026 " - f©fs_öode_wÆk: m≠pög dúe˘‹õs", 
TSK_ERRSTR_L
);

1027 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

1028 
	`‰ì
(
£˘_Æloc
);

1046 i‡(
íd_öum
 > 
fs
->
œ°_öum
 - 
FATFS_NUM_SPECFILE
)

1047 
íd_öum_tmp
 = 
fs
->
œ°_öum
 - 
FATFS_NUM_SPECFILE
;

1049 
íd_öum_tmp
 = 
íd_öum
;

1051 
s£˘
 = 
	`FATFS_INODE_2_SECT
(
Átfs
, 
°¨t_öum
);

1052 
l£˘
 = 
	`FATFS_INODE_2_SECT
(
Átfs
, 
íd_öum_tmp
);

1054 i‡(
s£˘
 > 
fs
->
œ°_block
) {

1055 
	`tsk_îr‹_ª£t
();

1056 
tsk_î∫o
 = 
TSK_ERR_FS_WALK_RNG
;

1057 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

1059 
PRIuDADDR
, 
s£˘
);

1060 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

1061 
	`‰ì
(
£˘_Æloc
);

1064 i‡(
l£˘
 > 
fs
->
œ°_block
) {

1065 
	`tsk_îr‹_ª£t
();

1066 
tsk_î∫o
 = 
TSK_ERR_FS_WALK_RNG
;

1067 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

1069 
PRIuDADDR
, 
l£˘
);

1070 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

1071 
	`‰ì
(
£˘_Æloc
);

1075 
£˘
 = 
s£˘
;

1076 
£˘
 <
l£˘
) {

1077 
˛u°Æloc
;

1078 
size_t
 
£˘_¥oc
;

1079 
size_t
 
sidx
;

1086 i‡(
£˘
 < 
Átfs
->
fú°˛u°£˘
) {

1089 i‡((
a_Êags
 & 
TSK_FS_META_FLAG_ORPHAN
) != 0) {

1090 
£˘
 = 
Átfs
->
fú°˛u°£˘
;

1094 
˛u°Æloc
 = 1;

1097 
˙t
 =

1098 
	`tsk_fs_ªad_block
(
fs
, 
£˘
, 
Átfs
->
döodes
, f©fs->
ssize
);

1099 i‡(
˙t
 !
Átfs
->
ssize
) {

1100 i‡(
˙t
 >= 0) {

1101 
	`tsk_îr‹_ª£t
();

1102 
tsk_î∫o
 = 
TSK_ERR_FS_READ
;

1104 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

1105 "Átfs_öode_wÆk (roŸ dú): se˘‹: %" 
PRIuDADDR
,

1106 
£˘
);

1107 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

1108 
	`‰ì
(
£˘_Æloc
);

1111 
£˘_¥oc
 = 1;

1118 
£˘
 =

1119 
	`FATFS_CLUST_2_SECT
(
Átfs
, (
	`FATFS_SECT_2_CLUST
(fatfs,

1120 
£˘
)));

1126 
˛u°Æloc
 = 
	`Átfs_is_£˘Æloc
(
Átfs
, 
£˘
);

1127 i‡(
˛u°Æloc
 == -1) {

1128 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

1129 
	`‰ì
(
£˘_Æloc
);

1132 i‡((
˛u°Æloc
 == 0)

1133 && ((
a_Êags
 & 
TSK_FS_META_FLAG_UNALLOC
) == 0)) {

1134 
£˘
 +
Átfs
->
csize
;

1143 i‡((
˛u°Æloc
 =1Ë&& (
	`is£t
(
£˘_Æloc
, 
£˘
) == 0)) {

1144 
£˘
 +
Átfs
->
csize
;

1149 i‡(
l£˘
 - 
£˘
 + 1 < 
Átfs
->
csize
)

1150 
£˘_¥oc
 = (
size_t
Ë(
l£˘
 - 
£˘
 + 1);

1152 
£˘_¥oc
 = 
Átfs
->
csize
;

1155 
˙t
 = 
tsk_fs_ªad_block


1156 (
fs
, 
£˘
, 
Átfs
->
döodes
, 
£˘_¥oc
 << f©fs->
ssize_sh
);

1157 i‡(
˙t
 !(
£˘_¥oc
 << 
Átfs
->
ssize_sh
)) {

1158 i‡(
˙t
 >= 0) {

1159 
	`tsk_îr‹_ª£t
();

1160 
tsk_î∫o
 = 
TSK_ERR_FS_READ
;

1162 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

1163 "Átfs_öode_wÆk: se˘‹: %" 
PRIuDADDR
, 
£˘
);

1164 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

1165 
	`‰ì
(
£˘_Æloc
);

1171 
sidx
 = 0; sidx < 
£˘_¥oc
; sidx++) {

1172 
TSK_INUM_T
 
öum
;

1174 
dï
 =

1175 (
Átfs_díåy
 *Ë& 
Átfs
->
döodes
[
sidx
 << f©fs->
ssize_sh
];

1179 i‡((
	`is£t
(
£˘_Æloc
, 
£˘
) == 0) &&

1180 (
	`Átfs_isdíåy
(
Átfs
, 
dï
) == 0)) {

1181 
£˘
++;

1186 i‡(
	`FATFS_SECT_2_INODE
(
Átfs
, 
£˘
 + 1Ë< 
°¨t_öum
) {

1187 
£˘
++;

1192 
öum
 = 
	`FATFS_SECT_2_INODE
(
Átfs
, 
£˘
);

1194 i‡(
tsk_vîbo£
)

1195 
	`tsk_Ârötf
(
°dîr
,

1196 "Átfs_öode_wÆk: Pro˚ssög se˘‹ %" 
PRIuDADDR


1197 " sèπögáàöodê%" 
PRIuINUM
 "\n", 
£˘
, 
öum
);

1200 
didx
 = 0; didx < 
Átfs
->
díåy_˙t_£
;

1201 
didx
++, 
öum
++, 
dï
++) {

1202 
ªtvÆ
;

1203 
TSK_RETVAL_ENUM
 
ªtvÆ2
;

1206 i‡(
öum
 < 
°¨t_öum
)

1210 i‡(
öum
 > 
íd_öum_tmp
) {

1211 
d⁄e
 = 1;

1218 i‡((
dï
->
©åib
 & 
FATFS_ATTR_LFN
) == FATFS_ATTR_LFN)

1224 i‡(((
dï
->
©åib
 & 
FATFS_ATTR_DIRECTORY
)

1225 =
FATFS_ATTR_DIRECTORY
)

1226 && (
dï
->
«me
[0] == '.'))

1235 i‡(
˛u°Æloc
 == 1) {

1236 
myÊags
 =

1237 ((
dï
->
«me
[0] ==

1238 
FATFS_SLOT_DELETED
Ë? 
TSK_FS_META_FLAG_UNALLOC


1239 : 
TSK_FS_META_FLAG_ALLOC
);

1242 
myÊags
 = 
TSK_FS_META_FLAG_UNALLOC
;

1245 i‡((
a_Êags
 & 
myÊags
) != myflags)

1249 
myÊags
 |((
dï
->
«me
[0] =
FATFS_SLOT_EMPTY
) ?

1250 
TSK_FS_META_FLAG_UNUSED
 : 
TSK_FS_META_FLAG_USED
);

1252 i‡((
a_Êags
 & 
myÊags
) != myflags)

1258 i‡((
myÊags
 & 
TSK_FS_META_FLAG_UNALLOC
) &&

1259 (
a_Êags
 & 
TSK_FS_META_FLAG_ORPHAN
) &&

1260 (
	`tsk_li°_föd
(
fs
->
li°_öum_«med
, 
öum
))) {

1265 i‡(0 =
	`Átfs_isdíåy
(
Átfs
, 
dï
))

1268 i‡((
ªtvÆ2
 =

1269 
	`Átfs_döode_c›y
(
Átfs
, 
fs_fûe
->
mëa
, 
dï
, 
£˘
,

1270 
öum
)Ë!
TSK_OK
) {

1272 i‡(
ªtvÆ2
 =
TSK_COR
) {

1273 i‡(
tsk_vîbo£
)

1274 
	`tsk_îr‹_¥öt
(
°dîr
);

1275 
	`tsk_îr‹_ª£t
();

1279 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

1280 
	`‰ì
(
£˘_Æloc
);

1285 i‡(
tsk_vîbo£
)

1286 
	`tsk_Ârötf
(
°dîr
,

1287 "Átfs_öode_wÆk: Dúe˘‹y E¡ry %" 
PRIuINUM


1288 " (%uË© se˘‹ %" 
PRIuDADDR
 "\n", 
öum
, 
didx
,

1289 
£˘
);

1291 
ªtvÆ
 = 
	`a_a˘i⁄
(
fs_fûe
, 
a_±r
);

1292 i‡(
ªtvÆ
 =
TSK_WALK_STOP
) {

1293 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

1294 
	`‰ì
(
£˘_Æloc
);

1297 i‡(
ªtvÆ
 =
TSK_WALK_ERROR
) {

1298 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

1299 
	`‰ì
(
£˘_Æloc
);

1303 
£˘
++;

1304 i‡(
d⁄e
)

1307 i‡(
d⁄e
)

1312 
	`‰ì
(
£˘_Æloc
);

1316 i‡((
íd_öum
 > 
fs
->
œ°_öum
 - 
FATFS_NUM_SPECFILE
)

1317 && (
a_Êags
 & 
TSK_FS_META_FLAG_ALLOC
)

1318 && (
a_Êags
 & 
TSK_FS_META_FLAG_USED
)

1319 && ((
a_Êags
 & 
TSK_FS_META_FLAG_ORPHAN
) == 0)) {

1320 
TSK_INUM_T
 
öum
;

1323 
öum
 = 
fs
->
œ°_öum
 - 
FATFS_NUM_SPECFILE
 + 1;

1324 
öum
 <
íd_öum
; inum++) {

1325 
ªtvÆ
;

1327 
	`tsk_fs_mëa_ª£t
(
fs_fûe
->
mëa
);

1329 i‡(
öum
 =
	`FATFS_MBRINO
(
fs
)) {

1330 i‡(
	`Átfs_make_mbr
(
Átfs
, 
fs_fûe
->
mëa
)) {

1331 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

1335 i‡(
öum
 =
	`FATFS_FAT1INO
(
fs
)) {

1336 i‡(
	`Átfs_make_Át
(
Átfs
, 1, 
fs_fûe
->
mëa
)) {

1337 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

1341 i‡(
öum
 =
	`FATFS_FAT2INO
(
fs
)) {

1342 i‡(
	`Átfs_make_Át
(
Átfs
, 2, 
fs_fûe
->
mëa
)) {

1343 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

1347 i‡(
öum
 =
	`TSK_FS_ORPHANDIR_INUM
(
fs
)) {

1348 i‡(
	`tsk_fs_dú_make_‹ph™_dú_mëa
(
fs
, 
fs_fûe
->
mëa
)) {

1349 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

1354 
ªtvÆ
 = 
	`a_a˘i⁄
(
fs_fûe
, 
a_±r
);

1355 i‡(
ªtvÆ
 =
TSK_WALK_STOP
) {

1356 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

1359 i‡(
ªtvÆ
 =
TSK_WALK_ERROR
) {

1360 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

1366 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

1368 
	}
}

1377 
uöt8_t


1378 
	$Átfs_öode_lookup
(
TSK_FS_INFO
 * 
fs
, 
TSK_FS_FILE
 * 
a_fs_fûe
,

1379 
TSK_INUM_T
 
öum
)

1381 
FATFS_INFO
 *
Átfs
 = (FATFS_INFO *Ë
fs
;

1382 
ssize_t
 
˙t
;

1383 
TSK_DADDR_T
 
£˘
;

1384 
size_t
 
off
;

1385 
TSK_RETVAL_ENUM
 
ªtvÆ
;

1388 
	`tsk_îr‹_ª£t
();

1393 i‡(
öum
 < 
fs
->
fú°_öum
 || inum > fs->
œ°_öum
) {

1394 
	`tsk_îr‹_ª£t
();

1395 
tsk_î∫o
 = 
TSK_ERR_FS_INODE_NUM
;

1396 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

1397 "Átfs_öode_lookup: %" 
PRIuINUM
 "Åoÿœrge/smÆl", 
öum
);

1401 i‡(
a_fs_fûe
 =
NULL
) {

1402 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

1403 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

1408 i‡(
a_fs_fûe
->
mëa
 =
NULL
) {

1409 i‡((
a_fs_fûe
->
mëa
 =

1410 
	`tsk_fs_mëa_Æloc
(
FATFS_FILE_CONTENT_LEN
)Ë=
NULL
)

1414 
	`tsk_fs_mëa_ª£t
(
a_fs_fûe
->
mëa
);

1418 i‡(
öum
 =
FATFS_ROOTINO
) {

1419 
Átfs
->
dï
 = 
NULL
;

1420 i‡(
	`Átfs_make_roŸ
(
Átfs
, 
a_fs_fûe
->
mëa
))

1425 i‡(
öum
 =
	`FATFS_MBRINO
(
fs
)) {

1426 
Átfs
->
dï
 = 
NULL
;

1427 i‡(
	`Átfs_make_mbr
(
Átfs
, 
a_fs_fûe
->
mëa
))

1432 i‡(
öum
 =
	`FATFS_FAT1INO
(
fs
)) {

1433 
Átfs
->
dï
 = 
NULL
;

1434 i‡(
	`Átfs_make_Át
(
Átfs
, 1, 
a_fs_fûe
->
mëa
))

1439 i‡(
öum
 =
	`FATFS_FAT2INO
(
fs
)) {

1440 
Átfs
->
dï
 = 
NULL
;

1441 i‡(
	`Átfs_make_Át
(
Átfs
, 2, 
a_fs_fûe
->
mëa
))

1446 i‡(
öum
 =
	`TSK_FS_ORPHANDIR_INUM
(
fs
)) {

1447 
Átfs
->
dï
 = 
NULL
;

1448 i‡(
	`tsk_fs_dú_make_‹ph™_dú_mëa
(
fs
, 
a_fs_fûe
->
mëa
))

1455 
£˘
 = 
	`FATFS_INODE_2_SECT
(
Átfs
, 
öum
);

1456 
off
 = 
	`FATFS_INODE_2_OFF
(
Átfs
, 
öum
);

1458 i‡(
£˘
 > 
fs
->
œ°_block
) {

1459 
	`tsk_îr‹_ª£t
();

1460 
tsk_î∫o
 = 
TSK_ERR_FS_INODE_NUM
;

1461 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

1462 "Átfs_öode_lookup: Inodê%" 
PRIuINUM


1463 " i¿£˘‹Åoÿbig f‹ image: %" 
PRIuDADDR
, 
öum
, 
£˘
);

1468 i‡(
tsk_vîbo£
)

1469 
	`tsk_Ârötf
(
°dîr
,

1470 "Átfs_öode_lookup:Ñódög se˘‹ %" 
PRIuDADDR


1471 " f‹ inodê%" 
PRIuINUM
 "\n", 
£˘
, 
öum
);

1473 
˙t
 = 
	`tsk_fs_ªad_block
(
fs
, 
£˘
, 
Átfs
->
döodes
, f©fs->
ssize
);

1474 i‡(
˙t
 !
Átfs
->
ssize
) {

1475 i‡(
˙t
 >= 0) {

1476 
	`tsk_îr‹_ª£t
();

1477 
tsk_î∫o
 = 
TSK_ERR_FS_READ
;

1479 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

1480 "Átfs_öode_lookup: block: %" 
PRIuDADDR
, 
£˘
);

1484 
Átfs
->
dï
 = (
Átfs_díåy
 *Ë& f©fs->
döodes
[
off
];

1485 i‡(
	`Átfs_isdíåy
(
Átfs
, f©fs->
dï
)) {

1486 i‡((
ªtvÆ
 =

1487 
	`Átfs_döode_c›y
(
Átfs
, 
a_fs_fûe
->
mëa
, f©fs->
dï
, 
£˘
,

1488 
öum
)Ë!
TSK_OK
) {

1491 i‡(
ªtvÆ
 =
TSK_ERR
) {

1495 i‡(
tsk_vîbo£
)

1496 
	`tsk_îr‹_¥öt
(
°dîr
);

1497 
	`tsk_îr‹_ª£t
();

1503 
	`tsk_îr‹_ª£t
();

1504 
tsk_î∫o
 = 
TSK_ERR_FS_INODE_NUM
;

1505 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

1506 "Átfs_öode_lookup: %" 
PRIuINUM
 " i†nŸá¿öode", 
öum
);

1509 
	}
}

1520 
uöt8_t


1521 
	$Átfs_make_d©a_run
(
TSK_FS_FILE
 * 
a_fs_fûe
)

1523 
TSK_FS_INFO
 *
fs
;

1524 
TSK_DADDR_T
 
˛u°
;

1525 
TSK_OFF_T
 
size_ªmaö
;

1526 
TSK_FS_ATTR
 *
fs_©å
 = 
NULL
;

1527 
TSK_FS_META
 *
fs_mëa
;

1528 
FATFS_INFO
 *
Átfs
;

1530 i‡((
a_fs_fûe
 =
NULL
Ë|| (a_fs_fûe->
mëa
 == NULL)

1531 || (
a_fs_fûe
->
fs_öfo
 =
NULL
)) {

1532 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

1533 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

1537 
fs_mëa
 = 
a_fs_fûe
->
mëa
;

1538 
fs
 = 
a_fs_fûe
->
fs_öfo
;

1539 
Átfs
 = (
FATFS_INFO
 *Ë
fs
;

1541 
˛u°
 = ((
TSK_DADDR_T
 *Ë
fs_mëa
->
c⁄ã¡_±r
)[0];

1542 
size_ªmaö
 = 
	`roundup
(
fs_mëa
->
size
, 
Átfs
->
csize
 * 
fs
->
block_size
);

1545 i‡((
fs_mëa
->
©å
 !
NULL
)

1546 && (
fs_mëa
->
©å_°©e
 =
TSK_FS_META_ATTR_STUDIED
)) {

1549 i‡(
fs_mëa
->
©å_°©e
 =
TSK_FS_META_ATTR_ERROR
) {

1553 i‡(
fs_mëa
->
©å
 !
NULL
) {

1554 
	`tsk_fs_©åli°_m¨kunu£d
(
fs_mëa
->
©å
);

1556 i‡(
fs_mëa
->
©å
 =
NULL
) {

1557 
fs_mëa
->
©å
 = 
	`tsk_fs_©åli°_Æloc
();

1561 i‡((
˛u°
 > (
Átfs
->
œ°˛u°
)) &&

1562 (
	`FATFS_ISEOF
(
˛u°
, 
Átfs
->
mask
) == 0)) {

1563 
fs_mëa
->
©å_°©e
 = 
TSK_FS_META_ATTR_ERROR
;

1564 
	`tsk_îr‹_ª£t
();

1565 i‡(
a_fs_fûe
->
mëa
->
Êags
 & 
TSK_FS_META_FLAG_UNALLOC
)

1566 
tsk_î∫o
 = 
TSK_ERR_FS_RECOVER
;

1568 
tsk_î∫o
 = 
TSK_ERR_FS_INODE_COR
;

1569 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

1571 
PRIuDADDR
, 
˛u°
);

1579 i‡((
a_fs_fûe
->
mëa
->
addr
 =
FATFS_ROOTINO
)

1580 && (
fs
->
·y≥
 !
TSK_FS_TYPE_FAT32
Ë&& (
˛u°
 == 1)) {

1581 
TSK_FS_ATTR_RUN
 *
d©a_run
;

1583 i‡(
tsk_vîbo£
)

1584 
	`tsk_Ârötf
(
°dîr
,

1588 
d©a_run
 = 
	`tsk_fs_©å_run_Æloc
();

1589 i‡(
d©a_run
 =
NULL
) {

1592 
d©a_run
->
addr
 = 
Átfs
->
roŸ£˘
;

1593 
d©a_run
->
Àn
 = 
Átfs
->
fú°˛u°£˘
 - f©fs->
fú°d©a£˘
;

1595 i‡((
fs_©å
 =

1596 
	`tsk_fs_©åli°_gë√w
(
fs_mëa
->
©å
,

1597 
TSK_FS_ATTR_NONRES
)Ë=
NULL
) {

1602 i‡(
	`tsk_fs_©å_£t_run
(
a_fs_fûe
, 
fs_©å
, 
d©a_run
, 
NULL
,

1603 
TSK_FS_ATTR_TYPE_DEFAULT
, 
TSK_FS_ATTR_ID_DEFAULT
,

1604 
d©a_run
->
Àn
 * 
fs
->
block_size
,

1605 
d©a_run
->
Àn
 * 
fs
->
block_size
,

1606 
d©a_run
->
Àn
 * 
fs
->
block_size
, 0, 0)) {

1610 
fs_mëa
->
©å_°©e
 = 
TSK_FS_META_ATTR_STUDIED
;

1615 i‡((
a_fs_fûe
->
mëa
->
addr
 > 
fs
->
œ°_öum
 - 
FATFS_NUM_SPECFILE
)

1616 && (
a_fs_fûe
->
mëa
->
addr
 !
	`TSK_FS_ORPHANDIR_INUM
(
fs
))) {

1617 
TSK_FS_ATTR_RUN
 *
d©a_run
;

1619 i‡(
tsk_vîbo£
)

1620 
	`tsk_Ârötf
(
°dîr
,

1621 "Átfs_make_d©a_run: Lﬂdög s≥cü»fûe: %" 
PRIuINUM


1622 "\n", 
a_fs_fûe
->
mëa
->
addr
);

1625 
d©a_run
 = 
	`tsk_fs_©å_run_Æloc
();

1626 i‡(
d©a_run
 =
NULL
) {

1629 
d©a_run
->
addr
 = 
˛u°
;

1630 
d©a_run
->
Àn
 = 
a_fs_fûe
->
mëa
->
size
 / 
fs
->
block_size
;

1632 i‡((
fs_©å
 =

1633 
	`tsk_fs_©åli°_gë√w
(
fs_mëa
->
©å
,

1634 
TSK_FS_ATTR_NONRES
)Ë=
NULL
) {

1639 i‡(
	`tsk_fs_©å_£t_run
(
a_fs_fûe
, 
fs_©å
, 
d©a_run
, 
NULL
,

1640 
TSK_FS_ATTR_TYPE_DEFAULT
, 
TSK_FS_ATTR_ID_DEFAULT
,

1641 
d©a_run
->
Àn
 * 
fs
->
block_size
,

1642 
d©a_run
->
Àn
 * 
fs
->
block_size
,

1643 
d©a_run
->
Àn
 * 
fs
->
block_size
, 0, 0)) {

1647 
fs_mëa
->
©å_°©e
 = 
TSK_FS_META_ATTR_STUDIED
;

1657 i‡(
fs_mëa
->
Êags
 & 
TSK_FS_META_FLAG_UNALLOC
) {

1658 
TSK_DADDR_T
 
sba£
;

1659 
TSK_DADDR_T
 
°¨t˛u°
 = 
˛u°
;

1660 
TSK_OFF_T
 
ªcovîsize
 = 
fs_mëa
->
size
;

1661 
ªtvÆ
;

1662 
TSK_FS_ATTR_RUN
 *
d©a_run
 = 
NULL
;

1663 
TSK_FS_ATTR_RUN
 *
d©a_run_hód
 = 
NULL
;

1664 
TSK_OFF_T
 
fuŒ_Àn_s
 = 0;

1665 
uöt8_t
 
ˇnRecovî
 = 1;

1667 i‡(
tsk_vîbo£
)

1668 
	`tsk_Ârötf
(
°dîr
,

1669 "Átfs_make_d©a_run: Pro˚ssög dñëed fûê%" 
PRIuINUM


1670 " i¿ªcovîy mode\n", 
fs_mëa
->
addr
);

1680 
sba£
 = 
	`FATFS_CLUST_2_SECT
(
Átfs
, 
°¨t˛u°
);

1682 i‡(
sba£
 > 
fs
->
œ°_block
) {

1683 
	`tsk_îr‹_ª£t
();

1684 
tsk_î∫o
 = 
TSK_ERR_FS_RECOVER
;

1685 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

1687 
PRIuDADDR
, 
sba£
);

1688 
fs_mëa
->
©å_°©e
 = 
TSK_FS_META_ATTR_ERROR
;

1695 
ªtvÆ
 = 
	`Átfs_is_˛u°Æloc
(
Átfs
, 
°¨t˛u°
);

1696 i‡(
ªtvÆ
 != 0) {

1697 
ˇnRecovî
 = 0;

1705 
˛u°
 = 
°¨t˛u°
;

1706 
size_ªmaö
 = 
ªcovîsize
;

1709 ((
öt64_t
Ë
size_ªmaö
 > 0Ë&& (
ˇnRecovî
)) {

1710 
ªtvÆ
;

1711 
sba£
 = 
	`FATFS_CLUST_2_SECT
(
Átfs
, 
˛u°
);

1716 i‡(
sba£
 > 
fs
->
œ°_block
) {

1717 
ˇnRecovî
 = 0;

1719 i‡(
tsk_vîbo£
)

1720 
	`tsk_Ârötf
(
°dîr
,

1726 
ªtvÆ
 = 
	`Átfs_is_˛u°Æloc
(
Átfs
, 
˛u°
);

1727 i‡(
ªtvÆ
 == -1) {

1728 
ˇnRecovî
 = 0;

1731 i‡(
ªtvÆ
 == 1) {

1732 
˛u°
++;

1738 i‡((
d©a_run
 =
NULL
)

1739 || (
d©a_run
->
addr
 + d©a_run->
Àn
 !
sba£
)) {

1741 
TSK_FS_ATTR_RUN
 *
d©a_run_tmp
 = 
	`tsk_fs_©å_run_Æloc
();

1742 i‡(
d©a_run_tmp
 =
NULL
) {

1743 
fs_mëa
->
©å_°©e
 = 
TSK_FS_META_ATTR_ERROR
;

1744 
	`tsk_fs_©å_run_‰ì
(
d©a_run_hód
);

1748 i‡(
d©a_run_hód
 =
NULL
) {

1749 
d©a_run_hód
 = 
d©a_run_tmp
;

1750 
d©a_run_tmp
->
off£t
 = 0;

1752 i‡(
d©a_run
 !
NULL
) {

1753 
d©a_run
->
√xt
 = 
d©a_run_tmp
;

1754 
d©a_run_tmp
->
off£t
 =

1755 
d©a_run
->
off£t
 + d©a_run->
Àn
;

1757 
d©a_run
 = 
d©a_run_tmp
;

1758 
d©a_run
->
Àn
 = 0;

1759 
d©a_run
->
addr
 = 
sba£
;

1761 
d©a_run
->
Àn
 +
Átfs
->
csize
;

1762 
fuŒ_Àn_s
 +
Átfs
->
csize
;

1764 
size_ªmaö
 -(
Átfs
->
csize
 << f©fs->
ssize_sh
);

1765 
˛u°
++;

1769 i‡((
fs_©å
 =

1770 
	`tsk_fs_©åli°_gë√w
(
fs_mëa
->
©å
,

1771 
TSK_FS_ATTR_NONRES
)Ë=
NULL
) {

1772 
fs_mëa
->
©å_°©e
 = 
TSK_FS_META_ATTR_ERROR
;

1776 i‡(
ˇnRecovî
) {

1780 i‡(
	`tsk_fs_©å_£t_run
(
a_fs_fûe
, 
fs_©å
, 
d©a_run_hód
,

1781 
NULL
, 
TSK_FS_ATTR_TYPE_DEFAULT
, 
TSK_FS_ATTR_ID_DEFAULT
,

1782 
fs_mëa
->
size
, fs_mëa->size, 
	`roundup
(fs_meta->size,

1783 
Átfs
->
csize
 * 
fs
->
block_size
), 0, 0)) {

1784 
fs_mëa
->
©å_°©e
 = 
TSK_FS_META_ATTR_ERROR
;

1788 
fs_mëa
->
©å_°©e
 = 
TSK_FS_META_ATTR_STUDIED
;

1792 
TSK_FS_ATTR_RUN
 *
d©a_run_tmp
 = 
	`tsk_fs_©å_run_Æloc
();

1793 i‡(
d©a_run_tmp
 =
NULL
) {

1794 
fs_mëa
->
©å_°©e
 = 
TSK_FS_META_ATTR_ERROR
;

1797 
d©a_run_tmp
->
addr
 = 
sba£
;

1798 
d©a_run_tmp
->
Àn
 = 
Átfs
->
csize
;

1801 i‡(
	`tsk_fs_©å_£t_run
(
a_fs_fûe
, 
fs_©å
, 
d©a_run_tmp
, 
NULL
,

1802 
TSK_FS_ATTR_TYPE_DEFAULT
, 
TSK_FS_ATTR_ID_DEFAULT
,

1803 
fs_mëa
->
size
, fs_mëa->size, 
	`roundup
(fs_meta->size,

1804 
Átfs
->
csize
 * 
fs
->
block_size
), 0, 0)) {

1805 
fs_mëa
->
©å_°©e
 = 
TSK_FS_META_ATTR_ERROR
;

1809 
fs_mëa
->
©å_°©e
 = 
TSK_FS_META_ATTR_STUDIED
;

1817 
TSK_LIST
 *
li°_£í
 = 
NULL
;

1818 
TSK_FS_ATTR_RUN
 *
d©a_run
 = 
NULL
;

1819 
TSK_FS_ATTR_RUN
 *
d©a_run_hód
 = 
NULL
;

1820 
TSK_OFF_T
 
fuŒ_Àn_s
 = 0;

1821 
TSK_DADDR_T
 
sba£
;

1823 i‡(
tsk_vîbo£
)

1824 
	`tsk_Ârötf
(
°dîr
,

1825 "Átfs_make_d©a_run: Pro˚ssög fûê%" 
PRIuINUM


1826 " i¿n‹mÆ mode\n", 
fs_mëa
->
addr
);

1829 (
˛u°
 & 
Átfs
->
mask
Ë> 0 && (
öt64_t
Ë
size_ªmaö
 > 0 &&

1830 (0 =
	`FATFS_ISEOF
(
˛u°
, 
Átfs
->
mask
))) {

1833 
sba£
 = 
	`FATFS_CLUST_2_SECT
(
Átfs
, 
˛u°
);

1835 i‡(
sba£
 > 
fs
->
œ°_block
) {

1836 
fs_mëa
->
©å_°©e
 = 
TSK_FS_META_ATTR_ERROR
;

1837 
	`tsk_îr‹_ª£t
();

1839 
tsk_î∫o
 = 
TSK_ERR_FS_INODE_COR
;

1840 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

1842 
PRIuDADDR
, 
sba£
);

1848 i‡((
d©a_run
 =
NULL
)

1849 || (
d©a_run
->
addr
 + d©a_run->
Àn
 !
sba£
)) {

1851 
TSK_FS_ATTR_RUN
 *
d©a_run_tmp
 = 
	`tsk_fs_©å_run_Æloc
();

1852 i‡(
d©a_run_tmp
 =
NULL
) {

1853 
	`tsk_fs_©å_run_‰ì
(
d©a_run_hód
);

1854 
fs_mëa
->
©å_°©e
 = 
TSK_FS_META_ATTR_ERROR
;

1858 i‡(
d©a_run_hód
 =
NULL
) {

1859 
d©a_run_hód
 = 
d©a_run_tmp
;

1860 
d©a_run_tmp
->
off£t
 = 0;

1862 i‡(
d©a_run
 !
NULL
) {

1863 
d©a_run
->
√xt
 = 
d©a_run_tmp
;

1864 
d©a_run_tmp
->
off£t
 =

1865 
d©a_run
->
off£t
 + d©a_run->
Àn
;

1867 
d©a_run
 = 
d©a_run_tmp
;

1868 
d©a_run
->
Àn
 = 0;

1869 
d©a_run
->
addr
 = 
sba£
;

1872 
d©a_run
->
Àn
 +
Átfs
->
csize
;

1873 
fuŒ_Àn_s
 +
Átfs
->
csize
;

1874 
size_ªmaö
 -(
Átfs
->
csize
 * 
fs
->
block_size
);

1876 i‡((
öt64_t
Ë
size_ªmaö
 > 0) {

1877 
TSK_DADDR_T
 
nxt
;

1878 i‡(
	`Átfs_gëFAT
(
Átfs
, 
˛u°
, &
nxt
)) {

1879 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

1880 "fûêwÆk: Inode: %" 
PRIuINUM
 " cluster: %"

1881 
PRIuDADDR
, 
fs_mëa
->
addr
, 
˛u°
);

1882 
fs_mëa
->
©å_°©e
 = 
TSK_FS_META_ATTR_ERROR
;

1883 
	`tsk_fs_©å_run_‰ì
(
d©a_run_hód
);

1884 
	`tsk_li°_‰ì
(
li°_£í
);

1885 
li°_£í
 = 
NULL
;

1888 
˛u°
 = 
nxt
;

1891 i‡(
	`tsk_li°_föd
(
li°_£í
, 
˛u°
)) {

1892 i‡(
tsk_vîbo£
)

1893 
	`tsk_Ârötf
(
°dîr
,

1898 i‡(
	`tsk_li°_add
(&
li°_£í
, 
˛u°
)) {

1899 
fs_mëa
->
©å_°©e
 = 
TSK_FS_META_ATTR_ERROR
;

1900 
	`tsk_li°_‰ì
(
li°_£í
);

1901 
li°_£í
 = 
NULL
;

1908 i‡((
fs_©å
 =

1909 
	`tsk_fs_©åli°_gë√w
(
fs_mëa
->
©å
,

1910 
TSK_FS_ATTR_NONRES
)Ë=
NULL
) {

1911 
fs_mëa
->
©å_°©e
 = 
TSK_FS_META_ATTR_ERROR
;

1915 i‡(
	`tsk_fs_©å_£t_run
(
a_fs_fûe
, 
fs_©å
, 
d©a_run_hód
, 
NULL
,

1916 
TSK_FS_ATTR_TYPE_DEFAULT
, 
TSK_FS_ATTR_ID_DEFAULT
,

1917 
fs_mëa
->
size
, fs_mëa->size, 
	`roundup
(fs_meta->size,

1918 
Átfs
->
csize
 * 
fs
->
block_size
), 0, 0)) {

1919 
fs_mëa
->
©å_°©e
 = 
TSK_FS_META_ATTR_ERROR
;

1923 
	`tsk_li°_‰ì
(
li°_£í
);

1924 
li°_£í
 = 
NULL
;

1926 
fs_mëa
->
©å_°©e
 = 
TSK_FS_META_ATTR_STUDIED
;

1929 
	}
}

	@tsk3/fs/ffind_lib.c

27 
	~"tsk_fs_i.h
"

30 
uöt8_t


31 
¡fs_föd_fûe
(
TSK_FS_INFO
 *, 
TSK_INUM_T
, 
uöt32_t
, 
uöt8_t
,

32 
uöt16_t
, 
uöt8_t
, , 
TSK_FS_DIR_WALK_CB
, *
±r
);

39 
TSK_INUM_T
 
	möode
;

40 
uöt8_t
 
	mÊags
;

41 
uöt8_t
 
	mfound
;

42 } 
	tFFIND_DATA
;

45 
TSK_WALK_RET_ENUM


46 
	$föd_fûe_a˘
(
TSK_FS_FILE
 * 
fs_fûe
, c⁄° *
a_∑th
, *
±r
)

48 
FFIND_DATA
 *
d©a
 = (FFIND_DATA *Ë
±r
;

51 i‡(
fs_fûe
->
«me
->
mëa_addr
 =
d©a
->
öode
) {

52 
d©a
->
found
 = 1;

53 i‡(
fs_fûe
->
«me
->
Êags
 & 
TSK_FS_NAME_FLAG_UNALLOC
)

54 
	`tsk_¥ötf
("* ");

56 
	`tsk_¥ötf
("/%s%s\n", 
a_∑th
, 
fs_fûe
->
«me
->name);

58 i‡(!(
d©a
->
Êags
 & 
TSK_FS_FFIND_ALL
)) {

59  
TSK_WALK_STOP
;

62  
TSK_WALK_CONT
;

63 
	}
}

67 
uöt8_t


68 
	$tsk_fs_fföd
(
TSK_FS_INFO
 * 
fs
, 
TSK_FS_FFIND_FLAG_ENUM
 
l˛Êags
,

69 
TSK_INUM_T
 
a_öode
,

70 
TSK_FS_ATTR_TYPE_ENUM
 
ty≥
, 
uöt8_t
 
ty≥_u£d
,

71 
uöt16_t
 
id
, 
uöt8_t
 
id_u£d
, 
TSK_FS_DIR_WALK_FLAG_ENUM
 
Êags
)

73 
FFIND_DATA
 
d©a
;

75 
d©a
.
found
 = 0;

76 
d©a
.
Êags
 = 
l˛Êags
;

77 
d©a
.
öode
 = 
a_öode
;

82 i‡(
d©a
.
öode
 =
fs
->
roŸ_öum
) {

83 i‡(
Êags
 & 
TSK_FS_DIR_WALK_FLAG_ALLOC
) {

84 
	`tsk_¥ötf
("/\n");

85 
d©a
.
found
 = 1;

87 i‡(!(
l˛Êags
 & 
TSK_FS_FFIND_ALL
))

92 i‡(
	`TSK_FS_TYPE_ISNTFS
(
fs
->
·y≥
)) {

93 i‡(
	`¡fs_föd_fûe
(
fs
, 
d©a
.
öode
, 
ty≥
, 
ty≥_u£d
, 
id
, 
id_u£d
,

94 
Êags
, 
föd_fûe_a˘
, &
d©a
))

98 i‡(
	`tsk_fs_dú_wÆk
(
fs
, fs->
roŸ_öum
, 
Êags
, 
föd_fûe_a˘
,

99 &
d©a
))

103 i‡(
d©a
.
found
 == 0) {

108 i‡(
	`TSK_FS_TYPE_ISFAT
(
fs
->
·y≥
)) {

109 
TSK_FS_FILE
 *
fs_fûe
 =

110 
	`tsk_fs_fûe_›í_mëa
(
fs
, 
NULL
, 
d©a
.
öode
);

111 i‡((
fs_fûe
 !
NULL
Ë&& (fs_fûe->
mëa
 != NULL)

112 && (
fs_fûe
->
mëa
->
«me2
 !
NULL
)) {

113 i‡(
fs_fûe
->
mëa
->
Êags
 & 
TSK_FS_META_FLAG_UNALLOC
)

114 
	`tsk_¥ötf
("* ");

115 
	`tsk_¥ötf
("%s/%s\n", 
TSK_FS_ORPHAN_STR
,

116 
fs_fûe
->
mëa
->
«me2
->
«me
);

118 i‡(
fs_fûe
)

119 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

122 
	`tsk_¥ötf
("FileÇameÇot found for inode\n");

126 
	}
}

	@tsk3/fs/ffs.c

30 
	~"tsk_fs_i.h
"

31 
	~"tsk_ffs.h
"

39 
uöt8_t


40 
	$ffs_group_lﬂd
(
FFS_INFO
 * 
ffs
, 
FFS_GRPNUM_T
 
gΩ_num
)

42 
TSK_DADDR_T
 
addr
;

43 
TSK_FS_INFO
 *
fs
 = (TSK_FS_INFO *Ë& 
ffs
->
fs_öfo
;

48 i‡(
gΩ_num
 < 0 || gΩ_num >
ffs
->
groups_cou¡
) {

49 
	`tsk_îr‹_ª£t
();

50 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

51 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

53 
PRI_FFSGRP
 "", 
gΩ_num
);

62 i‡(
ffs
->
gΩ_buf
 =
NULL
) {

63 i‡((
ffs
->
gΩ_buf
 = 
	`tsk_mÆloc
(ffs->
ffsbsize_b
)Ë=
NULL
)

67 
addr
 = 
	`cgtod_l˛
(
fs
, 
ffs
->fs.
sb1
, 
gΩ_num
);

68 i‡(
ffs
->
gΩ_addr
 !
addr
) {

69 
ffs_cgd
 *
cg
;

70 
ssize_t
 
˙t
;

71 
˙t
 = 
	`tsk_fs_ªad_block
(
fs
, 
addr
, 
ffs
->
gΩ_buf
, ffs->
ffsbsize_b
);

72 i‡(
˙t
 !
ffs
->
ffsbsize_b
) {

73 i‡(
˙t
 >= 0) {

74 
	`tsk_îr‹_ª£t
();

75 
tsk_î∫o
 = 
TSK_ERR_FS_READ
;

77 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

78 "ffs_group_lﬂd: Grou∞%" 
PRI_FFSGRP
 "áà%" 
PRIuDADDR
,

79 
gΩ_num
, 
addr
);

82 
ffs
->
gΩ_addr
 = 
addr
;

85 
cg
 = (
ffs_cgd
 *Ë
ffs
->
gΩ_buf
;

86 i‡((
	`tsk_gës32
(
fs
->
ídün
, 
cg
->
cg_iu£doff
Ë> 
ffs
->
ffsbsize_b
)

87 || (
	`tsk_gës32
(
fs
->
ídün
, 
cg
->
cg_‰ìoff
Ë> 
ffs
->
ffsbsize_b
)) {

88 
	`tsk_îr‹_ª£t
();

89 
tsk_î∫o
 = 
TSK_ERR_FS_CORRUPT
;

90 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

91 "ffs_group_lﬂd: Grou∞%" 
PRI_FFSGRP


92 " des¸ùt‹ off£t†toÿœrgê© %" 
PRIuDADDR
, 
gΩ_num
,

93 
addr
);

98 
ffs
->
gΩ_num
 = grp_num;

100 
	}
}

108 
uöt8_t


109 
	$ffs_döode_lﬂd
(
FFS_INFO
 * 
ffs
, 
TSK_INUM_T
 
öum
)

111 
TSK_DADDR_T
 
addr
;

112 
TSK_OFF_T
 
offs
;

113 
TSK_FS_INFO
 *
fs
 = (TSK_FS_INFO *Ë& 
ffs
->
fs_öfo
;

119 i‡(
öum
 < 
fs
->
fú°_öum
 || inum > fs->
œ°_öum
 - 1) {

120 
	`tsk_îr‹_ª£t
();

121 
tsk_î∫o
 = 
TSK_ERR_FS_INODE_NUM
;

122 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

123 "ffs_döode_lﬂd:áddªss: %" 
PRIuINUM
, 
öum
);

130 i‡(
ffs
->
ôbl_buf
 =
NULL
) {

131 i‡((
ffs
->
ôbl_buf
 = 
	`tsk_mÆloc
(ffs->
ffsbsize_b
)Ë=
NULL
)

141 i‡(
fs
->
·y≥
 =
TSK_FS_TYPE_FFS2
) {

142 
ffs_cgd2
 *
cg2
;

143 
FFS_GRPNUM_T
 
gΩ_num
;

145 i‡(
ffs
->
döo_buf
 =
NULL
) {

146 
ffs
->
döo_buf
 = (*Ë
	`tsk_mÆloc
((
ffs_öode2
));

147 i‡(
ffs
->
döo_buf
 =
NULL
)

150 i‡(
ffs
->
döo_öum
 =
öum
) {

157 
gΩ_num
 = (
FFS_GRPNUM_T
Ë
	`ôog_l˛
(
fs
, 
ffs
->fs.
sb1
, 
öum
);

158 i‡((
ffs
->
gΩ_buf
 =
NULL
Ë|| (
gΩ_num
 != ffs->grp_num)) {

159 i‡(
	`ffs_group_lﬂd
(
ffs
, 
gΩ_num
)) {

164 
cg2
 = (
ffs_cgd2
 *Ë
ffs
->
gΩ_buf
;

167 i‡((
öum
 - 
gΩ_num
 * 
	`tsk_gëu32
(
fs
->
ídün
,

168 
ffs
->
fs
.
sb2
->
cg_öode_num
)Ë>
	`tsk_gëu32
(fs->
ídün
,

169 
cg2
->
cg_öôediblk
)) {

170 
	`mem£t
((*Ë
ffs
->
döo_buf
, 0, (
ffs_öode2
));

174 
ssize_t
 
˙t
;

176 
addr
 = 
	`ôod_l˛
(
fs
, 
ffs
->fs.
sb1
, 
öum
);

178 i‡(
ffs
->
ôbl_addr
 !
addr
) {

179 
˙t
 = 
tsk_fs_ªad_block


180 (
fs
, 
addr
, 
ffs
->
ôbl_buf
, ffs->
ffsbsize_b
);

181 i‡(
˙t
 !
ffs
->
ffsbsize_b
) {

182 i‡(
˙t
 >= 0) {

183 
	`tsk_îr‹_ª£t
();

184 
tsk_î∫o
 = 
TSK_ERR_FS_READ
;

186 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

188 
PRIuDADDR
, 
addr
);

191 
ffs
->
ôbl_addr
 = 
addr
;

194 
offs
 = 
	`ôoo_l˛
(
fs
, 
ffs
->fs.
sb2
, 
öum
Ë* (
ffs_öode2
);

196 
	`mem˝y
((*Ë
ffs
->
döo_buf
, ffs->
ôbl_buf
 + 
offs
,

197 (
ffs_öode2
));

201 i‡(
ffs
->
döo_buf
 =
NULL
) {

202 
ffs
->
döo_buf
 = (*Ë
	`tsk_mÆloc
((
ffs_öode1
));

203 i‡(
ffs
->
döo_buf
 =
NULL
)

206 i‡(
ffs
->
döo_öum
 =
öum
) {

210 
addr
 = 
	`ôod_l˛
(
fs
, 
ffs
->fs.
sb1
, 
öum
);

211 i‡(
ffs
->
ôbl_addr
 !
addr
) {

212 
ssize_t
 
˙t
;

213 
˙t
 =

214 
	`tsk_fs_ªad_block
(
fs
, 
addr
, 
ffs
->
ôbl_buf
,

215 
ffs
->
ffsbsize_b
);

216 i‡(
˙t
 !
ffs
->
ffsbsize_b
) {

217 i‡(
˙t
 >= 0) {

218 
	`tsk_îr‹_ª£t
();

219 
tsk_î∫o
 = 
TSK_ERR_FS_READ
;

221 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

223 
PRIuDADDR
, 
addr
);

226 
ffs
->
ôbl_addr
 = 
addr
;

229 
offs
 = 
	`ôoo_l˛
(
fs
, 
ffs
->fs.
sb1
, 
öum
Ë* (
ffs_öode1
);

231 
	`mem˝y
((*Ë
ffs
->
döo_buf
, ffs->
ôbl_buf
 + 
offs
,

232 (
ffs_öode1
));

234 
ffs
->
döo_öum
 = 
öum
;

236 
	}
}

239 
TSK_FS_META_TYPE_ENUM


240 
	$ffsmode2tskty≥
(
uöt16_t
 
a_mode
)

242 
a_mode
 & 
FFS_IN_FMT
) {

243 
FFS_IN_REG
:

244  
TSK_FS_META_TYPE_REG
;

245 
FFS_IN_DIR
:

246  
TSK_FS_META_TYPE_DIR
;

247 
FFS_IN_SOCK
:

248  
TSK_FS_META_TYPE_SOCK
;

249 
FFS_IN_LNK
:

250  
TSK_FS_META_TYPE_LNK
;

251 
FFS_IN_BLK
:

252  
TSK_FS_META_TYPE_BLK
;

253 
FFS_IN_CHR
:

254  
TSK_FS_META_TYPE_CHR
;

255 
FFS_IN_FIFO
:

256  
TSK_FS_META_TYPE_FIFO
;

257 
FFS_IN_SHAD
:

258  
TSK_FS_META_TYPE_SHAD
;

259 
FFS_IN_WHT
:

260  
TSK_FS_META_TYPE_WHT
;

262  
TSK_FS_META_TYPE_UNDEF
;

264 
	}
}

266 
uöt16_t


267 
	$ffsmode2tskmode
(
uöt16_t
 
a_mode
)

269 
uöt16_t
 
mode
 = 0;

271 i‡(
a_mode
 & 
FFS_IN_ISUID
)

272 
mode
 |
TSK_FS_META_MODE_ISUID
;

273 i‡(
a_mode
 & 
FFS_IN_ISGID
)

274 
mode
 |
TSK_FS_META_MODE_ISGID
;

275 i‡(
a_mode
 & 
FFS_IN_ISVTX
)

276 
mode
 |
TSK_FS_META_MODE_ISVTX
;

278 i‡(
a_mode
 & 
FFS_IN_IRUSR
)

279 
mode
 |
TSK_FS_META_MODE_IRUSR
;

280 i‡(
a_mode
 & 
FFS_IN_IWUSR
)

281 
mode
 |
TSK_FS_META_MODE_IWUSR
;

282 i‡(
a_mode
 & 
FFS_IN_IXUSR
)

283 
mode
 |
TSK_FS_META_MODE_IXUSR
;

285 i‡(
a_mode
 & 
FFS_IN_IRGRP
)

286 
mode
 |
TSK_FS_META_MODE_IRGRP
;

287 i‡(
a_mode
 & 
FFS_IN_IWGRP
)

288 
mode
 |
TSK_FS_META_MODE_IWGRP
;

289 i‡(
a_mode
 & 
FFS_IN_IXGRP
)

290 
mode
 |
TSK_FS_META_MODE_IXGRP
;

292 i‡(
a_mode
 & 
FFS_IN_IROTH
)

293 
mode
 |
TSK_FS_META_MODE_IROTH
;

294 i‡(
a_mode
 & 
FFS_IN_IWOTH
)

295 
mode
 |
TSK_FS_META_MODE_IWOTH
;

296 i‡(
a_mode
 & 
FFS_IN_IXOTH
)

297 
mode
 |
TSK_FS_META_MODE_IXOTH
;

299  
mode
;

300 
	}
}

306 
uöt8_t


307 
	$ffs_döode_c›y
(
FFS_INFO
 * 
ffs
, 
TSK_FS_META
 * 
fs_mëa
)

309 
i
, 
j
;

310 
cou¡
;

311 
TSK_FS_INFO
 *
fs
 = &(
ffs
->
fs_öfo
);

312 
FFS_GRPNUM_T
 
gΩ_num
;

313 
ffs_cgd
 *
cg
;

314 *
öosu£d
 = 
NULL
;

315 
TSK_INUM_T
 
iba£
;

317 i‡(
ffs
->
döo_buf
 =
NULL
) {

318 
	`tsk_îr‹_ª£t
();

319 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

320 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

325 
fs_mëa
->
©å_°©e
 = 
TSK_FS_META_ATTR_EMPTY
;

326 i‡(
fs_mëa
->
©å
) {

327 
	`tsk_fs_©åli°_m¨kunu£d
(
fs_mëa
->
©å
);

330 
fs_mëa
->
Êags
 = 0;

331 
fs_mëa
->
£q
 = 0;

334 i‡(
fs_mëa
->
lök
) {

335 
	`‰ì
(
fs_mëa
->
lök
);

336 
fs_mëa
->
lök
 = 
NULL
;

339 
fs_mëa
->
addr
 = 
ffs
->
döo_öum
;

342 i‡(
fs
->
·y≥
 =
TSK_FS_TYPE_FFS1
) {

343 
ffs_öode1
 *
ö
 = (ffs_öode1 *Ë
ffs
->
döo_buf
;

344 
TSK_DADDR_T
 *
addr_±r
;

346 
fs_mëa
->
mode
 =

347 
	`ffsmode2tskmode
(
	`tsk_gëu16
(
fs
->
ídün
, 
ö
->
di_mode
));

348 
fs_mëa
->
ty≥
 =

349 
	`ffsmode2tskty≥
(
	`tsk_gëu16
(
fs
->
ídün
, 
ö
->
di_mode
));

351 
fs_mëa
->
∆ök
 = 
	`tsk_gës16
(
fs
->
ídün
, 
ö
->
di_∆ök
);

352 
fs_mëa
->
size
 = 
	`tsk_gëu64
(
fs
->
ídün
, 
ö
->
di_size
);

353 
fs_mëa
->
uid
 = 
	`tsk_gëu32
(
fs
->
ídün
, 
ö
->
di_uid
);

354 
fs_mëa
->
gid
 = 
	`tsk_gëu32
(
fs
->
ídün
, 
ö
->
di_gid
);

356 
fs_mëa
->
mtime
 = 
	`tsk_gës32
(
fs
->
ídün
, 
ö
->
di_mtime
);

357 
fs_mëa
->
©ime
 = 
	`tsk_gës32
(
fs
->
ídün
, 
ö
->
di_©ime
);

358 
fs_mëa
->
˘ime
 = 
	`tsk_gës32
(
fs
->
ídün
, 
ö
->
di_˘ime
);

359 
fs_mëa
->
¸time
 = 0;

360 
fs_mëa
->
mtime_«no
 = fs_mëa->
©ime_«no
 = fs_mëa->
˘ime_«no
 =

361 
fs_mëa
->
¸time_«no
 = 0;

363 i‡(
fs_mëa
->
c⁄ã¡_Àn
 < 
FFS_FILE_CONTENT_LEN
) {

364 i‡((
fs_mëa
 =

365 
	`tsk_fs_mëa_ªÆloc
(
fs_mëa
,

366 
FFS_FILE_CONTENT_LEN
)Ë=
NULL
) {

370 
addr_±r
 = (
TSK_DADDR_T
 *Ë
fs_mëa
->
c⁄ã¡_±r
;

372 
i
 = 0; i < 
FFS_NDADDR
; i++)

373 
addr_±r
[
i
] = 
	`tsk_gës32
(
fs
->
ídün
, 
ö
->
di_db
[i]);

375 
i
 = 0; i < 
FFS_NIADDR
; i++)

376 
addr_±r
[
FFS_NDADDR
 + 
i
] =

377 
	`tsk_gës32
(
fs
->
ídün
, 
ö
->
di_ib
[
i
]);

384 i‡((
fs_mëa
->
ty≥
 =
TSK_FS_META_TYPE_LNK
)

385 && (
fs_mëa
->
size
 < 
FFS_MAXPATHLEN
)

386 && (
fs_mëa
->
size
 >= 0)) {

387 
i
;

389 
fs_mëa
->
lök
 = 
	`tsk_mÆloc
((
size_t
Ëfs_mëa->
size
 + 1);

390 i‡(
fs_mëa
->
lök
 =
NULL
) {

394 
cou¡
 = 0;

397 i‡(
fs_mëa
->
size
 < 4 * (
FFS_NDADDR
 + 
FFS_NIADDR
)) {

398 *
±r
;

401 
i
 = 0; i < 
FFS_NDADDR
 && 
cou¡
 < 
fs_mëa
->
size
; i++) {

402 
±r
 = (*Ë&
ö
->
di_db
[
i
];

403 
j
 = 0; j < 4 && 
cou¡
 < 
fs_mëa
->
size
; j++)

404 
fs_mëa
->
lök
[
cou¡
++] = 
±r
[
j
];

408 
i
 = 0; i < 
FFS_NIADDR
 && 
cou¡
 < 
fs_mëa
->
size
; i++) {

409 
±r
 = (*Ë&
ö
->
di_ib
[
i
];

410 
j
 = 0; j < 4 && 
cou¡
 < 
fs_mëa
->
size
; j++)

411 
fs_mëa
->
lök
[
cou¡
++] = 
±r
[
j
];

414 
fs_mëa
->
lök
[
cou¡
] = '\0';

417 
	`mem£t
(
fs_mëa
->
c⁄ã¡_±r
, 0, fs_mëa->
c⁄ã¡_Àn
);

422 *
buf
;

423 *
±r
 = 
fs_mëa
->
lök
;

425 i‡((
buf
 = (*)

426 
	`tsk_mÆloc
(
fs
->
block_size
)Ë=
NULL
) {

433 
i
 = 0; i < 
FFS_NDADDR
 && 
cou¡
 < 
fs_mëa
->
size
; i++) {

434 
ssize_t
 
˙t
;

435 
TSK_DADDR_T
 *
addr_±r
 =

436 (
TSK_DADDR_T
 *Ë
fs_mëa
->
c⁄ã¡_±r
;

439 
ªad_cou¡
 =

440 (
fs_mëa
->
size
 - 
cou¡
 <

441 
fs
->
block_size
Ë? (Ë
fs_mëa
->
size
 -

442 
cou¡
 : 
fs
->
block_size
;

444 
˙t
 =

445 
	`tsk_fs_ªad_block
(
fs
, 
addr_±r
[
i
],

446 
buf
, 
fs
->
block_size
);

447 i‡(
˙t
 !
fs
->
block_size
) {

448 i‡(
˙t
 >= 0) {

449 
	`tsk_îr‹_ª£t
();

450 
tsk_î∫o
 = 
TSK_ERR_FS_READ
;

452 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

454 
PRIuDADDR
, 
addr_±r
[
i
]);

455 
	`‰ì
(
buf
);

459 
	`mem˝y
(
±r
, 
buf
, 
ªad_cou¡
);

460 
cou¡
 +
ªad_cou¡
;

461 
±r
 = (*Ë((
uöçå_t
Ë±∏+ 
ªad_cou¡
);

464 *
±r
 = '\0';

467 
i
 = 0;

468 
fs_mëa
->
lök
[
i
] != '\0') {

469 i‡(
	`TSK_IS_CNTRL
(
fs_mëa
->
lök
[
i
]))

470 
fs_mëa
->
lök
[
i
] = '^';

471 
i
++;

474 
	`‰ì
(
buf
);

479 i‡(
fs
->
·y≥
 =
TSK_FS_TYPE_FFS1B
) {

480 
ffs_öode1b
 *
ö
 = (ffs_öode1b *Ë
ffs
->
döo_buf
;

481 
TSK_DADDR_T
 *
addr_±r
;

483 
fs_mëa
->
mode
 =

484 
	`ffsmode2tskmode
(
	`tsk_gëu16
(
fs
->
ídün
, 
ö
->
di_mode
));

485 
fs_mëa
->
ty≥
 =

486 
	`ffsmode2tskty≥
(
	`tsk_gëu16
(
fs
->
ídün
, 
ö
->
di_mode
));

488 
fs_mëa
->
∆ök
 = 
	`tsk_gës16
(
fs
->
ídün
, 
ö
->
di_∆ök
);

489 
fs_mëa
->
size
 = 
	`tsk_gëu64
(
fs
->
ídün
, 
ö
->
di_size
);

490 
fs_mëa
->
uid
 = 
	`tsk_gëu32
(
fs
->
ídün
, 
ö
->
di_uid
);

491 
fs_mëa
->
gid
 = 
	`tsk_gëu32
(
fs
->
ídün
, 
ö
->
di_gid
);

493 
fs_mëa
->
mtime
 = 
	`tsk_gës32
(
fs
->
ídün
, 
ö
->
di_mtime
);

494 
fs_mëa
->
©ime
 = 
	`tsk_gës32
(
fs
->
ídün
, 
ö
->
di_©ime
);

495 
fs_mëa
->
˘ime
 = 
	`tsk_gës32
(
fs
->
ídün
, 
ö
->
di_˘ime
);

496 
fs_mëa
->
¸time
 = 0;

497 
fs_mëa
->
mtime_«no
 = fs_mëa->
©ime_«no
 = fs_mëa->
˘ime_«no
 =

498 
fs_mëa
->
¸time_«no
 = 0;

500 i‡(
fs_mëa
->
c⁄ã¡_Àn
 < 
FFS_FILE_CONTENT_LEN
) {

501 i‡((
fs_mëa
 =

502 
	`tsk_fs_mëa_ªÆloc
(
fs_mëa
,

503 
FFS_FILE_CONTENT_LEN
)Ë=
NULL
) {

507 
addr_±r
 = (
TSK_DADDR_T
 *Ë
fs_mëa
->
c⁄ã¡_±r
;

509 
i
 = 0; i < 
FFS_NDADDR
; i++)

510 
addr_±r
[
i
] = 
	`tsk_gës32
(
fs
->
ídün
, 
ö
->
di_db
[i]);

512 
i
 = 0; i < 
FFS_NIADDR
; i++)

513 
addr_±r
[
FFS_NDADDR
 + 
i
] =

514 
	`tsk_gës32
(
fs
->
ídün
, 
ö
->
di_ib
[
i
]);

516 i‡((
fs_mëa
->
ty≥
 =
TSK_FS_META_TYPE_LNK
)

517 && (
fs_mëa
->
size
 < 
FFS_MAXPATHLEN
)

518 && (
fs_mëa
->
size
 >= 0)) {

520 
cou¡
 = 0;

523 i‡(
fs_mëa
->
size
 < 4 * (
FFS_NDADDR
 + 
FFS_NIADDR
)) {

524 *
±r
;

527 
i
 = 0; i < 
FFS_NDADDR
 && 
cou¡
 < 
fs_mëa
->
size
; i++) {

528 
±r
 = (*Ë&
ö
->
di_db
[
i
];

529 
j
 = 0; j < 4 && 
cou¡
 < 
fs_mëa
->
size
; j++)

530 
fs_mëa
->
lök
[
cou¡
++] = 
±r
[
j
];

534 
i
 = 0; i < 
FFS_NIADDR
 && 
cou¡
 < 
fs_mëa
->
size
; i++) {

535 
±r
 = (*Ë&
ö
->
di_ib
[
i
];

536 
j
 = 0; j < 4 && 
cou¡
 < 
fs_mëa
->
size
; j++)

537 
fs_mëa
->
lök
[
cou¡
++] = 
±r
[
j
];

540 
fs_mëa
->
lök
[
cou¡
] = '\0';

543 
	`mem£t
(
fs_mëa
->
c⁄ã¡_±r
, 0, fs_mëa->
c⁄ã¡_Àn
);

548 *
buf
;

549 *
±r
;

551 i‡((
buf
 = (*)

552 
	`tsk_mÆloc
(
fs
->
block_size
)Ë=
NULL
)

555 
fs_mëa
->
lök
 = 
±r
 =

556 
	`tsk_mÆloc
((
size_t
Ë
fs_mëa
->
size
 + 1);

557 i‡(
fs_mëa
->
lök
 =
NULL
) {

558 
	`‰ì
(
buf
);

565 
i
 = 0; i < 
FFS_NDADDR
 && 
cou¡
 < 
fs_mëa
->
size
; i++) {

566 
ssize_t
 
˙t
;

567 
TSK_DADDR_T
 *
addr_±r
 =

568 (
TSK_DADDR_T
 *Ë
fs_mëa
->
c⁄ã¡_±r
;

571 
ªad_cou¡
 =

572 (
fs_mëa
->
size
 - 
cou¡
 <

573 
fs
->
block_size
Ë? (Ë
fs_mëa
->
size
 -

574 
cou¡
 : 
fs
->
block_size
;

576 
˙t
 =

577 
	`tsk_fs_ªad_block
(
fs
, 
addr_±r
[
i
],

578 
buf
, 
fs
->
block_size
);

579 i‡(
˙t
 !
fs
->
block_size
) {

580 i‡(
˙t
 >= 0) {

581 
	`tsk_îr‹_ª£t
();

582 
tsk_î∫o
 = 
TSK_ERR_FS_READ
;

584 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

586 
PRIuDADDR
, 
addr_±r
[
i
]);

587 
	`‰ì
(
buf
);

591 
	`mem˝y
(
±r
, 
buf
, 
ªad_cou¡
);

592 
cou¡
 +
ªad_cou¡
;

593 
±r
 = (*Ë((
uöçå_t
Ë±∏+ 
ªad_cou¡
);

597 *
±r
 = '\0';

599 
	`‰ì
(
buf
);

603 i‡(
fs
->
·y≥
 =
TSK_FS_TYPE_FFS2
) {

604 
ffs_öode2
 *
ö
 = (ffs_öode2 *Ë
ffs
->
döo_buf
;

605 
TSK_DADDR_T
 *
addr_±r
;

607 
fs_mëa
->
mode
 =

608 
	`ffsmode2tskmode
(
	`tsk_gëu16
(
fs
->
ídün
, 
ö
->
di_mode
));

609 
fs_mëa
->
ty≥
 =

610 
	`ffsmode2tskty≥
(
	`tsk_gëu16
(
fs
->
ídün
, 
ö
->
di_mode
));

612 
fs_mëa
->
∆ök
 = 
	`tsk_gës16
(
fs
->
ídün
, 
ö
->
di_∆ök
);

613 
fs_mëa
->
size
 = 
	`tsk_gëu64
(
fs
->
ídün
, 
ö
->
di_size
);

614 
fs_mëa
->
uid
 = 
	`tsk_gëu32
(
fs
->
ídün
, 
ö
->
di_uid
);

615 
fs_mëa
->
gid
 = 
	`tsk_gëu32
(
fs
->
ídün
, 
ö
->
di_gid
);

617 
fs_mëa
->
mtime
 = (
time_t
Ë
	`tsk_gës64
(
fs
->
ídün
, 
ö
->
di_mtime
);

618 
fs_mëa
->
©ime
 = (
time_t
Ë
	`tsk_gës64
(
fs
->
ídün
, 
ö
->
di_©ime
);

619 
fs_mëa
->
˘ime
 = (
time_t
Ë
	`tsk_gës64
(
fs
->
ídün
, 
ö
->
di_˘ime
);

620 
fs_mëa
->
¸time
 = 0;

621 
fs_mëa
->
mtime_«no
 = 
	`tsk_gëu32
(
fs
->
ídün
, 
ö
->
di_mtimí£c
);

622 
fs_mëa
->
©ime_«no
 = 
	`tsk_gëu32
(
fs
->
ídün
, 
ö
->
di_©imí£c
);

623 
fs_mëa
->
˘ime_«no
 = 
	`tsk_gëu32
(
fs
->
ídün
, 
ö
->
di_˘imí£c
);

624 
fs_mëa
->
¸time_«no
 = 
	`tsk_gëu32
(
fs
->
ídün
, 
ö
->
di_¸timí£c
);

626 i‡(
fs_mëa
->
c⁄ã¡_Àn
 < 
FFS_FILE_CONTENT_LEN
) {

627 i‡((
fs_mëa
 =

628 
	`tsk_fs_mëa_ªÆloc
(
fs_mëa
,

629 
FFS_FILE_CONTENT_LEN
)Ë=
NULL
) {

633 
addr_±r
 = (
TSK_DADDR_T
 *Ë
fs_mëa
->
c⁄ã¡_±r
;

635 
i
 = 0; i < 
FFS_NDADDR
; i++)

636 
addr_±r
[
i
] = 
	`tsk_gës64
(
fs
->
ídün
, 
ö
->
di_db
[i]);

638 
i
 = 0; i < 
FFS_NIADDR
; i++)

639 
addr_±r
[
FFS_NDADDR
 + 
i
] =

640 
	`tsk_gës64
(
fs
->
ídün
, 
ö
->
di_ib
[
i
]);

647 i‡((
fs_mëa
->
ty≥
 =
TSK_FS_META_TYPE_LNK
)

648 && (
fs_mëa
->
size
 < 
FFS_MAXPATHLEN
)

649 && (
fs_mëa
->
size
 >= 0)) {

651 
fs_mëa
->
lök
 = 
	`tsk_mÆloc
((
size_t
Ëfs_mëa->
size
 + 1);

652 i‡(
fs_mëa
->
lök
 =
NULL
) {

656 
cou¡
 = 0;

661 i‡(
fs_mëa
->
size
 < 8 * (
FFS_NDADDR
 + 
FFS_NIADDR
)) {

662 *
±r
;

665 
i
 = 0; i < 
FFS_NDADDR
 && 
cou¡
 < 
fs_mëa
->
size
; i++) {

666 
±r
 = (*Ë&
ö
->
di_db
[
i
];

667 
j
 = 0; j < 8 && 
cou¡
 < 
fs_mëa
->
size
; j++)

668 
fs_mëa
->
lök
[
cou¡
++] = 
±r
[
j
];

672 
i
 = 0; i < 
FFS_NIADDR
 && 
cou¡
 < 
fs_mëa
->
size
; i++) {

673 
±r
 = (*Ë&
ö
->
di_ib
[
i
];

674 
j
 = 0; j < 8 && 
cou¡
 < 
fs_mëa
->
size
; j++)

675 
fs_mëa
->
lök
[
cou¡
++] = 
±r
[
j
];

678 
fs_mëa
->
lök
[
cou¡
] = '\0';

681 
	`mem£t
(
fs_mëa
->
c⁄ã¡_±r
, 0, fs_mëa->
c⁄ã¡_Àn
);

686 *
buf
;

687 *
±r
 = 
fs_mëa
->
lök
;

689 i‡((
buf
 = (*)

690 
	`tsk_mÆloc
(
fs
->
block_size
)Ë=
NULL
) {

697 
i
 = 0; i < 
FFS_NDADDR
 && 
cou¡
 < 
fs_mëa
->
size
; i++) {

698 
ssize_t
 
˙t
;

699 
TSK_DADDR_T
 *
addr_±r
 = 
fs_mëa
->
c⁄ã¡_±r
;

702 
ªad_cou¡
 =

703 (
fs_mëa
->
size
 - 
cou¡
 <

704 
fs
->
block_size
Ë? (Ë
fs_mëa
->
size
 -

705 
cou¡
 : 
fs
->
block_size
;

707 
˙t
 = 
	`tsk_fs_ªad_block
(
fs
,

708 
addr_±r
[
i
], 
buf
, 
fs
->
block_size
);

709 i‡(
˙t
 !
fs
->
block_size
) {

710 i‡(
˙t
 >= 0) {

711 
	`tsk_îr‹_ª£t
();

712 
tsk_î∫o
 = 
TSK_ERR_FS_READ
;

714 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

716 
PRIuDADDR
, 
addr_±r
[
i
]);

717 
	`‰ì
(
buf
);

721 
	`mem˝y
(
±r
, 
buf
, 
ªad_cou¡
);

722 
cou¡
 +
ªad_cou¡
;

723 
±r
 = (*Ë((
uöçå_t
Ë±∏+ 
ªad_cou¡
);

726 *
±r
 = '\0';

728 
	`‰ì
(
buf
);

733 
	`tsk_îr‹_ª£t
();

734 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

735 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

741 
gΩ_num
 = (
FFS_GRPNUM_T
Ë
	`ôog_l˛
(
fs
, 
ffs
->fs.
sb1
, ffs->
döo_öum
);

742 i‡((
ffs
->
gΩ_buf
 =
NULL
Ë|| (
gΩ_num
 != ffs->grp_num)) {

743 i‡(
	`ffs_group_lﬂd
(
ffs
, 
gΩ_num
))

747 
cg
 = (
ffs_cgd
 *Ë
ffs
->
gΩ_buf
;

749 
öosu£d
 = (*Ë
	`cg_öosu£d_l˛
(
fs
, 
cg
);

750 
iba£
 = 
gΩ_num
 * 
	`tsk_gës32
(
fs
->
ídün
, 
ffs
->fs.
sb1
->
cg_öode_num
);

753 
fs_mëa
->
Êags
 = (
	`is£t
(
öosu£d
, 
ffs
->
döo_öum
 - 
iba£
) ?

754 
TSK_FS_META_FLAG_ALLOC
 : 
TSK_FS_META_FLAG_UNALLOC
);

757 
fs_mëa
->
Êags
 |(fs_mëa->
˘ime
 ?

758 
TSK_FS_META_FLAG_USED
 : 
TSK_FS_META_FLAG_UNUSED
);

761 
	}
}

771 
uöt8_t


772 
	$ffs_öode_lookup
(
TSK_FS_INFO
 * 
fs
, 
TSK_FS_FILE
 * 
a_fs_fûe
,

773 
TSK_INUM_T
 
öum
)

775 
FFS_INFO
 *
ffs
 = (FFS_INFO *Ë
fs
;

777 i‡(
a_fs_fûe
 =
NULL
) {

778 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

779 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

785 i‡(
a_fs_fûe
->
mëa
 =
NULL
) {

786 
a_fs_fûe
->
mëa
 = 
	`tsk_fs_mëa_Æloc
(
FFS_FILE_CONTENT_LEN
);

787 i‡(
a_fs_fûe
->
mëa
 =
NULL
)

791 
	`tsk_fs_mëa_ª£t
(
a_fs_fûe
->
mëa
);

795 i‡(
öum
 =
	`TSK_FS_ORPHANDIR_INUM
(
fs
)) {

796 i‡(
	`tsk_fs_dú_make_‹ph™_dú_mëa
(
fs
, 
a_fs_fûe
->
mëa
))

803 i‡(
	`ffs_döode_lﬂd
(
ffs
, 
öum
))

806 i‡(
	`ffs_döode_c›y
(
ffs
, 
a_fs_fûe
->
mëa
))

810 
	}
}

829 
uöt8_t


830 
	$ffs_öode_wÆk
(
TSK_FS_INFO
 * 
fs
, 
TSK_INUM_T
 
°¨t_öum
,

831 
TSK_INUM_T
 
íd_öum
, 
TSK_FS_META_FLAG_ENUM
 
a_Êags
,

832 
TSK_FS_META_WALK_CB
 
a˘i⁄
, *
±r
)

834 *
my«me
 = "ffs_inode_walk";

835 
FFS_INFO
 *
ffs
 = (FFS_INFO *Ë
fs
;

836 
FFS_GRPNUM_T
 
gΩ_num
;

837 
ffs_cgd
 *
cg
 = 
NULL
;

838 
TSK_INUM_T
 
öum
;

839 *
öosu£d
 = 
NULL
;

840 
TSK_FS_FILE
 *
fs_fûe
;

841 
myÊags
;

842 
TSK_INUM_T
 
iba£
 = 0;

843 
TSK_INUM_T
 
íd_öum_tmp
;

846 
	`tsk_îr‹_ª£t
();

851 i‡(
°¨t_öum
 < 
fs
->
fú°_öum
 || sèπ_öum > fs->
œ°_öum
) {

852 
	`tsk_îr‹_ª£t
();

853 
tsk_î∫o
 = 
TSK_ERR_FS_WALK_RNG
;

854 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

855 "%s: Sèπ inode: %" 
PRIuINUM
 "", 
my«me
, 
°¨t_öum
);

858 i‡(
íd_öum
 < 
fs
->
fú°_öum
 ||Énd_öum > fs->
œ°_öum


859 || 
íd_öum
 < 
°¨t_öum
) {

860 
	`tsk_îr‹_ª£t
();

861 
tsk_î∫o
 = 
TSK_ERR_FS_WALK_RNG
;

862 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

863 "%s: End inode: %" 
PRIuINUM
 "", 
my«me
, 
íd_öum
);

868 i‡(
a_Êags
 & 
TSK_FS_META_FLAG_ORPHAN
) {

869 
a_Êags
 |
TSK_FS_META_FLAG_UNALLOC
;

870 
a_Êags
 &~
TSK_FS_META_FLAG_ALLOC
;

871 
a_Êags
 |
TSK_FS_META_FLAG_USED
;

872 
a_Êags
 &~
TSK_FS_META_FLAG_UNUSED
;

875 i‡(((
a_Êags
 & 
TSK_FS_META_FLAG_ALLOC
) == 0) &&

876 ((
a_Êags
 & 
TSK_FS_META_FLAG_UNALLOC
) == 0)) {

877 
a_Êags
 |(
TSK_FS_META_FLAG_ALLOC
 | 
TSK_FS_META_FLAG_UNALLOC
);

883 i‡(((
a_Êags
 & 
TSK_FS_META_FLAG_USED
) == 0) &&

884 ((
a_Êags
 & 
TSK_FS_META_FLAG_UNUSED
) == 0)) {

885 
a_Êags
 |(
TSK_FS_META_FLAG_USED
 | 
TSK_FS_META_FLAG_UNUSED
);

895 i‡((
a_Êags
 & 
TSK_FS_META_FLAG_ORPHAN
)

896 && (
fs
->
li°_öum_«med
 =
NULL
)) {

898 i‡(
	`tsk_fs_dú_lﬂd_öum_«med
(
fs
Ë!
TSK_OK
) {

899 
	`°∫ˇt
(
tsk_îr°r2
,

901 
TSK_ERRSTR_L
);

906 i‡((
fs_fûe
 = 
	`tsk_fs_fûe_Æloc
(
fs
)Ë=
NULL
)

909 i‡((
fs_fûe
->
mëa
 = 
	`tsk_fs_mëa_Æloc
(
FFS_FILE_CONTENT_LEN
)Ë=
NULL
)

914 i‡(
íd_öum
 =
	`TSK_FS_ORPHANDIR_INUM
(
fs
))

915 
íd_öum_tmp
 = 
íd_öum
 - 1;

917 
íd_öum_tmp
 = 
íd_öum
;

923 
öum
 = 
°¨t_öum
; inum <
íd_öum_tmp
; inum++) {

924 
ªtvÆ
;

929 
gΩ_num
 = 
	`ôog_l˛
(
fs
, 
ffs
->fs.
sb1
, 
öum
);

931 i‡((
ffs
->
gΩ_buf
 =
NULL
Ë|| (
gΩ_num
 != ffs->grp_num)) {

932 i‡(
	`ffs_group_lﬂd
(
ffs
, 
gΩ_num
))

934 
cg
 = 
NULL
;

938 i‡(
cg
 =
NULL
) {

939 
cg
 = (
ffs_cgd
 *Ë
ffs
->
gΩ_buf
;

940 
öosu£d
 = (*Ë
	`cg_öosu£d_l˛
(
fs
, 
cg
);

941 
iba£
 =

942 
gΩ_num
 * 
	`tsk_gës32
(
fs
->
ídün
,

943 
ffs
->
fs
.
sb1
->
cg_öode_num
);

949 
myÊags
 = (
	`is£t
(
öosu£d
, 
öum
 - 
iba£
) ?

950 
TSK_FS_META_FLAG_ALLOC
 : 
TSK_FS_META_FLAG_UNALLOC
);

951 i‡((
a_Êags
 & 
myÊags
) != myflags)

954 i‡(
	`ffs_döode_lﬂd
(
ffs
, 
öum
)) {

955 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

960 i‡((
fs
->
·y≥
 =
TSK_FS_TYPE_FFS1
)

961 || (
fs
->
·y≥
 =
TSK_FS_TYPE_FFS1B
)) {

963 
ffs_öode1
 *
ö1
 = (ffs_öode1 *Ë
ffs
->
döo_buf
;

968 
myÊags
 |(
	`tsk_gës32
(
fs
->
ídün
, 
ö1
->
di_˘ime
) ?

969 
TSK_FS_META_FLAG_USED
 : 
TSK_FS_META_FLAG_UNUSED
);

970 i‡((
a_Êags
 & 
myÊags
) != myflags)

974 
ffs_öode2
 *
ö2
 = (ffs_öode2 *Ë
ffs
->
döo_buf
;

979 
myÊags
 |(
	`tsk_gës64
(
fs
->
ídün
, 
ö2
->
di_˘ime
) ?

980 
TSK_FS_META_FLAG_USED
 : 
TSK_FS_META_FLAG_UNUSED
);

981 i‡((
a_Êags
 & 
myÊags
) != myflags)

988 i‡((
myÊags
 & 
TSK_FS_META_FLAG_UNALLOC
) &&

989 (
a_Êags
 & 
TSK_FS_META_FLAG_ORPHAN
) &&

990 (
	`tsk_li°_föd
(
fs
->
li°_öum_«med
, 
öum
))) {

999 i‡(
	`ffs_döode_c›y
(
ffs
, 
fs_fûe
->
mëa
)) {

1000 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

1004 
ªtvÆ
 = 
	`a˘i⁄
(
fs_fûe
, 
±r
);

1005 i‡(
ªtvÆ
 =
TSK_WALK_STOP
) {

1006 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

1009 i‡(
ªtvÆ
 =
TSK_WALK_ERROR
) {

1010 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

1016 i‡((
íd_öum
 =
	`TSK_FS_ORPHANDIR_INUM
(
fs
))

1017 && (
a_Êags
 & 
TSK_FS_META_FLAG_ALLOC
)

1018 && (
a_Êags
 & 
TSK_FS_META_FLAG_USED
)) {

1019 
ªtvÆ
;

1021 i‡(
	`tsk_fs_dú_make_‹ph™_dú_mëa
(
fs
, 
fs_fûe
->
mëa
)) {

1022 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

1026 
ªtvÆ
 = 
	`a˘i⁄
(
fs_fûe
, 
±r
);

1027 i‡(
ªtvÆ
 =
TSK_WALK_STOP
) {

1028 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

1031 i‡(
ªtvÆ
 =
TSK_WALK_ERROR
) {

1032 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

1040 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

1042 
	}
}

1045 
TSK_FS_BLOCK_FLAG_ENUM


1046 
	$ffs_block_gëÊags
(
TSK_FS_INFO
 * 
a_fs
, 
TSK_DADDR_T
 
a_addr
)

1048 
FFS_INFO
 *
ffs
 = (FFS_INFO *Ë
a_fs
;

1049 
FFS_GRPNUM_T
 
gΩ_num
;

1050 
ffs_cgd
 *
cg
 = 0;

1051 
TSK_DADDR_T
 
‰ag_ba£
 = 0;

1052 
TSK_DADDR_T
 
dblock_addr
 = 0;

1053 
TSK_DADDR_T
 
sblock_addr
 = 0;

1054 *
‰ìblocks
 = 
NULL
;

1055 
Êags
;

1058 i‡(
a_addr
 == 0)

1059  
TSK_FS_BLOCK_FLAG_CONT
 | 
TSK_FS_BLOCK_FLAG_ALLOC
;

1061 
gΩ_num
 = 
	`dtog_l˛
(
a_fs
, 
ffs
->
fs
.
sb1
, 
a_addr
);

1063 i‡(
	`ffs_group_lﬂd
(
ffs
, 
gΩ_num
)) {

1067 
cg
 = (
ffs_cgd
 *Ë
ffs
->
gΩ_buf
;

1068 
‰ìblocks
 = (*Ë
	`cg_blks‰ì_l˛
(
a_fs
, 
cg
);

1071 
‰ag_ba£
 = 
	`cgba£_l˛
(
a_fs
, 
ffs
->
fs
.
sb1
, 
gΩ_num
);

1074 
dblock_addr
 = 
	`cgdmö_l˛
(
a_fs
, 
ffs
->
fs
.
sb1
, 
gΩ_num
);

1077 
sblock_addr
 = 
	`cgsblock_l˛
(
a_fs
, 
ffs
->
fs
.
sb1
, 
gΩ_num
);

1084 
Êags
 = (
	`is£t
(
‰ìblocks
, 
a_addr
 - 
‰ag_ba£
) ?

1085 
TSK_FS_BLOCK_FLAG_UNALLOC
 : 
TSK_FS_BLOCK_FLAG_ALLOC
);

1087 i‡(
a_addr
 >
sblock_addr
 &&á_add∏< 
dblock_addr
)

1088 
Êags
 |
TSK_FS_BLOCK_FLAG_META
;

1090 
Êags
 |
TSK_FS_BLOCK_FLAG_CONT
;

1092  
Êags
;

1093 
	}
}

1109 
uöt8_t


1110 
	$ffs_block_wÆk
(
TSK_FS_INFO
 * 
fs
, 
TSK_DADDR_T
 
a_°¨t_blk
,

1111 
TSK_DADDR_T
 
a_íd_blk
, 
TSK_FS_BLOCK_WALK_FLAG_ENUM
 
a_Êags
,

1112 
TSK_FS_BLOCK_WALK_CB
 
a˘i⁄
, *
±r
)

1114 *
my«me
 = "ffs_block_walk";

1115 
FFS_INFO
 *
ffs
 = (FFS_INFO *Ë
fs
;

1116 
TSK_FS_BLOCK
 *
fs_block
;

1117 
TSK_DADDR_T
 
addr
;

1119 *
ˇche_blk_buf
;

1120 
TSK_DADDR_T
 
ˇche_addr
;

1121 
ˇche_Àn_f
;

1124 
	`tsk_îr‹_ª£t
();

1129 i‡(
a_°¨t_blk
 < 
fs
->
fú°_block
 ||á_°¨t_blk > fs->
œ°_block
) {

1130 
	`tsk_îr‹_ª£t
();

1131 
tsk_î∫o
 = 
TSK_ERR_FS_WALK_RNG
;

1132 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

1133 "%s: Sèπ block: %" 
PRIuDADDR
 "", 
my«me
, 
a_°¨t_blk
);

1137 i‡(
a_íd_blk
 < 
fs
->
fú°_block
 ||á_íd_blk > fs->
œ°_block


1138 || 
a_íd_blk
 < 
a_°¨t_blk
) {

1139 
	`tsk_îr‹_ª£t
();

1140 
tsk_î∫o
 = 
TSK_ERR_FS_WALK_RNG
;

1141 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

1142 "%s: End block: %" 
PRIuDADDR
 "", 
my«me
, 
a_íd_blk
);

1147 i‡(((
a_Êags
 & 
TSK_FS_BLOCK_WALK_FLAG_ALLOC
) == 0) &&

1148 ((
a_Êags
 & 
TSK_FS_BLOCK_WALK_FLAG_UNALLOC
) == 0)) {

1149 
a_Êags
 |=

1150 (
TSK_FS_BLOCK_WALK_FLAG_ALLOC
 |

1151 
TSK_FS_BLOCK_WALK_FLAG_UNALLOC
);

1153 i‡(((
a_Êags
 & 
TSK_FS_BLOCK_WALK_FLAG_META
) == 0) &&

1154 ((
a_Êags
 & 
TSK_FS_BLOCK_WALK_FLAG_CONT
) == 0)) {

1155 
a_Êags
 |=

1156 (
TSK_FS_BLOCK_WALK_FLAG_CONT
 | 
TSK_FS_BLOCK_WALK_FLAG_META
);

1161 i‡((
fs_block
 = 
	`tsk_fs_block_Æloc
(
fs
)Ë=
NULL
) {

1164 i‡((
ˇche_blk_buf
 = 
	`tsk_mÆloc
(
ffs
->
ffsbsize_b
)Ë=
NULL
) {

1167 
ˇche_Àn_f
 = 0;

1168 
ˇche_addr
 = 0;

1171 
addr
 = 
a_°¨t_blk
;ádd∏<
a_íd_blk
;áddr++) {

1172 
ªtvÆ
;

1173 
myÊags
 = 
	`ffs_block_gëÊags
(
fs
, 
addr
);

1175 i‡((
tsk_vîbo£
Ë&& (
myÊags
 & 
TSK_FS_BLOCK_FLAG_META
)

1176 && (
myÊags
 & 
TSK_FS_BLOCK_FLAG_UNALLOC
))

1177 
	`tsk_Ârötf
(
°dîr
,

1178 "impossibÀ: u«Œoˇãd më®block %" 
PRIuDADDR
, 
addr
);

1181 i‡((
myÊags
 & 
TSK_FS_BLOCK_FLAG_META
)

1182 && (!(
a_Êags
 & 
TSK_FS_BLOCK_WALK_FLAG_META
)))

1184 i‡((
myÊags
 & 
TSK_FS_BLOCK_FLAG_CONT
)

1185 && (!(
a_Êags
 & 
TSK_FS_BLOCK_WALK_FLAG_CONT
)))

1187 i‡((
myÊags
 & 
TSK_FS_BLOCK_FLAG_ALLOC
)

1188 && (!(
a_Êags
 & 
TSK_FS_BLOCK_WALK_FLAG_ALLOC
)))

1190 i‡((
myÊags
 & 
TSK_FS_BLOCK_FLAG_UNALLOC
)

1191 && (!(
a_Êags
 & 
TSK_FS_BLOCK_WALK_FLAG_UNALLOC
)))

1197 i‡((
ˇche_Àn_f
 =0Ë|| (
addr
 >
ˇche_addr
 + cache_len_f)) {

1198 
ssize_t
 
˙t
;

1199 
‰ags
;

1202 
‰ags
 = (
a_íd_blk
 > 
addr
 + 
ffs
->
ffsbsize_f
 - 1 ?

1203 
ffs
->
ffsbsize_f
 : (Ë(
a_íd_blk
 + 1 - 
addr
));

1205 
˙t
 =

1206 
	`tsk_fs_ªad_block
(
fs
, 
addr
, 
ˇche_blk_buf
,

1207 
fs
->
block_size
 * 
‰ags
);

1208 i‡(
˙t
 !
fs
->
block_size
 * 
‰ags
) {

1209 i‡(
˙t
 >= 0) {

1210 
	`tsk_îr‹_ª£t
();

1211 
tsk_î∫o
 = 
TSK_ERR_FS_READ
;

1213 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

1214 "ffs_block_wÆk: Block %" 
PRIuDADDR
, 
addr
);

1215 
	`tsk_fs_block_‰ì
(
fs_block
);

1216 
	`‰ì
(
ˇche_blk_buf
);

1219 
ˇche_Àn_f
 = 
‰ags
;

1220 
ˇche_addr
 = 
addr
;

1224 
	`tsk_fs_block_£t
(
fs
, 
fs_block
, 
addr
,

1225 
myÊags
 | 
TSK_FS_BLOCK_FLAG_RAW
,

1226 &
ˇche_blk_buf
[(
addr
 - 
ˇche_addr
Ë* 
fs
->
block_size
]);

1227 
ªtvÆ
 = 
	`a˘i⁄
(
fs_block
, 
±r
);

1228 i‡(
ªtvÆ
 =
TSK_WALK_STOP
) {

1231 i‡(
ªtvÆ
 =
TSK_WALK_ERROR
) {

1232 
	`tsk_fs_block_‰ì
(
fs_block
);

1233 
	`‰ì
(
ˇche_blk_buf
);

1239 
	`tsk_fs_block_‰ì
(
fs_block
);

1240 
	`‰ì
(
ˇche_blk_buf
);

1242 
	}
}

1249 
uöt8_t


1250 
	$ffs_fscheck
(
TSK_FS_INFO
 * 
fs
, 
FILE
 * 
hFûe
)

1252 
	`tsk_îr‹_ª£t
();

1253 
tsk_î∫o
 = 
TSK_ERR_FS_UNSUPFUNC
;

1254 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

1257 
	}
}

1268 
uöt8_t


1269 
	$ffs_fs°©
(
TSK_FS_INFO
 * 
fs
, 
FILE
 * 
hFûe
)

1271 
i
;

1272 
time_t
 
tm±ime
;

1273 
ffs_csum1
 *
csum1
 = 
NULL
;

1274 
ffs_cgd
 *
cgd
 = 
NULL
;

1276 
FFS_INFO
 *
ffs
 = (FFS_INFO *Ë
fs
;

1277 
ffs_sb1
 *
sb1
 = 
ffs
->
fs
.sb1;

1278 
ffs_sb2
 *
sb2
 = 
ffs
->
fs
.sb2;

1279 
Êags
;

1282 
	`tsk_îr‹_ª£t
();

1284 
	`tsk_Ârötf
(
hFûe
, "FILE SYSTEM INFORMATION\n");

1285 
	`tsk_Ârötf
(
hFûe
, "--------------------------------------------\n");

1287 i‡((
fs
->
·y≥
 =
TSK_FS_TYPE_FFS1
)

1288 || (
fs
->
·y≥
 =
TSK_FS_TYPE_FFS1B
)) {

1289 
	`tsk_Ârötf
(
hFûe
, "File System Type: UFS 1\n");

1290 
tm±ime
 = 
	`tsk_gëu32
(
fs
->
ídün
, 
sb1
->
wtime
);

1291 
	`tsk_Ârötf
(
hFûe
, "Last Written: %s",

1292 (
tm±ime
 > 0Ë? 
	`as˘ime
(
	`loˇ…ime
(&tmptime)) : "empty");

1293 
	`tsk_Ârötf
(
hFûe
, "La° Mou¡ Poöt: %s\n", 
sb1
->
œ°_m¡
);

1295 
Êags
 = 
sb1
->
fs_Êags
;

1298 
	`tsk_Ârötf
(
hFûe
, "File System Type: UFS 2\n");

1299 
tm±ime
 = 
	`tsk_gëu32
(
fs
->
ídün
, 
sb2
->
wtime
);

1300 
	`tsk_Ârötf
(
hFûe
, "Last Written: %s",

1301 (
tm±ime
 > 0Ë? 
	`as˘ime
(
	`loˇ…ime
(&tmptime)) : "empty");

1302 
	`tsk_Ârötf
(
hFûe
, "La° Mou¡ Poöt: %s\n", 
sb2
->
œ°_m¡
);

1303 
	`tsk_Ârötf
(
hFûe
, "VﬁumêName: %s\n", 
sb2
->
vﬁ«me
);

1304 
	`tsk_Ârötf
(
hFûe
, "Sy°em UID: %" 
PRIu64
 "\n",

1305 
	`tsk_gëu64
(
fs
->
ídün
, 
sb2
->
swuid
));

1306 
Êags
 = 
	`tsk_gëu32
(
fs
->
ídün
, 
sb2
->
fs_Êags
);

1309 i‡(
Êags
) {

1310 
˙t
 = 0;

1312 
	`tsk_Ârötf
(
hFûe
, "Flags: ");

1314 i‡(
Êags
 & 
FFS_SB_FLAG_UNCLEAN
)

1315 
	`tsk_Ârötf
(
hFûe
, "%†Un˛ón", (
˙t
++ == 0 ? "" : ","));

1317 i‡(
Êags
 & 
FFS_SB_FLAG_SOFTDEP
)

1318 
	`tsk_Ârötf
(
hFûe
, "%s Soft Dependencies",

1319 (
˙t
++ == 0 ? "" : ","));

1321 i‡(
Êags
 & 
FFS_SB_FLAG_NEEDFSCK
)

1322 
	`tsk_Ârötf
(
hFûe
, "%†Nìd†fsck", (
˙t
++ == 0 ? "" : ","));

1324 i‡(
Êags
 & 
FFS_SB_FLAG_INDEXDIR
)

1325 
	`tsk_Ârötf
(
hFûe
, "%s Index directories",

1326 (
˙t
++ == 0 ? "" : ","));

1328 i‡(
Êags
 & 
FFS_SB_FLAG_ACL
)

1329 
	`tsk_Ârötf
(
hFûe
, "%†ACLs", (
˙t
++ == 0 ? "" : ","));

1331 i‡(
Êags
 & 
FFS_SB_FLAG_MULTILABEL
)

1332 
	`tsk_Ârötf
(
hFûe
, "%s TrustedBSD MAC Multi-label",

1333 (
˙t
++ == 0 ? "" : ","));

1335 i‡(
Êags
 & 
FFS_SB_FLAG_UPDATED
)

1336 
	`tsk_Ârötf
(
hFûe
, "%s Updated Flag Location",

1337 (
˙t
++ == 0 ? "" : ","));

1339 
	`tsk_Ârötf
(
hFûe
, "\n");

1344 
	`tsk_Ârötf
(
hFûe
, "\nMETADATA INFORMATION\n");

1345 
	`tsk_Ârötf
(
hFûe
, "--------------------------------------------\n");

1347 
	`tsk_Ârötf
(
hFûe
, "InodêR™ge: %" 
PRIuINUM
 " - %" PRIuINUM "\n",

1348 
fs
->
fú°_öum
, fs->
œ°_öum
);

1349 
	`tsk_Ârötf
(
hFûe
, "RoŸ Dúe˘‹y: %" 
PRIuINUM
 "\n", 
fs
->
roŸ_öum
);

1350 i‡((
fs
->
·y≥
 =
TSK_FS_TYPE_FFS1
)

1351 || (
fs
->
·y≥
 =
TSK_FS_TYPE_FFS1B
)) {

1352 
	`tsk_Ârötf
(
hFûe
, "Num o‡Avaû Inodes: %" 
PRIu32
 "\n",

1353 
	`tsk_gëu32
(
fs
->
ídün
, 
sb1
->
c°ŸÆ
.
öo_‰ì
));

1354 
	`tsk_Ârötf
(
hFûe
, "Num o‡Dúe˘‹õs: %" 
PRIu32
 "\n",

1355 
	`tsk_gëu32
(
fs
->
ídün
, 
sb1
->
c°ŸÆ
.
dú_num
));

1358 
	`tsk_Ârötf
(
hFûe
, "Num o‡Avaû Inodes: %" 
PRIu64
 "\n",

1359 
	`tsk_gëu64
(
fs
->
ídün
, 
sb2
->
c°ŸÆ
.
öo_‰ì
));

1360 
	`tsk_Ârötf
(
hFûe
, "Num o‡Dúe˘‹õs: %" 
PRIu64
 "\n",

1361 
	`tsk_gëu64
(
fs
->
ídün
, 
sb2
->
c°ŸÆ
.
dú_num
));

1365 
	`tsk_Ârötf
(
hFûe
, "\nCONTENT INFORMATION\n");

1366 
	`tsk_Ârötf
(
hFûe
, "--------------------------------------------\n");

1368 
	`tsk_Ârötf
(
hFûe
, "FøgmíàR™ge: %" 
PRIuDADDR
 " - %" PRIuDADDR "\n",

1369 
fs
->
fú°_block
, fs->
œ°_block
);

1371 i‡(
fs
->
œ°_block
 !fs->
œ°_block_a˘
)

1372 
	`tsk_Ârötf
(
hFûe
,

1373 "TŸÆ R™gêö Image: %" 
PRIuDADDR
 " - %" PRIuDADDR "\n",

1374 
fs
->
fú°_block
, fs->
œ°_block_a˘
);

1376 
	`tsk_Ârötf
(
hFûe
, "Block Size: %u\n", 
ffs
->
ffsbsize_b
);

1377 
	`tsk_Ârötf
(
hFûe
, "FøgmíàSize: %u\n", 
fs
->
block_size
);

1379 i‡((
fs
->
·y≥
 =
TSK_FS_TYPE_FFS1
)

1380 || (
fs
->
·y≥
 =
TSK_FS_TYPE_FFS1B
)) {

1381 
	`tsk_Ârötf
(
hFûe
, "Num o‡Avaû FuŒ Blocks: %" 
PRIu32
 "\n",

1382 
	`tsk_gëu32
(
fs
->
ídün
, 
sb1
->
c°ŸÆ
.
blk_‰ì
));

1383 
	`tsk_Ârötf
(
hFûe
, "Num o‡Avaû Føgmíts: %" 
PRIu32
 "\n",

1384 
	`tsk_gëu32
(
fs
->
ídün
, 
sb1
->
c°ŸÆ
.
‰ag_‰ì
));

1387 
	`tsk_Ârötf
(
hFûe
, "Num o‡Avaû FuŒ Blocks: %" 
PRIu64
 "\n",

1388 
	`tsk_gëu64
(
fs
->
ídün
, 
sb2
->
c°ŸÆ
.
blk_‰ì
));

1389 
	`tsk_Ârötf
(
hFûe
, "Num o‡Avaû Føgmíts: %" 
PRIu64
 "\n",

1390 
	`tsk_gëu64
(
fs
->
ídün
, 
sb2
->
c°ŸÆ
.
‰ag_‰ì
));

1393 
	`tsk_Ârötf
(
hFûe
, "\nCYLINDER GROUP INFORMATION\n");

1394 
	`tsk_Ârötf
(
hFûe
, "--------------------------------------------\n");

1396 
	`tsk_Ârötf
(
hFûe
, "Numbî o‡Cylödî Groups: %" 
PRIu32
 "\n",

1397 
ffs
->
groups_cou¡
);

1398 
	`tsk_Ârötf
(
hFûe
, "Inode†≥∏group: %" 
PRId32
 "\n",

1399 
	`tsk_gës32
(
fs
->
ídün
, 
sb1
->
cg_öode_num
));

1400 
	`tsk_Ârötf
(
hFûe
, "Føgmít†≥∏group: %" 
PRId32
 "\n",

1401 
	`tsk_gës32
(
fs
->
ídün
, 
sb1
->
cg_‰ag_num
));

1405 i‡(
	`tsk_gëu32
(
fs
->
ídün
, 
sb1
->
cg_ssize_b
)) {

1406 
ssize_t
 
˙t
;

1407 
csum1
 =

1408 (
ffs_csum1
 *Ë
	`tsk_mÆloc
(
	`tsk_gëu32
(
fs
->
ídün
,

1409 
sb1
->
cg_ssize_b
));

1410 i‡(
csum1
 =
NULL
)

1413 i‡((
fs
->
·y≥
 =
TSK_FS_TYPE_FFS1
)

1414 || (
fs
->
·y≥
 =
TSK_FS_TYPE_FFS1B
)) {

1415 
˙t
 =

1416 
	`tsk_fs_ªad_block
(
fs
, (
TSK_DADDR_T
Ë
	`tsk_gëu32
(fs->
ídün
,

1417 
sb1
->
cg_ßddr
), (*Ë
csum1
, 
	`tsk_gëu32
(
fs
->
ídün
,

1418 
sb1
->
cg_ssize_b
));

1420 i‡(
˙t
 !
	`tsk_gëu32
(
fs
->
ídün
, 
sb1
->
cg_ssize_b
)) {

1421 i‡(
˙t
 >= 0) {

1422 
	`tsk_îr‹_ª£t
();

1423 
tsk_î∫o
 = 
TSK_ERR_FS_READ
;

1425 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

1427 
PRIu32
, 
	`tsk_gëu32
(
fs
->
ídün
, 
sb1
->
cg_ßddr
));

1432 
˙t
 = 
tsk_fs_ªad_block


1433 (
fs
, (
TSK_DADDR_T
Ë
	`tsk_gëu64
(fs->
ídün
,

1434 
sb2
->
cg_ßddr
), (*Ë
csum1
, 
	`tsk_gëu32
(
fs
->
ídün
,

1435 
sb2
->
cg_ssize_b
));

1436 i‡(
˙t
 !
	`tsk_gëu32
(
fs
->
ídün
, 
sb2
->
cg_ssize_b
)) {

1437 i‡(
˙t
 >= 0) {

1438 
	`tsk_îr‹_ª£t
();

1439 
tsk_î∫o
 = 
TSK_ERR_FS_READ
;

1441 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

1443 
PRIu64
, 
	`tsk_gëu64
(
fs
->
ídün
, 
sb2
->
cg_ßddr
));

1449 
i
 = 0; i < 
ffs
->
groups_cou¡
; i++) {

1451 i‡(
	`ffs_group_lﬂd
(
ffs
, 
i
))

1453 
cgd
 = (
ffs_cgd
 *Ë
ffs
->
gΩ_buf
;

1455 
	`tsk_Ârötf
(
hFûe
, "\nGrou∞%d:\n", 
i
);

1456 i‡(
cgd
) {

1457 i‡((
fs
->
·y≥
 =
TSK_FS_TYPE_FFS1
)

1458 || (
fs
->
·y≥
 =
TSK_FS_TYPE_FFS1B
)) {

1459 
tm±ime
 = 
	`tsk_gëu32
(
fs
->
ídün
, 
cgd
->
wtime
);

1462 
ffs_cgd2
 *
cgd2
 = (ffs_cgd2 *Ë
cgd
;

1463 
tm±ime
 = (
uöt32_t
Ë
	`tsk_gëu64
(
fs
->
ídün
, 
cgd2
->
wtime
);

1465 
	`tsk_Ârötf
(
hFûe
, " Last Written: %s",

1466 (
tm±ime
 > 0Ë? 
	`as˘ime
(
	`loˇ…ime
(&tmptime)) : "empty");

1469 
	`tsk_Ârötf
(
hFûe
, " InodêR™ge: %" 
PRIu32
 " - %" PRIu32 "\n",

1470 (
	`tsk_gës32
(
fs
->
ídün
, 
sb1
->
cg_öode_num
Ë* 
i
),

1471 ((
uöt32_t
Ë((
	`tsk_gës32
(
fs
->
ídün
,

1472 
sb1
->
cg_öode_num
Ë* (
i
 + 1)) - 1)

1473 < 
fs
->
œ°_öum
Ë? (
uöt32_t
Ë((
	`tsk_gës32
(fs->
ídün
,

1474 
sb1
->
cg_öode_num
Ë* (
i
 + 1)) -

1475 1Ë: (
uöt32_t
Ë
fs
->
œ°_öum
);

1477 
	`tsk_Ârötf
(
hFûe
,

1478 " FøgmíàR™ge: %" 
PRIuDADDR
 " - %" PRIuDADDR "\n",

1479 
	`cgba£_l˛
(
fs
, 
sb1
, 
i
),

1480 ((
	`cgba£_l˛
(
fs
, 
sb1
, 
i
 + 1) - 1) <

1481 
fs
->
œ°_block
Ë? (
	`cgba£_l˛
(fs, 
sb1
,

1482 
i
 + 1Ë- 1Ë: 
fs
->
œ°_block
);

1488 i‡(!
i
) {

1489 
	`tsk_Ârötf
(
hFûe
, " BoŸ Block: 0 - %" 
PRIu32
 "\n",

1490 (
uöt32_t
Ë(15 * 512 / 
fs
->
block_size
));

1493 
	`tsk_Ârötf
(
hFûe
,

1494 " Su≥∏Block: %" 
PRIu32
 " - %" PRIu32 "\n",

1495 (
uöt32_t
Ë(16 * 512 / 
fs
->
block_size
),

1496 (
uöt32_t
Ë((16 * 512 / 
fs
->
block_size
Ë+ 
ffs
->
ffsbsize_f
 -

1500 
	`tsk_Ârötf
(
hFûe
,

1501 " Su≥∏Block: %" 
PRIuDADDR
 " - %" PRIuDADDR "\n",

1502 
	`cgsblock_l˛
(
fs
, 
sb1
, 
i
),

1503 (
	`cgsblock_l˛
(
fs
, 
sb1
, 
i
Ë+ 
ffs
->
ffsbsize_f
 - 1));

1506 
	`tsk_Ârötf
(
hFûe
,

1507 " Grou∞Desc: %" 
PRIuDADDR
 " - %" PRIuDADDR "\n",

1508 
	`cgtod_l˛
(
fs
, 
sb1
, 
i
), (cgtod_lcl(fs, sb1,

1509 
i
Ë+ 
ffs
->
ffsbsize_f
 - 1));

1512 i‡(
fs
->
·y≥
 =
TSK_FS_TYPE_FFS2
) {

1513 
	`tsk_Ârötf
(
hFûe
,

1514 " InodêTabÀ: %" 
PRIuDADDR
 " - %" PRIuDADDR "\n",

1515 
	`cgimö_l˛
(
fs
, 
sb1
, 
i
),

1516 (
	`cgimö_l˛
(
fs
, 
sb1
, 
i
) +

1517 ((
roundup


1518 (
	`tsk_gës32
(
fs
->
ídün
,

1519 
sb1
->
cg_öode_num
) *

1520 (
ffs_öode2
), 
fs
->
block_size
)

1521 / 
fs
->
block_size
) - 1)));

1524 
	`tsk_Ârötf
(
hFûe
,

1525 " InodêTabÀ: %" 
PRIuDADDR
 " - %" PRIuDADDR "\n",

1526 
	`cgimö_l˛
(
fs
, 
sb1
, 
i
),

1527 (
	`cgimö_l˛
(
fs
, 
sb1
, 
i
) +

1528 ((
roundup


1529 (
	`tsk_gës32
(
fs
->
ídün
,

1530 
sb1
->
cg_öode_num
) *

1531 (
ffs_öode1
), 
fs
->
block_size
)

1532 / 
fs
->
block_size
) - 1)));

1535 
	`tsk_Ârötf
(
hFûe
, " Data Fragments: ");

1540 i‡(
i
)

1541 
	`tsk_Ârötf
(
hFûe
, "%" 
PRIuDADDR
 " - %" PRIuDADDR ", ",

1542 
	`cgba£_l˛
(
fs
, 
sb1
, 
i
), 
	`cgsblock_l˛
(fs, sb1, i) - 1);

1544 
	`tsk_Ârötf
(
hFûe
, "%" 
PRIuDADDR
 " - %" PRIuDADDR "\n",

1545 
	`cgdmö_l˛
(
fs
, 
sb1
, 
i
),

1546 ((
	`cgba£_l˛
(
fs
, 
sb1
, 
i
 + 1Ë- 1Ë< fs->
œ°_block
) ?

1547 (
	`cgba£_l˛
(
fs
, 
sb1
, 
i
 + 1Ë- 1Ë: fs->
œ°_block
);

1550 i‡((
csum1
)

1551 && ((
i
 + 1Ë* (
ffs_csum1
Ë< 
	`tsk_gëu32
(
fs
->
ídün
,

1552 
sb1
->
cg_ssize_b
))) {

1553 
	`tsk_Ârötf
(
hFûe
,

1555 
	`tsk_Ârötf
(
hFûe
, " Num o‡Dús: %" 
PRIu32
 "\n",

1556 
	`tsk_gëu32
(
fs
->
ídün
, &
csum1
[
i
].
dú_num
));

1557 
	`tsk_Ârötf
(
hFûe
, " Num o‡Avaû Blocks: %" 
PRIu32
 "\n",

1558 
	`tsk_gëu32
(
fs
->
ídün
, &
csum1
[
i
].
blk_‰ì
));

1559 
	`tsk_Ârötf
(
hFûe
, " Num o‡Avaû Inodes: %" 
PRIu32
 "\n",

1560 
	`tsk_gëu32
(
fs
->
ídün
, &
csum1
[
i
].
öo_‰ì
));

1561 
	`tsk_Ârötf
(
hFûe
, " Num o‡Avaû Føgs: %" 
PRIu32
 "\n",

1562 
	`tsk_gëu32
(
fs
->
ídün
, &
csum1
[
i
].
‰ag_‰ì
));

1565 i‡(
cgd
) {

1566 
	`tsk_Ârötf
(
hFûe
,

1568 
	`tsk_Ârötf
(
hFûe
, " Num o‡Dús: %" 
PRIu32
 "\n",

1569 
	`tsk_gëu32
(
fs
->
ídün
, &
cgd
->
cs
.
dú_num
));

1570 
	`tsk_Ârötf
(
hFûe
, " Num o‡Avaû Blocks: %" 
PRIu32
 "\n",

1571 
	`tsk_gëu32
(
fs
->
ídün
, &
cgd
->
cs
.
blk_‰ì
));

1572 
	`tsk_Ârötf
(
hFûe
, " Num o‡Avaû Inodes: %" 
PRIu32
 "\n",

1573 
	`tsk_gëu32
(
fs
->
ídün
, &
cgd
->
cs
.
öo_‰ì
));

1574 
	`tsk_Ârötf
(
hFûe
, " Num o‡Avaû Føgs: %" 
PRIu32
 "\n",

1575 
	`tsk_gëu32
(
fs
->
ídün
, &
cgd
->
cs
.
‰ag_‰ì
));

1576 
	`tsk_Ârötf
(
hFûe
,

1577 " La° Block AŒoˇãd: %" 
PRIuDADDR
 "\n",

1578 
	`tsk_gëu32
(
fs
->
ídün
,

1579 &
cgd
->
œ°_Æloc_blk
Ë+ 
	`cgba£_l˛
(
fs
, 
sb1
, 
i
));

1580 
	`tsk_Ârötf
(
hFûe
,

1581 " La° FøgmíàAŒoˇãd: %" 
PRIuDADDR
 "\n",

1582 
	`tsk_gëu32
(
fs
->
ídün
,

1583 &
cgd
->
œ°_Æloc_‰ag
Ë+ 
	`cgba£_l˛
(
fs
, 
sb1
, 
i
));

1584 
	`tsk_Ârötf
(
hFûe
, " La° InodêAŒoˇãd: %" 
PRIu32
 "\n",

1585 
	`tsk_gëu32
(
fs
->
ídün
,

1586 &
cgd
->
œ°_Æloc_öo
Ë+ (
	`tsk_gës32
(
fs
->
ídün
,

1587 
sb1
->
cg_öode_num
Ë* 
i
));

1591 
	}
}

1598 
FILE
 *
	mhFûe
;

1599 
	midx
;

1600 } 
	tFFS_PRINT_ADDR
;

1603 
TSK_WALK_RET_ENUM


1604 
	$¥öt_addr_a˘
(
TSK_FS_FILE
 * 
fs_fûe
, 
TSK_OFF_T
 
a_off
, 
TSK_DADDR_T
 
addr
,

1605 *
buf
, 
size_t
 
size
, 
TSK_FS_BLOCK_FLAG_ENUM
 
a_Êags
, *
±r
)

1607 
TSK_FS_INFO
 *
fs
 = 
fs_fûe
->
fs_öfo
;

1608 
FFS_PRINT_ADDR
 *
¥öt
 = (FFS_PRINT_ADDR *Ë
±r
;

1610 i‡(
a_Êags
 & 
TSK_FS_BLOCK_FLAG_CONT
) {

1611 
i
, 
s
;

1613 
i
 = 0, 
s
 = (Ë
size
; s > 0; s -
fs
->
block_size
, i++) {

1616 i‡(
addr
)

1617 
	`tsk_Ârötf
(
¥öt
->
hFûe
, "%" 
PRIuDADDR
 " ", 
addr
 + 
i
);

1619 
	`tsk_Ârötf
(
¥öt
->
hFûe
, "0 ");

1621 i‡(++(
¥öt
->
idx
) == 8) {

1622 
	`tsk_Ârötf
(
¥öt
->
hFûe
, "\n");

1623 
¥öt
->
idx
 = 0;

1628  
TSK_WALK_CONT
;

1629 
	}
}

1644 
uöt8_t


1645 
	$ffs_i°©
(
TSK_FS_INFO
 * 
fs
, 
FILE
 * 
hFûe
, 
TSK_INUM_T
 
öum
,

1646 
TSK_DADDR_T
 
numblock
, 
öt32_t
 
£c_skew
)

1648 
FFS_INFO
 *
ffs
 = (FFS_INFO *Ë
fs
;

1649 
TSK_FS_META
 *
fs_mëa
;

1650 
TSK_FS_FILE
 *
fs_fûe
;

1651 
ls
[12];

1652 
FFS_PRINT_ADDR
 
¥öt
;

1653 c⁄° 
TSK_FS_ATTR
 *
fs_©å_ödú
;

1656 
	`tsk_îr‹_ª£t
();

1658 i‡((
fs_fûe
 = 
	`tsk_fs_fûe_›í_mëa
(
fs
, 
NULL
, 
öum
)) == NULL) {

1661 
fs_mëa
 = 
fs_fûe
->
mëa
;

1663 
	`tsk_Ârötf
(
hFûe
, "öode: %" 
PRIuINUM
 "\n", 
öum
);

1664 
	`tsk_Ârötf
(
hFûe
, "%sAllocated\n",

1665 (
fs_mëa
->
Êags
 & 
TSK_FS_META_FLAG_ALLOC
) ? "" : "Not ");

1667 
	`tsk_Ârötf
(
hFûe
, "Group: %" 
PRI_FFSGRP
 "\n", 
ffs
->
gΩ_num
);

1669 i‡(
fs_mëa
->
lök
)

1670 
	`tsk_Ârötf
(
hFûe
, "symbﬁi¯lökÅo: %s\n", 
fs_mëa
->
lök
);

1672 
	`tsk_Ârötf
(
hFûe
, "uid / gid: %" 
PRIuUID
 " / %" 
PRIuGID
 "\n",

1673 
fs_mëa
->
uid
, fs_mëa->
gid
);

1676 
	`tsk_fs_mëa_make_ls
(
fs_mëa
, 
ls
, (ls));

1677 
	`tsk_Ârötf
(
hFûe
, "mode: %s\n", 
ls
);

1679 
	`tsk_Ârötf
(
hFûe
, "size: %" 
PRIuOFF
 "\n", 
fs_mëa
->
size
);

1680 
	`tsk_Ârötf
(
hFûe
, "num o‡löks: %u\n", 
fs_mëa
->
∆ök
);

1683 i‡(
£c_skew
 != 0) {

1684 
	`tsk_Ârötf
(
hFûe
, "\nAdjusted Inode Times:\n");

1685 
fs_mëa
->
mtime
 -
£c_skew
;

1686 
fs_mëa
->
©ime
 -
£c_skew
;

1687 
fs_mëa
->
˘ime
 -
£c_skew
;

1689 
	`tsk_Ârötf
(
hFûe
, "Ac˚s£d:\t%s", 
	`˘ime
(&
fs_mëa
->
©ime
));

1690 
	`tsk_Ârötf
(
hFûe
, "FûêModifõd:\t%s", 
	`˘ime
(&
fs_mëa
->
mtime
));

1691 
	`tsk_Ârötf
(
hFûe
, "InodêModifõd:\t%s", 
	`˘ime
(&
fs_mëa
->
˘ime
));

1693 
fs_mëa
->
mtime
 +
£c_skew
;

1694 
fs_mëa
->
©ime
 +
£c_skew
;

1695 
fs_mëa
->
˘ime
 +
£c_skew
;

1697 
	`tsk_Ârötf
(
hFûe
, "\nOriginal Inode Times:\n");

1700 
	`tsk_Ârötf
(
hFûe
, "\nInode Times:\n");

1703 
	`tsk_Ârötf
(
hFûe
, "Ac˚s£d:\t%s", 
	`˘ime
(&
fs_mëa
->
©ime
));

1704 
	`tsk_Ârötf
(
hFûe
, "FûêModifõd:\t%s", 
	`˘ime
(&
fs_mëa
->
mtime
));

1705 
	`tsk_Ârötf
(
hFûe
, "InodêModifõd:\t%s", 
	`˘ime
(&
fs_mëa
->
˘ime
));

1708 i‡((
fs
->
·y≥
 =
TSK_FS_TYPE_FFS2
Ë&& (
ffs
->
döo_buf
)) {

1709 
ffs_öode2
 *
ö
 = (ffs_öode2 *Ë
ffs
->
döo_buf
;

1711 i‡(
	`tsk_gëu32
(
fs
->
ídün
, 
ö
->
di_extsize
) > 0) {

1712 
ffs_exèâr
 *
ó
;

1713 
uöt32_t
 
size
;

1714 
«me
[257];

1715 *
blk_buf
;

1717 i‡((
blk_buf
 = 
	`tsk_mÆloc
(
ffs
->
ffsbsize_b
)Ë=
NULL
) {

1718 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

1722 
size
 = 
	`tsk_gëu32
(
fs
->
ídün
, 
ö
->
di_extsize
);

1723 
	`tsk_Ârötf
(
hFûe
, "\nExtended Attributes:\n");

1724 
	`tsk_Ârötf
(
hFûe
,

1725 "Size: %" 
PRIu32
 " (%" 
PRIu64
 ", %" PRIu64 ")\n", 
size
,

1726 
	`tsk_gëu64
(
fs
->
ídün
, 
ö
->
di_extb
[0]),

1727 
	`tsk_gëu64
(
fs
->
ídün
, 
ö
->
di_extb
[1]));

1732 i‡((
	`tsk_gëu64
(
fs
->
ídün
, 
ö
->
di_extb
[0]Ë>fs->
fú°_block
)

1733 && (
	`tsk_gëu64
(
fs
->
ídün
,

1734 
ö
->
di_extb
[0]Ë<
fs
->
œ°_block
)) {

1735 
uöçå_t
 
íd
;

1736 
ssize_t
 
˙t
;

1738 
˙t
 =

1739 
	`tsk_fs_ªad_block
(
fs
, 
	`tsk_gëu64
(fs->
ídün
,

1740 
ö
->
di_extb
[0]), 
blk_buf
, 
ffs
->
ffsbsize_b
);

1741 i‡(
˙t
 !
ffs
->
ffsbsize_b
) {

1742 i‡(
˙t
 >= 0) {

1743 
	`tsk_îr‹_ª£t
();

1744 
tsk_î∫o
 = 
TSK_ERR_FS_READ
;

1746 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

1748 
PRIu64
, 
	`tsk_gëu64
(
fs
->
ídün
, 
ö
->
di_extb
[0]));

1749 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

1750 
	`‰ì
(
blk_buf
);

1754 
ó
 = (
ffs_exèâr
 *Ë
blk_buf
;

1756 i‡(
size
 > 
ffs
->
ffsbsize_b
) {

1757 
íd
 = (
uöçå_t
Ë
ó
 + 
ffs
->
ffsbsize_b
;

1758 
size
 -
ffs
->
ffsbsize_b
;

1761 
íd
 = (
uöçå_t
Ë
ó
 + 
size
;

1762 
size
 = 0;

1765 ; (
uöçå_t
Ë
ó
 < 
íd
;

1766 
ó
 =

1767 (
ffs_exèâr
 *Ë((
uöçå_t
Ë
ó
 +

1768 
	`tsk_gëu32
(
fs
->
ídün
, 
ó
->
ª˛í
))) {

1769 
	`mem˝y
(
«me
, 
ó
->«me,Éa->
∆í
);

1770 
«me
[
ó
->
∆í
] = '\0';

1771 
	`tsk_Ârötf
(
hFûe
, "%s\n", 
«me
);

1774 i‡((
	`tsk_gëu64
(
fs
->
ídün
, 
ö
->
di_extb
[1]Ë>fs->
fú°_block
)

1775 && (
	`tsk_gëu64
(
fs
->
ídün
,

1776 
ö
->
di_extb
[1]Ë<
fs
->
œ°_block
)) {

1777 
uöçå_t
 
íd
;

1778 
ssize_t
 
˙t
;

1780 
˙t
 =

1781 
	`tsk_fs_ªad_block
(
fs
, 
	`tsk_gëu64
(fs->
ídün
,

1782 
ö
->
di_extb
[1]), 
blk_buf
, 
ffs
->
ffsbsize_b
);

1783 i‡(
˙t
 !
ffs
->
ffsbsize_b
) {

1784 i‡(
˙t
 >= 0) {

1785 
	`tsk_îr‹_ª£t
();

1786 
tsk_î∫o
 = 
TSK_ERR_FS_INODE_COR
;

1788 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

1790 
PRIu64
, 
	`tsk_gëu64
(
fs
->
ídün
, 
ö
->
di_extb
[1]));

1791 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

1792 
	`‰ì
(
blk_buf
);

1796 
ó
 = (
ffs_exèâr
 *Ë
blk_buf
;

1798 i‡(
size
 > 
ffs
->
ffsbsize_b
)

1799 
íd
 = (
uöçå_t
Ë
ó
 + 
ffs
->
ffsbsize_b
;

1801 
íd
 = (
uöçå_t
Ë
ó
 + 
size
;

1803 ; (
uöçå_t
Ë
ó
 < 
íd
;

1804 
ó
 =

1805 (
ffs_exèâr
 *Ë((
uöçå_t
Ë
ó
 +

1806 
	`tsk_gëu32
(
fs
->
ídün
, 
ó
->
ª˛í
))) {

1807 
	`mem˝y
(
«me
, 
ó
->«me,Éa->
∆í
);

1808 
«me
[
ó
->
∆í
] = '\0';

1809 
	`tsk_Ârötf
(
hFûe
, "%s\n", 
«me
);

1812 
	`‰ì
(
blk_buf
);

1818 i‡(
numblock
 > 0)

1819 
fs_mëa
->
size
 = 
numblock
 * 
ffs
->
ffsbsize_b
;

1821 
	`tsk_Ârötf
(
hFûe
, "\nDirect Blocks:\n");

1823 
¥öt
.
idx
 = 0;

1824 
¥öt
.
hFûe
 = hFile;

1826 i‡(
	`tsk_fs_fûe_wÆk
(
fs_fûe
, 
TSK_FS_FILE_WALK_FLAG_AONLY
,

1827 
¥öt_addr_a˘
, (*Ë&
¥öt
)) {

1828 
	`tsk_Ârötf
(
hFûe
, "\nErrorÑeading blocks in file\n");

1829 
	`tsk_îr‹_¥öt
(
hFûe
);

1830 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

1834 i‡(
¥öt
.
idx
 != 0)

1835 
	`tsk_Ârötf
(
hFûe
, "\n");

1837 
fs_©å_ödú
 = 
	`tsk_fs_fûe_©å_gë_ty≥
(
fs_fûe
,

1838 
TSK_FS_ATTR_TYPE_UNIX_INDIR
, 0, 0);

1839 i‡(
fs_©å_ödú
) {

1840 
	`tsk_Ârötf
(
hFûe
, "\nIndirect Blocks:\n");

1842 
¥öt
.
idx
 = 0;

1844 i‡(
	`tsk_fs_©å_wÆk
(
fs_©å_ödú
, 
TSK_FS_FILE_WALK_FLAG_AONLY
,

1845 
¥öt_addr_a˘
, (*Ë&
¥öt
)) {

1846 
	`tsk_Ârötf
(
hFûe
, "\nErrorÑeading indirectáttribute: ");

1847 
	`tsk_îr‹_¥öt
(
hFûe
);

1848 
	`tsk_îr‹_ª£t
();

1850 i‡(
¥öt
.
idx
 != 0) {

1851 
	`tsk_Ârötf
(
hFûe
, "\n");

1855 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

1857 
	}
}

1860 
uöt8_t


1861 
	$ffs_j›í
(
TSK_FS_INFO
 * 
fs
, 
TSK_INUM_T
 
öum
)

1863 
	`tsk_îr‹_ª£t
();

1864 
tsk_î∫o
 = 
TSK_ERR_FS_UNSUPFUNC
;

1865 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
, "UFS doesÇot haveá journal");

1867 
	}
}

1869 
uöt8_t


1870 
	$ffs_jíåy_wÆk
(
TSK_FS_INFO
 * 
fs
, 
a_Êags
,

1871 
TSK_FS_JENTRY_WALK_CB
 
a˘i⁄
, *
±r
)

1873 
	`tsk_îr‹_ª£t
();

1874 
tsk_î∫o
 = 
TSK_ERR_FS_UNSUPFUNC
;

1875 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
, "UFS doesÇot haveá journal");

1877 
	}
}

1880 
uöt8_t


1881 
	$ffs_jblk_wÆk
(
TSK_FS_INFO
 * 
fs
, 
TSK_DADDR_T
 
°¨t
, TSK_DADDR_T 
íd
,

1882 
a_Êags
, 
TSK_FS_JBLK_WALK_CB
 
a˘i⁄
, *
±r
)

1884 
	`tsk_îr‹_ª£t
();

1885 
tsk_î∫o
 = 
TSK_ERR_FS_UNSUPFUNC
;

1886 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
, "UFS doesÇot haveá journal");

1888 
	}
}

1893 
	$ffs_˛o£
(
TSK_FS_INFO
 * 
fs
)

1895 
FFS_INFO
 *
ffs
 = (FFS_INFO *Ë
fs
;

1897 
fs
->
èg
 = 0;

1899 i‡(
ffs
->
gΩ_buf
)

1900 
	`‰ì
(
ffs
->
gΩ_buf
);

1902 i‡(
ffs
->
ôbl_buf
)

1903 
	`‰ì
(
ffs
->
ôbl_buf
);

1905 i‡(
ffs
->
döo_buf
)

1906 
	`‰ì
(
ffs
->
döo_buf
);

1908 i‡(
fs
->
li°_öum_«med
) {

1909 
	`tsk_li°_‰ì
(
fs
->
li°_öum_«med
);

1910 
fs
->
li°_öum_«med
 = 
NULL
;

1913 
	`‰ì
((*Ë
ffs
->
fs
.
sb1
);

1914 
	`‰ì
(
ffs
);

1915 
	}
}

1926 
TSK_FS_INFO
 *

1927 
	$ffs_›í
(
TSK_IMG_INFO
 * 
img_öfo
, 
TSK_OFF_T
 
off£t
, 
TSK_FS_TYPE_ENUM
 
·y≥
)

1929 *
my«me
 = "ffs_open";

1930 
FFS_INFO
 *
ffs
;

1931 
Àn
;

1932 
TSK_FS_INFO
 *
fs
;

1933 
ssize_t
 
˙t
;

1936 
	`tsk_îr‹_ª£t
();

1938 i‡(
	`TSK_FS_TYPE_ISFFS
(
·y≥
) == 0) {

1939 
	`tsk_îr‹_ª£t
();

1940 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

1941 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
, "Invalid FS Type in ffs_open");

1942  
NULL
;

1945 i‡((
ffs
 = (
FFS_INFO
 *Ë
	`tsk_mÆloc
((*ffs))Ë=
NULL
)

1946  
NULL
;

1947 
fs
 = &(
ffs
->
fs_öfo
);

1949 
fs
->
·y≥
 = ftype;

1950 
fs
->
Êags
 = 0;

1951 
fs
->
du«me
 = "Fragment";

1952 
fs
->
èg
 = 
TSK_FS_INFO_TAG
;

1954 
fs
->
img_öfo
 = img_info;

1955 
fs
->
off£t
 = offset;

1958 
Àn
 = 
	`roundup
((
ffs_sb1
), 
img_öfo
->
£˘‹_size
);

1959 
ffs
->
fs
.
sb1
 = (
ffs_sb1
 *Ë
	`tsk_mÆloc
(
Àn
);

1960 i‡(
ffs
->
fs
.
sb1
 =
NULL
) {

1961 
fs
->
èg
 = 0;

1962 
	`‰ì
(
ffs
);

1963  
NULL
;

1971 
˙t
 = 
tsk_fs_ªad


1972 (
fs
, (
TSK_OFF_T
Ë
UFS2_SBOFF
, (*Ë
ffs
->fs.
sb2
,

1973 (
ffs_sb2
));

1974 i‡(
˙t
 !(
ffs_sb2
)) {

1975 i‡(
˙t
 >= 0) {

1976 
	`tsk_îr‹_ª£t
();

1977 
tsk_î∫o
 = 
TSK_ERR_FS_READ
;

1979 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

1980 "%s: Su≥rblockáà%" 
PRIuDADDR
, 
my«me
,

1981 (
TSK_OFF_T
Ë
UFS2_SBOFF
);

1982 
fs
->
èg
 = 0;

1983 
	`‰ì
(
ffs
->
fs
.
sb1
);

1984 
	`‰ì
(
ffs
);

1985  
NULL
;

1989 i‡(
	`tsk_fs_guessu32
(
fs
, 
ffs
->fs.
sb2
->
magic
, 
UFS2_FS_MAGIC
)) {

1990 
˙t
 = 
tsk_fs_ªad


1991 (
fs
, (
TSK_OFF_T
Ë
UFS2_SBOFF2
, (*Ë
ffs
->fs.
sb2
,

1992 (
ffs_sb2
));

1993 i‡(
˙t
 !(
ffs_sb2
)) {

1994 i‡(
˙t
 >= 0) {

1995 
	`tsk_îr‹_ª£t
();

1996 
tsk_î∫o
 = 
TSK_ERR_FS_READ
;

1998 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

1999 "%s: Su≥rblockáà%" 
PRIuDADDR
,

2000 
my«me
, (
TSK_OFF_T
Ë
UFS2_SBOFF2
);

2001 
fs
->
èg
 = 0;

2002 
	`‰ì
(
ffs
->
fs
.
sb1
);

2003 
	`‰ì
(
ffs
);

2004  
NULL
;

2008 i‡(
	`tsk_fs_guessu32
(
fs
, 
ffs
->fs.
sb2
->
magic
, 
UFS2_FS_MAGIC
)) {

2009 
˙t
 = 
tsk_fs_ªad


2010 (
fs
, (
TSK_OFF_T
Ë
UFS1_SBOFF
, (*Ë
ffs
->fs.
sb1
, 
Àn
);

2011 i‡(
˙t
 !
Àn
) {

2012 i‡(
˙t
 >= 0) {

2013 
	`tsk_îr‹_ª£t
();

2014 
tsk_î∫o
 = 
TSK_ERR_FS_READ
;

2016 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

2017 "%s: Su≥rblockáà%" 
PRIuDADDR
,

2018 
my«me
, (
TSK_OFF_T
Ë
UFS1_SBOFF
);

2019 
fs
->
èg
 = 0;

2020 
	`‰ì
(
ffs
->
fs
.
sb1
);

2021 
	`‰ì
(
ffs
);

2022  
NULL
;

2024 i‡(
	`tsk_fs_guessu32
(
fs
, 
ffs
->fs.
sb1
->
magic
, 
UFS1_FS_MAGIC
)) {

2025 
fs
->
èg
 = 0;

2026 
	`‰ì
(
ffs
->
fs
.
sb1
);

2027 
	`‰ì
(
ffs
);

2028 
	`tsk_îr‹_ª£t
();

2029 
tsk_î∫o
 = 
TSK_ERR_FS_MAGIC
;

2030 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
, "No UFS Magic Found");

2031  
NULL
;

2035 
fs
->
·y≥
 = 
TSK_FS_TYPE_FFS1
;

2039 
fs
->
·y≥
 = 
TSK_FS_TYPE_FFS2
;

2043 
fs
->
·y≥
 = 
TSK_FS_TYPE_FFS2
;

2051 i‡(
fs
->
·y≥
 =
TSK_FS_TYPE_FFS2
) {

2052 
fs
->
block_cou¡
 = 
	`tsk_gës64
(fs->
ídün
, 
ffs
->fs.
sb2
->
‰ag_num
);

2053 
fs
->
block_size
 = 
	`tsk_gës32
(fs->
ídün
, 
ffs
->fs.
sb2
->
fsize_b
);

2054 
ffs
->
ffsbsize_b
 = 
	`tsk_gës32
(
fs
->
ídün
, ffs->fs.
sb2
->
bsize_b
);

2055 
ffs
->
ffsbsize_f
 = 
	`tsk_gës32
(
fs
->
ídün
, ffs->fs.
sb2
->
bsize_‰ag
);

2056 
ffs
->
groups_cou¡
 = 
	`tsk_gës32
(
fs
->
ídün
, ffs->fs.
sb2
->
cg_num
);

2059 
fs
->
block_cou¡
 = 
	`tsk_gës32
(fs->
ídün
, 
ffs
->fs.
sb1
->
‰ag_num
);

2060 
fs
->
block_size
 = 
	`tsk_gës32
(fs->
ídün
, 
ffs
->fs.
sb1
->
fsize_b
);

2061 
ffs
->
ffsbsize_b
 = 
	`tsk_gës32
(
fs
->
ídün
, ffs->fs.
sb1
->
bsize_b
);

2062 
ffs
->
ffsbsize_f
 = 
	`tsk_gës32
(
fs
->
ídün
, ffs->fs.
sb1
->
bsize_‰ag
);

2063 
ffs
->
groups_cou¡
 = 
	`tsk_gës32
(
fs
->
ídün
, ffs->fs.
sb1
->
cg_num
);

2070 
fs
->
fú°_block
 = 0;

2071 
fs
->
œ°_block
 = fs->
œ°_block_a˘
 = fs->
block_cou¡
 - 1;

2072 
fs
->
dev_bsize
 = 
img_öfo
->
£˘‹_size
;

2075 i‡((
TSK_DADDR_T
Ë((
img_öfo
->
size
 - 
off£t
Ë/ 
fs
->
block_size
) <

2076 
fs
->
block_cou¡
)

2077 
fs
->
œ°_block_a˘
 =

2078 (
img_öfo
->
size
 - 
off£t
Ë/ 
fs
->
block_size
 - 1;

2080 i‡((
fs
->
block_size
 % 512Ë|| (
ffs
->
ffsbsize_b
 % 512)) {

2081 
fs
->
èg
 = 0;

2082 
	`‰ì
(
ffs
->
fs
.
sb1
);

2083 
	`‰ì
(
ffs
);

2084 
	`tsk_îr‹_ª£t
();

2085 
tsk_î∫o
 = 
TSK_ERR_FS_MAGIC
;

2086 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

2088  
NULL
;

2091 i‡((
ffs
->
ffsbsize_b
 / 
fs
->
block_size
Ë!ffs->
ffsbsize_f
) {

2092 
fs
->
èg
 = 0;

2093 
	`‰ì
(
ffs
->
fs
.
sb1
);

2094 
	`‰ì
(
ffs
);

2095 
	`tsk_îr‹_ª£t
();

2096 
tsk_î∫o
 = 
TSK_ERR_FS_MAGIC
;

2097 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

2099  
NULL
;

2103 i‡(
fs
->
·y≥
 =
TSK_FS_TYPE_FFS2
) {

2104 
fs
->
öum_cou¡
 = 
ffs
->
groups_cou¡
 * 
	`tsk_gës32
(fs->
ídün
, ffs->fs.
sb2
->
cg_öode_num
) + 1;

2107 
fs
->
öum_cou¡
 = 
ffs
->
groups_cou¡
 * 
	`tsk_gës32
(fs->
ídün
, ffs->fs.
sb1
->
cg_öode_num
) + 1;

2110 
fs
->
roŸ_öum
 = 
FFS_ROOTINO
;

2111 
fs
->
fú°_öum
 = 
FFS_FIRSTINO
;

2112 
fs
->
œ°_öum
 = fs->
öum_cou¡
 - 1;

2115 
fs
->
fs_id_u£d
 = 0; fs->fs_id_used < 8; fs->fs_id_used++) {

2116 
fs
->
fs_id
[fs->
fs_id_u£d
] = 
ffs
->fs.
sb1
->fs_id[fs->fs_id_used];

2120 
fs
->
öode_wÆk
 = 
ffs_öode_wÆk
;

2121 
fs
->
block_wÆk
 = 
ffs_block_wÆk
;

2122 
fs
->
block_gëÊags
 = 
ffs_block_gëÊags
;

2124 
fs
->
gë_deÁu…_©å_ty≥
 = 
tsk_fs_unix_gë_deÁu…_©å_ty≥
;

2125 
fs
->
lﬂd_©ås
 = 
tsk_fs_unix_make_d©a_run
;

2126 
fs
->
«me_cmp
 = 
tsk_fs_unix_«me_cmp
;

2128 
fs
->
fûe_add_mëa
 = 
ffs_öode_lookup
;

2129 
fs
->
dú_›í_mëa
 = 
ffs_dú_›í_mëa
;

2130 
fs
->
fs°©
 = 
ffs_fs°©
;

2131 
fs
->
fscheck
 = 
ffs_fscheck
;

2132 
fs
->
i°©
 = 
ffs_i°©
;

2133 
fs
->
˛o£
 = 
ffs_˛o£
;

2134 
fs
->
jblk_wÆk
 = 
ffs_jblk_wÆk
;

2135 
fs
->
jíåy_wÆk
 = 
ffs_jíåy_wÆk
;

2136 
fs
->
j›í
 = 
ffs_j›í
;

2137 
fs
->
jou∫_öum
 = 0;

2140 
ffs
->
gΩ_buf
 = 
NULL
;

2141 
ffs
->
gΩ_num
 = 0xffffffff;

2142 
ffs
->
gΩ_addr
 = 0;

2144 
ffs
->
döo_buf
 = 
NULL
;

2145 
ffs
->
döo_öum
 = 0xffffffff;

2147 
ffs
->
ôbl_buf
 = 
NULL
;

2148 
ffs
->
ôbl_addr
 = 0;

2149 
fs
->
li°_öum_«med
 = 
NULL
;

2154 i‡(
tsk_vîbo£
)

2155 
	`tsk_Ârötf
(
°dîr
,

2156 "öode†%" 
PRIuINUM
 "Ñoot ino %" PRIuINUM " cyl groups %"

2157 
PRId32
 " block†%" 
PRIuDADDR
 "\n", 
fs
->
öum_cou¡
,

2158 
fs
->
roŸ_öum
, 
ffs
->
groups_cou¡
, fs->
block_cou¡
);

2160  (
fs
);

2161 
	}
}

	@tsk3/fs/ffs_dent.c

27 
	~<˘y≥.h
>

28 
	~"tsk_fs_i.h
"

29 
	~"tsk_ffs.h
"

32 
uöt8_t


33 
	$ffs_dít_c›y
(
FFS_INFO
 * 
ffs
, *
ffs_dít
, 
TSK_FS_NAME
 * 
fs_«me
)

35 
TSK_FS_INFO
 *
a_fs
 = &(
ffs
->
fs_öfo
);

36 
i
;

39 i‡((
a_fs
->
·y≥
 =
TSK_FS_TYPE_FFS1
)

40 || (
a_fs
->
·y≥
 =
TSK_FS_TYPE_FFS2
)) {

41 
ffs_díåy1
 *
dú
 = (ffs_díåy1 *Ë
ffs_dít
;

43 
fs_«me
->
mëa_addr
 = 
	`tsk_gëu32
(
a_fs
->
ídün
, 
dú
->
d_öo
);

45 i‡(
fs_«me
->
«me_size
 !
FFS_MAXNAMLEN
) {

46 i‡(
	`tsk_fs_«me_ªÆloc
(
fs_«me
, 
FFS_MAXNAMLEN
))

51 
	`°∫˝y
(
fs_«me
->
«me
, 
dú
->
d_«me
, fs_«me->
«me_size
);

53 
dú
->
d_ty≥
) {

54 
FFS_DT_REG
:

55 
fs_«me
->
ty≥
 = 
TSK_FS_NAME_TYPE_REG
;

57 
FFS_DT_DIR
:

58 
fs_«me
->
ty≥
 = 
TSK_FS_NAME_TYPE_DIR
;

60 
FFS_DT_CHR
:

61 
fs_«me
->
ty≥
 = 
TSK_FS_NAME_TYPE_CHR
;

63 
FFS_DT_BLK
:

64 
fs_«me
->
ty≥
 = 
TSK_FS_NAME_TYPE_BLK
;

66 
FFS_DT_FIFO
:

67 
fs_«me
->
ty≥
 = 
TSK_FS_NAME_TYPE_FIFO
;

69 
FFS_DT_SOCK
:

70 
fs_«me
->
ty≥
 = 
TSK_FS_NAME_TYPE_SOCK
;

72 
FFS_DT_LNK
:

73 
fs_«me
->
ty≥
 = 
TSK_FS_NAME_TYPE_LNK
;

75 
FFS_DT_WHT
:

76 
fs_«me
->
ty≥
 = 
TSK_FS_NAME_TYPE_WHT
;

78 
FFS_DT_UNKNOWN
:

80 
fs_«me
->
ty≥
 = 
TSK_FS_NAME_TYPE_UNDEF
;

84 i‡(
a_fs
->
·y≥
 =
TSK_FS_TYPE_FFS1B
) {

85 
ffs_díåy2
 *
dú
 = (ffs_díåy2 *Ë
ffs_dít
;

87 
fs_«me
->
mëa_addr
 = 
	`tsk_gëu32
(
a_fs
->
ídün
, 
dú
->
d_öo
);

89 i‡(
fs_«me
->
«me_size
 !
FFS_MAXNAMLEN
) {

90 i‡(
	`tsk_fs_«me_ªÆloc
(
fs_«me
, 
FFS_MAXNAMLEN
))

95 
	`°∫˝y
(
fs_«me
->
«me
, 
dú
->
d_«me
, fs_«me->
«me_size
);

97 
fs_«me
->
ty≥
 = 
TSK_FS_NAME_TYPE_UNDEF
;

100 
	`tsk_îr‹_ª£t
();

101 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

102 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

108 
i
 = 0;

109 
fs_«me
->
«me
[
i
] != '\0') {

110 i‡(
	`TSK_IS_CNTRL
(
fs_«me
->
«me
[
i
]))

111 
fs_«me
->
«me
[
i
] = '^';

112 
i
++;

115 
fs_«me
->
Êags
 = 0;

117 
	}
}

123 
TSK_RETVAL_ENUM


124 
	$ffs_dít_∑r£_block
(
FFS_INFO
 * 
ffs
, 
TSK_FS_DIR
 * 
fs_dú
, 
uöt8_t
 
a_is_dñ
,

125 *
buf
, 
Àn
)

127 
idx
;

128 
öode
 = 0, 
dñÀn
 = 0, 
ª˛í
 = 0;

129 
möª˛í
 = 4;

130 
TSK_FS_INFO
 *
fs
 = &(
ffs
->
fs_öfo
);

132 *
dúPå
;

133 
TSK_FS_NAME
 *
fs_«me
;

135 i‡((
fs_«me
 = 
	`tsk_fs_«me_Æloc
(
FFS_MAXNAMLEN
 + 1, 0)Ë=
NULL
)

136  
TSK_ERR
;

141 
idx
 = 0; idx <
Àn
 - 
	`FFS_DIRSIZ_l˛
(1); idx +
möª˛í
) {

142 
«mñí
 = 0;

144 
dúPå
 = (*Ë&
buf
[
idx
];

147 i‡((
fs
->
·y≥
 =
TSK_FS_TYPE_FFS1
)

148 || (
fs
->
·y≥
 =
TSK_FS_TYPE_FFS2
)) {

149 
ffs_díåy1
 *
dú
 = (ffs_díåy1 *Ë
dúPå
;

150 
öode
 = 
	`tsk_gëu32
(
fs
->
ídün
, 
dú
->
d_öo
);

151 
«mñí
 = 
dú
->
d_«mÀn
;

152 
ª˛í
 = 
	`tsk_gëu16
(
fs
->
ídün
, 
dú
->
d_ª˛í
);

155 i‡(
fs
->
·y≥
 =
TSK_FS_TYPE_FFS1B
) {

156 
ffs_díåy2
 *
dú
 = (ffs_díåy2 *Ë
dúPå
;

157 
öode
 = 
	`tsk_gëu32
(
fs
->
ídün
, 
dú
->
d_öo
);

158 
«mñí
 = 
	`tsk_gëu16
(
fs
->
ídün
, 
dú
->
d_«mÀn
);

159 
ª˛í
 = 
	`tsk_gëu16
(
fs
->
ídün
, 
dú
->
d_ª˛í
);

163 
möª˛í
 = 
	`FFS_DIRSIZ_l˛
(
«mñí
);

170 i‡((
öode
 > 
fs
->
œ°_öum
) ||

171 (
«mñí
 > 
FFS_MAXNAMLEN
) ||

172 (
«mñí
 == 0) ||

173 (
ª˛í
 < 
möª˛í
Ë|| (ª˛í % 4Ë|| (
idx
 +Ñe˛í > 
Àn
)) {

176 
möª˛í
 = 4;

177 i‡(
dñÀn
 > 0)

178 
dñÀn
 -= 4;

184 i‡((
dñÀn
Ë&& (dñÀ¿< 
möª˛í
)) {

185 
möª˛í
 = 4;

186 
dñÀn
 -= 4;

191 i‡(
	`ffs_dít_c›y
(
ffs
, 
dúPå
, 
fs_«me
)) {

192 
	`tsk_fs_«me_‰ì
(
fs_«me
);

193  
TSK_ERR
;

197 i‡((
dñÀn
 > 0Ë|| (
öode
 =0Ë|| (
a_is_dñ
)) {

198 
fs_«me
->
Êags
 = 
TSK_FS_NAME_FLAG_UNALLOC
;

199 i‡(
dñÀn
)

200 
dñÀn
 -
möª˛í
;

203 
fs_«me
->
Êags
 = 
TSK_FS_NAME_FLAG_ALLOC
;

205 i‡(
	`tsk_fs_dú_add
(
fs_dú
, 
fs_«me
)) {

206 
	`tsk_fs_«me_‰ì
(
fs_«me
);

207  
TSK_ERR
;

211 i‡((
ª˛í
 !
möª˛í
Ë&& (
dñÀn
 <= 0))

212 
dñÀn
 = 
ª˛í
 - 
möª˛í
;

215 
	`tsk_fs_«me_‰ì
(
fs_«me
);

216  
TSK_OK
;

217 
	}
}

232 
TSK_RETVAL_ENUM


233 
	$ffs_dú_›í_mëa
(
TSK_FS_INFO
 * 
a_fs
, 
TSK_FS_DIR
 ** 
a_fs_dú
,

234 
TSK_INUM_T
 
a_addr
)

236 
TSK_OFF_T
 
size
;

237 
FFS_INFO
 *
ffs
 = (FFS_INFO *Ë
a_fs
;

238 *
dúbuf
;

239 
nchnk
, 
cidx
;

240 
TSK_FS_LOAD_FILE
 
lﬂd_fûe
;

241 
TSK_FS_DIR
 *
fs_dú
;

246 
TSK_RETVAL_ENUM
 
ªtvÆ_tmp
;

247 
TSK_RETVAL_ENUM
 
ªtvÆ_föÆ
 = 
TSK_OK
;

250 i‡(
a_addr
 < 
a_fs
->
fú°_öum
 ||á_add∏>á_fs->
œ°_öum
) {

251 
	`tsk_îr‹_ª£t
();

252 
tsk_î∫o
 = 
TSK_ERR_FS_WALK_RNG
;

253 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

254 "ffs_dú_›í_mëa: InvÆid inodêvÆue: %" 
PRIuINUM
, 
a_addr
);

255  
TSK_ERR
;

257 i‡(
a_fs_dú
 =
NULL
) {

258 
	`tsk_îr‹_ª£t
();

259 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

260 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

262  
TSK_ERR
;

265 i‡(
tsk_vîbo£
)

266 
	`tsk_Ârötf
(
°dîr
,

267 "ffs_dú_›í_mëa: Pro˚ssög dúe˘‹y %" 
PRIuINUM
 "\n",

268 
a_addr
);

270 
fs_dú
 = *
a_fs_dú
;

271 i‡(
fs_dú
) {

272 
	`tsk_fs_dú_ª£t
(
fs_dú
);

275 i‡((*
a_fs_dú
 = 
fs_dú
 = 
	`tsk_fs_dú_Æloc
(
a_fs
, 128)Ë=
NULL
) {

276  
TSK_ERR
;

281 i‡(
a_addr
 =
	`TSK_FS_ORPHANDIR_INUM
(
a_fs
)) {

282  
	`tsk_fs_dú_föd_‹ph™s
(
a_fs
, 
fs_dú
);

285 i‡((
fs_dú
->
fs_fûe
 =

286 
	`tsk_fs_fûe_›í_mëa
(
a_fs
, 
NULL
, 
a_addr
)) == NULL) {

287 
	`tsk_îr‹_ª£t
();

288 
	`°∫ˇt
(
tsk_îr°r2
, " - ffs_dir_open_meta",

289 
TSK_ERRSTR_L
 - 
	`°æí
(
tsk_îr°r2
));

290  
TSK_COR
;

295 
size
 = 
	`roundup
(
fs_dú
->
fs_fûe
->
mëa
->size, 
FFS_DIRBLKSIZ
);

296 i‡((
dúbuf
 = 
	`tsk_mÆloc
((
size_t
Ë
size
)Ë=
NULL
) {

297  
TSK_ERR
;

300 
lﬂd_fûe
.
tŸÆ
 =Üﬂd_fûe.
À·
 = (
size_t
Ë
size
;

301 
lﬂd_fûe
.
ba£
 =Üﬂd_fûe.
cur
 = 
dúbuf
;

303 i‡(
	`tsk_fs_fûe_wÆk
(
fs_dú
->
fs_fûe
,

304 
TSK_FS_FILE_WALK_FLAG_SLACK
,

305 
tsk_fs_lﬂd_fûe_a˘i⁄
, (*Ë&
lﬂd_fûe
)) {

306 
	`tsk_îr‹_ª£t
();

307 
	`°∫ˇt
(
tsk_îr°r2
, " - ffs_dir_open_meta",

308 
TSK_ERRSTR_L
 - 
	`°æí
(
tsk_îr°r2
));

309 
	`‰ì
(
dúbuf
);

310  
TSK_COR
;

314 i‡(
lﬂd_fûe
.
À·
 > 0) {

315 
	`tsk_îr‹_ª£t
();

316 
tsk_î∫o
 = 
TSK_ERR_FS_FWALK
;

317 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

318 "ffs_dú_›í_mëa: Eº‹Ñódög dúe˘‹y %" 
PRIuINUM
,

319 
a_addr
);

320 
	`‰ì
(
dúbuf
);

321  
TSK_COR
;

330 
nchnk
 = (Ë(
size
Ë/ (
FFS_DIRBLKSIZ
) + 1;

332 
cidx
 = 0; cidx < 
nchnk
 && (
öt64_t
Ë
size
 > 0; cidx++) {

333 
Àn
 = (
FFS_DIRBLKSIZ
 < 
size
) ? FFS_DIRBLKSIZ : () size;

335 
ªtvÆ_tmp
 =

336 
	`ffs_dít_∑r£_block
(
ffs
, 
fs_dú
,

337 (
fs_dú
->
fs_fûe
->

338 
mëa
->
Êags
 & 
TSK_FS_META_FLAG_UNALLOC
) ? 1 : 0,

339 
dúbuf
 + 
cidx
 * 
FFS_DIRBLKSIZ
, 
Àn
);

341 i‡(
ªtvÆ_tmp
 =
TSK_ERR
) {

342 
ªtvÆ_föÆ
 = 
TSK_ERR
;

345 i‡(
ªtvÆ_tmp
 =
TSK_COR
) {

346 
ªtvÆ_föÆ
 = 
TSK_COR
;

348 
size
 -
Àn
;

350 
	`‰ì
(
dúbuf
);

353 i‡(
a_addr
 =
a_fs
->
roŸ_öum
) {

354 
TSK_FS_NAME
 *
fs_«me
 = 
	`tsk_fs_«me_Æloc
(256, 0);

355 i‡(
fs_«me
 =
NULL
)

356  
TSK_ERR
;

358 i‡(
	`tsk_fs_dú_make_‹ph™_dú_«me
(
a_fs
, 
fs_«me
)) {

359 
	`tsk_fs_«me_‰ì
(
fs_«me
);

360  
TSK_ERR
;

363 i‡(
	`tsk_fs_dú_add
(
fs_dú
, 
fs_«me
)) {

364 
	`tsk_fs_«me_‰ì
(
fs_«me
);

365  
TSK_ERR
;

367 
	`tsk_fs_«me_‰ì
(
fs_«me
);

370  
ªtvÆ_föÆ
;

371 
	}
}

	@tsk3/fs/fls_lib.c

27 
	~"tsk_fs_i.h
"

34 
öt32_t
 
	m£c_skew
;

37 *
	mma˝ª
;

38 
	mÊags
;

39 } 
	tFLS_DATA
;

50 
	$¥ötô
(
TSK_FS_FILE
 * 
fs_fûe
, c⁄° *
a_∑th
,

51 c⁄° 
TSK_FS_ATTR
 * 
fs_©å
, c⁄° 
FLS_DATA
 * 
Ês_d©a
)

53 
i
;

55 i‡((!(
Ês_d©a
->
Êags
 & 
TSK_FS_FLS_FULL
)Ë&& (
a_∑th
)) {

56 
uöt8_t
 
¥öãd
 = 0;

58 
i
 = 0; 
a_∑th
[i] != '\0'; i++) {

59 i‡((
a_∑th
[
i
] == '/') && (i != 0)) {

60 
	`tsk_Ârötf
(
°dout
, "+");

61 
¥öãd
 = 1;

64 i‡(
¥öãd
)

65 
	`tsk_Ârötf
(
°dout
, " ");

69 i‡(
Ês_d©a
->
Êags
 & 
TSK_FS_FLS_MAC
) {

70 i‡((
Ês_d©a
->
£c_skew
 !0Ë&& (
fs_fûe
->
mëa
)) {

71 
fs_fûe
->
mëa
->
mtime
 -
Ês_d©a
->
£c_skew
;

72 
fs_fûe
->
mëa
->
©ime
 -
Ês_d©a
->
£c_skew
;

73 
fs_fûe
->
mëa
->
˘ime
 -
Ês_d©a
->
£c_skew
;

76 
	`tsk_fs_«me_¥öt_mac
(
°dout
, 
fs_fûe
, 
a_∑th
, fs_fûe->
fs_öfo
,

77 
fs_©å
, 
Ês_d©a
->
ma˝ª
);

79 i‡((
Ês_d©a
->
£c_skew
 !0Ë&& (
fs_fûe
->
mëa
)) {

80 
fs_fûe
->
mëa
->
mtime
 +
Ês_d©a
->
£c_skew
;

81 
fs_fûe
->
mëa
->
©ime
 +
Ês_d©a
->
£c_skew
;

82 
fs_fûe
->
mëa
->
˘ime
 +
Ês_d©a
->
£c_skew
;

86 i‡(
Ês_d©a
->
Êags
 & 
TSK_FS_FLS_LONG
) {

87 i‡((
Ês_d©a
->
£c_skew
 !0Ë&& (
fs_fûe
->
mëa
)) {

88 
fs_fûe
->
mëa
->
mtime
 -
Ês_d©a
->
£c_skew
;

89 
fs_fûe
->
mëa
->
©ime
 -
Ês_d©a
->
£c_skew
;

90 
fs_fûe
->
mëa
->
˘ime
 -
Ês_d©a
->
£c_skew
;

93 
	`tsk_fs_«me_¥öt_l⁄g
(
°dout
, 
fs_fûe
, 
a_∑th
, fs_fûe->
fs_öfo
,

94 
fs_©å
, 
TSK_FS_FLS_FULL
 & 
Ês_d©a
->
Êags
 ? 1 : 0);

96 i‡((
Ês_d©a
->
£c_skew
 !0Ë&& (
fs_fûe
->
mëa
)) {

97 
fs_fûe
->
mëa
->
mtime
 +
Ês_d©a
->
£c_skew
;

98 
fs_fûe
->
mëa
->
©ime
 +
Ês_d©a
->
£c_skew
;

99 
fs_fûe
->
mëa
->
˘ime
 +
Ês_d©a
->
£c_skew
;

103 
	`tsk_fs_«me_¥öt
(
°dout
, 
fs_fûe
, 
a_∑th
, fs_fûe->
fs_öfo
,

104 
fs_©å
, 
TSK_FS_FLS_FULL
 & 
Ês_d©a
->
Êags
 ? 1 : 0);

105 
	`tsk_¥ötf
("\n");

107 
	}
}

113 
TSK_WALK_RET_ENUM


114 
	$¥öt_dít_a˘
(
TSK_FS_FILE
 * 
fs_fûe
, c⁄° *
a_∑th
, *
±r
)

116 
FLS_DATA
 *
Ês_d©a
 = (FLS_DATA *Ë
±r
;

121 i‡(((
Ês_d©a
->
Êags
 & 
TSK_FS_FLS_DIR
) &&

122 ((
fs_fûe
->
mëa
) &&

123 (
fs_fûe
->
mëa
->
ty≥
 =
TSK_FS_META_TYPE_DIR
)))

124 || ((
Ês_d©a
->
Êags
 & 
TSK_FS_FLS_FILE
Ë&& (((
fs_fûe
->
mëa
)

125 && (
fs_fûe
->
mëa
->
ty≥
 !
TSK_FS_META_TYPE_DIR
))

126 || (!
fs_fûe
->
mëa
)))) {

132 i‡((
	`TSK_FS_TYPE_ISNTFS
(
fs_fûe
->
fs_öfo
->
·y≥
))

133 && (
fs_fûe
->
mëa
)) {

134 
uöt8_t
 
¥öãd
 = 0;

135 
i
, 
˙t
;

138 
˙t
 = 
	`tsk_fs_fûe_©å_gësize
(
fs_fûe
);

139 
i
 = 0; i < 
˙t
; i++) {

140 c⁄° 
TSK_FS_ATTR
 *
fs_©å
 =

141 
	`tsk_fs_fûe_©å_gë_idx
(
fs_fûe
, 
i
);

142 i‡(!
fs_©å
)

145 i‡(
fs_©å
->
ty≥
 =
TSK_FS_ATTR_TYPE_NTFS_DATA
) {

146 
¥öãd
 = 1;

148 i‡(
fs_fûe
->
mëa
->
ty≥
 =
TSK_FS_META_TYPE_DIR
) {

153 i‡((
fs_fûe
->
«me
->name[0] == '.')

154 && (
fs_fûe
->
«me
->name[1])

155 && (
fs_fûe
->
«me
->name[2] == '\0')

156 && ((
Ês_d©a
->
Êags
 & 
TSK_FS_FLS_DOT
) == 0)) {

161 
	`¥ötô
(
fs_fûe
, 
a_∑th
, 
fs_©å
, 
Ês_d©a
);

163 i‡(
fs_©å
->
ty≥
 =
TSK_FS_ATTR_TYPE_NTFS_IDXROOT
) {

164 
¥öãd
 = 1;

170 i‡(!((
	`TSK_FS_ISDOT
(
fs_fûe
->
«me
->name)) &&

171 ((
Ês_d©a
->
Êags
 & 
TSK_FS_FLS_DOT
) == 0)))

172 
	`¥ötô
(
fs_fûe
, 
a_∑th
, 
fs_©å
, 
Ês_d©a
);

178 i‡(
¥öãd
 == 0) {

179 
	`¥ötô
(
fs_fûe
, 
a_∑th
, 
NULL
, 
Ês_d©a
);

185 i‡(!((
	`TSK_FS_ISDOT
(
fs_fûe
->
«me
->name))

186 && ((
Ês_d©a
->
Êags
 & 
TSK_FS_FLS_DOT
) == 0)))

187 
	`¥ötô
(
fs_fûe
, 
a_∑th
, 
NULL
, 
Ês_d©a
);

190  
TSK_WALK_CONT
;

191 
	}
}

195 
uöt8_t


196 
	$tsk_fs_Ês
(
TSK_FS_INFO
 * 
fs
, 
TSK_FS_FLS_FLAG_ENUM
 
l˛Êags
,

197 
TSK_INUM_T
 
öode
, 
TSK_FS_NAME_FLAG_ENUM
 
Êags
, 
TSK_TCHAR
 * 
çª
,

198 
öt32_t
 
skew
)

200 
FLS_DATA
 
d©a
;

202 
d©a
.
Êags
 = 
l˛Êags
;

203 
d©a
.
£c_skew
 = 
skew
;

205 #ifde‡
TSK_WIN32


207 *
˝ª
;

208 
size_t
 
˛í
;

209 
UTF8
 *
±r8
;

210 
UTF16
 *
±r16
;

211 
ªtvÆ
;

213 i‡(
çª
 !
NULL
) {

214 
˛í
 = 
	`TSTRLEN
(
çª
) * 4;

215 
˝ª
 = (*Ë
	`tsk_mÆloc
(
˛í
);

216 i‡(
˝ª
 =
NULL
) {

219 
±r8
 = (
UTF8
 *Ë
˝ª
;

220 
±r16
 = (
UTF16
 *Ë
çª
;

222 
ªtvÆ
 =

223 
	`tsk_UTF16toUTF8_l˛‹dî
((c⁄° 
UTF16
 **Ë&
±r16
, (UTF16 *)

224 & 
±r16
[
	`TSTRLEN
(
çª
Ë+ 1], &
±r8
,

225 (
UTF8
 *Ë((
uöçå_t
Ë
±r8
 + 
˛í
), 
TSKÀnõ¡C⁄vîsi⁄
);

226 i‡(
ªtvÆ
 !
TSKc⁄vîsi⁄OK
) {

227 
	`tsk_îr‹_ª£t
();

228 
tsk_î∫o
 = 
TSK_ERR_FS_UNICODE
;

229 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

231 
ªtvÆ
);

234 
d©a
.
ma˝ª
 = 
˝ª
;

237 
d©a
.
ma˝ª
 = 
NULL
;

238 
˝ª
 = 
NULL
;

241 
ªtvÆ
 = 
	`tsk_fs_dú_wÆk
(
fs
, 
öode
, 
Êags
, 
¥öt_dít_a˘
, &
d©a
);

243 i‡(
˝ª
)

244 
	`‰ì
(
˝ª
);

246  
ªtvÆ
;

249 
d©a
.
ma˝ª
 = 
çª
;

250  
	`tsk_fs_dú_wÆk
(
fs
, 
öode
, 
Êags
, 
¥öt_dít_a˘
, &
d©a
);

252 
	}
}

	@tsk3/fs/fs_attr.c

35 
	~"tsk_fs_i.h
"

44 
TSK_FS_ATTR_RUN
 *

45 
	$tsk_fs_©å_run_Æloc
()

47 
TSK_FS_ATTR_RUN
 *
fs_©å_run
 =

48 (
TSK_FS_ATTR_RUN
 *Ë
	`tsk_mÆloc
((TSK_FS_ATTR_RUN));

49 i‡(
fs_©å_run
 =
NULL
)

50  
NULL
;

52  
fs_©å_run
;

53 
	}
}

62 
	$tsk_fs_©å_run_‰ì
(
TSK_FS_ATTR_RUN
 * 
fs_©å_run
)

64 
TSK_FS_ATTR_RUN
 *
fs_©å_run_¥ev
;

65 
fs_©å_run
) {

66 
fs_©å_run_¥ev
 = 
fs_©å_run
;

67 
fs_©å_run
 = fs_©å_run->
√xt
;

68 
fs_©å_run_¥ev
->
√xt
 = 
NULL
;

69 
	`‰ì
(
fs_©å_run_¥ev
);

71 
	}
}

83 
TSK_FS_ATTR
 *

84 
	$tsk_fs_©å_Æloc
(
TSK_FS_ATTR_FLAG_ENUM
 
ty≥
)

86 
TSK_FS_ATTR
 *
fs_©å
 = (TSK_FS_ATTR *Ë
	`tsk_mÆloc
((TSK_FS_ATTR));

87 i‡(
fs_©å
 =
NULL
) {

88  
NULL
;

91 
fs_©å
->
«me_size
 = 128;

92 i‡((
fs_©å
->
«me
 = (*Ë
	`tsk_mÆloc
(fs_©å->
«me_size
)Ë=
NULL
) {

93 
	`‰ì
(
fs_©å
);

94  
NULL
;

97 i‡(
ty≥
 =
TSK_FS_ATTR_NONRES
) {

98 
fs_©å
->
Êags
 = (
TSK_FS_ATTR_NONRES
 | 
TSK_FS_ATTR_INUSE
);

100 i‡(
ty≥
 =
TSK_FS_ATTR_RES
) {

101 
fs_©å
->
rd
.
buf_size
 = 1024;

102 
fs_©å
->
rd
.
buf
 = (
uöt8_t
 *Ë
	`tsk_mÆloc
(fs_©å->rd.
buf_size
);

103 i‡(
fs_©å
->
rd
.
buf
 =
NULL
) {

104 
	`‰ì
(
fs_©å
->
«me
);

105  
NULL
;

107 
fs_©å
->
Êags
 = (
TSK_FS_ATTR_RES
 | 
TSK_FS_ATTR_INUSE
);

110 
	`tsk_îr‹_ª£t
();

111 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

112 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

113 "tsk_fs_©å_Æloc: InvÆid Ty≥: %d\n", 
ty≥
);

114  
NULL
;

117  
fs_©å
;

118 
	}
}

128 
	$tsk_fs_©å_‰ì
(
TSK_FS_ATTR
 * 
a_fs_©å
)

130 i‡(
a_fs_©å
 =
NULL
)

133 i‡(
a_fs_©å
->
ƒd
.
run
)

134 
	`tsk_fs_©å_run_‰ì
(
a_fs_©å
->
ƒd
.
run
);

135 
a_fs_©å
->
ƒd
.
run
 = 
NULL
;

137 i‡(
a_fs_©å
->
rd
.
buf
)

138 
	`‰ì
(
a_fs_©å
->
rd
.
buf
);

139 
a_fs_©å
->
rd
.
buf
 = 
NULL
;

141 i‡(
a_fs_©å
->
«me
)

142 
	`‰ì
(
a_fs_©å
->
«me
);

143 
a_fs_©å
->
«me
 = 
NULL
;

145 
	`‰ì
(
a_fs_©å
);

146 
	}
}

156 
	$tsk_fs_©å_˛ór
(
TSK_FS_ATTR
 * 
a_fs_©å
)

158 
a_fs_©å
->
size
 =á_fs_©å->
ty≥
 =

159 
a_fs_©å
->
id
 =á_fs_©å->
Êags
 = 0;

160 i‡(
a_fs_©å
->
ƒd
.
run
) {

161 
	`tsk_fs_©å_run_‰ì
(
a_fs_©å
->
ƒd
.
run
);

162 
a_fs_©å
->
ƒd
.
run
 = 
NULL
;

163 
a_fs_©å
->
ƒd
.
run_íd
 = 
NULL
;

164 
a_fs_©å
->
ƒd
.
Ælocsize
 = 0;

165 
a_fs_©å
->
ƒd
.
öôsize
 = 0;

167 
	}
}

181 
uöt8_t


182 
	$fs_©å_put_«me
(
TSK_FS_ATTR
 * 
fs_©å
, c⁄° *
«me
)

184 i‡(
«me
 =
NULL
) {

185 i‡(
fs_©å
->
«me_size
 > 0) {

186 
fs_©å
->
«me
[0] = '\0';

191 i‡(
fs_©å
->
«me_size
 < (
	`°æí
(
«me
) + 1)) {

192 
fs_©å
->
«me
 = 
	`tsk_ªÆloc
(fs_©å->«me, 
	`°æí
(name) + 1);

193 i‡(
fs_©å
->
«me
 =
NULL
)

195 
fs_©å
->
«me_size
 = 
	`°æí
(
«me
) + 1;

197 
	`°∫˝y
(
fs_©å
->
«me
,Çame, fs_©å->
«me_size
);

199 
	}
}

214 
uöt8_t


215 
	$tsk_fs_©å_£t_°r
(
TSK_FS_FILE
 * 
a_fs_fûe
, 
TSK_FS_ATTR
 * 
a_fs_©å
,

216 c⁄° *
«me
, 
TSK_FS_ATTR_TYPE_ENUM
 
ty≥
, 
uöt16_t
 
id
,

217 *
ªs_d©a
, 
size_t
 
Àn
)

219 i‡(
a_fs_©å
 =
NULL
) {

220 
	`tsk_îr‹_ª£t
();

221 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

222 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

227 
a_fs_©å
->
fs_fûe
 = 
a_fs_fûe
;

228 
a_fs_©å
->
Êags
 = (
TSK_FS_ATTR_INUSE
 | 
TSK_FS_ATTR_RES
);

229 
a_fs_©å
->
ty≥
 =Åype;

230 
a_fs_©å
->
id
 = id;

231 
a_fs_©å
->
ƒd
.
compsize
 = 0;

233 i‡(
	`fs_©å_put_«me
(
a_fs_©å
, 
«me
)) {

237 i‡(
a_fs_©å
->
rd
.
buf_size
 < 
Àn
) {

238 
a_fs_©å
->
rd
.
buf
 =

239 (
uöt8_t
 *Ë
	`tsk_ªÆloc
((*Ë
a_fs_©å
->
rd
.
buf
, 
Àn
);

240 i‡(
a_fs_©å
->
rd
.
buf
 =
NULL
)

242 
a_fs_©å
->
rd
.
buf_size
 = 
Àn
;

245 
	`mem£t
(
a_fs_©å
->
rd
.
buf
, 0,á_fs_©å->rd.
buf_size
);

246 
	`mem˝y
(
a_fs_©å
->
rd
.
buf
, 
ªs_d©a
, 
Àn
);

247 
a_fs_©å
->
size
 = 
Àn
;

250 
	}
}

274 
uöt8_t


275 
	$tsk_fs_©å_£t_run
(
TSK_FS_FILE
 * 
a_fs_fûe
, 
TSK_FS_ATTR
 * 
a_fs_©å
,

276 
TSK_FS_ATTR_RUN
 * 
a_d©a_run_√w
, c⁄° *
«me
,

277 
TSK_FS_ATTR_TYPE_ENUM
 
ty≥
, 
uöt16_t
 
id
, 
TSK_OFF_T
 
size
,

278 
TSK_OFF_T
 
öô_size
, TSK_OFF_T 
Æloc_size
,

279 
TSK_FS_ATTR_FLAG_ENUM
 
Êags
, 
uöt32_t
 
compsize
)

281 
TSK_FS_INFO
 *
fs
;

283 i‡((
a_fs_fûe
 =
NULL
Ë|| (a_fs_fûe->
mëa
 == NULL)) {

284 
	`tsk_îr‹_ª£t
();

285 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

286 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

290 i‡(
a_fs_©å
 =
NULL
) {

291 
	`tsk_îr‹_ª£t
();

292 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

293 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

298 
fs
 = 
a_fs_fûe
->
fs_öfo
;

300 i‡(
Æloc_size
 < 
size
) {

301 
	`tsk_îr‹_ª£t
();

302 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

303 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

304 "tsk_fs_©å_£t_run:áŒoc_sizê(%" 
PRIuOFF


305 "Ëi†Às†th™ sizê(%" 
PRIuOFF
 ")", 
Æloc_size
, 
size
);

309 
a_fs_©å
->
fs_fûe
 = 
a_fs_fûe
;

310 
a_fs_©å
->
Êags
 = (
TSK_FS_ATTR_INUSE
 | 
TSK_FS_ATTR_NONRES
 | flags);

311 
a_fs_©å
->
ty≥
 =Åype;

312 
a_fs_©å
->
id
 = id;

313 
a_fs_©å
->
size
 = size;

314 
a_fs_©å
->
ƒd
.
Ælocsize
 = 
Æloc_size
;

315 
a_fs_©å
->
ƒd
.
öôsize
 = 
öô_size
;

316 
a_fs_©å
->
ƒd
.
compsize
 = compsize;

318 i‡(
	`fs_©å_put_«me
(
a_fs_©å
, 
«me
)) {

327 i‡(
a_d©a_run_√w
 =
NULL
) {

328 
a_fs_©å
->
ƒd
.
run
 = 
NULL
;

329 
a_fs_©å
->
ƒd
.
run_íd
 = 
NULL
;

344 i‡(
a_d©a_run_√w
->
off£t
 != 0) {

345 
TSK_FS_ATTR_RUN
 *
fûl_run
 = 
	`tsk_fs_©å_run_Æloc
();

346 
fûl_run
->
Êags
 = 
TSK_FS_ATTR_RUN_FLAG_FILLER
;

347 
fûl_run
->
off£t
 = 0;

348 
fûl_run
->
addr
 = 0;

349 
fûl_run
->
Àn
 = 
a_d©a_run_√w
->
off£t
;

350 
fûl_run
->
√xt
 = 
a_d©a_run_√w
;

351 
a_d©a_run_√w
 = 
fûl_run
;

354 
a_fs_©å
->
ƒd
.
run
 = 
a_d©a_run_√w
;

357 
a_fs_©å
->
ƒd
.
run_íd
 = 
a_d©a_run_√w
;

358 
a_fs_©å
->
ƒd
.
run_íd
->
√xt
) {

359 
a_fs_©å
->
ƒd
.
run_íd
 =á_fs_©å->ƒd.run_íd->
√xt
;

363 
	}
}

377 
uöt8_t


378 
	$tsk_fs_©å_add_run
(
TSK_FS_INFO
 * 
a_fs
, 
TSK_FS_ATTR
 * 
a_fs_©å
,

379 
TSK_FS_ATTR_RUN
 * 
a_d©a_run_√w
)

381 
TSK_FS_ATTR_RUN
 *
d©a_run_cur
, *
d©a_run_¥ev
;

382 
TSK_DADDR_T
 
run_Àn
;

384 
	`tsk_îr‹_ª£t
();

386 i‡(
a_fs_©å
 =
NULL
) {

387 
	`tsk_îr‹_ª£t
();

388 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

389 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

395 i‡(
a_d©a_run_√w
 =
NULL
) {

396 
	`tsk_îr‹_ª£t
();

397 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

398 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

400 
PRIuINUM
 ")", 
a_fs_©å
->
fs_fûe
->
mëa
->
addr
);

404 
run_Àn
 = 0;

405 
d©a_run_cur
 = 
a_d©a_run_√w
;

406 
d©a_run_cur
) {

407 
run_Àn
 +
d©a_run_cur
->
Àn
;

408 
d©a_run_cur
 = d©a_run_cur->
√xt
;

412 i‡((
a_fs_©å
->
ƒd
.
run_íd
)

413 && (
a_fs_©å
->
ƒd
.
run_íd
->
off£t
 +á_fs_©å->ƒd.run_íd->
Àn
 ==

414 
a_d©a_run_√w
->
off£t
)) {

416 
a_fs_©å
->
ƒd
.
run_íd
->
√xt
 = 
a_d©a_run_√w
;

418 
a_fs_©å
->
ƒd
.
run_íd
->
√xt
)

419 
a_fs_©å
->
ƒd
.
run_íd
 =á_fs_©å->ƒd.run_íd->
√xt
;

426 
d©a_run_cur
 = 
a_fs_©å
->
ƒd
.
run
;

427 
d©a_run_¥ev
 = 
NULL
;

428 
d©a_run_cur
) {

430 i‡(
tsk_vîbo£
)

431 
	`tsk_Ârötf
(
°dîr
,

432 "tsk_fs_©å_add: %" 
PRIuOFF
 "@%" PRIuOFF

433 " (FûÀr: %s)\n", 
d©a_run_cur
->
off£t
, d©a_run_cur->
Àn
,

434 (
d©a_run_cur
->
Êags
 & 
TSK_FS_ATTR_RUN_FLAG_FILLER
) ? "Yes"

438 i‡(
d©a_run_cur
->
Êags
 & 
TSK_FS_ATTR_RUN_FLAG_FILLER
) {

442 i‡(
d©a_run_cur
->
off£t
 > 
a_d©a_run_√w
->offset) {

443 
	`tsk_îr‹_ª£t
();

444 
tsk_î∫o
 = 
TSK_ERR_FS_GENFS
;

445 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

447 
PRIuOFF
 ") isÜargerÅhan FILLER (%" PRIuOFF ") (%"

448 
PRIuINUM
 ")", 
a_d©a_run_√w
->
off£t
,

449 
d©a_run_cur
->
off£t
, 
a_fs_©å
->
fs_fûe
->
mëa
->
addr
);

454 i‡(
d©a_run_cur
->
off£t
 + d©a_run_cur->
Àn
 >

455 
a_d©a_run_√w
->
off£t
) {

456 
TSK_FS_ATTR_RUN
 *
ídrun
;

460 i‡(
d©a_run_cur
->
off£t
 =
a_d©a_run_√w
->offset) {

461 i‡(
d©a_run_¥ev
)

462 
d©a_run_¥ev
->
√xt
 = 
a_d©a_run_√w
;

464 
a_fs_©å
->
ƒd
.
run
 = 
a_d©a_run_√w
;

471 
TSK_FS_ATTR_RUN
 *
√wfûl
 = 
	`tsk_fs_©å_run_Æloc
();

472 i‡(
√wfûl
 =
NULL
)

475 i‡(
d©a_run_¥ev
)

476 
d©a_run_¥ev
->
√xt
 = 
√wfûl
;

478 
a_fs_©å
->
ƒd
.
run
 = 
√wfûl
;

480 
√wfûl
->
√xt
 = 
a_d©a_run_√w
;

481 
√wfûl
->
Àn
 =

482 
a_d©a_run_√w
->
off£t
 - 
d©a_run_cur
->offset;

483 
√wfûl
->
off£t
 = 
d©a_run_cur
->offset;

484 
√wfûl
->
Êags
 = 
TSK_FS_ATTR_RUN_FLAG_FILLER
;

486 
d©a_run_cur
->
Àn
 -
√wfûl
->len;

490 
ídrun
 = 
a_d©a_run_√w
;

491 
ídrun
->
√xt
)

492 
ídrun
 =Éndrun->
√xt
;

497 i‡(
run_Àn
 =
d©a_run_cur
->
Àn
) {

498 
ídrun
->
√xt
 = 
d©a_run_cur
->next;

501 i‡(
ídrun
->
√xt
 =
NULL
)

502 
a_fs_©å
->
ƒd
.
run_íd
 = 
ídrun
;

504 
	`‰ì
(
d©a_run_cur
);

508 
ídrun
->
√xt
 = 
d©a_run_cur
;

509 
d©a_run_cur
->
Àn
 -
run_Àn
;

510 
d©a_run_cur
->
off£t
 =

511 
a_d©a_run_√w
->
off£t
 +á_d©a_run_√w->
Àn
;

518 
d©a_run_¥ev
 = 
d©a_run_cur
;

519 
d©a_run_cur
 = d©a_run_cur->
√xt
;

539 i‡((
d©a_run_¥ev
)

540 && (
d©a_run_¥ev
->
off£t
 + d©a_run_¥ev->
Àn
 >

541 
a_d©a_run_√w
->
off£t
)) {

544 i‡((
d©a_run_¥ev
->
addr
 =
a_d©a_run_√w
->addr) &&

545 (
d©a_run_¥ev
->
Àn
 =
a_d©a_run_√w
->len)) {

547 
	`tsk_fs_©å_run_‰ì
(
a_d©a_run_√w
);

551 
	`tsk_îr‹_ª£t
();

552 
tsk_î∫o
 = 
TSK_ERR_FS_GENFS
;

553 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

554 "fs_©å_add_run:Éº‹áddögáddôi⁄ÆÑu¿(%" 
PRIuINUM


555 "): NÿfûÀ∏íåy f‹ %" 
PRIuDADDR
 ". Final: %" PRIuDADDR,

556 
a_fs_©å
->
fs_fûe
->
mëa
->
addr
, 
a_d©a_run_√w
->
off£t
,

557 
d©a_run_¥ev
->
off£t
 + d©a_run_¥ev->
Àn
);

562 i‡(((
d©a_run_¥ev
)

563 && (
d©a_run_¥ev
->
off£t
 + d©a_run_¥ev->
Àn
 ==

564 
a_d©a_run_√w
->
off£t
))

565 || (
a_d©a_run_√w
->
off£t
 == 0)) {

566 i‡(
d©a_run_¥ev
)

567 
d©a_run_¥ev
->
√xt
 = 
a_d©a_run_√w
;

569 
a_fs_©å
->
ƒd
.
run
 = 
a_d©a_run_√w
;

573 
TSK_FS_ATTR_RUN
 *
tm¥un
 = 
	`tsk_fs_©å_run_Æloc
();

574 i‡(
tm¥un
 =
NULL
)

577 i‡(
d©a_run_¥ev
) {

578 
d©a_run_¥ev
->
√xt
 = 
tm¥un
;

579 
tm¥un
->
off£t
 = 
d©a_run_¥ev
->off£à+ d©a_run_¥ev->
Àn
;

582 
a_fs_©å
->
ƒd
.
run
 = 
tm¥un
;

585 
tm¥un
->
Àn
 = 
a_d©a_run_√w
->
off£t
 -Åmprun->offset;

586 
tm¥un
->
Êags
 = 
TSK_FS_ATTR_RUN_FLAG_FILLER
;

587 
tm¥un
->
√xt
 = 
a_d©a_run_√w
;

591 
a_fs_©å
->
ƒd
.
run_íd
 = 
a_d©a_run_√w
;

592 
a_fs_©å
->
ƒd
.
run_íd
->
√xt
)

593 
a_fs_©å
->
ƒd
.
run_íd
 =á_fs_©å->ƒd.run_íd->
√xt
;

596 
	}
}

608 
	$tsk_fs_©å_≠≥nd_run
(
TSK_FS_INFO
 * 
a_fs
, 
TSK_FS_ATTR
 * 
a_fs_©å
,

609 
TSK_FS_ATTR_RUN
 * 
a_d©a_run
)

611 
TSK_FS_ATTR_RUN
 *
d©a_run_cur
;

613 i‡((
a_fs_©å
 =
NULL
Ë|| (
a_d©a_run
 == NULL)) {

617 i‡(
a_fs_©å
->
ƒd
.
run
 =
NULL
) {

618 
a_fs_©å
->
ƒd
.
run
 = 
a_d©a_run
;

619 
a_d©a_run
->
off£t
 = 0;

623 i‡((
a_fs_©å
->
ƒd
.
run_íd
 =
NULL
)

624 || (
a_fs_©å
->
ƒd
.
run_íd
->
√xt
 !
NULL
)) {

625 
d©a_run_cur
 = 
a_fs_©å
->
ƒd
.
run
;

626 
d©a_run_cur
->
√xt
) {

627 
d©a_run_cur
 = d©a_run_cur->
√xt
;

629 
a_fs_©å
->
ƒd
.
run_íd
 = 
d©a_run_cur
;

631 
a_fs_©å
->
ƒd
.
run_íd
->
√xt
 = 
a_d©a_run
;

632 
a_d©a_run
->
off£t
 =

633 
a_fs_©å
->
ƒd
.
run_íd
->
off£t
 +á_fs_©å->ƒd.run_íd->
Àn
;

637 
d©a_run_cur
 = 
a_d©a_run
;

638 
d©a_run_cur
->
√xt
) {

639 
d©a_run_cur
->
√xt
->
off£t
 =

640 
d©a_run_cur
->
off£t
 + d©a_run_cur->
Àn
;

641 
a_fs_©å
->
ƒd
.
run_íd
 = 
d©a_run_cur
->
√xt
;

642 
d©a_run_cur
 = d©a_run_cur->
√xt
;

644 
	}
}

657 
uöt8_t


658 
	$tsk_fs_©å_wÆk_ªs
(c⁄° 
TSK_FS_ATTR
 * 
fs_©å
,

659 
TSK_FS_FILE_WALK_FLAG_ENUM
 
a_Êags
, 
TSK_FS_FILE_WALK_CB
 
a_a˘i⁄
,

660 *
a_±r
)

662 *
buf
 = 
NULL
;

663 
myÊags
;

664 
ªtvÆ
;

665 
size_t
 
buf_Àn
 = 0;

666 
TSK_OFF_T
 
off
;

667 
size_t
 
ªad_Àn
;

668 
TSK_FS_INFO
 *
fs
;

670 
fs
 = 
fs_©å
->
fs_fûe
->
fs_öfo
;

672 i‡((
fs_©å
->
Êags
 & 
TSK_FS_ATTR_RES
) == 0) {

673 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

674 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

680 
buf_Àn
 = (
size_t
Ë
fs_©å
->
size
;

681 i‡(
buf_Àn
 > 
fs
->
block_size
)

682 
buf_Àn
 = 
fs
->
block_size
;

684 i‡((
a_Êags
 & 
TSK_FS_FILE_WALK_FLAG_AONLY
) == 0) {

685 i‡((
buf
 = 
	`tsk_mÆloc
(
buf_Àn
)Ë=
NULL
) {

690 
myÊags
 =

691 
TSK_FS_BLOCK_FLAG_CONT
 | 
TSK_FS_BLOCK_FLAG_ALLOC
 |

692 
TSK_FS_BLOCK_FLAG_RES
;

695 
ªtvÆ
 = 
TSK_WALK_CONT
;

696 
off
 = 0; of‡< 
fs_©å
->
size
; of‡+
ªad_Àn
) {

698 i‡(
fs_©å
->
size
 - 
off
 > 
buf_Àn
)

699 
ªad_Àn
 = 
buf_Àn
;

701 
ªad_Àn
 = (
size_t
Ë(
fs_©å
->
size
 - 
off
);

703 i‡(
buf
) {

705 i‡(
ªad_Àn
 !
buf_Àn
)

706 
	`mem£t
(&
buf
[
ªad_Àn
], 0, 
buf_Àn
 -Ñead_len);

708 
	`mem˝y
(
buf
, &
fs_©å
->
rd
.buf[
off
], 
ªad_Àn
);

710 
ªtvÆ
 =

711 
	`a_a˘i⁄
(
fs_©å
->
fs_fûe
, 
off
, 0, 
buf
, 
ªad_Àn
, 
myÊags
,

712 
a_±r
);

714 i‡(
ªtvÆ
 !
TSK_WALK_CONT
)

718 i‡(
buf
)

719 
	`‰ì
(
buf
);

721 i‡(
ªtvÆ
 =
TSK_WALK_ERROR
)

725 
	}
}

738 
uöt8_t


739 
	$tsk_fs_©å_wÆk_n⁄ªs
(c⁄° 
TSK_FS_ATTR
 * 
fs_©å
,

740 
TSK_FS_FILE_WALK_FLAG_ENUM
 
a_Êags
, 
TSK_FS_FILE_WALK_CB
 
a_a˘i⁄
,

741 *
a_±r
)

743 *
buf
 = 
NULL
;

744 
TSK_OFF_T
 
tŸ_size
;

745 
TSK_OFF_T
 
off
 = 0;

746 
TSK_FS_ATTR_RUN
 *
fs_©å_run
;

747 
ªtvÆ
;

748 
uöt32_t
 
skù_ªmaö
;

749 
TSK_FS_INFO
 *
fs
 = 
fs_©å
->
fs_fûe
->
fs_öfo
;

750 
uöt8_t
 
°›_lo›
 = 0;

752 i‡((
fs_©å
->
Êags
 & 
TSK_FS_ATTR_NONRES
) == 0) {

753 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

754 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

760 i‡(
a_Êags
 & 
TSK_FS_FILE_WALK_FLAG_SLACK
)

761 
tŸ_size
 = 
fs_©å
->
ƒd
.
Ælocsize
;

763 
tŸ_size
 = 
fs_©å
->
size
;

765 
skù_ªmaö
 = 
fs_©å
->
ƒd
.
skùÀn
;

767 i‡((
a_Êags
 & 
TSK_FS_FILE_WALK_FLAG_AONLY
) == 0) {

768 i‡((
buf
 = (*Ë
	`tsk_mÆloc
(
fs
->
block_size
)Ë=
NULL
) {

775 
ªtvÆ
 = 
TSK_WALK_CONT
;

776 
fs_©å_run
 = 
fs_©å
->
ƒd
.
run
; fs_attr_run;

777 
fs_©å_run
 = fs_©å_run->
√xt
) {

778 
TSK_DADDR_T
 
addr
, 
Àn_idx
;

780 
addr
 = 
fs_©å_run
->addr;

783 
Àn_idx
 = 0;Üí_idx < 
fs_©å_run
->
Àn
;Üen_idx++) {

785 
TSK_FS_BLOCK_FLAG_ENUM
 
myÊags
;

788 i‡(
addr
 + 
Àn_idx
 > 
fs
->
œ°_block
) {

789 i‡(
fs_©å
->
fs_fûe
->
mëa
->

790 
Êags
 & 
TSK_FS_META_FLAG_UNALLOC
)

791 
tsk_î∫o
 = 
TSK_ERR_FS_RECOVER
;

793 
tsk_î∫o
 = 
TSK_ERR_FS_BLK_NUM
;

794 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

796 
PRIuDADDR
 "", 
addr
 + 
Àn_idx
);

801 i‡((
a_Êags
 & 
TSK_FS_FILE_WALK_FLAG_AONLY
) == 0) {

804 i‡(
fs_©å_run
->
Êags
 & 
TSK_FS_ATTR_RUN_FLAG_SPARSE
) {

805 
	`mem£t
(
buf
, 0, 
fs
->
block_size
);

810 i‡(
fs_©å_run
->
Êags
 & 
TSK_FS_ATTR_RUN_FLAG_FILLER
) {

811 
	`mem£t
(
buf
, 0, 
fs
->
block_size
);

812 i‡(
tsk_vîbo£
)

813 
	`Ârötf
(
°dîr
,

814 "tsk_fs_©å_wÆk_n⁄ªs: Fûê%" 
PRIuINUM


816 
fs_©å
->
fs_fûe
->
mëa
->
addr
);

820 i‡((
off
 >
fs_©å
->
ƒd
.
öôsize
)

821 && ((
a_Êags
 & 
TSK_FS_FILE_READ_FLAG_SLACK
) == 0)) {

822 
	`mem£t
(
buf
, 0, 
fs
->
block_size
);

825 
ssize_t
 
˙t
;

827 
˙t
 = 
tsk_fs_ªad_block


828 (
fs
, 
addr
 + 
Àn_idx
, 
buf
, fs->
block_size
);

829 i‡(
˙t
 !
fs
->
block_size
) {

830 i‡(
˙t
 >= 0) {

831 
	`tsk_îr‹_ª£t
();

832 
tsk_î∫o
 = 
TSK_ERR_FS_READ
;

834 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

836 
PRIuDADDR
, 
addr
 + 
Àn_idx
);

839 i‡((
off
 + 
fs
->
block_size
 > 
fs_©å
->
ƒd
.
öôsize
)

840 && ((
a_Êags
 & 
TSK_FS_FILE_READ_FLAG_SLACK
) == 0)) {

841 
	`mem£t
(&
buf
[
fs_©å
->
ƒd
.
öôsize
 - 
off
], 0,

842 
fs
->
block_size
 -

843 (
size_t
Ë(
fs_©å
->
ƒd
.
öôsize
 - 
off
));

853 i‡(
skù_ªmaö
 >
fs
->
block_size
) {

854 
skù_ªmaö
 -
fs
->
block_size
;

857 
size_t
 
ªt_Àn
;

860 i‡((
TSK_OFF_T
Ë
fs
->
block_size
 - 
skù_ªmaö
 <

861 
tŸ_size
 - 
off
)

862 
ªt_Àn
 = 
fs
->
block_size
 - 
skù_ªmaö
;

864 
ªt_Àn
 = (
size_t
Ë(
tŸ_size
 - 
off
);

867 i‡((
fs_©å_run
->
Êags
 & 
TSK_FS_ATTR_RUN_FLAG_SPARSE
) ||

868 (
fs_©å_run
->
Êags
 & 
TSK_FS_ATTR_RUN_FLAG_FILLER
) ||

869 (
off
 > 
fs_©å
->
ƒd
.
öôsize
)) {

870 
myÊags
 = 
fs
->
	`block_gëÊags
(fs, 0);

871 
myÊags
 |
TSK_FS_BLOCK_FLAG_SPARSE
;

873 i‡((
a_Êags
 & 
TSK_FS_FILE_WALK_FLAG_NOSPARSE
) == 0) {

874 
ªtvÆ
 =

875 
	`a_a˘i⁄
(
fs_©å
->
fs_fûe
, 
off
, 0,

876 &
buf
[
skù_ªmaö
], 
ªt_Àn
, 
myÊags
, 
a_±r
);

880 
myÊags
 = 
fs
->
	`block_gëÊags
(fs, 
addr
 + 
Àn_idx
);

881 
myÊags
 |
TSK_FS_BLOCK_FLAG_RAW
;

883 
ªtvÆ
 =

884 
	`a_a˘i⁄
(
fs_©å
->
fs_fûe
, 
off
, 
addr
 + 
Àn_idx
,

885 &
buf
[
skù_ªmaö
], 
ªt_Àn
, 
myÊags
, 
a_±r
);

887 
off
 +
ªt_Àn
;

888 
skù_ªmaö
 = 0;

890 i‡(
ªtvÆ
 !
TSK_WALK_CONT
) {

891 
°›_lo›
 = 1;

895 i‡(
off
 >
tŸ_size
) {

896 
°›_lo›
 = 1;

901 i‡(
°›_lo›
)

905 i‡(
buf
)

906 
	`‰ì
(
buf
);

908 i‡(
ªtvÆ
 =
TSK_WALK_ERROR
)

912 
	}
}

928 
uöt8_t


929 
	$tsk_fs_©å_wÆk
(c⁄° 
TSK_FS_ATTR
 * 
a_fs_©å
,

930 
TSK_FS_FILE_WALK_FLAG_ENUM
 
a_Êags
, 
TSK_FS_FILE_WALK_CB
 
a_a˘i⁄
,

931 *
a_±r
)

933 
TSK_FS_INFO
 *
fs
;

936 
	`tsk_îr‹_ª£t
();

939 i‡((
a_fs_©å
 =
NULL
Ë|| (a_fs_©å->
fs_fûe
 == NULL)

940 || (
a_fs_©å
->
fs_fûe
->
mëa
 =
NULL
)

941 || (
a_fs_©å
->
fs_fûe
->
fs_öfo
 =
NULL
)) {

942 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

943 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

947 
fs
 = 
a_fs_©å
->
fs_fûe
->
fs_öfo
;

949 i‡(
fs
->
èg
 !
TSK_FS_INFO_TAG
) {

951 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

952 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

956 i‡(
a_fs_©å
->
Êags
 & 
TSK_FS_ATTR_COMP
) {

957 i‡(
a_fs_©å
->
w
 =
NULL
) {

958 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

959 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

963  
a_fs_©å
->
	`w
◊_fs_©å, 
a_Êags
, 
a_a˘i⁄
, 
a_±r
);

966 i‡(
a_fs_©å
->
Êags
 & 
TSK_FS_ATTR_RES
) {

967  
	`tsk_fs_©å_wÆk_ªs
(
a_fs_©å
, 
a_Êags
, 
a_a˘i⁄
, 
a_±r
);

970 i‡(
a_fs_©å
->
Êags
 & 
TSK_FS_ATTR_NONRES
) {

971  
	`tsk_fs_©å_wÆk_n⁄ªs
(
a_fs_©å
, 
a_Êags
, 
a_a˘i⁄
,

972 
a_±r
);

975 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

976 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

978 
a_fs_©å
->
Êags
);

980 
	}
}

996 
ssize_t


997 
	$tsk_fs_©å_ªad
(c⁄° 
TSK_FS_ATTR
 * 
a_fs_©å
, 
TSK_OFF_T
 
a_off£t
,

998 *
a_buf
, 
size_t
 
a_Àn
, 
TSK_FS_FILE_READ_FLAG_ENUM
 
a_Êags
)

1000 
TSK_FS_INFO
 *
fs
;

1002 i‡((
a_fs_©å
 =
NULL
Ë|| (a_fs_©å->
fs_fûe
 == NULL)

1003 || (
a_fs_©å
->
fs_fûe
->
fs_öfo
 =
NULL
)) {

1004 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

1005 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

1009 
fs
 = 
a_fs_©å
->
fs_fûe
->
fs_öfo
;

1012 i‡(
a_fs_©å
->
Êags
 & 
TSK_FS_ATTR_COMP
) {

1013 i‡(
a_fs_©å
->
r
 =
NULL
) {

1014 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

1015 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

1019  
a_fs_©å
->
	`r
◊_fs_©å, 
a_off£t
, 
a_buf
, 
a_Àn
);

1023 i‡(
a_fs_©å
->
Êags
 & 
TSK_FS_ATTR_RES
) {

1024 
size_t
 
Àn_t‹ód
;

1026 i‡(
a_off£t
 >
a_fs_©å
->
size
) {

1027 
	`tsk_îr‹_ª£t
();

1028 
tsk_î∫o
 = 
TSK_ERR_FS_READ_OFF
;

1029 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

1030 "tsk_fs_©å_ªad - %" 
PRIuOFF
, 
a_off£t
);

1034 
Àn_t‹ód
 = 
a_Àn
;

1035 i‡(
a_off£t
 + 
a_Àn
 > 
a_fs_©å
->
size
) {

1036 
Àn_t‹ód
 = (
size_t
Ë(
a_fs_©å
->
size
 - 
a_off£t
);

1037 
	`mem£t
(&
a_buf
[
Àn_t‹ód
], 0, 
a_Àn
 -Üen_toread);

1040 
	`mem˝y
(
a_buf
, &
a_fs_©å
->
rd
.
buf
[
a_off£t
], 
Àn_t‹ód
);

1042  (
ssize_t
Ë
Àn_t‹ód
;

1046 i‡(
a_fs_©å
->
Êags
 & 
TSK_FS_ATTR_NONRES
) {

1047 
TSK_FS_ATTR_RUN
 *
d©a_run_cur
;

1048 
TSK_DADDR_T
 
blkoff£t_t‹ód
;

1049 
size_t
 
byãoff£t_t‹ód
;

1050 
size_t
 
Àn_ªmaö
;

1051 
size_t
 
Àn_t‹ód
;

1053 i‡(((
a_Êags
 & 
TSK_FS_FILE_READ_FLAG_SLACK
Ë&& (
a_off£t
 >
a_fs_©å
->
ƒd
.
Ælocsize
)) ||

1054 (!(
a_Êags
 & 
TSK_FS_FILE_READ_FLAG_SLACK
Ë&& (
a_off£t
 >
a_fs_©å
->
size
))) {

1055 
	`tsk_îr‹_ª£t
();

1056 
tsk_î∫o
 = 
TSK_ERR_FS_READ_OFF
;

1057 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

1058 "tsk_fs_©å_ªad - %" 
PRIuOFF
, 
a_off£t
);

1062 
blkoff£t_t‹ód
 = 
a_off£t
 / 
fs
->
block_size
;

1063 
byãoff£t_t‹ód
 = (
size_t
Ë(
a_off£t
 % 
fs
->
block_size
);

1066 
Àn_t‹ód
 = 
a_Àn
;

1067 i‡(
a_Êags
 & 
TSK_FS_FILE_READ_FLAG_SLACK
) {

1068 i‡(
a_off£t
 + 
a_Àn
 > 
a_fs_©å
->
ƒd
.
Ælocsize
)

1069 
Àn_t‹ód
 =

1070 (
size_t
Ë(
a_fs_©å
->
ƒd
.
Ælocsize
 - 
a_off£t
);

1073 i‡(
a_off£t
 + 
a_Àn
 > 
a_fs_©å
->
size
)

1074 
Àn_t‹ód
 = (
size_t
Ë(
a_fs_©å
->
size
 - 
a_off£t
);

1077 i‡(
Àn_t‹ód
 < 
a_Àn
)

1078 
	`mem£t
(&
a_buf
[
Àn_t‹ód
], 0, 
a_Àn
 -Üen_toread);

1080 
Àn_ªmaö
 = 
Àn_t‹ód
;

1083 
d©a_run_cur
 = 
a_fs_©å
->
ƒd
.
run
; data_run_cur;

1084 
d©a_run_cur
 = d©a_run_cur->
√xt
) {

1085 
TSK_DADDR_T
 
blkoff£t_örun
;

1086 
size_t
 
Àn_örun
;

1089 i‡(
Àn_ªmaö
 <= 0)

1093 i‡(
d©a_run_cur
->
off£t
 + d©a_run_cur->
Àn
 <=

1094 
blkoff£t_t‹ód
)

1098 i‡(
d©a_run_cur
->
off£t
 < 
blkoff£t_t‹ód
)

1099 
blkoff£t_örun
 = 
blkoff£t_t‹ód
 - 
d©a_run_cur
->
off£t
;

1101 
blkoff£t_örun
 = 0;

1104 
Àn_örun
 = 
Àn_ªmaö
;

1105 i‡((
d©a_run_cur
->
Àn
 - 
blkoff£t_örun
Ë* 
fs
->
block_size
 - 
byãoff£t_t‹ód
 <

1106 
Àn_ªmaö
)

1107 
Àn_örun
 =

1108 (
size_t
Ë((
d©a_run_cur
->
Àn
 -

1109 
blkoff£t_örun
Ë* 
fs
->
block_size
 - 
byãoff£t_t‹ód
) ;

1112 i‡(
d©a_run_cur
->
Êags
 & 
TSK_FS_ATTR_RUN_FLAG_SPARSE
) {

1113 
	`mem£t
(&
a_buf
[
Àn_t‹ód
 - 
Àn_ªmaö
], 0, 
Àn_örun
);

1118 i‡(
d©a_run_cur
->
Êags
 & 
TSK_FS_ATTR_RUN_FLAG_FILLER
) {

1119 
	`mem£t
(&
a_buf
[
Àn_t‹ód
 - 
Àn_ªmaö
], 0, 
Àn_örun
);

1120 i‡(
tsk_vîbo£
)

1121 
	`Ârötf
(
°dîr
,

1122 "tsk_fs_©å_ªad_ty≥: Fûê%" 
PRIuINUM


1124 (
a_fs_©å
->
fs_fûe
->
mëa
) ?á_fs_attr->fs_file->

1125 
mëa
->
addr
 : 0);

1128 i‡(((
TSK_OFF_T
Ë((
d©a_run_cur
->
off£t
 +

1129 
blkoff£t_örun
Ë* 
fs
->
block_size
 +

1130 
byãoff£t_t‹ód
Ë>
a_fs_©å
->
ƒd
.
öôsize
)

1131 && ((
a_Êags
 & 
TSK_FS_FILE_READ_FLAG_SLACK
) == 0)) {

1132 
	`mem£t
(&
a_buf
[
Àn_t‹ód
 - 
Àn_ªmaö
], 0, 
Àn_örun
);

1133 i‡(
tsk_vîbo£
)

1134 
	`Ârötf
(
°dîr
,

1136 
PRIuINUM
 ")\n", ((
a_fs_©å
->
fs_fûe
)

1137 && (
a_fs_©å
->
fs_fûe
->
mëa
)) ?á_fs_attr->

1138 
fs_fûe
->
mëa
->
addr
 : 0);

1141 
TSK_OFF_T
 
fs_off£t_b
;

1142 
ssize_t
 
˙t
;

1145 
fs_off£t_b
 =

1146 (
d©a_run_cur
->
addr
 +

1147 
blkoff£t_örun
Ë* 
fs
->
block_size
;

1150 
fs_off£t_b
 +
byãoff£t_t‹ód
;

1153 
byãoff£t_t‹ód
 = 0;

1155 
˙t
 =

1156 
	`tsk_fs_ªad
(
fs
, 
fs_off£t_b
,

1157 &
a_buf
[
Àn_t‹ód
 - 
Àn_ªmaö
], 
Àn_örun
);

1158 i‡(
˙t
 !
Àn_örun
) {

1159 i‡(
˙t
 >= 0) {

1160 
	`tsk_îr‹_ª£t
();

1161 
tsk_î∫o
 = 
TSK_ERR_FS_READ
;

1163 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

1164 "tsk_fs_©å_ªad_ty≥: off£t: %" 
PRIuOFF


1165 " Lí: %" 
PRIuSIZE
 "", 
fs_off£t_b
, 
Àn_örun
);

1166  
˙t
;

1170 i‡(((
TSK_OFF_T
Ë((
d©a_run_cur
->
off£t
 +

1171 
blkoff£t_örun
Ë* 
fs
->
block_size
 +

1172 
byãoff£t_t‹ód
 + 
Àn_örun
) >

1173 
a_fs_©å
->
ƒd
.
öôsize
)

1174 && ((
a_Êags
 & 
TSK_FS_FILE_READ_FLAG_SLACK
) == 0)) {

1176 
size_t
 
unöô_off
 = 
a_fs_©å
->
ƒd
.
öôsize
 -

1177 ((
d©a_run_cur
->
off£t
 + 
blkoff£t_örun
Ë* 
fs
->
block_size
 +

1178 
byãoff£t_t‹ód
);

1180 
	`mem£t
(&
a_buf
[
Àn_t‹ód
 - 
Àn_ªmaö
 + 
unöô_off
], 0,

1181 
Àn_örun
 - 
unöô_off
);

1185 
Àn_ªmaö
 -
Àn_örun
;

1187  (
ssize_t
Ë(
Àn_t‹ód
 - 
Àn_ªmaö
);

1190 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

1191 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

1192 "tsk_fs_©å_ªad: Unknow¿©åibuãÅy≥: %x", 
a_fs_©å
->
Êags
);

1194 
	}
}

	@tsk3/fs/fs_attrlist.c

17 
	~"tsk_fs_i.h
"

24 
TSK_FS_ATTRLIST
 *

25 
	$tsk_fs_©åli°_Æloc
()

27 
TSK_FS_ATTRLIST
 *
fs_©åli°
;

29 i‡((
fs_©åli°
 =

30 (
TSK_FS_ATTRLIST
 *Ë
	`tsk_mÆloc
((TSK_FS_ATTRLIST))) ==

31 
NULL
)

32  
NULL
;

33  
fs_©åli°
;

34 
	}
}

40 
	$tsk_fs_©åli°_‰ì
(
TSK_FS_ATTRLIST
 * 
a_fs_©åli°
)

42 
TSK_FS_ATTR
 *
fs_©å_cur
, *
fs_©å_tmp
;

43 i‡(
a_fs_©åli°
 =
NULL
)

46 
fs_©å_cur
 = 
a_fs_©åli°
->
hód
;

47 
fs_©å_cur
) {

48 
fs_©å_tmp
 = 
fs_©å_cur
->
√xt
;

49 
	`tsk_fs_©å_‰ì
(
fs_©å_cur
);

50 
fs_©å_cur
 = 
fs_©å_tmp
;

52 
	`‰ì
(
a_fs_©åli°
);

53 
	}
}

62 
uöt8_t


63 
	$tsk_fs_©åli°_add
(
TSK_FS_ATTRLIST
 * 
a_fs_©åli°
,

64 
TSK_FS_ATTR
 * 
a_fs_©å
)

66 i‡(
a_fs_©åli°
 =
NULL
) {

67 
	`tsk_îr‹_ª£t
();

68 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

69 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

75 
a_fs_©å
->
Êags
 |
TSK_FS_ATTR_INUSE
;

77 i‡(
a_fs_©åli°
->
hód
 =
NULL
) {

78 
a_fs_©åli°
->
hód
 = 
a_fs_©å
;

81 
TSK_FS_ATTR
 *
fs_©å_cur
;

82 
fs_©å_cur
 = 
a_fs_©åli°
->
hód
;

83 
fs_©å_cur
) {

85 i‡((
fs_©å_cur
->
ty≥
 =
a_fs_©å
->type)

86 && (
fs_©å_cur
->
id
 =
a_fs_©å
->id)) {

87 
	`tsk_îr‹_ª£t
();

88 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

89 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

91 
a_fs_©å
->
ty≥
,á_fs_©å->
id
);

94 i‡(
fs_©å_cur
->
√xt
 =
NULL
) {

95 
fs_©å_cur
->
√xt
 = 
a_fs_©å
;

98 
fs_©å_cur
 = fs_©å_cur->
√xt
;

102 
	}
}

118 
TSK_FS_ATTR
 *

119 
	$tsk_fs_©åli°_gë√w
(
TSK_FS_ATTRLIST
 * 
a_fs_©åli°
,

120 
TSK_FS_ATTR_FLAG_ENUM
 
a_©y≥
)

122 
TSK_FS_ATTR
 *
fs_©å_cur
;

123 
TSK_FS_ATTR
 *
fs_©å_ok
 = 
NULL
;

125 i‡(
a_fs_©åli°
 =
NULL
) {

126 
	`tsk_îr‹_ª£t
();

127 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

128 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

130  
NULL
;

133 i‡((
a_©y≥
 !
TSK_FS_ATTR_NONRES
Ë&& (a_©y≥ !
TSK_FS_ATTR_RES
)) {

134 
	`tsk_îr‹_ª£t
();

135 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

136 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

138  
NULL
;

141 
fs_©å_cur
 = 
a_fs_©åli°
->
hód
; fs_attr_cur;

142 
fs_©å_cur
 = fs_©å_cur->
√xt
) {

143 i‡(
fs_©å_cur
->
Êags
 == 0) {

144 i‡(
a_©y≥
 =
TSK_FS_ATTR_NONRES
) {

145 i‡(
fs_©å_cur
->
ƒd
.
run
)

147 i‡(!
fs_©å_ok
)

148 
fs_©å_ok
 = 
fs_©å_cur
;

152 i‡(
fs_©å_cur
->
rd
.
buf_size
)

154 i‡(!
fs_©å_ok
)

155 
fs_©å_ok
 = 
fs_©å_cur
;

161 i‡(!
fs_©å_cur
) {

162 i‡(
fs_©å_ok
)

163 
fs_©å_cur
 = 
fs_©å_ok
;

166 i‡((
fs_©å_cur
 = 
	`tsk_fs_©å_Æloc
(
a_©y≥
)Ë=
NULL
)

167  
NULL
;

170 i‡(
	`tsk_fs_©åli°_add
(
a_fs_©åli°
, 
fs_©å_cur
))

171  
NULL
;

175 
fs_©å_cur
->
Êags
 = (
TSK_FS_ATTR_INUSE
 | 
a_©y≥
);

176  
fs_©å_cur
;

177 
	}
}

185 
	$tsk_fs_©åli°_m¨kunu£d
(
TSK_FS_ATTRLIST
 * 
a_fs_©åli°
)

187 
TSK_FS_ATTR
 *
fs_©å_cur
;

188 i‡(
a_fs_©åli°
 =
NULL
)

191 
fs_©å_cur
 = 
a_fs_©åli°
->
hód
;

192 
fs_©å_cur
) {

193 
	`tsk_fs_©å_˛ór
(
fs_©å_cur
);

194 
fs_©å_cur
 = fs_©å_cur->
√xt
;

196 
	}
}

210 c⁄° 
TSK_FS_ATTR
 *

211 
	$tsk_fs_©åli°_gë
(c⁄° 
TSK_FS_ATTRLIST
 * 
a_fs_©åli°
,

212 
TSK_FS_ATTR_TYPE_ENUM
 
a_ty≥
)

214 
TSK_FS_ATTR
 *
fs_©å_cur
;

215 
TSK_FS_ATTR
 *
fs_©å_ok
 = 
NULL
;

217 i‡(!
a_fs_©åli°
) {

218 
	`tsk_îr‹_ª£t
();

219 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

220 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

222 
tsk_îr°r2
[0] = '\0';

223  
NULL
;

226 
fs_©å_cur
 = 
a_fs_©åli°
->
hód
; fs_attr_cur;

227 
fs_©å_cur
 = fs_©å_cur->
√xt
) {

228 i‡((
fs_©å_cur
->
Êags
 & 
TSK_FS_ATTR_INUSE
)

229 && (
fs_©å_cur
->
ty≥
 =
a_ty≥
)) {

233 i‡((
fs_©å_cur
->
ty≥
 =
TSK_FS_ATTR_TYPE_NTFS_DATA
) &&

234 (
fs_©å_cur
->
«me_size
 > 5) &&

235 (
	`°∫cmp
(
fs_©å_cur
->
«me
, "$Data", 5) == 0)) {

236  
fs_©å_cur
;

240 i‡((
fs_©å_ok
 =
NULL
Ë|| (fs_©å_ok->
id
 > 
fs_©å_cur
->id))

241 
fs_©å_ok
 = 
fs_©å_cur
;

245 i‡(!
fs_©å_ok
) {

246 
tsk_î∫o
 = 
TSK_ERR_FS_ATTR_NOTFOUND
;

247 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

248 "tsk_fs_©åli°_gë: Aâribuã %dÇŸ found", 
a_ty≥
);

249  
NULL
;

252  
fs_©å_ok
;

254 
	}
}

268 c⁄° 
TSK_FS_ATTR
 *

269 
	$tsk_fs_©åli°_gë_id
(c⁄° 
TSK_FS_ATTRLIST
 * 
a_fs_©åli°
,

270 
TSK_FS_ATTR_TYPE_ENUM
 
a_ty≥
, 
uöt16_t
 
a_id
)

272 
TSK_FS_ATTR
 *
fs_©å_cur
;

274 i‡(!
a_fs_©åli°
) {

275 
	`tsk_îr‹_ª£t
();

276 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

277 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

279 
tsk_îr°r2
[0] = '\0';

280  
NULL
;

283 
fs_©å_cur
 = 
a_fs_©åli°
->
hód
; fs_attr_cur;

284 
fs_©å_cur
 = fs_©å_cur->
√xt
) {

285 i‡((
fs_©å_cur
->
Êags
 & 
TSK_FS_ATTR_INUSE
)

286 && (
fs_©å_cur
->
ty≥
 =
a_ty≥
Ë&& (fs_©å_cur->
id
 =
a_id
))

287  
fs_©å_cur
;

290 
tsk_î∫o
 = 
TSK_ERR_FS_ATTR_NOTFOUND
;

291 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

292 "tsk_fs_©åli°_gë_id: Aâribuã %d-%dÇŸ found", 
a_ty≥
, 
a_id
);

293  
NULL
;

294 
	}
}

313 c⁄° 
TSK_FS_ATTR
 *

314 
	$tsk_fs_©åli°_gë_«me_ty≥
(c⁄° 
TSK_FS_ATTRLIST
 * 
a_fs_©åli°
,

315 
TSK_FS_ATTR_TYPE_ENUM
 
a_ty≥
, c⁄° *
«me
)

317 
TSK_FS_ATTR
 *
fs_©å_cur
;

318 
TSK_FS_ATTR
 *
fs_©å_ok
 = 
NULL
;

320 i‡((!
a_fs_©åli°
Ë|| (
«me
 =
NULL
)) {

321 
	`tsk_îr‹_ª£t
();

322 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

323 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

325 
tsk_îr°r2
[0] = '\0';

326  
NULL
;

329 
fs_©å_cur
 = 
a_fs_©åli°
->
hód
; fs_attr_cur; fs_attr_cur =

330 
fs_©å_cur
->
√xt
) {

331 i‡((
fs_©å_cur
->
Êags
 & 
TSK_FS_ATTR_INUSE
) &&

332 (
fs_©å_cur
->
ty≥
 =
a_ty≥
) &&

333 (
fs_©å_cur
->
«me_size
 > 0) &&

334 (!
	`°rcmp
(
fs_©å_cur
->
«me
,Çame))) {

338 i‡((
fs_©å_cur
->
ty≥
 =
TSK_FS_ATTR_TYPE_NTFS_DATA
) &&

339 (
fs_©å_cur
->
«me_size
 > 5) &&

340 (
	`°∫cmp
(
fs_©å_cur
->
«me
, "$Data", 5) == 0)) {

341  
fs_©å_cur
;

345 i‡((
fs_©å_ok
 =
NULL
Ë|| (fs_©å_ok->
id
 > 
fs_©å_cur
->id))

346 
fs_©å_ok
 = 
fs_©å_cur
;

350 i‡(!
fs_©å_ok
) {

351 
tsk_î∫o
 = 
TSK_ERR_FS_ATTR_NOTFOUND
;

352 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

353 "tsk_fs_©åli°_gë: Aâribuã %dÇŸ found", 
a_ty≥
);

354  
NULL
;

357  
fs_©å_ok
;

359 
	}
}

372 c⁄° 
TSK_FS_ATTR
 *

373 
	$tsk_fs_©åli°_gë_idx
(c⁄° 
TSK_FS_ATTRLIST
 * 
a_fs_©åli°
, 
a_idx
)

375 
TSK_FS_ATTR
 *
fs_©å_cur
;

376 
i
 = 0;

378 i‡(!
a_fs_©åli°
) {

379 
	`tsk_îr‹_ª£t
();

380 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

381 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

383 
tsk_îr°r2
[0] = '\0';

384  
NULL
;

387 
fs_©å_cur
 = 
a_fs_©åli°
->
hód
; fs_attr_cur;

388 
fs_©å_cur
 = fs_©å_cur->
√xt
) {

389 i‡(
fs_©å_cur
->
Êags
 & 
TSK_FS_ATTR_INUSE
) {

390 i‡(
i
 =
a_idx
) {

391  
fs_©å_cur
;

393 
i
++;

397 
tsk_î∫o
 = 
TSK_ERR_FS_ATTR_NOTFOUND
;

398 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

399 "tsk_fs_©åli°_gë_idx: Aâribuã index %dÇŸ found", 
a_idx
);

400  
NULL
;

401 
	}
}

413 
	$tsk_fs_©åli°_gë_Àn
(c⁄° 
TSK_FS_ATTRLIST
 * 
a_fs_©åli°
)

415 
TSK_FS_ATTR
 *
fs_©å_cur
;

416 
Àn
 = 0;

418 i‡(!
a_fs_©åli°
) {

419 
	`tsk_îr‹_ª£t
();

420 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

421 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

423 
tsk_îr°r2
[0] = '\0';

427 
fs_©å_cur
 = 
a_fs_©åli°
->
hód
; fs_attr_cur;

428 
fs_©å_cur
 = fs_©å_cur->
√xt
) {

429 i‡(
fs_©å_cur
->
Êags
 & 
TSK_FS_ATTR_INUSE
)

430 
Àn
++;

432  
Àn
;

433 
	}
}

	@tsk3/fs/fs_block.c

14 
	~<î∫o.h
>

15 
	~"tsk_fs_i.h
"

23 
TSK_FS_BLOCK
 *

24 
	$tsk_fs_block_Æloc
(
TSK_FS_INFO
 * 
a_fs
)

26 
TSK_FS_BLOCK
 *
fs_block
;

28 
fs_block
 = (
TSK_FS_BLOCK
 *Ë
	`tsk_mÆloc
((TSK_FS_BLOCK));

29 i‡(
fs_block
 =
NULL
)

30  
NULL
;

32 
fs_block
->
buf
 = (*Ë
	`tsk_mÆloc
(
a_fs
->
block_size
);

33 i‡(
fs_block
->
buf
 =
NULL
) {

34 
	`‰ì
(
fs_block
);

35  
NULL
;

37 
fs_block
->
èg
 = 
TSK_FS_BLOCK_TAG
;

38 
fs_block
->
addr
 = 0;

39 
fs_block
->
Êags
 = 0;

40 
fs_block
->
fs_öfo
 = 
a_fs
;

42  
fs_block
;

43 
	}
}

51 
	$tsk_fs_block_‰ì
(
TSK_FS_BLOCK
 * 
a_fs_block
)

53 i‡(
a_fs_block
->
buf
)

54 
	`‰ì
(
a_fs_block
->
buf
);

55 
a_fs_block
->
èg
 = 0;

56 
	`‰ì
(
a_fs_block
);

57 
	}
}

72 
TSK_FS_BLOCK
 *

73 
	$tsk_fs_block_gë
(
TSK_FS_INFO
 * 
a_fs
, 
TSK_FS_BLOCK
 * 
a_fs_block
,

74 
TSK_DADDR_T
 
a_addr
)

76 
TSK_OFF_T
 
offs
;

77 
ssize_t
 
˙t
;

78 
size_t
 
Àn
;

80 i‡(
a_fs
 =
NULL
) {

81 
	`tsk_îr‹_ª£t
();

82 
tsk_î∫o
 = 
TSK_ERR_FS_READ
;

83 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

85  
NULL
;

87 i‡(
a_fs_block
 =
NULL
) {

88 
a_fs_block
 = 
	`tsk_fs_block_Æloc
(
a_fs
);

90 i‡((
a_fs_block
->
èg
 !
TSK_FS_BLOCK_TAG
)

91 || (
a_fs_block
->
buf
 =
NULL
)) {

92 
	`tsk_îr‹_ª£t
();

93 
tsk_î∫o
 = 
TSK_ERR_FS_READ
;

94 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

96  
NULL
;

99 
Àn
 = 
a_fs
->
block_size
;

101 i‡(
a_addr
 > 
a_fs
->
œ°_block_a˘
) {

102 
	`tsk_îr‹_ª£t
();

103 
tsk_î∫o
 = 
TSK_ERR_FS_READ
;

104 i‡(
a_addr
 <
a_fs
->
œ°_block
)

105 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

107 
PRIuDADDR
 ")", 
a_addr
);

109 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

111 
PRIuDADDR
 ")", 
a_addr
);

112  
NULL
;

115 
a_fs_block
->
fs_öfo
 = 
a_fs
;

116 
a_fs_block
->
addr
 = 
a_addr
;

117 
a_fs_block
->
Êags
 = 
a_fs
->
	`block_gëÊags
◊_fs, 
a_addr
);

118 
a_fs_block
->
Êags
 |
TSK_FS_BLOCK_FLAG_RAW
;

119 
offs
 = (
TSK_OFF_T
Ë
a_addr
 *
a_fs
->
block_size
;

121 
˙t
 =

122 
	`tsk_img_ªad
(
a_fs
->
img_öfo
,á_fs->
off£t
 + 
offs
, 
a_fs_block
->
buf
,

123 
Àn
);

124 i‡(
˙t
 !
Àn
) {

125  
NULL
;

127  
a_fs_block
;

128 
	}
}

145 
	$tsk_fs_block_£t
(
TSK_FS_INFO
 * 
a_fs
, 
TSK_FS_BLOCK
 * 
a_fs_block
,

146 
TSK_DADDR_T
 
a_addr
, 
TSK_FS_BLOCK_FLAG_ENUM
 
a_Êags
, *
a_buf
)

148 i‡((
a_fs
 =
NULL
Ë|| (a_fs->
èg
 !
TSK_FS_INFO_TAG
)) {

149 
	`tsk_îr‹_ª£t
();

150 
tsk_î∫o
 = 
TSK_ERR_FS_READ
;

151 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

155 i‡((
a_fs_block
->
èg
 !
TSK_FS_BLOCK_TAG
Ë|| (a_fs_block->
buf
 =
NULL
)) {

156 
	`tsk_îr‹_ª£t
();

157 
tsk_î∫o
 = 
TSK_ERR_FS_READ
;

158 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

162 
a_fs_block
->
fs_öfo
 = 
a_fs
;

163 
	`mem˝y
(
a_fs_block
->
buf
, 
a_buf
, 
a_fs
->
block_size
);

164 
a_fs_block
->
addr
 = 
a_addr
;

165 
a_fs_block
->
Êags
 = 
a_Êags
;

167 
	}
}

184 
uöt8_t


185 
	$tsk_fs_block_wÆk
(
TSK_FS_INFO
 * 
a_fs
,

186 
TSK_DADDR_T
 
a_°¨t_blk
, TSK_DADDR_T 
a_íd_blk
,

187 
TSK_FS_BLOCK_WALK_FLAG_ENUM
 
a_Êags
, 
TSK_FS_BLOCK_WALK_CB
 
a_a˘i⁄
,

188 *
a_±r
)

190 i‡((
a_fs
 =
NULL
Ë|| (a_fs->
èg
 !
TSK_FS_INFO_TAG
)) {

191 
	`tsk_îr‹_ª£t
();

192 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

193 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

197  
a_fs
->
	`block_wÆk
◊_fs, 
a_°¨t_blk
, 
a_íd_blk
, 
a_Êags
,

198 
a_a˘i⁄
, 
a_±r
);

199 
	}
}

	@tsk3/fs/fs_dir.c

17 
	~"tsk_fs_i.h
"

25 
TSK_FS_DIR
 *

26 
	$tsk_fs_dú_Æloc
(
TSK_FS_INFO
 * 
a_fs
, 
size_t
 
a_˙t
)

28 
TSK_FS_DIR
 *
fs_dú
;

29 
size_t
 
i
;

32 i‡((
fs_dú
 = (
TSK_FS_DIR
 *Ë
	`tsk_mÆloc
((TSK_FS_DIR))Ë=
NULL
) {

33  
NULL
;

36 
fs_dú
->
«mes_Æloc
 = 
a_˙t
;

37 
fs_dú
->
«mes_u£d
 = 0;

38 i‡((
fs_dú
->
«mes
 =

39 (
TSK_FS_NAME
 *Ë
	`tsk_mÆloc
((TSK_FS_NAME) *

40 
fs_dú
->
«mes_Æloc
)Ë=
NULL
) {

41 
	`‰ì
(
fs_dú
);

42  
NULL
;

44 
fs_dú
->
fs_öfo
 = 
a_fs
;

45 
fs_dú
->
èg
 = 
TSK_FS_DIR_TAG
;

46 
i
 = 0; i < 
a_˙t
; i++) {

47 
fs_dú
->
«mes
[
i
].
èg
 = 
TSK_FS_NAME_TAG
;

50  
fs_dú
;

51 
	}
}

61 
uöt8_t


62 
	$tsk_fs_dú_ªÆloc
(
TSK_FS_DIR
 * 
a_fs_dú
, 
size_t
 
a_˙t
)

64 
size_t
 
¥ev_˙t
, 
i
;

65 i‡((
a_fs_dú
 =
NULL
Ë|| (a_fs_dú->
èg
 !
TSK_FS_DIR_TAG
))

68 i‡(
a_fs_dú
->
«mes_Æloc
 >
a_˙t
)

70 
¥ev_˙t
 = 
a_fs_dú
->
«mes_Æloc
;

72 
a_fs_dú
->
«mes_Æloc
 = 
a_˙t
;

73 i‡((
a_fs_dú
->
«mes
 =

74 (
TSK_FS_NAME
 *Ë
	`tsk_ªÆloc
((*Ë
a_fs_dú
->
«mes
,

75 (
TSK_FS_NAME
Ë* 
a_fs_dú
->
«mes_Æloc
)Ë=
NULL
) {

79 
	`mem£t
(&
a_fs_dú
->
«mes
[
¥ev_˙t
], 0, (
a_˙t
-¥ev_˙t)*(
TSK_FS_NAME
));

80 
i
 = 
¥ev_˙t
; i < 
a_˙t
; i++) {

81 
a_fs_dú
->
«mes
[
i
].
èg
 = 
TSK_FS_NAME_TAG
;

84 
	}
}

91 
	$tsk_fs_dú_ª£t
(
TSK_FS_DIR
 * 
a_fs_dú
)

93 i‡((
a_fs_dú
 =
NULL
Ë|| (a_fs_dú->
èg
 !
TSK_FS_DIR_TAG
))

96 i‡(
a_fs_dú
->
fs_fûe
) {

97 
	`tsk_fs_fûe_˛o£
(
a_fs_dú
->
fs_fûe
);

98 
a_fs_dú
->
fs_fûe
 = 
NULL
;

100 
a_fs_dú
->
«mes_u£d
 = 0;

101 
	}
}

112 
uöt8_t


113 
	$tsk_fs_dú_c›y
(c⁄° 
TSK_FS_DIR
 *
a_§c_dú
, TSK_FS_DIR *
a_d°_dú
)

115 
size_t
 
i
;

117 
a_d°_dú
->
«mes_u£d
 = 0;

120 i‡(
a_§c_dú
->
«mes_u£d
 > 
a_d°_dú
->
«mes_Æloc
) {

121 i‡(
	`tsk_fs_dú_ªÆloc
(
a_d°_dú
, 
a_§c_dú
->
«mes_u£d
))

125 
i
 = 0; i < 
a_§c_dú
->
«mes_u£d
; i++) {

126 i‡(
	`tsk_fs_«me_c›y
(&
a_d°_dú
->
«mes
[
i
], &
a_§c_dú
->names[i]))

130 
a_d°_dú
->
«mes_u£d
 = 
a_§c_dú
->names_used;

132 
	}
}

143 
uöt8_t


144 
	$tsk_fs_dú_add
(
TSK_FS_DIR
 * 
a_fs_dú
, c⁄° 
TSK_FS_NAME
 * 
a_fs_«me
)

146 
TSK_FS_NAME
 *
fs_«me_de°
 = 
NULL
;

147 
size_t
 
i
;

150 
i
 = 0; i < 
a_fs_dú
->
«mes_u£d
; i++) {

151 i‡((
a_fs_«me
->
mëa_addr
 =
a_fs_dú
->
«mes
[
i
].meta_addr) &&

152 (
	`°rcmp
(
a_fs_«me
->
«me
, 
a_fs_dú
->
«mes
[
i
].name) == 0)) {

154 i‡(
tsk_vîbo£
)

155 
	`tsk_Ârötf
(
°dîr
,

157 
PRIuINUM
 ")\n", 
a_fs_«me
->
«me
,á_fs_«me->
mëa_addr
);

164 i‡((
a_fs_dú
->
«mes
[
i
].
Êags
 & 
TSK_FS_NAME_FLAG_UNALLOC
) &&

165 (
a_fs_«me
->
Êags
 & 
TSK_FS_NAME_FLAG_ALLOC
)) {

166 
fs_«me_de°
 = &
a_fs_dú
->
«mes
[
i
];

170 i‡(
fs_«me_de°
->
«me
) {

171 
	`‰ì
(
fs_«me_de°
->
«me
);

172 
fs_«me_de°
->
«me
 = 
NULL
;

173 
fs_«me_de°
->
«me_size
 = 0;

175 i‡(
fs_«me_de°
->
shπ_«me
) {

176 
	`‰ì
(
fs_«me_de°
->
shπ_«me
);

177 
fs_«me_de°
->
shπ_«me
 = 
NULL
;

178 
fs_«me_de°
->
shπ_«me_size
 = 0;

188 i‡(
fs_«me_de°
 =
NULL
) {

190 i‡(
a_fs_dú
->
«mes_u£d
 >a_fs_dú->
«mes_Æloc
) {

191 i‡(
	`tsk_fs_dú_ªÆloc
(
a_fs_dú
,á_fs_dú->
«mes_u£d
 + 256))

195 
fs_«me_de°
 = &
a_fs_dú
->
«mes
[a_fs_dú->
«mes_u£d
++];

198 i‡(
	`tsk_fs_«me_c›y
(
fs_«me_de°
, 
a_fs_«me
))

202 
	}
}

212 
TSK_FS_DIR
 *

213 
	$tsk_fs_dú_›í_mëa
(
TSK_FS_INFO
 * 
a_fs
, 
TSK_INUM_T
 
a_addr
)

215 
TSK_FS_DIR
 *
fs_dú
 = 
NULL
;

216 
TSK_RETVAL_ENUM
 
ªtvÆ
;

218 i‡((
a_fs
 =
NULL
Ë|| (a_fs->
èg
 !
TSK_FS_INFO_TAG
)

219 || (
a_fs
->
dú_›í_mëa
 =
NULL
)) {

220 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

221 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

223  
NULL
;

226 
ªtvÆ
 = 
a_fs
->
	`dú_›í_mëa
◊_fs, &
fs_dú
, 
a_addr
);

227 i‡(
ªtvÆ
 !
TSK_OK
)

228  
NULL
;

230  
fs_dú
;

231 
	}
}

240 
TSK_FS_DIR
 *

241 
	$tsk_fs_dú_›í
(
TSK_FS_INFO
 * 
a_fs
, c⁄° *
a_dú
)

243 
TSK_INUM_T
 
öum
;

244 
öt8_t
 
ªtvÆ
;

245 
TSK_FS_DIR
 *
fs_dú
;

246 
TSK_FS_NAME
 *
fs_«me
;

248 i‡((
a_fs
 =
NULL
Ë|| (a_fs->
èg
 !
TSK_FS_INFO_TAG
)) {

249 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

250 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

252  
NULL
;

256 i‡((
fs_«me
 = 
	`tsk_fs_«me_Æloc
(128, 32)Ë=
NULL
) {

257  
NULL
;

260 
ªtvÆ
 = 
	`tsk_fs_∑th2öum
(
a_fs
, 
a_dú
, &
öum
, 
fs_«me
);

261 i‡(
ªtvÆ
 == -1) {

262  
NULL
;

264 i‡(
ªtvÆ
 == 1) {

265 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

266 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

267 "tsk_fs_dú_›í:Ö©hÇŸ found: %s", 
a_dú
);

268  
NULL
;

271 
fs_dú
 = 
	`tsk_fs_dú_›í_mëa
(
a_fs
, 
öum
);

274 i‡((
fs_dú
Ë&& (fs_dú->
fs_fûe
))

275 
fs_dú
->
fs_fûe
->
«me
 = 
fs_«me
;

277  
fs_dú
;

278 
	}
}

286 
	$tsk_fs_dú_˛o£
(
TSK_FS_DIR
 * 
a_fs_dú
)

288 
size_t
 
i
;

289 i‡((
a_fs_dú
 =
NULL
Ë|| (a_fs_dú->
èg
 !
TSK_FS_DIR_TAG
)) {

293 
i
 = 0; i < 
a_fs_dú
->
«mes_u£d
; i++) {

294 i‡(
a_fs_dú
->
«mes
[
i
].
«me
) {

295 
	`‰ì
(
a_fs_dú
->
«mes
[
i
].
«me
);

296 
a_fs_dú
->
«mes
[
i
].
«me
 = 
NULL
;

297 
a_fs_dú
->
«mes
[
i
].
«me_size
 = 0;

299 i‡(
a_fs_dú
->
«mes
[
i
].
shπ_«me
) {

300 
	`‰ì
(
a_fs_dú
->
«mes
[
i
].
shπ_«me
);

301 
a_fs_dú
->
«mes
[
i
].
shπ_«me
 = 
NULL
;

302 
a_fs_dú
->
«mes
[
i
].
shπ_«me_size
 = 0;

305 
	`‰ì
(
a_fs_dú
->
«mes
);

307 i‡(
a_fs_dú
->
fs_fûe
) {

308 
	`tsk_fs_fûe_˛o£
(
a_fs_dú
->
fs_fûe
);

309 
a_fs_dú
->
fs_fûe
 = 
NULL
;

312 
a_fs_dú
->
èg
 = 0;

313 
	`‰ì
(
a_fs_dú
);

314 
	}
}

321 
size_t


322 
	$tsk_fs_dú_gësize
(c⁄° 
TSK_FS_DIR
 * 
a_fs_dú
)

324 i‡((
a_fs_dú
 =
NULL
Ë|| (a_fs_dú->
èg
 !
TSK_FS_DIR_TAG
)) {

325 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

326 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

330  
a_fs_dú
->
«mes_u£d
;

331 
	}
}

339 
TSK_FS_FILE
 *

340 
	$tsk_fs_dú_gë
(c⁄° 
TSK_FS_DIR
 * 
a_fs_dú
, 
size_t
 
a_idx
)

342 
TSK_FS_NAME
 *
fs_«me
;

343 
TSK_FS_FILE
 *
fs_fûe
;

345 i‡((
a_fs_dú
 =
NULL
Ë|| (a_fs_dú->
èg
 !
TSK_FS_DIR_TAG
)

346 || (
a_fs_dú
->
fs_öfo
 =
NULL
)) {

347 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

348 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

350  
NULL
;

352 i‡(
a_fs_dú
->
«mes_u£d
 <
a_idx
) {

353 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

354 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

355 "tsk_fs_dú_gë: Index (%" 
PRIuSIZE
 ")ÅooÜarge (%" PRIuSIZE

356 ")", 
a_idx
, 
a_fs_dú
->
«mes_u£d
);

357  
NULL
;

361 i‡((
fs_fûe
 = 
	`tsk_fs_fûe_Æloc
(
a_fs_dú
->
fs_öfo
)Ë=
NULL
)

362  
NULL
;

364 
fs_«me
 = &(
a_fs_dú
->
«mes
[
a_idx
]);

367 i‡((
fs_fûe
->
«me
 =

368 
	`tsk_fs_«me_Æloc
(
fs_«me
->
«me
 ? 
	`°æí
(fs_name->name) +

370 
fs_«me
->
shπ_«me
 ? 
	`°æí
(fs_name->shrt_name) +

371 1 : 0)Ë=
NULL
) {

372  
NULL
;

374 i‡(
	`tsk_fs_«me_c›y
(
fs_fûe
->
«me
, 
fs_«me
))

375  
NULL
;

379 i‡(((
fs_«me
->
mëa_addr
)

380 || (
fs_«me
->
Êags
 & 
TSK_FS_NAME_FLAG_ALLOC
))) {

381 i‡(
a_fs_dú
->
fs_öfo
->
	`fûe_add_mëa
◊_fs_dú->fs_öfo, 
fs_fûe
,

382 
fs_«me
->
mëa_addr
)) {

383 i‡(
tsk_vîbo£
)

384 
	`tsk_îr‹_¥öt
(
°dîr
);

385 
	`tsk_îr‹_ª£t
();

388  
fs_fûe
;

389 
	}
}

391 
	#MAX_DEPTH
 128

	)

392 
	#DIR_STRSZ
 4096

	)

401 
	mdïth
;

404 *
	mdidx
[
MAX_DEPTH
];

407 
	mdús
[
DIR_STRSZ
];

409 
TSK_STACK
 *
	m°ack_£í
;

412 
uöt8_t
 
	mßve_öum_«med
;

414 } 
	tDENT_DINFO
;

419 
uöt8_t


420 
	$tsk_fs_dú_wÆk_l˛
(
TSK_FS_INFO
 * 
a_fs
, 
DENT_DINFO
 * 
a_döfo
,

421 
TSK_INUM_T
 
a_addr
, 
TSK_FS_DIR_WALK_FLAG_ENUM
 
a_Êags
,

422 
TSK_FS_DIR_WALK_CB
 
a_a˘i⁄
, *
a_±r
)

424 
TSK_FS_DIR
 *
fs_dú
;

425 
TSK_FS_FILE
 *
fs_fûe
;

426 
size_t
 
i
;

429 i‡((
fs_dú
 = 
	`tsk_fs_dú_›í_mëa
(
a_fs
, 
a_addr
)Ë=
NULL
) {

436 i‡((
fs_fûe
 = 
	`tsk_fs_fûe_Æloc
(
a_fs
)Ë=
NULL
) {

437 
	`tsk_fs_dú_˛o£
(
fs_dú
);

441 
i
 = 0; i < 
fs_dú
->
«mes_u£d
; i++) {

442 
ªtvÆ
;

446 
fs_fûe
->
«me
 = (
TSK_FS_NAME
 *Ë& 
fs_dú
->
«mes
[
i
];

450 i‡(((
fs_fûe
->
«me
->
mëa_addr
)

451 || (
fs_fûe
->
«me
->
Êags
 & 
TSK_FS_NAME_FLAG_ALLOC
))) {

452 i‡(
a_fs
->
	`fûe_add_mëa
◊_fs, 
fs_fûe
,

453 
fs_fûe
->
«me
->
mëa_addr
)) {

454 i‡(
tsk_vîbo£
)

455 
	`tsk_îr‹_¥öt
(
°dîr
);

456 
	`tsk_îr‹_ª£t
();

461 i‡((
fs_fûe
->
«me
->
Êags
 & 
a_Êags
) == fs_file->name->flags) {

463 
ªtvÆ
 = 
	`a_a˘i⁄
(
fs_fûe
, 
a_döfo
->
dús
, 
a_±r
);

464 i‡(
ªtvÆ
 =
TSK_WALK_STOP
) {

465 
	`tsk_fs_dú_˛o£
(
fs_dú
);

466 
fs_fûe
->
«me
 = 
NULL
;

467 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

472 i‡(
a_döfo
->
ßve_öum_«med
) {

473 
	`tsk_li°_‰ì
(
a_fs
->
li°_öum_«med
);

474 
a_fs
->
li°_öum_«med
 = 
NULL
;

475 
a_döfo
->
ßve_öum_«med
 = 0;

480 i‡(
ªtvÆ
 =
TSK_WALK_ERROR
) {

481 
	`tsk_fs_dú_˛o£
(
fs_dú
);

487 i‡((
a_döfo
->
ßve_öum_«med
Ë&& (
fs_fûe
->
mëa
)

488 && (
fs_fûe
->
mëa
->
Êags
 & 
TSK_FS_META_FLAG_UNALLOC
)) {

489 i‡(
	`tsk_li°_add
(&
a_fs
->
li°_öum_«med
, 
fs_fûe
->
mëa
->
addr
)) {

492 
	`tsk_li°_‰ì
(
a_fs
->
li°_öum_«med
);

493 
a_fs
->
li°_öum_«med
 = 
NULL
;

494 
a_döfo
->
ßve_öum_«med
 = 0;

505 i‡(((
fs_fûe
->
«me
->
ty≥
 =
TSK_FS_NAME_TYPE_DIR
)

506 || (
fs_fûe
->
«me
->
ty≥
 =
TSK_FS_NAME_TYPE_UNDEF
))

507 && (
fs_fûe
->
mëa
)

508 && (
fs_fûe
->
mëa
->
ty≥
 =
TSK_FS_META_TYPE_DIR
)

509 && (
a_Êags
 & 
TSK_FS_DIR_WALK_FLAG_RECURSE
)

510 && ((
fs_fûe
->
«me
->
Êags
 & 
TSK_FS_NAME_FLAG_ALLOC
)

511 || ((
fs_fûe
->
«me
->
Êags
 & 
TSK_FS_NAME_FLAG_UNALLOC
)

512 && (
fs_fûe
->
mëa
->
Êags
 & 
TSK_FS_META_FLAG_UNALLOC
))

514 && (!
	`TSK_FS_ISDOT
(
fs_fûe
->
«me
->name))

515 && ((
fs_fûe
->
«me
->
mëa_addr
 !
	`TSK_FS_ORPHANDIR_INUM
(
a_fs
))

516 || ((
a_Êags
 & 
TSK_FS_DIR_WALK_FLAG_NOORPHAN
) == 0))

520 i‡(0 =
	`tsk_°ack_föd
(
a_döfo
->
°ack_£í
,

521 
fs_fûe
->
«me
->
mëa_addr
)) {

522 
dïth_added
 = 0;

523 
uöt8_t
 
ßve_bak
 = 0;

525 i‡(
	`tsk_°ack_push
(
a_döfo
->
°ack_£í
,

526 
fs_fûe
->
«me
->
mëa_addr
)) {

527 
	`tsk_fs_dú_˛o£
(
fs_dú
);

531 i‡((
a_döfo
->
dïth
 < 
MAX_DEPTH
) &&

532 (
DIR_STRSZ
 >

533 
	`°æí
(
a_döfo
->
dús
) +

534 
	`°æí
(
fs_fûe
->
«me
->name))) {

535 
a_döfo
->
didx
[a_döfo->
dïth
] =

536 &
a_döfo
->
dús
[
	`°æí
(a_dinfo->dirs)];

537 
	`°∫˝y
(
a_döfo
->
didx
[a_döfo->
dïth
],

538 
fs_fûe
->
«me
->name,

539 
DIR_STRSZ
 - 
	`°æí
(
a_döfo
->
dús
));

540 
	`°∫ˇt
(
a_döfo
->
dús
, "/", 
DIR_STRSZ
);

541 
dïth_added
 = 1;

543 
a_döfo
->
dïth
++;

549 i‡(
fs_fûe
->
«me
->
mëa_addr
 ==

550 
	`TSK_FS_ORPHANDIR_INUM
(
a_fs
)) {

551 
ßve_bak
 = 
a_döfo
->
ßve_öum_«med
;

552 
a_döfo
->
ßve_öum_«med
 = 0;

555 i‡(
	`tsk_fs_dú_wÆk_l˛
(
a_fs
,

556 
a_döfo
, 
fs_fûe
->
«me
->
mëa_addr
, 
a_Êags
,

557 
a_a˘i⁄
, 
a_±r
)) {

560 i‡(
tsk_vîbo£
) {

561 
	`tsk_Ârötf
(
°dîr
,

563 
PRIuINUM
 "\n", 
fs_fûe
->
«me
->
mëa_addr
);

564 
	`tsk_îr‹_¥öt
(
°dîr
);

567 
	`tsk_îr‹_ª£t
();

571 i‡(
fs_fûe
->
«me
->
mëa_addr
 ==

572 
	`TSK_FS_ORPHANDIR_INUM
(
a_fs
)) {

573 
a_döfo
->
ßve_öum_«med
 = 
ßve_bak
;

576 
	`tsk_°ack_p›
(
a_döfo
->
°ack_£í
);

577 
a_döfo
->
dïth
--;

578 i‡(
dïth_added
)

579 *
a_döfo
->
didx
[a_döfo->
dïth
] = '\0';

584 
fs_fûe
->
«me
 = 
NULL
;

587 i‡(
fs_fûe
->
mëa
) {

588 
	`tsk_fs_mëa_˛o£
(
fs_fûe
->
mëa
);

589 
fs_fûe
->
mëa
 = 
NULL
;

593 
	`tsk_fs_dú_˛o£
(
fs_dú
);

594 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

596 
	}
}

609 
uöt8_t


610 
	$tsk_fs_dú_wÆk
(
TSK_FS_INFO
 * 
a_fs
, 
TSK_INUM_T
 
a_addr
,

611 
TSK_FS_DIR_WALK_FLAG_ENUM
 
a_Êags
, 
TSK_FS_DIR_WALK_CB
 
a_a˘i⁄
,

612 *
a_±r
)

614 
DENT_DINFO
 
döfo
;

615 
TSK_RETVAL_ENUM
 
ªtvÆ
;

617 i‡((
a_fs
 =
NULL
Ë|| (a_fs->
èg
 !
TSK_FS_INFO_TAG
)) {

618 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

619 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

625 
	`mem£t
(&
döfo
, 0, (
DENT_DINFO
));

626 i‡((
döfo
.
°ack_£í
 = 
	`tsk_°ack_¸óã
()Ë=
NULL
)

630 i‡(((
a_Êags
 & 
TSK_FS_DIR_WALK_FLAG_ALLOC
) == 0) &&

631 ((
a_Êags
 & 
TSK_FS_DIR_WALK_FLAG_UNALLOC
) == 0)) {

632 
a_Êags
 |=

633 (
TSK_FS_DIR_WALK_FLAG_ALLOC
 | 
TSK_FS_DIR_WALK_FLAG_UNALLOC
);

640 i‡((
a_fs
->
li°_öum_«med
 =
NULL
Ë&& (
a_addr
 =a_fs->
roŸ_öum
)

641 && (
a_Êags
 & 
TSK_FS_DIR_WALK_FLAG_RECURSE
)) {

642 
döfo
.
ßve_öum_«med
 = 1;

645 
ªtvÆ
 = 
	`tsk_fs_dú_wÆk_l˛
(
a_fs
, &
döfo
, 
a_addr
, 
a_Êags
,

646 
a_a˘i⁄
, 
a_±r
);

651 i‡((
ªtvÆ
 !
TSK_OK
Ë&& (
döfo
.
ßve_öum_«med
 == 1)) {

652 
	`tsk_li°_‰ì
(
a_fs
->
li°_öum_«med
);

653 
a_fs
->
li°_öum_«med
 = 
NULL
;

656 
	`tsk_°ack_‰ì
(
döfo
.
°ack_£í
);

658  
ªtvÆ
;

659 
	}
}

668 
uöt8_t


669 
	$tsk_fs_dú_make_‹ph™_dú_«me
(
TSK_FS_INFO
 * 
a_fs
,

670 
TSK_FS_NAME
 * 
a_fs_«me
)

672 
	`¢¥ötf
(
a_fs_«me
->
«me
,á_fs_«me->
«me_size
, "$OrphanFiles");

673 i‡(
a_fs_«me
->
shπ_«me_size
 > 0)

674 
a_fs_«me
->
shπ_«me
[0] = '\0';

675 
a_fs_«me
->
mëa_addr
 = 
	`TSK_FS_ORPHANDIR_INUM
(
a_fs
);

676 
a_fs_«me
->
Êags
 = 
TSK_FS_NAME_FLAG_ALLOC
;

677 
a_fs_«me
->
ty≥
 = 
TSK_FS_NAME_TYPE_DIR
;

679 
	}
}

687 
uöt8_t


688 
	$tsk_fs_dú_make_‹ph™_dú_mëa
(
TSK_FS_INFO
 * 
a_fs
,

689 
TSK_FS_META
 * 
a_fs_mëa
)

691 
TSK_DADDR_T
 *
addr_±r
;

693 
a_fs_mëa
->
ty≥
 = 
TSK_FS_META_TYPE_DIR
;

694 
a_fs_mëa
->
mode
 = 0;

695 
a_fs_mëa
->
∆ök
 = 1;

697 
a_fs_mëa
->
Êags
 = (
TSK_FS_META_FLAG_USED
 | 
TSK_FS_META_FLAG_ALLOC
);

698 
a_fs_mëa
->
uid
 =á_fs_mëa->
gid
 = 0;

699 
a_fs_mëa
->
mtime
 =á_fs_mëa->
©ime
 =á_fs_mëa->
˘ime
 =

700 
a_fs_mëa
->
¸time
 = 0;

701 
a_fs_mëa
->
mtime_«no
 =á_fs_mëa->
©ime_«no
 =á_fs_mëa->
˘ime_«no
 =

702 
a_fs_mëa
->
¸time_«no
 = 0;

704 i‡(
a_fs_mëa
->
«me2
 =
NULL
) {

705 i‡((
a_fs_mëa
->
«me2
 = (
TSK_FS_META_NAME_LIST
 *)

706 
	`tsk_mÆloc
((
TSK_FS_META_NAME_LIST
))Ë=
NULL
)

708 
a_fs_mëa
->
«me2
->
√xt
 = 
NULL
;

711 
a_fs_mëa
->
©å_°©e
 = 
TSK_FS_META_ATTR_EMPTY
;

712 i‡(
a_fs_mëa
->
©å
) {

713 
	`tsk_fs_©åli°_m¨kunu£d
(
a_fs_mëa
->
©å
);

716 
a_fs_mëa
->
addr
 = 
	`TSK_FS_ORPHANDIR_INUM
(
a_fs
);

717 
	`°∫˝y
(
a_fs_mëa
->
«me2
->
«me
, "$OrphanFiles",

718 
TSK_FS_META_NAME_LIST_NSIZE
);

719 i‡(
a_fs_mëa
->
c⁄ã¡_Àn
) {

720 
addr_±r
 = (
TSK_DADDR_T
 *Ë
a_fs_mëa
->
c⁄ã¡_±r
;

721 
addr_±r
[0] = 0;

723 
a_fs_mëa
->
size
 = 0;

725 
	}
}

732 
TSK_WALK_RET_ENUM


733 
	$lﬂd_«med_dú_wÆk_cb
(
TSK_FS_FILE
 * 
a_fs_fûe
, c⁄° *
a_∑th
,

734 *
a_±r
)

736  
TSK_WALK_CONT
;

737 
	}
}

745 
TSK_RETVAL_ENUM


746 
	$tsk_fs_dú_lﬂd_öum_«med
(
TSK_FS_INFO
 * 
a_fs
)

748 i‡(
a_fs
->
li°_öum_«med
 !
NULL
)

749  
TSK_OK
;

757 i‡(
	`tsk_fs_dú_wÆk
(
a_fs
,á_fs->
roŸ_öum
,

758 
TSK_FS_NAME_FLAG_UNALLOC
 | 
TSK_FS_DIR_WALK_FLAG_RECURSE
 |

759 
TSK_FS_DIR_WALK_FLAG_NOORPHAN
, 
lﬂd_«med_dú_wÆk_cb
, 
NULL
)) {

760 
	`°∫ˇt
(
tsk_îr°r2
,

762 
TSK_ERRSTR_L
);

763  
TSK_ERR
;

766  
TSK_OK
;

767 
	}
}

772 
TSK_FS_NAME
 *
	mfs_«me
;

773 
TSK_FS_DIR
 *
	mfs_dú
;

774 
TSK_LIST
 *
	m‹ph™_subdú_li°
;

775 } 
	tFIND_ORPHAN_DATA
;

779 
TSK_WALK_RET_ENUM


780 
	$lﬂd_‹ph™_dú_wÆk_cb
(
TSK_FS_FILE
 * 
a_fs_fûe
, c⁄° *
a_∑th
,

781 *
a_±r
)

783 
FIND_ORPHAN_DATA
 *
d©a
 = (FIND_ORPHAN_DATA *Ë
a_±r
;

786 i‡(
a_fs_fûe
->
mëa
)

787 
	`tsk_li°_add
(&
d©a
->
‹ph™_subdú_li°
, 
a_fs_fûe
->
mëa
->
addr
);

789  
TSK_WALK_CONT
;

790 
	}
}

793 
TSK_WALK_RET_ENUM


794 
	$föd_‹ph™_mëa_wÆk_cb
(
TSK_FS_FILE
 * 
a_fs_fûe
, *
a_±r
)

796 
FIND_ORPHAN_DATA
 *
d©a
 = (FIND_ORPHAN_DATA *Ë
a_±r
;

797 
TSK_FS_INFO
 *
fs
 = 
a_fs_fûe
->
fs_öfo
;

802 i‡((
fs
->
li°_öum_«med
)

803 && (
	`tsk_li°_föd
(
fs
->
li°_öum_«med
, 
a_fs_fûe
->
mëa
->
addr
))) {

804  
TSK_WALK_CONT
;

808 i‡(
	`tsk_li°_föd
(
d©a
->
‹ph™_subdú_li°
, 
a_fs_fûe
->
mëa
->
addr
)) {

809  
TSK_WALK_CONT
;

813 i‡(
a_fs_fûe
->
mëa
->
«me2
) {

814 
	`°∫˝y
(
d©a
->
fs_«me
->
«me
, 
a_fs_fûe
->
mëa
->
«me2
->name,

815 
d©a
->
fs_«me
->
«me_size
);

818 
	`¢¥ötf
(
d©a
->
fs_«me
->
«me
, d©a->fs_«me->
«me_size
,

819 "OΩh™Fûe-%" 
PRIuINUM
, 
a_fs_fûe
->
mëa
->
addr
);

821 
d©a
->
fs_«me
->
mëa_addr
 = 
a_fs_fûe
->
mëa
->
addr
;

822 
d©a
->
fs_«me
->
Êags
 = 
TSK_FS_NAME_FLAG_UNALLOC
;

823 
d©a
->
fs_«me
->
ty≥
 = 
TSK_FS_NAME_TYPE_UNDEF
;

825 i‡(
	`tsk_fs_dú_add
(
d©a
->
fs_dú
, d©a->
fs_«me
))

826  
TSK_WALK_ERROR
;

829 i‡(
a_fs_fûe
->
mëa
->
ty≥
 =
TSK_FS_META_TYPE_DIR
) {

831 i‡(
	`tsk_fs_dú_wÆk
(
fs
, 
a_fs_fûe
->
mëa
->
addr
,

832 
TSK_FS_DIR_WALK_FLAG_UNALLOC
 | 
TSK_FS_DIR_WALK_FLAG_RECURSE


833 | 
TSK_FS_DIR_WALK_FLAG_NOORPHAN
, 
lﬂd_‹ph™_dú_wÆk_cb
,

834 
d©a
)) {

835 
	`°∫ˇt
(
tsk_îr°r2
,

837 
TSK_ERRSTR_L
);

838  
TSK_ERR
;

842  
TSK_WALK_CONT
;

843 
	}
}

850 
TSK_RETVAL_ENUM


851 
	$tsk_fs_dú_föd_‹ph™s
(
TSK_FS_INFO
 * 
a_fs
, 
TSK_FS_DIR
 * 
a_fs_dú
)

853 
FIND_ORPHAN_DATA
 
d©a
;

854 
size_t
 
i
;

856 i‡(
a_fs
->
‹ph™_dú
 !
NULL
) {

857 i‡(
	`tsk_fs_dú_c›y
(
a_fs
->
‹ph™_dú
, 
a_fs_dú
))

858  
TSK_ERR
;

859  
TSK_OK
;

862 i‡(
a_fs
->
isOΩh™Hu¡ög
) {

863  
TSK_OK
;

865 
a_fs
->
isOΩh™Hu¡ög
 = 1;

866 
	`mem£t
(&
d©a
, 0, (
FIND_ORPHAN_DATA
));

871 i‡(
a_fs
->
li°_öum_«med
 =
NULL
) {

872 
a_fs
->
isOΩh™Hu¡ög
 = 0;

873 i‡(
	`tsk_fs_dú_lﬂd_öum_«med
(
a_fs
Ë!
TSK_OK
) {

874  
TSK_ERR
;

876 
a_fs
->
isOΩh™Hu¡ög
 = 1;

883 
d©a
.
fs_dú
 = 
a_fs_dú
;

886 i‡((
d©a
.
fs_«me
 = 
	`tsk_fs_«me_Æloc
(256, 0)Ë=
NULL
) {

887 
a_fs
->
isOΩh™Hu¡ög
 = 0;

888  
TSK_ERR
;

891 i‡(
	`tsk_fs_mëa_wÆk
(
a_fs
,á_fs->
fú°_öum
,á_fs->
œ°_öum
,

892 
TSK_FS_META_FLAG_UNALLOC
 | 
TSK_FS_META_FLAG_USED
,

893 
föd_‹ph™_mëa_wÆk_cb
, &
d©a
)) {

894 
a_fs
->
isOΩh™Hu¡ög
 = 0;

895 
	`tsk_fs_«me_‰ì
(
d©a
.
fs_«me
);

896  
TSK_ERR
;

899 
	`tsk_fs_«me_‰ì
(
d©a
.
fs_«me
);

905 
i
 = 0; i < 
a_fs_dú
->
«mes_u£d
; i++) {

906 i‡(
	`tsk_li°_föd
(
d©a
.
‹ph™_subdú_li°
,

907 
a_fs_dú
->
«mes
[
i
].
mëa_addr
)) {

908 i‡(
a_fs_dú
->
«mes_u£d
 > 1) {

909 
	`tsk_fs_«me_c›y
(&
a_fs_dú
->
«mes
[
i
],

910 &
a_fs_dú
->
«mes
[a_fs_dú->
«mes_u£d
 - 1]);

912 
a_fs_dú
->
«mes_u£d
--;

917 i‡((
a_fs
->
‹ph™_dú
 = 
	`tsk_fs_dú_Æloc
◊_fs, 
a_fs_dú
->
«mes_u£d
)Ë=
NULL
) {

918 
a_fs
->
isOΩh™Hu¡ög
 = 0;

919  
TSK_ERR
;

922 i‡(
	`tsk_fs_dú_c›y
(
a_fs_dú
, 
a_fs
->
‹ph™_dú
)) {

923 
	`tsk_fs_dú_˛o£
(
a_fs
->
‹ph™_dú
);

924 
a_fs
->
‹ph™_dú
 = 
NULL
;

925 
a_fs
->
isOΩh™Hu¡ög
 = 0;

926  
TSK_ERR
;

931 i‡((
a_fs_dú
->
fs_fûe
 = 
	`tsk_fs_fûe_Æloc
(
a_fs
)Ë=
NULL
) {

932 
a_fs
->
isOΩh™Hu¡ög
 = 0;

933  
TSK_ERR
;

936 i‡((
a_fs_dú
->
fs_fûe
->
mëa
 =

937 
	`tsk_fs_mëa_Æloc
((
TSK_DADDR_T
))Ë=
NULL
) {

938 
a_fs
->
isOΩh™Hu¡ög
 = 0;

939  
TSK_ERR
;

942 i‡(
	`tsk_fs_dú_make_‹ph™_dú_mëa
(
a_fs
, 
a_fs_dú
->
fs_fûe
->
mëa
)) {

943 
a_fs
->
isOΩh™Hu¡ög
 = 0;

944  
TSK_ERR
;

947 i‡(
d©a
.
‹ph™_subdú_li°
)

948 
	`tsk_li°_‰ì
(
d©a
.
‹ph™_subdú_li°
);

950 
a_fs
->
isOΩh™Hu¡ög
 = 0;

951  
TSK_OK
;

952 
	}
}

	@tsk3/fs/fs_file.c

17 
	~"tsk_fs_i.h
"

26 
TSK_FS_FILE
 *

27 
	$tsk_fs_fûe_Æloc
(
TSK_FS_INFO
 * 
a_fs
)

29 
TSK_FS_FILE
 *
fs_fûe
;

31 
fs_fûe
 = (
TSK_FS_FILE
 *Ë
	`tsk_mÆloc
((TSK_FS_FILE));

32 i‡(
fs_fûe
 =
NULL
)

33  
NULL
;

34 
fs_fûe
->
fs_öfo
 = 
a_fs
;

35 
fs_fûe
->
èg
 = 
TSK_FS_FILE_TAG
;

36  
fs_fûe
;

37 
	}
}

45 
	$tsk_fs_fûe_ª£t
(
TSK_FS_FILE
 * 
a_fs_fûe
)

47 i‡(
a_fs_fûe
->
mëa
)

48 
	`tsk_fs_mëa_ª£t
(
a_fs_fûe
->
mëa
);

49 i‡(
a_fs_fûe
->
«me
)

50 
	`tsk_fs_«me_ª£t
(
a_fs_fûe
->
«me
);

51 
	}
}

60 
	$tsk_fs_fûe_˛o£
(
TSK_FS_FILE
 * 
a_fs_fûe
)

62 i‡((
a_fs_fûe
 =
NULL
Ë|| (a_fs_fûe->
èg
 !
TSK_FS_FILE_TAG
))

65 
a_fs_fûe
->
èg
 = 0;

67 i‡(
a_fs_fûe
->
mëa
) {

68 
	`tsk_fs_mëa_˛o£
(
a_fs_fûe
->
mëa
);

69 
a_fs_fûe
->
mëa
 = 
NULL
;

71 i‡(
a_fs_fûe
->
«me
) {

72 
	`tsk_fs_«me_‰ì
(
a_fs_fûe
->
«me
);

73 
a_fs_fûe
->
«me
 = 
NULL
;

76 
	`‰ì
(
a_fs_fûe
);

77 
	}
}

98 
TSK_FS_FILE
 *

99 
	$tsk_fs_fûe_›í_mëa
(
TSK_FS_INFO
 * 
a_fs
,

100 
TSK_FS_FILE
 * 
a_fs_fûe
, 
TSK_INUM_T
 
a_addr
)

102 
TSK_FS_FILE
 *
fs_fûe
;

104 i‡((
a_fs
 =
NULL
Ë|| (a_fs->
èg
 !
TSK_FS_INFO_TAG
)) {

105 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

106 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

108  
NULL
;

111 
fs_fûe
 = 
a_fs_fûe
;

112 i‡(
fs_fûe
 =
NULL
) {

113 i‡((
fs_fûe
 = 
	`tsk_fs_fûe_Æloc
(
a_fs
)Ë=
NULL
)

114  
NULL
;

119 i‡(
fs_fûe
->
«me
) {

120 
	`tsk_fs_«me_‰ì
(
fs_fûe
->
«me
);

121 
fs_fûe
->
«me
 = 
NULL
;

125 
	`tsk_fs_fûe_ª£t
(
fs_fûe
);

128 i‡(
a_fs
->
	`fûe_add_mëa
◊_fs, 
fs_fûe
, 
a_addr
)) {

129 i‡(
a_fs_fûe
 =
NULL
)

130 
	`‰ì
(
fs_fûe
);

131  
NULL
;

133  
fs_fûe
;

134 
	}
}

148 
TSK_FS_FILE
 *

149 
	$tsk_fs_fûe_›í
(
TSK_FS_INFO
 * 
a_fs
,

150 
TSK_FS_FILE
 * 
a_fs_fûe
, c⁄° *
a_∑th
)

152 
TSK_INUM_T
 
öum
;

153 
öt8_t
 
ªtvÆ
;

154 
TSK_FS_FILE
 *
fs_fûe
 = 
NULL
;

155 
TSK_FS_NAME
 *
fs_«me
 = 
NULL
;

157 i‡((
a_fs
 =
NULL
Ë|| (a_fs->
èg
 !
TSK_FS_INFO_TAG
)) {

158 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

159 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

161  
NULL
;

165 i‡((
fs_«me
 = 
	`tsk_fs_«me_Æloc
(128, 32)Ë=
NULL
) {

166  
NULL
;

169 
ªtvÆ
 = 
	`tsk_fs_∑th2öum
(
a_fs
, 
a_∑th
, &
öum
, 
fs_«me
);

170 i‡(
ªtvÆ
 == -1) {

171 
	`tsk_fs_«me_‰ì
(
fs_«me
);

172  
NULL
;

174 i‡(
ªtvÆ
 == 1) {

175 
	`tsk_fs_«me_‰ì
(
fs_«me
);

176 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

177 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

178 "tsk_fs_fûe_›í:Ö©hÇŸ found: %s", 
a_∑th
);

179  
NULL
;

183 
fs_fûe
 = 
	`tsk_fs_fûe_›í_mëa
(
a_fs
, 
a_fs_fûe
, 
öum
);

184 i‡(
fs_fûe
) {

186 
fs_fûe
->
«me
 = 
fs_«me
;

189 
	`tsk_fs_«me_‰ì
(
fs_«me
);

192  
fs_fûe
;

193 
	}
}

204 
	$tsk_fs_fûe_©å_check
(
TSK_FS_FILE
 * 
a_fs_fûe
, *
a_func
)

206 
TSK_FS_INFO
 *
fs
;

208 i‡((
a_fs_fûe
 =
NULL
Ë|| (a_fs_fûe->
mëa
 == NULL)

209 || (
a_fs_fûe
->
fs_öfo
 =
NULL
)) {

210 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

211 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

212 "%s: cÆÀd wôh NULLÖoöãrs", 
a_func
);

215 i‡(
a_fs_fûe
->
mëa
->
èg
 !
TSK_FS_META_TAG
) {

216 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

217 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

218 "%s: cÆÀd wôh u«Œoˇãd såu˘uªs", 
a_func
);

221 
fs
 = 
a_fs_fûe
->
fs_öfo
;

224 i‡(
a_fs_fûe
->
mëa
->
©å_°©e
 =
TSK_FS_META_ATTR_ERROR
) {

225 
tsk_î∫o
 = 
TSK_ERR_FS_INODE_COR
;

226 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

227 "%s: cÆÀd f‹ fûêwôh c‹ru± d©a", 
a_func
);

230 i‡((
a_fs_fûe
->
mëa
->
©å_°©e
 !
TSK_FS_META_ATTR_STUDIED
)

231 || (
a_fs_fûe
->
mëa
->
©å
 =
NULL
)) {

232 i‡(
fs
->
	`lﬂd_©ås
(
a_fs_fûe
)) {

237 
	}
}

246 
	$tsk_fs_fûe_©å_gësize
(
TSK_FS_FILE
 * 
a_fs_fûe
)

248 i‡(
	`tsk_fs_fûe_©å_check
(
a_fs_fûe
, "tsk_fs_file_attr_getsize"))

251  
	`tsk_fs_©åli°_gë_Àn
(
a_fs_fûe
->
mëa
->
©å
);

252 
	}
}

260 c⁄° 
TSK_FS_ATTR
 *

261 
	$tsk_fs_fûe_©å_gë_idx
(
TSK_FS_FILE
 * 
a_fs_fûe
, 
a_idx
)

263 i‡(
	`tsk_fs_fûe_©å_check
(
a_fs_fûe
, "tsk_fs_file_attr_get_idx"))

264  
NULL
;

266  
	`tsk_fs_©åli°_gë_idx
(
a_fs_fûe
->
mëa
->
©å
, 
a_idx
);

267 
	}
}

274 c⁄° 
TSK_FS_ATTR
 *

275 
	$tsk_fs_fûe_©å_gë
(
TSK_FS_FILE
 * 
a_fs_fûe
)

277 
TSK_FS_ATTR_TYPE_ENUM
 
ty≥
;

278 
TSK_FS_INFO
 *
fs
;

280 i‡(
	`tsk_fs_fûe_©å_check
(
a_fs_fûe
, "tsk_fs_file_attr_get"))

281  
NULL
;

284 
fs
 = 
a_fs_fûe
->
fs_öfo
;

285 
ty≥
 = 
fs
->
	`gë_deÁu…_©å_ty≥
(
a_fs_fûe
);

287  
	`tsk_fs_©åli°_gë
(
a_fs_fûe
->
mëa
->
©å
, 
ty≥
);

288 
	}
}

298 c⁄° 
TSK_FS_ATTR
 *

299 
	$tsk_fs_fûe_©å_gë_ty≥
(
TSK_FS_FILE
 * 
a_fs_fûe
,

300 
TSK_FS_ATTR_TYPE_ENUM
 
a_ty≥
, 
uöt16_t
 
a_id
, 
uöt8_t
 
a_id_u£d
)

302 i‡(
	`tsk_fs_fûe_©å_check
(
a_fs_fûe
, "tsk_fs_file_attr_get_type"))

303  
NULL
;

305 i‡(
a_id_u£d
)

306  
	`tsk_fs_©åli°_gë_id
(
a_fs_fûe
->
mëa
->
©å
, 
a_ty≥
, 
a_id
);

308  
	`tsk_fs_©åli°_gë
(
a_fs_fûe
->
mëa
->
©å
, 
a_ty≥
);

309 
	}
}

329 
uöt8_t


330 
	$tsk_fs_fûe_wÆk_ty≥
(
TSK_FS_FILE
 * 
a_fs_fûe
,

331 
TSK_FS_ATTR_TYPE_ENUM
 
a_ty≥
, 
uöt16_t
 
a_id
,

332 
TSK_FS_FILE_WALK_FLAG_ENUM
 
a_Êags
, 
TSK_FS_FILE_WALK_CB
 
a_a˘i⁄
,

333 *
a_±r
)

335 c⁄° 
TSK_FS_ATTR
 *
fs_©å
;

336 
TSK_FS_INFO
 *
fs
;

339 
	`tsk_îr‹_ª£t
();

342 i‡((
a_fs_fûe
 =
NULL
Ë|| (a_fs_fûe->
mëa
 == NULL)

343 || (
a_fs_fûe
->
fs_öfo
 =
NULL
)) {

344 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

345 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

349 i‡((
a_fs_fûe
->
fs_öfo
->
èg
 !
TSK_FS_INFO_TAG
)

350 || (
a_fs_fûe
->
mëa
->
èg
 !
TSK_FS_META_TAG
)) {

351 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

352 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

356 
fs
 = 
a_fs_fûe
->
fs_öfo
;

358 i‡(
tsk_vîbo£
)

359 
	`tsk_Ârötf
(
°dîr
,

360 "tsk_fs_fûe_wÆk: Pro˚ssög fûê%" 
PRIuINUM
 "\n",

361 
a_fs_fûe
->
mëa
->
addr
);

363 i‡((
fs_©å
 =

364 
	`tsk_fs_fûe_©å_gë_ty≥
(
a_fs_fûe
, 
a_ty≥
, 
a_id
,

365 (
a_Êags
 & 
TSK_FS_FILE_WALK_FLAG_NOID
Ë? 0 : 1)Ë=
NULL
)

368  
	`tsk_fs_©å_wÆk
(
fs_©å
, 
a_Êags
, 
a_a˘i⁄
, 
a_±r
);

369 
	}
}

386 
uöt8_t


387 
	$tsk_fs_fûe_wÆk
(
TSK_FS_FILE
 * 
a_fs_fûe
,

388 
TSK_FS_FILE_WALK_FLAG_ENUM
 
a_Êags
,

389 
TSK_FS_FILE_WALK_CB
 
a_a˘i⁄
, *
a_±r
)

391 c⁄° 
TSK_FS_ATTR
 *
fs_©å
;

392 
TSK_FS_INFO
 *
fs
;

395 
	`tsk_îr‹_ª£t
();

398 i‡((
a_fs_fûe
 =
NULL
Ë|| (a_fs_fûe->
mëa
 == NULL)

399 || (
a_fs_fûe
->
fs_öfo
 =
NULL
)) {

400 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

401 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

405 i‡((
a_fs_fûe
->
fs_öfo
->
èg
 !
TSK_FS_INFO_TAG
)

406 || (
a_fs_fûe
->
mëa
->
èg
 !
TSK_FS_META_TAG
)) {

407 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

408 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

412 
fs
 = 
a_fs_fûe
->
fs_öfo
;

414 i‡(
tsk_vîbo£
)

415 
	`tsk_Ârötf
(
°dîr
,

416 "tsk_fs_fûe_wÆk: Pro˚ssög fûê%" 
PRIuINUM
 "\n",

417 
a_fs_fûe
->
mëa
->
addr
);

419 i‡((
fs_©å
 = 
	`tsk_fs_fûe_©å_gë
(
a_fs_fûe
)Ë=
NULL
)

422  
	`tsk_fs_©å_wÆk
(
fs_©å
, 
a_Êags
, 
a_a˘i⁄
, 
a_±r
);

423 
	}
}

441 
ssize_t


442 
	$tsk_fs_fûe_ªad_ty≥
(
TSK_FS_FILE
 * 
a_fs_fûe
,

443 
TSK_FS_ATTR_TYPE_ENUM
 
a_ty≥
, 
uöt16_t
 
a_id
, 
TSK_OFF_T
 
a_off£t
,

444 *
a_buf
, 
size_t
 
a_Àn
, 
TSK_FS_FILE_READ_FLAG_ENUM
 
a_Êags
)

446 
TSK_FS_INFO
 *
fs
;

447 c⁄° 
TSK_FS_ATTR
 *
fs_©å
;

450 
	`tsk_îr‹_ª£t
();

453 i‡((
a_fs_fûe
 =
NULL
Ë|| (a_fs_fûe->
mëa
 == NULL)

454 || (
a_fs_fûe
->
fs_öfo
 =
NULL
)) {

455 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

456 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

460 i‡((
a_fs_fûe
->
fs_öfo
->
èg
 !
TSK_FS_INFO_TAG
)

461 || (
a_fs_fûe
->
mëa
->
èg
 !
TSK_FS_META_TAG
)) {

462 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

463 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

467 
fs
 = 
a_fs_fûe
->
fs_öfo
;

469 i‡((
fs_©å
 =

470 
	`tsk_fs_fûe_©å_gë_ty≥
(
a_fs_fûe
, 
a_ty≥
, 
a_id
,

471 (
a_Êags
 & 
TSK_FS_FILE_READ_FLAG_NOID
Ë? 0 : 1)Ë=
NULL
) {

475  
	`tsk_fs_©å_ªad
(
fs_©å
, 
a_off£t
, 
a_buf
, 
a_Àn
, 
a_Êags
);

476 
	}
}

491 
ssize_t


492 
	$tsk_fs_fûe_ªad
(
TSK_FS_FILE
 * 
a_fs_fûe
,

493 
TSK_OFF_T
 
a_off£t
, *
a_buf
, 
size_t
 
a_Àn
,

494 
TSK_FS_FILE_READ_FLAG_ENUM
 
a_Êags
)

496 c⁄° 
TSK_FS_ATTR
 *
fs_©å
;

498 i‡((
a_fs_fûe
 =
NULL
Ë|| (a_fs_fûe->
fs_öfo
 == NULL)) {

499 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

500 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

505 i‡((
fs_©å
 = 
	`tsk_fs_fûe_©å_gë
(
a_fs_fûe
)Ë=
NULL
) {

509  
	`tsk_fs_©å_ªad
(
fs_©å
, 
a_off£t
, 
a_buf
, 
a_Àn
, 
a_Êags
);

510 
	}
}

519 
uöt8_t


520 
	$tsk_fs_fûe_gë_ow√r_sid
(
TSK_FS_FILE
 * 
a_fs_fûe
, **
sid_°r
)

522 i‡((
a_fs_fûe
 =
NULL
Ë|| (a_fs_fûe->
fs_öfo
 == NULL)

523 || (
a_fs_fûe
->
mëa
 =
NULL
Ë|| (
sid_°r
 == NULL)) {

524 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

525 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

532 i‡(!
a_fs_fûe
->
fs_öfo
->
‰ód_ow√r_sid
) {

533 
	`tsk_îr‹_ª£t
();

534 
tsk_î∫o
 = 
TSK_ERR_FS_UNSUPFUNC
;

535 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
, "Unsupported function");

539  
a_fs_fûe
->
fs_öfo
->
	`‰ód_ow√r_sid
◊_fs_fûe, 
sid_°r
);

540 
	}
}

	@tsk3/fs/fs_inode.c

20 
	~"tsk_fs_i.h
"

25 
	gtsk_fs_mëa_ty≥_°r
[
TSK_FS_META_TYPE_STR_MAX
][2] =

36 
TSK_FS_META
 *

37 
	$tsk_fs_mëa_Æloc
(
size_t
 
a_buf_Àn
)

39 
TSK_FS_META
 *
fs_mëa
;

41 i‡((
fs_mëa
 =

42 (
TSK_FS_META
 *Ë
	`tsk_mÆloc
((TSK_FS_META))Ë=
NULL
)

43  
NULL
;

45 
fs_mëa
->
©å_°©e
 = 
TSK_FS_META_ATTR_EMPTY
;

47 i‡(
a_buf_Àn
 > 0) {

48 i‡((
fs_mëa
->
c⁄ã¡_±r
 = 
	`tsk_mÆloc
(
a_buf_Àn
)Ë=
NULL
) {

49 
	`‰ì
(
fs_mëa
);

50  
NULL
;

52 
fs_mëa
->
c⁄ã¡_Àn
 = 
a_buf_Àn
;

56 
fs_mëa
->
èg
 = 
TSK_FS_META_TAG
;

58  (
fs_mëa
);

59 
	}
}

72 
TSK_FS_META
 *

73 
	$tsk_fs_mëa_ªÆloc
(
TSK_FS_META
 * 
a_fs_mëa
, 
size_t
 
a_buf_Àn
)

75 i‡(
a_fs_mëa
->
c⁄ã¡_Àn
 !
a_buf_Àn
) {

76 
a_fs_mëa
->
c⁄ã¡_Àn
 = 
a_buf_Àn
;

77 
a_fs_mëa
->
c⁄ã¡_±r
 =

78 
	`tsk_ªÆloc
((*Ë
a_fs_mëa
->
c⁄ã¡_±r
, 
a_buf_Àn
);

79 i‡(
a_fs_mëa
->
c⁄ã¡_±r
 =
NULL
) {

80  
NULL
;

83  (
a_fs_mëa
);

84 
	}
}

94 
	$tsk_fs_mëa_˛o£
(
TSK_FS_META
 * 
fs_mëa
)

96 
TSK_FS_META_NAME_LIST
 *
fs_«me
, *
fs_«me2
;

98 i‡((!
fs_mëa
Ë|| (fs_mëa->
èg
 !
TSK_FS_META_TAG
))

102 
fs_mëa
->
èg
 = 0;

104 i‡(
fs_mëa
->
c⁄ã¡_±r
)

105 
	`‰ì
((*Ë
fs_mëa
->
c⁄ã¡_±r
);

106 
fs_mëa
->
c⁄ã¡_±r
 = 
NULL
;

107 
fs_mëa
->
c⁄ã¡_Àn
 = 0;

109 i‡(
fs_mëa
->
©å
)

110 
	`tsk_fs_©åli°_‰ì
(
fs_mëa
->
©å
);

111 
fs_mëa
->
©å
 = 
NULL
;

113 i‡(
fs_mëa
->
lök
)

114 
	`‰ì
(
fs_mëa
->
lök
);

115 
fs_mëa
->
lök
 = 
NULL
;

117 
fs_«me
 = 
fs_mëa
->
«me2
;

118 
fs_«me
) {

119 
fs_«me2
 = 
fs_«me
->
√xt
;

120 
fs_«me
->
√xt
 = 
NULL
;

121 
	`‰ì
(
fs_«me
);

122 
fs_«me
 = 
fs_«me2
;

125 
	`‰ì
((*Ë
fs_mëa
);

126 
	}
}

133 
	$tsk_fs_mëa_ª£t
(
TSK_FS_META
 * 
a_fs_mëa
)

135 *
c⁄ã¡_±r_tmp
;

136 
size_t
 
c⁄ã¡_Àn_tmp
;

137 
TSK_FS_ATTRLIST
 *
©å_tmp
;

138 
TSK_FS_META_NAME_LIST
 *
«me2_tmp
;

139 *
lök_tmp
;

142 
c⁄ã¡_±r_tmp
 = 
a_fs_mëa
->
c⁄ã¡_±r
;

143 
c⁄ã¡_Àn_tmp
 = 
a_fs_mëa
->
c⁄ã¡_Àn
;

144 
©å_tmp
 = 
a_fs_mëa
->
©å
;

145 
«me2_tmp
 = 
a_fs_mëa
->
«me2
;

146 
lök_tmp
 = 
a_fs_mëa
->
lök
;

149 
	`mem£t
(
a_fs_mëa
, 0, (
TSK_FS_META
));

150 
a_fs_mëa
->
èg
 = 
TSK_FS_META_TAG
;

153 
a_fs_mëa
->
c⁄ã¡_±r
 = 
c⁄ã¡_±r_tmp
;

154 
a_fs_mëa
->
c⁄ã¡_Àn
 = 
c⁄ã¡_Àn_tmp
;

156 
a_fs_mëa
->
©å
 = 
©å_tmp
;

157 
a_fs_mëa
->
©å_°©e
 = 
TSK_FS_META_ATTR_EMPTY
;

159 
a_fs_mëa
->
«me2
 = 
«me2_tmp
;

161 
a_fs_mëa
->
lök
 = 
lök_tmp
;

162 i‡(
a_fs_mëa
->
lök
)

163 
a_fs_mëa
->
lök
[0] = '\0';

166 i‡(
a_fs_mëa
->
«me2
) {

167 
«me2_tmp
 = 
a_fs_mëa
->
«me2
;

168 
«me2_tmp
) {

169 
«me2_tmp
->
«me
[0] = '\0';

170 
«me2_tmp
->
∑r_öode
 = 0;

171 
«me2_tmp
->
∑r_£q
 = 0;

172 
«me2_tmp
 =Çame2_tmp->
√xt
;

176 
	}
}

192 
uöt8_t


193 
	$tsk_fs_mëa_wÆk
(
TSK_FS_INFO
 * 
a_fs
, 
TSK_INUM_T
 
a_°¨t
,

194 
TSK_INUM_T
 
a_íd
, 
TSK_FS_META_FLAG_ENUM
 
a_Êags
,

195 
TSK_FS_META_WALK_CB
 
a_cb
, *
a_±r
)

197 i‡((
a_fs
 =
NULL
Ë|| (a_fs->
èg
 !
TSK_FS_INFO_TAG
))

200  
a_fs
->
	`öode_wÆk
◊_fs, 
a_°¨t
, 
a_íd
, 
a_Êags
, 
a_cb
, 
a_±r
);

201 
	}
}

	@tsk3/fs/fs_io.c

25 
	~<î∫o.h
>

26 
	~"tsk_fs_i.h
"

38 
ssize_t


39 
	$tsk_fs_ªad
(
TSK_FS_INFO
 * 
a_fs
, 
TSK_OFF_T
 
a_off
, *
a_buf
, 
size_t
 
a_Àn
)

41 
TSK_OFF_T
 
off
;

46 i‡((
a_fs
->
œ°_block_a˘
 > 0)

47 && ((
TSK_DADDR_T
Ë
a_off
 >=

48 ((
a_fs
->
œ°_block_a˘
 + 1Ë*á_fs->
block_size
))) {

49 
	`tsk_îr‹_ª£t
();

50 
tsk_î∫o
 = 
TSK_ERR_FS_READ
;

51 i‡((
TSK_DADDR_T
Ë
a_off
 <

52 ((
a_fs
->
œ°_block
 + 1Ë*á_fs->
block_size
))

53 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

54 "tsk_fs_ªad: Off£àmissög i¿∑πü»image: %" 
PRIuDADDR


55 ")", 
a_off
);

57 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

59 
PRIuDADDR
 ")", 
a_off
);

63 
off
 = 
a_off
 + 
a_fs
->
off£t
;

64  
	`tsk_img_ªad
(
a_fs
->
img_öfo
, 
off
, 
a_buf
, 
a_Àn
);

65 
	}
}

81 
ssize_t


82 
	$tsk_fs_ªad_block
(
TSK_FS_INFO
 * 
a_fs
, 
TSK_DADDR_T
 
a_addr
, *
a_buf
,

83 
size_t
 
a_Àn
)

85 i‡(
a_Àn
 % 
a_fs
->
block_size
) {

86 
	`tsk_îr‹_ª£t
();

87 
tsk_î∫o
 = 
TSK_ERR_FS_READ
;

88 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

89 "tsk_fs_ªad_block:Üígth %" 
PRIuSIZE
 ""

90 "ÇŸá mu…ùÀ o‡%d", 
a_Àn
, 
a_fs
->
block_size
);

94 i‡(
a_addr
 > 
a_fs
->
œ°_block_a˘
) {

95 
	`tsk_îr‹_ª£t
();

96 
tsk_î∫o
 = 
TSK_ERR_FS_READ
;

97 i‡(
a_addr
 <
a_fs
->
œ°_block
)

98 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

100 
PRIuDADDR
 ")", 
a_addr
);

102 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

104 
PRIuDADDR
 ")", 
a_addr
);

108  
	`tsk_img_ªad
(
a_fs
->
img_öfo
,

109 
a_fs
->
off£t
 + (
TSK_OFF_T
Ë
a_addr
 *á_fs->
block_size
, 
a_buf
,

110 
a_Àn
);

111 
	}
}

	@tsk3/fs/fs_load.c

15 
	~"tsk_fs_i.h
"

22 
TSK_WALK_RET_ENUM


23 
	$tsk_fs_lﬂd_fûe_a˘i⁄
(
TSK_FS_FILE
 * 
fs_fûe
, 
TSK_OFF_T
 
a_off
,

24 
TSK_DADDR_T
 
addr
, *
buf
, 
size_t
 
size
, 
TSK_FS_BLOCK_FLAG_ENUM
 
Êags
,

25 *
±r
)

27 
TSK_FS_LOAD_FILE
 *
buf1
 = (TSK_FS_LOAD_FILE *Ë
±r
;

28 
size_t
 
˝_size
;

30 i‡(
size
 > 
buf1
->
À·
)

31 
˝_size
 = 
buf1
->
À·
;

33 
˝_size
 = 
size
;

35 
	`mem˝y
(
buf1
->
cur
, 
buf
, 
˝_size
);

36 
buf1
->
À·
 -
˝_size
;

37 
buf1
->
cur
 = (*Ë((
uöçå_t
Ëbuf1->cu∏+ 
˝_size
);

39 i‡(
buf1
->
À·
 > 0)

40  
TSK_WALK_CONT
;

42  
TSK_WALK_STOP
;

43 
	}
}

	@tsk3/fs/fs_name.c

26 
	~"tsk_fs_i.h
"

28 
	gtsk_fs_«me_ty≥_°r
[
TSK_FS_NAME_TYPE_STR_MAX
][2] =

36 
TSK_FS_NAME
 *

37 
	$tsk_fs_«me_Æloc
(
size_t
 
n‹m_«mñí
, size_à
shπ_«mñí
)

39 
TSK_FS_NAME
 *
fs_«me
;

40 
fs_«me
 = (
TSK_FS_NAME
 *Ë
	`tsk_mÆloc
((*fs_name));

41 i‡(
fs_«me
 =
NULL
)

42  
NULL
;

44 
fs_«me
->
«me
 = (*Ë
	`tsk_mÆloc
(
n‹m_«mñí
 + 1);

45 i‡(
fs_«me
->
«me
 =
NULL
) {

46 
	`‰ì
(
fs_«me
);

47  
NULL
;

49 
fs_«me
->
«me_size
 = 
n‹m_«mñí
;

51 
fs_«me
->
Êags
 = 0;

53 
fs_«me
->
shπ_«me_size
 = 
shπ_«mñí
;

54 i‡(
shπ_«mñí
 == 0) {

55 
fs_«me
->
shπ_«me
 = 
NULL
;

58 
fs_«me
->
shπ_«me
 = (*Ë
	`tsk_mÆloc
(
shπ_«mñí
 + 1);

59 i‡(
fs_«me
->
shπ_«me
 =
NULL
) {

60 
	`‰ì
(
fs_«me
->
«me
);

61 
	`‰ì
(
fs_«me
);

62  
NULL
;

66 
fs_«me
->
ty≥
 = 
TSK_FS_NAME_TYPE_UNDEF
;

67 
fs_«me
->
èg
 = 
TSK_FS_NAME_TAG
;

68  
fs_«me
;

69 
	}
}

76 
uöt8_t


77 
	$tsk_fs_«me_ªÆloc
(
TSK_FS_NAME
 * 
fs_«me
, 
size_t
 
«mñí
)

79 i‡((
fs_«me
 =
NULL
Ë|| (fs_«me->
èg
 !
TSK_FS_NAME_TAG
))

82 i‡(
fs_«me
->
«me_size
 >
«mñí
)

85 
fs_«me
->
«me
 = (*Ë
	`tsk_ªÆloc
(fs_«me->«me, 
«mñí
 + 1);

86 i‡(
fs_«me
->
«me
 =
NULL
) {

87 
fs_«me
->
«me_size
 = 0;

91 
fs_«me
->
ty≥
 = 
TSK_FS_NAME_TYPE_UNDEF
;

92 
fs_«me
->
«me_size
 = 
«mñí
;

95 
	}
}

103 
	$tsk_fs_«me_ª£t
(
TSK_FS_NAME
 * 
a_fs_«me
)

105 i‡(
a_fs_«me
->
«me
)

106 
a_fs_«me
->
«me
[0] = '\0';

108 i‡(
a_fs_«me
->
shπ_«me
)

109 
a_fs_«me
->
shπ_«me
[0] = '\0';

111 
a_fs_«me
->
mëa_addr
 = 0;

112 
a_fs_«me
->
mëa_£q
 = 0;

113 
a_fs_«me
->
ty≥
 = 0;

114 
a_fs_«me
->
Êags
 = 0;

115 
	}
}

121 
	$tsk_fs_«me_‰ì
(
TSK_FS_NAME
 * 
fs_«me
)

123 i‡((!
fs_«me
Ë|| (fs_«me->
èg
 !
TSK_FS_NAME_TAG
))

126 i‡(
fs_«me
->
«me
) {

127 
	`‰ì
(
fs_«me
->
«me
);

128 
fs_«me
->
«me
 = 
NULL
;

130 i‡(
fs_«me
->
shπ_«me
) {

131 
	`‰ì
(
fs_«me
->
shπ_«me
);

132 
fs_«me
->
shπ_«me
 = 
NULL
;

135 
	`‰ì
(
fs_«me
);

136 
	}
}

145 
uöt8_t


146 
	$tsk_fs_«me_c›y
(
TSK_FS_NAME
 * 
a_fs_«me_to
,

147 c⁄° 
TSK_FS_NAME
 * 
a_fs_«me_‰om
)

149 i‡((
a_fs_«me_to
 =
NULL
Ë|| (
a_fs_«me_‰om
 == NULL))

153 i‡(
a_fs_«me_‰om
->
«me
) {

155 i‡(
	`°æí
(
a_fs_«me_‰om
->
«me
Ë>
a_fs_«me_to
->
«me_size
) {

156 
a_fs_«me_to
->
«me_size
 = 
	`°æí
(
a_fs_«me_‰om
->
«me
) + 16;

157 
a_fs_«me_to
->
«me
 =

158 (*Ë
	`tsk_ªÆloc
(
a_fs_«me_to
->
«me
,

159 
a_fs_«me_to
->
«me_size
);

160 i‡(
a_fs_«me_to
->
«me
 =
NULL
)

163 
	`°∫˝y
(
a_fs_«me_to
->
«me
, 
a_fs_«me_‰om
->name,

164 
a_fs_«me_to
->
«me_size
);

167 i‡(
a_fs_«me_to
->
«me_size
 > 0)

168 
a_fs_«me_to
->
«me
[0] = '\0';

170 
a_fs_«me_to
->
«me
 = 
NULL
;

174 i‡(
a_fs_«me_‰om
->
shπ_«me
) {

175 i‡(
	`°æí
(
a_fs_«me_‰om
->
shπ_«me
) >=

176 
a_fs_«me_to
->
shπ_«me_size
) {

177 
a_fs_«me_to
->
shπ_«me_size
 =

178 
	`°æí
(
a_fs_«me_‰om
->
shπ_«me
) + 16;

179 
a_fs_«me_to
->
shπ_«me
 =

180 (*Ë
	`tsk_ªÆloc
(
a_fs_«me_to
->
shπ_«me
,

181 
a_fs_«me_to
->
shπ_«me_size
);

182 i‡(
a_fs_«me_to
->
shπ_«me
 =
NULL
)

185 
	`°∫˝y
(
a_fs_«me_to
->
shπ_«me
, 
a_fs_«me_‰om
->shrt_name,

186 
a_fs_«me_to
->
shπ_«me_size
);

189 i‡(
a_fs_«me_to
->
shπ_«me_size
 > 0)

190 
a_fs_«me_to
->
shπ_«me
[0] = '\0';

192 
a_fs_«me_to
->
shπ_«me
 = 
NULL
;

195 
a_fs_«me_to
->
mëa_addr
 = 
a_fs_«me_‰om
->meta_addr;

196 
a_fs_«me_to
->
mëa_£q
 = 
a_fs_«me_‰om
->meta_seq;

197 
a_fs_«me_to
->
ty≥
 = 
a_fs_«me_‰om
->type;

198 
a_fs_«me_to
->
Êags
 = 
a_fs_«me_‰om
->flags;

201 
	}
}

219 
uöt8_t


220 
	$tsk_fs_mëa_make_ls
(
TSK_FS_META
 * 
a_fs_mëa
, *
a_buf
, 
size_t
 
a_Àn
)

222 i‡(
a_Àn
 < 12) {

227 
	`°r˝y
(
a_buf
, "----------");

229 i‡(
a_fs_mëa
->
ty≥
 < 
TSK_FS_META_TYPE_STR_MAX
)

230 
a_buf
[0] = 
tsk_fs_mëa_ty≥_°r
[
a_fs_mëa
->
ty≥
][0];

233 i‡(
a_fs_mëa
->
mode
 & 
TSK_FS_META_MODE_IRUSR
)

234 
a_buf
[1] = 'r';

235 i‡(
a_fs_mëa
->
mode
 & 
TSK_FS_META_MODE_IWUSR
)

236 
a_buf
[2] = 'w';

238 i‡(
a_fs_mëa
->
mode
 & 
TSK_FS_META_MODE_ISUID
) {

239 i‡(
a_fs_mëa
->
mode
 & 
TSK_FS_META_MODE_IXUSR
)

240 
a_buf
[3] = 's';

242 
a_buf
[3] = 'S';

244 i‡(
a_fs_mëa
->
mode
 & 
TSK_FS_META_MODE_IXUSR
)

245 
a_buf
[3] = 'x';

248 i‡(
a_fs_mëa
->
mode
 & 
TSK_FS_META_MODE_IRGRP
)

249 
a_buf
[4] = 'r';

250 i‡(
a_fs_mëa
->
mode
 & 
TSK_FS_META_MODE_IWGRP
)

251 
a_buf
[5] = 'w';

253 i‡(
a_fs_mëa
->
mode
 & 
TSK_FS_META_MODE_ISGID
) {

254 i‡(
a_fs_mëa
->
mode
 & 
TSK_FS_META_MODE_IXGRP
)

255 
a_buf
[6] = 's';

257 
a_buf
[6] = 'S';

259 i‡(
a_fs_mëa
->
mode
 & 
TSK_FS_META_MODE_IXGRP
)

260 
a_buf
[6] = 'x';

263 i‡(
a_fs_mëa
->
mode
 & 
TSK_FS_META_MODE_IROTH
)

264 
a_buf
[7] = 'r';

265 i‡(
a_fs_mëa
->
mode
 & 
TSK_FS_META_MODE_IWOTH
)

266 
a_buf
[8] = 'w';

269 i‡(
a_fs_mëa
->
mode
 & 
TSK_FS_META_MODE_ISVTX
) {

270 i‡(
a_fs_mëa
->
mode
 & 
TSK_FS_META_MODE_IXOTH
)

271 
a_buf
[9] = 't';

273 
a_buf
[9] = 'T';

275 i‡(
a_fs_mëa
->
mode
 & 
TSK_FS_META_MODE_IXOTH
)

276 
a_buf
[9] = 'x';

278 
	}
}

282 
	$tsk_fs_¥öt_time
(
FILE
 * 
hFûe
, 
time_t
 
time
)

284 i‡(
time
 <= 0) {

285 
	`tsk_Ârötf
(
hFûe
, "0000-00-00 00:00:00 (UTC)");

288 
tm
 *
tmTime
 = 
	`loˇ…ime
(&
time
);

290 
	`tsk_Ârötf
(
hFûe
, "%.4d-%.2d-%.2d %.2d:%.2d:%.2d (%s)",

291 (Ë
tmTime
->
tm_yór
 + 1900,

292 (Ë
tmTime
->
tm_m⁄
 + 1, (ËtmTime->
tm_mday
,

293 
tmTime
->
tm_hour
,

294 (Ë
tmTime
->
tm_mö
, (ËtmTime->
tm_£c
,

295 
tz«me
[(
tmTime
->
tm_isd°
 == 0) ? 0 : 1]);

297 
	}
}

307 
	$tsk_fs_¥öt_day
(
FILE
 * 
hFûe
, 
time_t
 
time
)

309 i‡(
time
 <= 0) {

310 
	`tsk_Ârötf
(
hFûe
, "0000-00-00 00:00:00 (UTC)");

313 
tm
 *
tmTime
 = 
	`loˇ…ime
(&
time
);

315 
	`tsk_Ârötf
(
hFûe
, "%.4d-%.2d-%.2d 00:00:00 (%s)",

316 (Ë
tmTime
->
tm_yór
 + 1900,

317 (Ë
tmTime
->
tm_m⁄
 + 1, (ËtmTime->
tm_mday
,

318 
tz«me
[(
tmTime
->
tm_isd°
 == 0) ? 0 : 1]);

320 
	}
}

337 
	$tsk_fs_«me_¥öt
(
FILE
 * 
hFûe
, c⁄° 
TSK_FS_FILE
 * 
fs_fûe
,

338 c⁄° *
a_∑th
, 
TSK_FS_INFO
 * 
fs
, c⁄° 
TSK_FS_ATTR
 * 
fs_©å
,

339 
uöt8_t
 
¥öt_∑th
)

342 i‡(
fs_fûe
->
«me
->
ty≥
 < 
TSK_FS_NAME_TYPE_STR_MAX
)

343 
	`tsk_Ârötf
(
hFûe
, "%s/",

344 
tsk_fs_«me_ty≥_°r
[
fs_fûe
->
«me
->
ty≥
]);

346 
	`tsk_Ârötf
(
hFûe
, "-/");

350 i‡(
fs_fûe
->
mëa
) {

360 i‡((
fs_©å
Ë&& (fs_©å->
ty≥
 =
TSK_FS_ATTR_TYPE_NTFS_DATA
) &&

361 (
fs_fûe
->
mëa
->
ty≥
 =
TSK_FS_META_TYPE_DIR
)) {

362 
	`tsk_Ârötf
(
hFûe
, "r ");

365 i‡(
fs_fûe
->
mëa
->
ty≥
 < 
TSK_FS_META_TYPE_STR_MAX
)

366 
	`tsk_Ârötf
(
hFûe
, "%s ",

367 
tsk_fs_mëa_ty≥_°r
[
fs_fûe
->
mëa
->
ty≥
]);

369 
	`tsk_Ârötf
(
hFûe
, "- ");

373 
	`tsk_Ârötf
(
hFûe
, "- ");

378 i‡(
fs_fûe
->
«me
->
Êags
 & 
TSK_FS_NAME_FLAG_UNALLOC
)

379 
	`tsk_Ârötf
(
hFûe
, "* ");

381 
	`tsk_Ârötf
(
hFûe
, "%" 
PRIuINUM
 "", 
fs_fûe
->
«me
->
mëa_addr
);

384 i‡(
fs_©å
)

385 
	`tsk_Ârötf
(
hFûe
, "-%" 
PRIu32
 "-%" 
PRIu16
 "", 
fs_©å
->
ty≥
,

386 
fs_©å
->
id
);

388 
	`tsk_Ârötf
(
hFûe
, "%s:\t",

389 ((
fs_fûe
->
mëa
Ë&& (fs_fûe->mëa->
Êags
 & 
TSK_FS_META_FLAG_ALLOC
)

390 && (
fs_fûe
->

391 
«me
->
Êags
 & 
TSK_FS_NAME_FLAG_UNALLOC
)) ? "(realloc)" :

394 i‡((
¥öt_∑th
Ë&& (
a_∑th
 !
NULL
))

395 
	`tsk_Ârötf
(
hFûe
, "%s", 
a_∑th
);

397 
	`tsk_Ârötf
(
hFûe
, "%s", 
fs_fûe
->
«me
->name);

405 i‡(
fs_©å
) {

406 i‡(((
fs_©å
->
ty≥
 =
TSK_FS_ATTR_TYPE_NTFS_DATA
) &&

407 (
	`°rcmp
(
fs_©å
->
«me
, "$Data") != 0)) ||

408 ((
fs_©å
->
ty≥
 =
TSK_FS_ATTR_TYPE_NTFS_IDXROOT
) &&

409 (
	`°rcmp
(
fs_©å
->
«me
, "$I30") != 0)))

410 
	`tsk_Ârötf
(
hFûe
, ":%s", 
fs_©å
->
«me
);

414 
	}
}

426 
	$tsk_fs_«me_¥öt_l⁄g
(
FILE
 * 
hFûe
, c⁄° 
TSK_FS_FILE
 * 
fs_fûe
,

427 c⁄° *
a_∑th
, 
TSK_FS_INFO
 * 
fs
, c⁄° 
TSK_FS_ATTR
 * 
fs_©å
,

428 
uöt8_t
 
¥öt_∑th
)

430 
	`tsk_fs_«me_¥öt
(
hFûe
, 
fs_fûe
, 
a_∑th
, 
fs
, 
fs_©å
, 
¥öt_∑th
);

432 i‡((
fs
 =
NULL
Ë|| (
fs_fûe
->
mëa
 == NULL)) {

434 
	`tsk_Ârötf
(
hFûe
, "\t");

435 
	`tsk_fs_¥öt_time
(
hFûe
, 0);

436 
	`tsk_Ârötf
(
hFûe
, "\t");

437 
	`tsk_fs_¥öt_time
(
hFûe
, 0);

438 
	`tsk_Ârötf
(
hFûe
, "\t");

439 
	`tsk_fs_¥öt_time
(
hFûe
, 0);

440 
	`tsk_Ârötf
(
hFûe
, "\t");

441 
	`tsk_fs_¥öt_time
(
hFûe
, 0);

444 
	`tsk_Ârötf
(
hFûe
, "\t0\t0\t0\n");

449 
	`tsk_Ârötf
(
hFûe
, "\t");

450 
	`tsk_fs_¥öt_time
(
hFûe
, 
fs_fûe
->
mëa
->
mtime
);

452 
	`tsk_Ârötf
(
hFûe
, "\t");

454 i‡(
	`TSK_FS_TYPE_ISFAT
(
fs
->
·y≥
))

455 
	`tsk_fs_¥öt_day
(
hFûe
, 
fs_fûe
->
mëa
->
©ime
);

457 
	`tsk_fs_¥öt_time
(
hFûe
, 
fs_fûe
->
mëa
->
©ime
);

459 
	`tsk_Ârötf
(
hFûe
, "\t");

460 
	`tsk_fs_¥öt_time
(
hFûe
, 
fs_fûe
->
mëa
->
˘ime
);

462 
	`tsk_Ârötf
(
hFûe
, "\t");

463 
	`tsk_fs_¥öt_time
(
hFûe
, 
fs_fûe
->
mëa
->
¸time
);

466 i‡(
fs_©å
)

467 
	`tsk_Ârötf
(
hFûe
, "\t%" 
PRIuOFF
, 
fs_©å
->
size
);

469 
	`tsk_Ârötf
(
hFûe
, "\t%" 
PRIuOFF
, 
fs_fûe
->
mëa
->
size
);

471 
	`tsk_Ârötf
(
hFûe
, "\t%" 
PRIuGID
 "\t%" 
PRIuUID
 "\n",

472 
fs_fûe
->
mëa
->
gid
, fs_fûe->mëa->
uid
);

476 
	}
}

499 
	$tsk_fs_«me_¥öt_mac
(
FILE
 * 
hFûe
, c⁄° 
TSK_FS_FILE
 * 
fs_fûe
,

500 c⁄° *
a_∑th
, 
TSK_FS_INFO
 * 
fs
, c⁄° 
TSK_FS_ATTR
 * 
fs_©å
,

501 c⁄° *
¥efix
)

503 
ls
[12];

505 i‡((!
hFûe
Ë|| (!
fs_fûe
))

509 
	`tsk_Ârötf
(
hFûe
, "0|");

512 
	`tsk_Ârötf
(
hFûe
, "%s%s%s", 
¥efix
, 
a_∑th
, 
fs_fûe
->
«me
->name);

515 i‡((
fs_©å
Ë&& (((fs_©å->
ty≥
 =
TSK_FS_ATTR_TYPE_NTFS_DATA
) &&

516 (
	`°rcmp
(
fs_©å
->
«me
, "$Data") != 0)) ||

517 ((
fs_©å
->
ty≥
 =
TSK_FS_ATTR_TYPE_NTFS_IDXROOT
) &&

518 (
	`°rcmp
(
fs_©å
->
«me
, "$I30") != 0))))

519 
	`tsk_Ârötf
(
hFûe
, ":%s", 
fs_©å
->
«me
);

521 i‡((
fs_fûe
->
mëa
)

522 && (
fs_fûe
->
mëa
->
ty≥
 =
TSK_FS_META_TYPE_LNK
)

523 && (
fs_fûe
->
mëa
->
lök
)) {

524 
	`tsk_Ârötf
(
hFûe
, " -> %s", 
fs_fûe
->
mëa
->
lök
);

529 i‡(
fs_fûe
->
«me
->
Êags
 & 
TSK_FS_NAME_FLAG_UNALLOC
)

530 
	`tsk_Ârötf
(
hFûe
, " (dñëed%s)", ((
fs_fûe
->
mëa
)

531 && (
fs_fûe
->

532 
mëa
->
Êags
 & 
TSK_FS_META_FLAG_ALLOC
)) ? "-realloc" :

536 
	`tsk_Ârötf
(
hFûe
, "|%" 
PRIuINUM
, 
fs_fûe
->
«me
->
mëa_addr
);

537 i‡(
fs_©å
)

538 
	`tsk_Ârötf
(
hFûe
, "-%" 
PRIu32
 "-%" 
PRIu16
 "", 
fs_©å
->
ty≥
,

539 
fs_©å
->
id
);

541 
	`tsk_Ârötf
(
hFûe
, "|");

545 i‡(
fs_fûe
->
«me
->
ty≥
 < 
TSK_FS_NAME_TYPE_STR_MAX
)

546 
	`tsk_Ârötf
(
hFûe
, "%s/",

547 
tsk_fs_«me_ty≥_°r
[
fs_fûe
->
«me
->
ty≥
]);

549 
	`tsk_Ârötf
(
hFûe
, "-/");

551 i‡(!
fs_fûe
->
mëa
) {

552 
	`tsk_Ârötf
(
hFûe
, "----------|0|0|0|0|0|0|0\n");

557 
	`tsk_fs_mëa_make_ls
(
fs_fûe
->
mëa
, 
ls
, (ls));

558 
	`tsk_Ârötf
(
hFûe
, "%s|", 
ls
);

561 
	`tsk_Ârötf
(
hFûe
, "%" 
PRIuUID
 "|%" 
PRIuGID
 "|",

562 
fs_fûe
->
mëa
->
uid
, fs_fûe->mëa->
gid
);

565 i‡(
fs_©å
)

566 
	`tsk_Ârötf
(
hFûe
, "%" 
PRIuOFF
 "|", 
fs_©å
->
size
);

568 
	`tsk_Ârötf
(
hFûe
, "%" 
PRIuOFF
 "|", 
fs_fûe
->
mëa
->
size
);

571 
	`tsk_Ârötf
(
hFûe
,

572 "%" 
PRIu32
 "|%" PRIu32 "|%" PRIu32 "|%" PRIu32 "\n",

573 (
uöt32_t
Ë
fs_fûe
->
mëa
->
©ime
,

574 (
uöt32_t
Ë
fs_fûe
->
mëa
->
mtime
,

575 (
uöt32_t
Ë
fs_fûe
->
mëa
->
˘ime
,

576 (
uöt32_t
Ë
fs_fûe
->
mëa
->
¸time
);

578 
	}
}

	@tsk3/fs/fs_open.c

27 
	~"tsk_fs_i.h
"

46 
TSK_FS_INFO
 *

47 
	$tsk_fs_›í_vﬁ
(c⁄° 
TSK_VS_PART_INFO
 * 
a_∑π_öfo
,

48 
TSK_FS_TYPE_ENUM
 
a_·y≥
)

50 
TSK_OFF_T
 
off£t
;

51 i‡(
a_∑π_öfo
 =
NULL
) {

52 
	`tsk_îr‹_ª£t
();

53 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

54 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

56  
NULL
;

58 i‡(
a_∑π_öfo
->
vs
 =
NULL
) {

59 
	`tsk_îr‹_ª£t
();

60 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

61 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

63  
NULL
;

66 
off£t
 =

67 
a_∑π_öfo
->
°¨t
 *á_∑π_öfo->
vs
->
block_size
 +

68 
a_∑π_öfo
->
vs
->
off£t
;

69  
	`tsk_fs_›í_img
(
a_∑π_öfo
->
vs
->
img_öfo
, 
off£t
, 
a_·y≥
);

70 
	}
}

83 
TSK_FS_INFO
 *

84 
	$tsk_fs_›í_img
(
TSK_IMG_INFO
 * 
a_img_öfo
, 
TSK_OFF_T
 
a_off£t
,

85 
TSK_FS_TYPE_ENUM
 
a_·y≥
)

87 i‡(
a_img_öfo
 =
NULL
) {

88 
	`tsk_îr‹_ª£t
();

89 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

90 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

92  
NULL
;

98 i‡(
a_·y≥
 =
TSK_FS_TYPE_DETECT
) {

99 
TSK_FS_INFO
 *
fs_öfo
, *
fs_£t
 = 
NULL
;

100 *
£t
 = 
NULL
;

102 i‡(
tsk_vîbo£
)

103 
	`tsk_Ârötf
(
°dîr
,

104 "fs›í: Autÿdëe˘i⁄ modê© off£à%" 
PRIuOFF
 "\n",

105 
a_off£t
);

107 i‡((
fs_öfo
 =

108 
	`¡fs_›í
(
a_img_öfo
, 
a_off£t
, 
TSK_FS_TYPE_NTFS_DETECT
,

109 1)Ë!
NULL
) {

110 
£t
 = "NTFS";

111 
fs_£t
 = 
fs_öfo
;

114 
	`tsk_îr‹_ª£t
();

117 i‡((
fs_öfo
 =

118 
	`Átfs_›í
(
a_img_öfo
, 
a_off£t
, 
TSK_FS_TYPE_FAT_DETECT
,

119 1)Ë!
NULL
) {

120 i‡(
£t
 =
NULL
) {

121 
£t
 = "FAT";

122 
fs_£t
 = 
fs_öfo
;

125 
fs_£t
->
	`˛o£
(fs_set);

126 
fs_öfo
->
	`˛o£
(fs_info);

127 
	`tsk_îr‹_ª£t
();

128 
tsk_î∫o
 = 
TSK_ERR_FS_UNKTYPE
;

129 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
, "FAT o∏%s", 
£t
);

130  
NULL
;

134 
	`tsk_îr‹_ª£t
();

137 i‡((
fs_öfo
 =

138 
	`ext2fs_›í
(
a_img_öfo
, 
a_off£t
, 
TSK_FS_TYPE_EXT_DETECT
,

139 1)Ë!
NULL
) {

140 i‡(
£t
 =
NULL
) {

141 
£t
 = "EXT2/3";

142 
fs_£t
 = 
fs_öfo
;

145 
fs_£t
->
	`˛o£
(fs_set);

146 
fs_öfo
->
	`˛o£
(fs_info);

147 
	`tsk_îr‹_ª£t
();

148 
tsk_î∫o
 = 
TSK_ERR_FS_UNKTYPE
;

149 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
, "EXT2/3 o∏%s", 
£t
);

150  
NULL
;

154 
	`tsk_îr‹_ª£t
();

157 i‡((
fs_öfo
 =

158 
	`ffs_›í
(
a_img_öfo
, 
a_off£t
,

159 
TSK_FS_TYPE_FFS_DETECT
)Ë!
NULL
) {

160 i‡(
£t
 =
NULL
) {

161 
£t
 = "UFS";

162 
fs_£t
 = 
fs_öfo
;

165 
fs_£t
->
	`˛o£
(fs_set);

166 
fs_öfo
->
	`˛o£
(fs_info);

167 
	`tsk_îr‹_ª£t
();

168 
tsk_î∫o
 = 
TSK_ERR_FS_UNKTYPE
;

169 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
, "UFS o∏%s", 
£t
);

170  
NULL
;

174 
	`tsk_îr‹_ª£t
();

178 #i‡
TSK_USE_HFS


179 i‡((
fs_öfo
 =

180 
	`hfs_›í
(
a_img_öfo
, 
a_off£t
, 
TSK_FS_TYPE_HFS_DETECT
,

181 1)Ë!
NULL
) {

182 i‡(
£t
 =
NULL
) {

183 
£t
 = "HFS";

184 
fs_£t
 = 
fs_öfo
;

187 
fs_£t
->
	`˛o£
(fs_set);

188 
fs_öfo
->
	`˛o£
(fs_info);

189 
	`tsk_îr‹_ª£t
();

190 
tsk_î∫o
 = 
TSK_ERR_FS_UNKTYPE
;

191 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
, "HFS o∏%s", 
£t
);

192  
NULL
;

196 
	`tsk_îr‹_ª£t
();

200 i‡((
fs_öfo
 =

201 
	`iso9660_›í
(
a_img_öfo
, 
a_off£t
,

202 
TSK_FS_TYPE_ISO9660_DETECT
, 1)Ë!
NULL
) {

203 i‡(
£t
 !
NULL
) {

204 
fs_£t
->
	`˛o£
(fs_set);

205 
fs_öfo
->
	`˛o£
(fs_info);

206 
	`tsk_îr‹_ª£t
();

207 
tsk_î∫o
 = 
TSK_ERR_FS_UNKTYPE
;

208 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
, "ISO9660 o∏%s", 
£t
);

209  
NULL
;

211 
fs_£t
 = 
fs_öfo
;

214 
	`tsk_îr‹_ª£t
();

218 i‡(
fs_£t
 =
NULL
) {

219 
	`tsk_îr‹_ª£t
();

220 
tsk_î∫o
 = 
TSK_ERR_FS_UNKTYPE
;

221 
tsk_îr°r
[0] = '\0';

222 
tsk_îr°r2
[0] = '\0';

223  
NULL
;

225  
fs_£t
;

228 i‡(
	`TSK_FS_TYPE_ISNTFS
(
a_·y≥
))

229  
	`¡fs_›í
(
a_img_öfo
, 
a_off£t
, 
a_·y≥
, 0);

230 i‡(
	`TSK_FS_TYPE_ISFAT
(
a_·y≥
))

231  
	`Átfs_›í
(
a_img_öfo
, 
a_off£t
, 
a_·y≥
, 0);

232 i‡(
	`TSK_FS_TYPE_ISFFS
(
a_·y≥
))

233  
	`ffs_›í
(
a_img_öfo
, 
a_off£t
, 
a_·y≥
);

234 i‡(
	`TSK_FS_TYPE_ISEXT
(
a_·y≥
))

235  
	`ext2fs_›í
(
a_img_öfo
, 
a_off£t
, 
a_·y≥
, 0);

236 i‡(
	`TSK_FS_TYPE_ISHFS
(
a_·y≥
))

237  
	`hfs_›í
(
a_img_öfo
, 
a_off£t
, 
a_·y≥
, 0);

238 i‡(
	`TSK_FS_TYPE_ISISO9660
(
a_·y≥
))

239  
	`iso9660_›í
(
a_img_öfo
, 
a_off£t
, 
a_·y≥
, 0);

240 i‡(
	`TSK_FS_TYPE_ISRAW
(
a_·y≥
))

241  
	`øwfs_›í
(
a_img_öfo
, 
a_off£t
);

242 i‡(
	`TSK_FS_TYPE_ISSWAP
(
a_·y≥
))

243  
	`sw≠fs_›í
(
a_img_öfo
, 
a_off£t
);

245 
	`tsk_îr‹_ª£t
();

246 
tsk_î∫o
 = 
TSK_ERR_FS_UNSUPTYPE
;

247 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
, "%X", (Ë
a_·y≥
);

248  
NULL
;

251 
	}
}

259 
	$tsk_fs_˛o£
(
TSK_FS_INFO
 * 
a_fs
)

261 i‡((
a_fs
 =
NULL
Ë|| (a_fs->
èg
 !
TSK_FS_INFO_TAG
))

263 
a_fs
->
	`˛o£
(a_fs);

264 
	}
}

	@tsk3/fs/fs_parse.c

9 
	~"tsk_fs_i.h
"

37 
	$tsk_fs_∑r£_öum
(c⁄° 
TSK_TCHAR
 * 
°r
, 
TSK_INUM_T
 * 
öum
,

38 
TSK_FS_ATTR_TYPE_ENUM
 * 
ty≥
, 
uöt8_t
 * 
ty≥_u£d
, 
uöt16_t
 * 
id
,

39 
uöt8_t
 * 
id_u£d
)

41 
TSK_TCHAR
 *
˝
;

42 
TSK_TCHAR
 *
tdash
 = 
NULL
;

43 
TSK_TCHAR
 *
tmp°r
;

45 i‡(*
°r
 == 0)

48 i‡(
ty≥
)

49 *
ty≥
 = 
TSK_FS_ATTR_TYPE_DEFAULT
;

50 i‡(
ty≥_u£d
)

51 *
ty≥_u£d
 = 0;

52 i‡(
id
)

53 *
id
 = 
TSK_FS_ATTR_ID_DEFAULT
;

54 i‡(
id_u£d
)

55 *
id_u£d
 = 0;

58 
tmp°r
 =

59 (
TSK_TCHAR
 *Ë
	`tsk_mÆloc
((
	`TSTRLEN
(
°r
) + 1) * (TSK_TCHAR));

60 i‡(
tmp°r
 =
NULL
)

63 
	`TSTRNCPY
(
tmp°r
, 
°r
, 
	`TSTRLEN
(str) + 1);

65 i‡((
tdash
 = 
	`TSTRCHR
(
tmp°r
, 
	`_TSK_T
('-'))Ë!
NULL
) {

66 *
tdash
 = '\0';

67 
tdash
++;

70 *
öum
 = 
	`TSTRTOULL
(
tmp°r
, &
˝
, 10);

71 i‡(*
˝
 || *˝ =*
tmp°r
) {

72 
	`‰ì
(
tmp°r
);

77 i‡(
tdash
) {

78 
TSK_TCHAR
 *
idash
 = 
NULL
;

79 
uöt32_t
 
âmp
;

81 i‡((
idash
 = 
	`TSTRCHR
(
tdash
, 
	`_TSK_T
('-'))Ë!
NULL
) {

82 *
idash
 = '\0';

83 
idash
++;

86 
âmp
 = (
uöt32_t
Ë
	`TSTRTOUL
(
tdash
, &
˝
, 10);

87 i‡(*
˝
 || *˝ =*
tdash
) {

88 
	`‰ì
(
tmp°r
);

92 i‡(
ty≥
 !
NULL
) {

93 *
ty≥
 = 
âmp
;

94 i‡(
ty≥_u£d
)

95 *
ty≥_u£d
 = 1;

99 i‡(
idash
) {

100 
uöt16_t
 
ômp
;

102 
ômp
 = (
uöt16_t
Ë
	`TSTRTOUL
(
idash
, &
˝
, 0);

103 i‡(*
˝
 || *˝ =*
idash
) {

104 
	`‰ì
(
tmp°r
);

108 i‡(
id
)

109 *
id
 = 
ômp
;

110 i‡(
id_u£d
)

111 *
id_u£d
 = 1;

115 
	`‰ì
(
tmp°r
);

117 
	}
}

	@tsk3/fs/fs_types.c

23 
	~"tsk_fs_i.h
"

29 *
	m«me
;

30 
TSK_FS_TYPE_ENUM
 
	mcode
;

31 *
	mcommít
;

32 } 
	tFS_TYPES
;

38 
FS_TYPES
 
	gfs_ty≥_èbÀ
[] = {

39 {"¡fs", 
TSK_FS_TYPE_NTFS_DETECT
, "NTFS"},

40 {"Át", 
TSK_FS_TYPE_FAT_DETECT
, "FAT (Auto Detection)"},

41 {"ext", 
TSK_FS_TYPE_EXT_DETECT
, "ExtX (Auto Detection)"},

42 {"iso9660", 
TSK_FS_TYPE_ISO9660_DETECT
, "ISO9660 CD"},

43 #i‡
TSK_USE_HFS


44 {"hfs", 
TSK_FS_TYPE_HFS_DETECT
, "HFS+"},

46 {"ufs", 
TSK_FS_TYPE_FFS_DETECT
, "UFS (Auto Detection)"},

47 {"øw", 
TSK_FS_TYPE_RAW_DETECT
, "Raw Data"},

48 {"sw≠", 
TSK_FS_TYPE_SWAP_DETECT
, "Swap Space"},

49 {"Át12", 
TSK_FS_TYPE_FAT12
, "FAT12"},

50 {"Át16", 
TSK_FS_TYPE_FAT16
, "FAT16"},

51 {"Át32", 
TSK_FS_TYPE_FAT32
, "FAT32"},

52 {"ext2", 
TSK_FS_TYPE_EXT2
, "Ext2"},

53 {"ext3", 
TSK_FS_TYPE_EXT3
, "Ext3"},

54 {"ufs1", 
TSK_FS_TYPE_FFS1
, "UFS1"},

55 {"ufs2", 
TSK_FS_TYPE_FFS2
, "UFS2"},

59 
FS_TYPES
 
	gfs_Àgacy_ty≥_èbÀ
[] = {

61 {"löux-ext", 
TSK_FS_TYPE_EXT_DETECT
, "auto-detect Linux EXTxFS"},

62 {"löux-ext2", 
TSK_FS_TYPE_EXT2
, "Linux TSK_FS_TYPE_EXT_2"},

63 {"löux-ext3", 
TSK_FS_TYPE_EXT3
, "Linux TSK_FS_TYPE_EXT_3"},

64 {"bsdi", 
TSK_FS_TYPE_FFS1
, "BSDi FFS"},

65 {"‰ìbsd", 
TSK_FS_TYPE_FFS1
, "FreeBSD FFS"},

66 {"√tbsd", 
TSK_FS_TYPE_FFS1
, "NetBSD FFS"},

67 {"›íbsd", 
TSK_FS_TYPE_FFS1
, "OpenBSD FFS"},

68 {"sﬁ¨is", 
TSK_FS_TYPE_FFS1B
, "Solaris FFS"},

81 
TSK_FS_TYPE_ENUM


82 
	$tsk_fs_ty≥_toid
(c⁄° 
TSK_TCHAR
 * 
°r
)

84 
FS_TYPES
 *
•
;

85 
tmp
[16];

86 
i
;

89 
i
 = 0; i < 15 && 
°r
[i] != '\0'; i++) {

90 
tmp
[
i
] = (Ë
°r
[i];

92 
tmp
[
i
] = '\0';

94 
•
 = 
fs_ty≥_èbÀ
; sp->
«me
; sp++) {

95 i‡(
	`°rcmp
(
tmp
, 
•
->
«me
) == 0) {

96  
•
->
code
;

100 
•
 = 
fs_Àgacy_ty≥_èbÀ
; sp->
«me
; sp++) {

101 i‡(
	`°rcmp
(
tmp
, 
•
->
«me
) == 0) {

102  
•
->
code
;

105  
TSK_FS_TYPE_UNSUPP
;

106 
	}
}

115 
	$tsk_fs_ty≥_¥öt
(
FILE
 * 
hFûe
)

117 
FS_TYPES
 *
•
;

118 
	`tsk_Ârötf
(
hFûe
, "Supported file systemÅypes:\n");

119 
•
 = 
fs_ty≥_èbÀ
; sp->
«me
; sp++)

120 
	`tsk_Ârötf
(
hFûe
, "\t%†(%s)\n", 
•
->
«me
, sp->
commít
);

121 
	}
}

130 
	$tsk_fs_ty≥_t⁄ame
(
TSK_FS_TYPE_ENUM
 
·y≥
)

132 
FS_TYPES
 *
•
;

133 
•
 = 
fs_ty≥_èbÀ
; sp->
«me
; sp++)

134 i‡(
•
->
code
 =
·y≥
)

135  
•
->
«me
;

137  
NULL
;

138 
	}
}

145 
TSK_FS_TYPE_ENUM


146 
	$tsk_fs_ty≥_suµ‹ãd
()

148 
TSK_FS_TYPE_ENUM
 
sup_ty≥s
 = 0;

149 
FS_TYPES
 *
ty≥s
;

150 
ty≥s
 = 
fs_ty≥_èbÀ
;Åy≥s->
«me
;Åypes++) {

151 
sup_ty≥s
 |
ty≥s
->
code
;

153  
sup_ty≥s
;

154 
	}
}

	@tsk3/fs/hfs.c

71 
	~"tsk_fs_i.h
"

72 
	~"tsk_hfs.h
"

74 
	#XSWAP
(
a
,
b
Ë{á ^b; b ^a;á ^b; }

	)

78 
uöt8_t


79 
	$hfs_checked_ªad_øndom
(
TSK_FS_INFO
 * 
fs
, *
buf
, 
size_t
 
Àn
,

80 
TSK_OFF_T
 
offs
)

82 
ssize_t
 
r
;

84 
r
 = 
	`tsk_fs_ªad
(
fs
, 
offs
, 
buf
, 
Àn
);

85 i‡(
r
 !
Àn
) {

86 i‡(
r
 >= 0) {

87 
	`tsk_îr‹_ª£t
();

88 
tsk_î∫o
 = 
TSK_ERR_FS_READ
;

93 
	}
}

105 
uöt32_t


106 
	$hfs2unixtime
(
uöt32_t
 
hfsd©e
)

108 i‡(
hfsd©e
 < 
NSEC_BTWN_1904_1970
)

110  (
uöt32_t
Ë(
hfsd©e
 - 
NSEC_BTWN_1904_1970
);

111 
	}
}

121 
	$˙id_to_¨øy
(
uöt32_t
 
˙id
, 
uöt8_t
 
¨øy
[4])

123 
¨øy
[3] = (
˙id
 >> 0) & 0xff;

124 
¨øy
[2] = (
˙id
 >> 8) & 0xff;

125 
¨øy
[1] = (
˙id
 >> 16) & 0xff;

126 
¨øy
[0] = (
˙id
 >> 24) & 0xff;

127 
	}
}

143 
	$hfs_ext_com∑ª_keys
(
HFS_INFO
 * 
hfs
, 
uöt32_t
 
˙id
,

144 c⁄° 
hfs_båì_key_ext
 * 
key
)

146 
TSK_FS_INFO
 *
fs
 = (TSK_FS_INFO *Ë& (
hfs
->
fs_öfo
);

147 
uöt32_t
 
key_˙id
;

149 
key_˙id
 = 
	`tsk_gëu32
(
fs
->
ídün
, 
key
->
fûe_id
);

150 i‡(
key_˙id
 < 
˙id
)

152 i‡(
key_˙id
 > 
˙id
)

158 i‡(
key
->
f‹k_ty≥
 !
HFS_EXT_KEY_TYPE_DATA
)

166 i‡(
	`tsk_gëu32
(
fs
->
ídün
, 
key
->
°¨t_block
) == 0)

169 
	}
}

183 
uöt16_t


184 
	$hfs_gë_idxkeyÀn
(
HFS_INFO
 * 
hfs
, 
uöt16_t
 
keyÀn
,

185 c⁄° 
hfs_båì_hódî_ªc‹d
 * 
hódî
)

187 
TSK_FS_INFO
 *
fs
 = (TSK_FS_INFO *Ë& (
hfs
->
fs_öfo
);

190 i‡(
	`tsk_gëu32
(
fs
->
ídün
, 
hódî
->
©å
Ë& 
HFS_BT_HEAD_ATTR_VARIDXKEYS
)

191  
keyÀn
;

193  
	`tsk_gëu16
(
fs
->
ídün
, 
hódî
->
maxKeyLí
);

194 
	}
}

205 
TSK_FS_ATTR_RUN
 *

206 
	$hfs_exã¡s_to_©å
(
TSK_FS_INFO
 * 
a_fs
, c⁄° 
hfs_ext_desc
 * 
a_exã¡s
,

207 
TSK_OFF_T
 
a_°¨t_off
)

209 
TSK_FS_ATTR_RUN
 *
hód_run
 = 
NULL
;

210 
TSK_FS_ATTR_RUN
 *
¥ev_run
 = 
NULL
;

211 
i
;

212 
TSK_OFF_T
 
cur_off
 = 
a_°¨t_off
;

215 
	`tsk_îr‹_ª£t
();

217 i‡(
tsk_vîbo£
)

218 
	`tsk_Ârötf
(
°dîr
,

219 "hfs_exã¡s_to_©å: C⁄vîtögÉxã¡†‰om off£à%" 
PRIuOFF


220 "Åÿru∆i°\n", 
a_°¨t_off
);

222 
i
 = 0; i < 8; i++) {

223 
TSK_FS_ATTR_RUN
 *
cur_run
;

225 
uöt32_t
 
addr
 = 
	`tsk_gëu32
(
a_fs
->
ídün
, 
a_exã¡s
[
i
].
°¨t_blk
);

226 
uöt32_t
 
Àn
 = 
	`tsk_gëu32
(
a_fs
->
ídün
, 
a_exã¡s
[
i
].
blk_˙t
);

228 i‡(
tsk_vîbo£
)

229 
	`tsk_Ârötf
(
°dîr
,

230 "hfs_exã¡s_to_©å:Ñu¿%ò©ádd∏%" 
PRIu32


231 " wôhÜí %" 
PRIu32
 "\n", 
i
, 
addr
, 
Àn
);

233 i‡((
addr
 =0Ë&& (
Àn
 == 0))

237 i‡((
cur_run
 = 
	`tsk_fs_©å_run_Æloc
()Ë=
NULL
)

238  
NULL
;

240 
cur_run
->
addr
 =áddr;

241 
cur_run
->
Àn
 =Üen;

242 
cur_run
->
off£t
 = 
cur_off
;

244 i‡(
hód_run
 =
NULL
)

245 
hód_run
 = 
cur_run
;

246 i‡(
¥ev_run
 !
NULL
)

247 
¥ev_run
->
√xt
 = 
cur_run
;

248 
cur_off
 +
cur_run
->
Àn
;

249 
¥ev_run
 = 
cur_run
;

252  
hód_run
;

253 
	}
}

265 
uöt8_t


266 
	$hfs_ext_föd_exã¡_ªc‹d_©å
(
HFS_INFO
 * 
hfs
, 
uöt32_t
 
˙id
,

267 
TSK_FS_ATTR
 * 
a_©å
)

269 
TSK_FS_INFO
 *
fs
 = (TSK_FS_INFO *Ë& (
hfs
->
fs_öfo
);

270 
uöt16_t
 
nodesize
;

271 
uöt32_t
 
cur_node
;

272 *
node
 = 
NULL
;

273 
uöt8_t
 
is_d⁄e
;

275 
	`tsk_îr‹_ª£t
();

277 i‡(
tsk_vîbo£
)

278 
	`tsk_Ârötf
(
°dîr
,

280 
PRIu32
 "\n", 
˙id
);

283 i‡(
hfs
->
exã¡s_fûe
 =
NULL
) {

284 
ssize_t
 
˙t
;

286 i‡((
hfs
->
exã¡s_fûe
 =

287 
	`tsk_fs_fûe_›í_mëa
(
fs
, 
NULL
,

288 
HFS_EXTENTS_FILE_ID
)Ë=
NULL
) {

293 
hfs
->
exã¡s_©å
 =

294 
	`tsk_fs_©åli°_gë
(
hfs
->
exã¡s_fûe
->
mëa
->
©å
,

295 
TSK_FS_ATTR_TYPE_DEFAULT
);

296 i‡(!
hfs
->
exã¡s_©å
) {

297 
	`°∫ˇt
(
tsk_îr°r2
,

299 
TSK_ERRSTR_L
 - 
	`°æí
(
tsk_îr°r2
));

304 
˙t
 = 
	`tsk_fs_©å_ªad
(
hfs
->
exã¡s_©å
, 14,

305 (*Ë&(
hfs
->
exã¡s_hódî
),

306 (
hfs_båì_hódî_ªc‹d
), 0);

307 i‡(
˙t
 !(
hfs_båì_hódî_ªc‹d
)) {

308 i‡(
˙t
 >= 0) {

309 
	`tsk_îr‹_ª£t
();

310 
tsk_î∫o
 = 
TSK_ERR_FS_READ
;

312 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

319 
nodesize
 = 
	`tsk_gëu16
(
fs
->
ídün
, 
hfs
->
exã¡s_hódî
.nodesize);

320 i‡((
node
 = (*Ë
	`tsk_mÆloc
(
nodesize
)Ë=
NULL
) {

325 
cur_node
 = 
	`tsk_gëu32
(
fs
->
ídün
, 
hfs
->
exã¡s_hódî
.
roŸNode
);

331 i‡(
cur_node
 == 0) {

332 i‡(
tsk_vîbo£
)

333 
	`tsk_Ârötf
(
°dîr
, "hfs_ext_find_extent_record: "

335 
	`‰ì
(
node
);

339 i‡(
tsk_vîbo£
)

340 
	`tsk_Ârötf
(
°dîr
, "hfs_ext_find_extent_record: startingát "

341 "roŸÇodê%" 
PRIu32
 ";Çodesize = %"

342 
PRIu16
 "\n", 
cur_node
, 
nodesize
);

345 
is_d⁄e
 = 0;

346 
is_d⁄e
 == 0) {

347 
TSK_OFF_T
 
cur_off
;

348 
uöt16_t
 
num_ªc
;

349 
ssize_t
 
˙t
;

350 
hfs_båì_node
 *
node_desc
;

353 i‡(
cur_node
 > 
	`tsk_gëu32
(
fs
->
ídün
,

354 
hfs
->
exã¡s_hódî
.
tŸÆNodes
)) {

355 
tsk_î∫o
 = 
TSK_ERR_FS_GENFS
;

356 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

358 
cur_node
);

359 
	`‰ì
(
node
);

364 
cur_off
 = 
cur_node
 * 
nodesize
;

365 i‡(
tsk_vîbo£
)

366 
	`tsk_Ârötf
(
°dîr
,

367 "hfs_ext_föd_exã¡_ªc‹d:ÑódögÇodê%" 
PRIu32


368 "áàoff£à%" 
PRIuOFF
 "\n", 
cur_node
, 
cur_off
);

370 
˙t
 = 
	`tsk_fs_©å_ªad
(
hfs
->
exã¡s_©å
, 
cur_off
,

371 
node
, 
nodesize
, 0);

372 i‡(
˙t
 !
nodesize
) {

373 i‡(
˙t
 >= 0) {

374 
	`tsk_îr‹_ª£t
();

375 
tsk_î∫o
 = 
TSK_ERR_FS_READ
;

377 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

379 
PRIuOFF
, 
cur_node
, 
cur_off
);

380 
	`‰ì
(
node
);

385 
node_desc
 = (
hfs_båì_node
 *Ë
node
;

386 
num_ªc
 = 
	`tsk_gëu16
(
fs
->
ídün
, 
node_desc
->num_rec);

388 i‡(
num_ªc
 == 0) {

389 
tsk_î∫o
 = 
TSK_ERR_FS_GENFS
;

390 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

392 
PRIu32
, 
cur_node
);

393 
	`‰ì
(
node
);

400 i‡(
node_desc
->
ty≥
 =
HFS_BT_NODE_TYPE_IDX
) {

401 
uöt32_t
 
√xt_node
 = 0;

402 
ªc
;

404 i‡(
tsk_vîbo£
)

405 
	`tsk_Ârötf
(
°dîr
,

406 "hfs_ext_föd_exã¡_ªc‹d: IndexÇodê%" 
PRIu32


407 " @ %" 
PRIu64
 " ha†%" 
PRIu16
 "Ñec‹ds\n", 
cur_node
,

408 
cur_off
, 
num_ªc
);

410 
ªc
 = 0;Ñe¯< 
num_ªc
;Ñec++) {

411 
cmp
;

412 
size_t
 
ªc_off
;

413 
hfs_båì_key_ext
 *
key
;

416 
ªc_off
 =

417 
	`tsk_gëu16
(
fs
->
ídün
,

418 &
node
[
nodesize
 - (
ªc
 + 1) * 2]);

419 i‡(
ªc_off
 > 
nodesize
) {

420 
tsk_î∫o
 = 
TSK_ERR_FS_GENFS
;

421 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

423 
PRIu16
 ")", 
ªc
, 
cur_node
, 
ªc_off
, 
nodesize
);

424 
	`‰ì
(
node
);

427 
key
 = (
hfs_båì_key_ext
 *Ë& 
node
[
ªc_off
];

429 
cmp
 = 
	`hfs_ext_com∑ª_keys
(
hfs
, 
˙id
, 
key
);

431 i‡(
tsk_vîbo£
)

432 
	`tsk_Ârötf
(
°dîr
,

433 "hfs_ext_föd_exã¡_ªc‹d:Ñec‹d %" 
PRIu16


434 " ; keyÀ¿%" 
PRIu16
 " (FûeId: %" 
PRIu32


435 ", F‹kTy≥: %" 
PRIu8
 ", SèπBlk: %" 
PRIu32


436 "); com∑ª: %d\n", 
ªc
, 
	`tsk_gëu16
(
fs
->
ídün
,

437 
key
->
key_Àn
), 
	`tsk_gëu32
(
fs
->
ídün
,

438 
key
->
fûe_id
), key->
f‹k_ty≥
,

439 
	`tsk_gëu32
(
fs
->
ídün
, 
key
->
°¨t_block
), 
cmp
);

442 i‡((
cmp
 <0Ë|| (
√xt_node
 == 0)) {

443 
hfs_båì_ödex_ªc‹d
 *
idx_ªc
;

444 
keyÀn
 =

445 2 + 
	`hfs_gë_idxkeyÀn
(
hfs
, 
	`tsk_gëu16
(
fs
->
ídün
,

446 
key
->
key_Àn
), &(
hfs
->
exã¡s_hódî
));

447 i‡(
ªc_off
 + 
keyÀn
 > 
nodesize
) {

448 
tsk_î∫o
 = 
TSK_ERR_FS_GENFS
;

449 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

451 
PRIu16
 ")", 
ªc
, 
cur_node
,

452 
ªc_off
 + 
keyÀn
, 
nodesize
);

453 
	`‰ì
(
node
);

456 
idx_ªc
 =

457 (
hfs_båì_ödex_ªc‹d
 *Ë& 
node
[
ªc_off
 +

458 
keyÀn
];

459 
√xt_node
 = 
	`tsk_gëu32
(
fs
->
ídün
, 
idx_ªc
->
chûdNode
);

463 i‡(
cmp
 > 0) {

469 i‡(
√xt_node
 == 0) {

470 i‡(
tsk_vîbo£
)

471 
	`Ârötf
(
°dîr
,

473 
˙id
, 
cur_node
);

474 
is_d⁄e
 = 1;

477 
cur_node
 = 
√xt_node
;

481 i‡(
node_desc
->
ty≥
 =
HFS_BT_NODE_TYPE_LEAF
) {

482 
ªc
;

484 i‡(
tsk_vîbo£
)

485 
	`tsk_Ârötf
(
°dîr
,

486 "hfs_ext_föd_exã¡_ªc‹d: Ló‡nodê%" 
PRIu32
 " @ %"

487 
PRIu64
 " ha†%" 
PRIu16
 "Ñec‹ds\n", 
cur_node
, 
cur_off
,

488 
num_ªc
);

490 
ªc
 = 0;Ñe¯< 
num_ªc
;Ñec++) {

491 
size_t
 
ªc_off
;

492 
hfs_båì_key_ext
 *
key
;

493 
uöt32_t
 
ªc_˙id
;

494 
hfs_exã¡s
 *
exã¡s
;

495 
TSK_OFF_T
 
ext_off
 = 0;

496 
keyÀn
;

497 
TSK_FS_ATTR_RUN
 *
©å_run
;

500 
ªc_off
 =

501 
	`tsk_gëu16
(
fs
->
ídün
,

502 &
node
[
nodesize
 - (
ªc
 + 1) * 2]);

503 i‡(
ªc_off
 > 
nodesize
) {

504 
tsk_î∫o
 = 
TSK_ERR_FS_GENFS
;

505 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

507 
PRIu16
 ")", 
ªc
, 
cur_node
, 
ªc_off
, 
nodesize
);

508 
	`‰ì
(
node
);

511 
key
 = (
hfs_båì_key_ext
 *Ë& 
node
[
ªc_off
];

513 i‡(
tsk_vîbo£
)

514 
	`tsk_Ârötf
(
°dîr
,

515 "hfs_ext_föd_exã¡_ªc‹d:Ñec‹d %" 
PRIu16


516 "; keyÀ¿%" 
PRIu16
 " (%" 
PRIu32


517 ", %" 
PRIu8
 ", %" 
PRIu32
 ")\n", 
ªc
,

518 
	`tsk_gëu16
(
fs
->
ídün
, 
key
->
key_Àn
),

519 
	`tsk_gëu32
(
fs
->
ídün
, 
key
->
fûe_id
),

520 
key
->
f‹k_ty≥
, 
	`tsk_gëu32
(
fs
->
ídün
,

521 
key
->
°¨t_block
));

523 
ªc_˙id
 = 
	`tsk_gëu32
(
fs
->
ídün
, 
key
->
fûe_id
);

526 i‡(
ªc_˙id
 < 
˙id
) {

529 i‡((
ªc_˙id
 > 
˙id
)

530 || (
key
->
f‹k_ty≥
 !
HFS_EXT_KEY_TYPE_DATA
)) {

531 
is_d⁄e
 = 1;

535 
keyÀn
 = 2 + 
	`tsk_gëu16
(
fs
->
ídün
, 
key
->
key_Àn
);

536 i‡(
ªc_off
 + 
keyÀn
 > 
nodesize
) {

537 
tsk_î∫o
 = 
TSK_ERR_FS_GENFS
;

538 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

540 
PRIu16
 ")", 
ªc
, 
cur_node
, 
ªc_off
 + 
keyÀn
,

541 
nodesize
);

542 
	`‰ì
(
node
);

547 
ext_off
 = 
	`tsk_gëu32
(
fs
->
ídün
, 
key
->
°¨t_block
);

550 
exã¡s
 = (
hfs_exã¡s
 *Ë& 
node
[
ªc_off
 + 
keyÀn
];

552 
©å_run
 =

553 
	`hfs_exã¡s_to_©å
(
fs
, 
exã¡s
->exã¡s, 
ext_off
);

554 i‡((
©å_run
 =
NULL
Ë&& (
tsk_î∫o
)) {

555 
	`°∫ˇt
(
tsk_îr°r2
,

557 
TSK_ERRSTR_L
 - 
	`°æí
(
tsk_îr°r2
));

558 
	`‰ì
(
node
);

562 i‡(
	`tsk_fs_©å_add_run
(
fs
, 
a_©å
, 
©å_run
)) {

563 
	`°∫ˇt
(
tsk_îr°r2
,

565 
TSK_ERRSTR_L
 - 
	`°æí
(
tsk_îr°r2
));

566 
	`‰ì
(
node
);

570 
cur_node
 = 
	`tsk_gëu32
(
fs
->
ídün
, 
node_desc
->
Êök
);

571 i‡(
cur_node
 == 0) {

572 
is_d⁄e
 = 1;

577 
tsk_î∫o
 = 
TSK_ERR_FS_GENFS
;

578 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

579 "hfs_ext_föd_exã¡_ªc‹d: båìÇodê%" 
PRIu32


580 " (%" 
PRIuOFF
 "Ëi†√ôhî indexÇ‹Üó‡(%" 
PRIu8
 ")",

581 
cur_node
, 
cur_off
, 
node_desc
->
ty≥
);

582 
	`‰ì
(
node
);

586 
	`‰ì
(
node
);

588 
	}
}

599 
	$hfs_ˇt_com∑ª_keys
(
HFS_INFO
 * 
hfs
, c⁄° 
hfs_båì_key_ˇt
 * 
key1
,

600 c⁄° 
hfs_båì_key_ˇt
 * 
key2
)

602 
TSK_FS_INFO
 *
fs
 = (TSK_FS_INFO *Ë& (
hfs
->
fs_öfo
);

603 
uöt32_t
 
˙id1
, 
˙id2
;

605 
˙id1
 = 
	`tsk_gëu32
(
fs
->
ídün
, 
key1
->
∑ª¡_˙id
);

606 
˙id2
 = 
	`tsk_gëu32
(
fs
->
ídün
, 
key2
->
∑ª¡_˙id
);

608 i‡(
˙id1
 < 
˙id2
)

610 i‡(
˙id1
 > 
˙id2
)

613  
	`hfs_unicode_com∑ª
(
hfs
, &
key1
->
«me
, &
key2
->name);

614 
	}
}

624 
uöt8_t


625 
	$hfs_ˇt_åavî£
(
HFS_INFO
 * 
hfs
, c⁄° *
èrg_d©a
,

626 
TSK_HFS_BTREE_CB
 
a_cb
, *
±r
)

628 
TSK_FS_INFO
 *
fs
 = &(
hfs
->
fs_öfo
);

629 
uöt32_t
 
cur_node
;

630 *
node
;

632 
uöt16_t
 
nodesize
;

633 
uöt8_t
 
is_d⁄e
 = 0;

635 
	`tsk_îr‹_ª£t
();

637 
nodesize
 = 
	`tsk_gëu16
(
fs
->
ídün
, 
hfs
->
ˇèlog_hódî
.nodesize);

638 i‡((
node
 = (*Ë
	`tsk_mÆloc
(
nodesize
)Ë=
NULL
)

642 
cur_node
 = 
	`tsk_gëu32
(
fs
->
ídün
, 
hfs
->
ˇèlog_hódî
.
roŸNode
);

648 i‡(
cur_node
 == 0) {

649 i‡(
tsk_vîbo£
)

650 
	`tsk_Ârötf
(
°dîr
, "hfs_cat_traverse: "

652 
	`‰ì
(
node
);

656 i‡(
tsk_vîbo£
)

657 
	`tsk_Ârötf
(
°dîr
, "hfs_cat_traverse: startingát "

658 "roŸÇodê%" 
PRIu32
 ";Çodesize = %"

659 
PRIu16
 "\n", 
cur_node
, 
nodesize
);

662 
is_d⁄e
 = 0;

663 
is_d⁄e
 == 0) {

664 
TSK_OFF_T
 
cur_off
;

665 
uöt16_t
 
num_ªc
;

666 
ssize_t
 
˙t
;

667 
hfs_båì_node
 *
node_desc
;

670 i‡(
cur_node
 > 
	`tsk_gëu32
(
fs
->
ídün
,

671 
hfs
->
ˇèlog_hódî
.
tŸÆNodes
)) {

672 
tsk_î∫o
 = 
TSK_ERR_FS_GENFS
;

673 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

674 "hfs_ˇt_åavî£: Nodê%dÅoÿœrgêf‹ fûe", 
cur_node
);

675 
	`‰ì
(
node
);

680 
cur_off
 = 
cur_node
 * 
nodesize
;

681 
˙t
 = 
	`tsk_fs_©å_ªad
(
hfs
->
ˇèlog_©å
, 
cur_off
,

682 
node
, 
nodesize
, 0);

683 i‡(
˙t
 !
nodesize
) {

684 i‡(
˙t
 >= 0) {

685 
	`tsk_îr‹_ª£t
();

686 
tsk_î∫o
 = 
TSK_ERR_FS_READ
;

688 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

690 
PRIuOFF
, 
cur_node
, 
cur_off
);

691 
	`‰ì
(
node
);

696 
node_desc
 = (
hfs_båì_node
 *Ë
node
;

697 
num_ªc
 = 
	`tsk_gëu16
(
fs
->
ídün
, 
node_desc
->num_rec);

699 i‡(
tsk_vîbo£
)

700 
	`tsk_Ârötf
(
°dîr
, "hfs_ˇt_åavî£:Çodê%" 
PRIu32


701 " @ %" 
PRIu64
 " ha†%" 
PRIu16
 "Ñecords\n",

702 
cur_node
, 
cur_off
, 
num_ªc
);

704 i‡(
num_ªc
 == 0) {

705 
tsk_î∫o
 = 
TSK_ERR_FS_GENFS
;

706 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

708 
PRIu32
, 
cur_node
);

709 
	`‰ì
(
node
);

715 i‡(
node_desc
->
ty≥
 =
HFS_BT_NODE_TYPE_IDX
) {

716 
uöt32_t
 
√xt_node
 = 0;

717 
ªc
;

719 
ªc
 = 0;Ñe¯< 
num_ªc
;Ñec++) {

720 
size_t
 
ªc_off
;

721 
hfs_båì_key_ˇt
 *
key
;

722 
uöt8_t
 
ªtvÆ
;

725 
ªc_off
 =

726 
	`tsk_gëu16
(
fs
->
ídün
,

727 &
node
[
nodesize
 - (
ªc
 + 1) * 2]);

728 i‡(
ªc_off
 > 
nodesize
) {

729 
tsk_î∫o
 = 
TSK_ERR_FS_GENFS
;

730 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

732 
PRIu16
 ")", 
ªc
, 
cur_node
, 
ªc_off
, 
nodesize
);

733 
	`‰ì
(
node
);

736 
key
 = (
hfs_båì_key_ˇt
 *Ë& 
node
[
ªc_off
];

748 
ªtvÆ
 =

749 
	`a_cb
(
hfs
, 
HFS_BT_NODE_TYPE_IDX
, 
èrg_d©a
, 
key
,

750 
cur_off
 + 
ªc_off
, 
±r
);

751 i‡(
ªtvÆ
 =
HFS_BTREE_CB_ERR
) {

752 
tsk_î∫o
 = 
TSK_ERR_FS_GENFS
;

753 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

755 
	`‰ì
(
node
);

759 i‡((
ªtvÆ
 =
HFS_BTREE_CB_IDX_LT
)

760 || (
√xt_node
 == 0)) {

761 
hfs_båì_ödex_ªc‹d
 *
idx_ªc
;

762 
keyÀn
 =

763 2 + 
	`hfs_gë_idxkeyÀn
(
hfs
, 
	`tsk_gëu16
(
fs
->
ídün
,

764 
key
->
key_Àn
), &(
hfs
->
ˇèlog_hódî
));

765 i‡(
ªc_off
 + 
keyÀn
 > 
nodesize
) {

766 
tsk_î∫o
 = 
TSK_ERR_FS_GENFS
;

767 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

769 
PRIu16
 ")", 
ªc
, 
cur_node
, 
ªc_off
 + 
keyÀn
,

770 
nodesize
);

771 
	`‰ì
(
node
);

774 
idx_ªc
 =

775 (
hfs_båì_ödex_ªc‹d
 *Ë& 
node
[
ªc_off
 +

776 
keyÀn
];

777 
√xt_node
 = 
	`tsk_gëu32
(
fs
->
ídün
, 
idx_ªc
->
chûdNode
);

779 i‡(
ªtvÆ
 =
HFS_BTREE_CB_IDX_EQGT
) {

785 i‡(
√xt_node
 == 0) {

786 
tsk_î∫o
 = 
TSK_ERR_FS_GENFS
;

787 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

789 
cur_node
);

790 
is_d⁄e
 = 1;

793 
cur_node
 = 
√xt_node
;

797 i‡(
node_desc
->
ty≥
 =
HFS_BT_NODE_TYPE_LEAF
) {

798 
ªc
;

800 
ªc
 = 0;Ñe¯< 
num_ªc
;Ñec++) {

801 
size_t
 
ªc_off
;

802 
hfs_båì_key_ˇt
 *
key
;

803 
uöt8_t
 
ªtvÆ
;

806 
ªc_off
 =

807 
	`tsk_gëu16
(
fs
->
ídün
,

808 &
node
[
nodesize
 - (
ªc
 + 1) * 2]);

809 i‡(
ªc_off
 > 
nodesize
) {

810 
tsk_î∫o
 = 
TSK_ERR_FS_GENFS
;

811 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

813 
PRIu16
 ")", 
ªc
, 
cur_node
, 
ªc_off
, 
nodesize
);

814 
	`‰ì
(
node
);

817 
key
 = (
hfs_båì_key_ˇt
 *Ë& 
node
[
ªc_off
];

829 
ªtvÆ
 =

830 
	`a_cb
(
hfs
, 
HFS_BT_NODE_TYPE_LEAF
, 
èrg_d©a
, 
key
,

831 
cur_off
 + 
ªc_off
, 
±r
);

832 i‡(
ªtvÆ
 =
HFS_BTREE_CB_LEAF_STOP
) {

833 
is_d⁄e
 = 1;

836 i‡(
ªtvÆ
 =
HFS_BTREE_CB_ERR
) {

837 
tsk_î∫o
 = 
TSK_ERR_FS_GENFS
;

838 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

840 
	`‰ì
(
node
);

846 i‡(
is_d⁄e
 == 0) {

847 
cur_node
 = 
	`tsk_gëu32
(
fs
->
ídün
, 
node_desc
->
Êök
);

848 i‡(
cur_node
 == 0) {

849 
is_d⁄e
 = 1;

851 i‡(
tsk_vîbo£
)

852 
	`Ârötf
(
°dîr
,

857 
tsk_î∫o
 = 
TSK_ERR_FS_GENFS
;

858 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

859 "hfs_ˇt_åavî£: båìÇodê%" 
PRIu32


860 " (%" 
PRIu64
 "Ëi†√ôhî indexÇ‹Üó‡(%" 
PRIu8
 ")",

861 
cur_node
, 
cur_off
, 
node_desc
->
ty≥
);

862 
	`‰ì
(
node
);

866 
	`‰ì
(
node
);

868 
	}
}

871 
uöt8_t


872 
	$hfs_ˇt_gë_ªc‹d_off£t_cb
(
HFS_INFO
 * 
hfs
, 
öt8_t
 
Àvñ_ty≥
,

873 c⁄° *
èrg_d©a
, c⁄° 
hfs_båì_key_ˇt
 * 
cur_key
,

874 
TSK_OFF_T
 
key_off
, *
±r
)

876 c⁄° 
hfs_båì_key_ˇt
 *
èrg_key
 = (hfs_båì_key_ˇà*Ë
èrg_d©a
;

877 i‡(
tsk_vîbo£
)

878 
	`Ârötf
(
°dîr
,

879 "hfs_ˇt_gë_ªc‹d_off£t_cb: %†nodêw™t: %" 
PRIu32


880 " v†have: %" 
PRIu32
 "\n",

881 (
Àvñ_ty≥
 =
HFS_BT_NODE_TYPE_IDX
) ? "Index" : "Leaf",

882 
	`tsk_gëu32
(
hfs
->
fs_öfo
.
ídün
, 
èrg_key
->
∑ª¡_˙id
),

883 
	`tsk_gëu32
(
hfs
->
fs_öfo
.
ídün
, 
cur_key
->
∑ª¡_˙id
));

885 i‡(
Àvñ_ty≥
 =
HFS_BT_NODE_TYPE_IDX
) {

886 
diff
 = 
	`hfs_ˇt_com∑ª_keys
(
hfs
, 
cur_key
, 
èrg_key
);

887 i‡(
diff
 < 0)

888  
HFS_BTREE_CB_IDX_LT
;

890  
HFS_BTREE_CB_IDX_EQGT
;

893 
diff
 = 
	`hfs_ˇt_com∑ª_keys
(
hfs
, 
cur_key
, 
èrg_key
);

896 i‡(
diff
 < 0) {

897  
HFS_BTREE_CB_LEAF_GO
;

899 i‡(
diff
 == 0) {

900 
TSK_OFF_T
 *
off
 = (TSK_OFF_T *Ë
±r
;

901 *
off
 =

902 
key_off
 + 2 + 
	`tsk_gëu16
(
hfs
->
fs_öfo
.
ídün
,

903 
cur_key
->
key_Àn
);

905  
HFS_BTREE_CB_LEAF_STOP
;

907 
	}
}

918 
TSK_OFF_T


919 
	$hfs_ˇt_gë_ªc‹d_off£t
(
HFS_INFO
 * 
hfs
, c⁄° 
hfs_båì_key_ˇt
 * 
√edÀ
)

921 
TSK_OFF_T
 
off
 = 0;

922 i‡(
	`hfs_ˇt_åavî£
(
hfs
, 
√edÀ
, 
hfs_ˇt_gë_ªc‹d_off£t_cb
, &
off
)) {

925  
off
;

926 
	}
}

938 
uöt8_t


939 
	$hfs_ˇt_ªad_thªad_ªc‹d
(
HFS_INFO
 * 
hfs
, 
TSK_OFF_T
 
off
,

940 
hfs_thªad
 * 
thªad
)

942 
TSK_FS_INFO
 *
fs
 = (TSK_FS_INFO *Ë& (
hfs
->
fs_öfo
);

943 
uöt16_t
 
uni_Àn
;

944 
size_t
 
˙t
;

946 
	`mem£t
(
thªad
, 0, (
hfs_thªad
));

947 
˙t
 = 
	`tsk_fs_©å_ªad
(
hfs
->
ˇèlog_©å
, 
off
, (*Ë
thªad
, 10, 0);

948 i‡(
˙t
 != 10) {

949 i‡(
˙t
 >= 0) {

950 
	`tsk_îr‹_ª£t
();

951 
tsk_î∫o
 = 
TSK_ERR_FS_READ
;

953 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

955 
PRIuOFF
 " (hódî)", 
off
);

959 i‡((
	`tsk_gëu16
(
fs
->
ídün
, 
thªad
->
ªc_ty≥
Ë!
HFS_FOLDER_THREAD
)

960 && (
	`tsk_gëu16
(
fs
->
ídün
, 
thªad
->
ªc_ty≥
Ë!
HFS_FILE_THREAD
)) {

961 
tsk_î∫o
 = 
TSK_ERR_FS_GENFS
;

962 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

963 "hfs_ˇt_ªad_thªad_ªc‹d: u√x≥˘edÑec‹dÅy≥ %" 
PRIu16
,

964 
	`tsk_gëu16
(
fs
->
ídün
, 
thªad
->
ªc_ty≥
));

968 
uni_Àn
 = 
	`tsk_gëu16
(
fs
->
ídün
, 
thªad
->
«me
.
Àngth
);

970 i‡(
uni_Àn
 > 255) {

971 
tsk_î∫o
 = 
TSK_ERR_FS_INODE_COR
;

972 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

973 "hfs_ˇt_ªad_thªad_ªc‹d: invÆid såögÜígth (%" 
PRIu16


974 ")", 
uni_Àn
);

978 
˙t
 =

979 
	`tsk_fs_©å_ªad
(
hfs
->
ˇèlog_©å
, 
off
 + 10,

980 (*Ë
thªad
->
«me
.
unicode
, 
uni_Àn
 * 2, 0);

981 i‡(
˙t
 !
uni_Àn
 * 2) {

982 i‡(
˙t
 >= 0) {

983 
	`tsk_îr‹_ª£t
();

984 
tsk_î∫o
 = 
TSK_ERR_FS_READ
;

986 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

988 
PRIuOFF
 " («me)", 
off
 + 10);

993 
	}
}

1003 
uöt8_t


1004 
	$hfs_ˇt_ªad_fûe_fﬁdî_ªc‹d
(
HFS_INFO
 * 
hfs
, 
TSK_OFF_T
 
off
,

1005 
hfs_fûe_fﬁdî
 * 
ªc‹d
)

1007 
TSK_FS_INFO
 *
fs
 = (TSK_FS_INFO *Ë& (
hfs
->
fs_öfo
);

1008 
size_t
 
˙t
;

1009 
ªc_ty≥
[2];

1011 
	`mem£t
(
ªc‹d
, 0, (
hfs_fûe_fﬁdî
));

1013 
˙t
 = 
	`tsk_fs_©å_ªad
(
hfs
->
ˇèlog_©å
, 
off
, 
ªc_ty≥
, 2, 0);

1014 i‡(
˙t
 != 2) {

1015 i‡(
˙t
 >= 0) {

1016 
	`tsk_îr‹_ª£t
();

1017 
tsk_î∫o
 = 
TSK_ERR_FS_READ
;

1019 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

1021 
PRIuOFF
 " (hódî)", 
off
);

1025 i‡(
	`tsk_gëu16
(
fs
->
ídün
, 
ªc_ty≥
Ë=
HFS_FOLDER_RECORD
) {

1026 
˙t
 =

1027 
	`tsk_fs_©å_ªad
(
hfs
->
ˇèlog_©å
, 
off
, (*Ë
ªc‹d
,

1028 (
hfs_fﬁdî
), 0);

1029 i‡(
˙t
 !(
hfs_fﬁdî
)) {

1030 i‡(
˙t
 >= 0) {

1031 
	`tsk_îr‹_ª£t
();

1032 
tsk_î∫o
 = 
TSK_ERR_FS_READ
;

1034 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

1036 
PRIuOFF
 " (fﬁdî)", 
off
);

1040 i‡(
	`tsk_gëu16
(
fs
->
ídün
, 
ªc_ty≥
Ë=
HFS_FILE_RECORD
) {

1041 
˙t
 =

1042 
	`tsk_fs_©å_ªad
(
hfs
->
ˇèlog_©å
, 
off
, (*Ë
ªc‹d
,

1043 (
hfs_fûe
), 0);

1044 i‡(
˙t
 !(
hfs_fûe
)) {

1045 i‡(
˙t
 >= 0) {

1046 
	`tsk_îr‹_ª£t
();

1047 
tsk_î∫o
 = 
TSK_ERR_FS_READ
;

1049 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

1051 
PRIuOFF
 " (fûe)", 
off
);

1056 
tsk_î∫o
 = 
TSK_ERR_FS_GENFS
;

1057 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

1059 
PRIu16
, 
	`tsk_gëu16
(
fs
->
ídün
, 
ªc_ty≥
));

1064 
	}
}

1077 
uöt8_t


1078 
	$hfs_ˇt_fûe_lookup
(
HFS_INFO
 * 
hfs
, 
TSK_INUM_T
 
öum
, 
HFS_ENTRY
 * 
íåy
)

1080 
TSK_FS_INFO
 *
fs
 = (TSK_FS_INFO *Ë& (
hfs
->
fs_öfo
);

1081 
hfs_båì_key_ˇt
 
key
;

1082 
hfs_thªad
 
thªad
;

1083 
hfs_fûe_fﬁdî
 
ªc‹d
;

1084 
TSK_OFF_T
 
off
;

1086 
	`tsk_îr‹_ª£t
();

1088 i‡(
tsk_vîbo£
)

1089 
	`tsk_Ârötf
(
°dîr
,

1090 "hfs_ˇt_fûe_lookup: cÆÀd f‹ inum %" 
PRIuINUM
 "\n", 
öum
);

1093 i‡((
öum
 =
HFS_EXTENTS_FILE_ID
) ||

1094 (
öum
 =
HFS_CATALOG_FILE_ID
) ||

1095 (
öum
 =
HFS_ALLOCATION_FILE_ID
) ||

1096 (
öum
 =
HFS_STARTUP_FILE_ID
) ||

1097 (
öum
 =
HFS_ATTRIBUTES_FILE_ID
)) {

1098 
tsk_î∫o
 = 
TSK_ERR_FS_GENFS
;

1099 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

1100 "hfs_ˇt_fûe_lookup: CÆÀd o¿•ecü»fûe: %" 
PRIuINUM
,

1101 
öum
);

1108 
	`mem£t
((*Ë&
key
, 0, (
hfs_båì_key_ˇt
));

1109 
	`˙id_to_¨øy
((
uöt32_t
Ë
öum
, 
key
.
∑ª¡_˙id
);

1111 i‡(
tsk_vîbo£
)

1112 
	`tsk_Ârötf
(
°dîr
,

1113 "hfs_ˇt_fûe_lookup: Lookög u∞thªadÑec‹d (%" 
PRIuINUM


1114 ")\n", 
öum
);

1117 
off
 = 
	`hfs_ˇt_gë_ªc‹d_off£t
(
hfs
, &
key
);

1118 i‡(
off
 == 0) {

1120 i‡(
tsk_î∫o
 == 0) {

1121 
tsk_î∫o
 = 
TSK_ERR_FS_INODE_NUM
;

1122 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

1124 
PRIuINUM
 ")", 
öum
);

1127 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

1128 " hfs_ˇt_fûe_lookup:Åhªad f‹ fûê(%" 
PRIuINUM
 ")",

1129 
öum
);

1135 i‡(
	`hfs_ˇt_ªad_thªad_ªc‹d
(
hfs
, 
off
, &
thªad
)) {

1136 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

1137 " hfs_ˇt_fûe_lookup: fûê(%" 
PRIuINUM
 ")", 
öum
);

1144 
	`mem£t
((*Ë&
key
, 0, (
hfs_båì_key_ˇt
));

1145 
	`mem˝y
((*Ë
key
.
∑ª¡_˙id
, (*Ë
thªad
.parent_cnid,

1146 (
key
.
∑ª¡_˙id
));

1147 
	`mem˝y
((*Ë&
key
.
«me
, (*Ë&
thªad
.name, (key.name));

1149 i‡(
tsk_vîbo£
)

1150 
	`tsk_Ârötf
(
°dîr
,

1152 
PRIuINUM
 ")\n", 
	`tsk_gëu32
(
fs
->
ídün
, 
key
.
∑ª¡_˙id
));

1155 
off
 = 
	`hfs_ˇt_gë_ªc‹d_off£t
(
hfs
, &
key
);

1156 i‡(
off
 == 0) {

1158 i‡(
tsk_î∫o
 == 0) {

1159 
tsk_î∫o
 = 
TSK_ERR_FS_INODE_NUM
;

1160 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

1162 
PRIuINUM
, 
öum
);

1165 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

1166 " hfs_ˇt_fûe_lookup: fûê(%" 
PRIuINUM
 ")", 
öum
);

1172 i‡(
	`hfs_ˇt_ªad_fûe_fﬁdî_ªc‹d
(
hfs
, 
off
, &
ªc‹d
)) {

1173 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

1174 " hfs_ˇt_fûe_lookup: fûê(%" 
PRIuINUM
 ")", 
öum
);

1179 i‡(
	`tsk_gëu16
(
fs
->
ídün
,

1180 
ªc‹d
.
fûe
.
°d
.
ªc_ty≥
Ë=
HFS_FOLDER_RECORD
) {

1181 i‡(
tsk_vîbo£
)

1182 
	`Ârötf
(
°dîr
,

1183 "hfs_ˇt_fûe_lookup: found fﬁdîÑec‹d vÆí˚ %" 
PRIu32


1184 ", cnid %" 
PRIu32
 "\n", 
	`tsk_gëu32
(
fs
->
ídün
,

1185 
ªc‹d
.
fﬁdî
.
°d
.
vÆí˚
), 
	`tsk_gëu32
(
fs
->
ídün
,

1186 
ªc‹d
.
fﬁdî
.
°d
.
˙id
));

1187 
	`mem˝y
((*Ë&
íåy
->
ˇt
, (*Ë&
ªc‹d
, (
hfs_fﬁdî
));

1189 i‡(
	`tsk_gëu16
(
fs
->
ídün
,

1190 
ªc‹d
.
fûe
.
°d
.
ªc_ty≥
Ë=
HFS_FILE_RECORD
) {

1191 i‡(
tsk_vîbo£
)

1192 
	`Ârötf
(
°dîr
,

1193 "hfs_ˇt_fûe_lookup: found fûêªc‹d cnid %" 
PRIu32


1194 "\n", 
	`tsk_gëu32
(
fs
->
ídün
, 
ªc‹d
.
fûe
.
°d
.
˙id
));

1195 
	`mem˝y
((*Ë&
íåy
->
ˇt
, (*Ë&
ªc‹d
, (
hfs_fûe
));

1199 
	`mem˝y
((*Ë&
íåy
->
thªad
, (*Ë&thªad, (
hfs_thªad
));

1201 
íåy
->
Êags
 = 
TSK_FS_META_FLAG_ALLOC
 | 
TSK_FS_META_FLAG_USED
;

1202 
íåy
->
öum
 = inum;

1204 i‡(
tsk_vîbo£
)

1205 
	`tsk_Ârötf
(
°dîr
, "hfs_cat_file_lookupÉxited\n");

1207 
	}
}

1215 
TSK_INUM_T


1216 
	$hfs_föd_highe°_öum
(
HFS_INFO
 * 
hfs
)

1225 
TSK_FS_INFO
 *
fs
 = (TSK_FS_INFO *Ë& (
hfs
->
fs_öfo
);

1227 i‡(
	`tsk_gëu32
(
fs
->
ídün
, 
hfs
->fs->
©å
Ë& 
HFS_VH_ATTR_CNIDS_REUSED
)

1228  (
TSK_INUM_T
) 0xffffffff;

1230  (
TSK_INUM_T
Ë
	`tsk_gëu32
(
fs
->
ídün
,

1231 
hfs
->
fs
->
√xt_ˇt_id
) - 1;

1232 
	}
}

1236 
TSK_FS_META_MODE_ENUM


1237 
	$hfsmode2tskmode
(
uöt16_t
 
a_mode
)

1239 
TSK_FS_META_MODE_ENUM
 
mode
 = 0;

1241 i‡(
a_mode
 & 
HFS_IN_ISUID
)

1242 
mode
 |
TSK_FS_META_MODE_ISUID
;

1243 i‡(
a_mode
 & 
HFS_IN_ISGID
)

1244 
mode
 |
TSK_FS_META_MODE_ISGID
;

1245 i‡(
a_mode
 & 
HFS_IN_ISVTX
)

1246 
mode
 |
TSK_FS_META_MODE_ISVTX
;

1248 i‡(
a_mode
 & 
HFS_IN_IRUSR
)

1249 
mode
 |
TSK_FS_META_MODE_IRUSR
;

1250 i‡(
a_mode
 & 
HFS_IN_IWUSR
)

1251 
mode
 |
TSK_FS_META_MODE_IWUSR
;

1252 i‡(
a_mode
 & 
HFS_IN_IXUSR
)

1253 
mode
 |
TSK_FS_META_MODE_IXUSR
;

1255 i‡(
a_mode
 & 
HFS_IN_IRGRP
)

1256 
mode
 |
TSK_FS_META_MODE_IRGRP
;

1257 i‡(
a_mode
 & 
HFS_IN_IWGRP
)

1258 
mode
 |
TSK_FS_META_MODE_IWGRP
;

1259 i‡(
a_mode
 & 
HFS_IN_IXGRP
)

1260 
mode
 |
TSK_FS_META_MODE_IXGRP
;

1262 i‡(
a_mode
 & 
HFS_IN_IROTH
)

1263 
mode
 |
TSK_FS_META_MODE_IROTH
;

1264 i‡(
a_mode
 & 
HFS_IN_IWOTH
)

1265 
mode
 |
TSK_FS_META_MODE_IWOTH
;

1266 i‡(
a_mode
 & 
HFS_IN_IXOTH
)

1267 
mode
 |
TSK_FS_META_MODE_IXOTH
;

1269  
mode
;

1270 
	}
}

1272 
TSK_FS_META_TYPE_ENUM


1273 
	$hfsmode2tskmë©y≥
(
uöt16_t
 
a_mode
)

1275 
a_mode
 & 
HFS_IN_IFMT
) {

1276 
HFS_IN_IFIFO
:

1277  
TSK_FS_META_TYPE_FIFO
;

1278 
HFS_IN_IFCHR
:

1279  
TSK_FS_META_TYPE_CHR
;

1280 
HFS_IN_IFDIR
:

1281  
TSK_FS_META_TYPE_DIR
;

1282 
HFS_IN_IFBLK
:

1283  
TSK_FS_META_TYPE_BLK
;

1284 
HFS_IN_IFREG
:

1285  
TSK_FS_META_TYPE_REG
;

1286 
HFS_IN_IFLNK
:

1287  
TSK_FS_META_TYPE_LNK
;

1288 
HFS_IN_IFSOCK
:

1289  
TSK_FS_META_TYPE_SOCK
;

1290 
HFS_IFWHT
:

1291  
TSK_FS_META_TYPE_WHT
;

1292 
HFS_IFXATTR
:

1293  
TSK_FS_META_TYPE_UNDEF
;

1296  
TSK_FS_META_TYPE_UNDEF
;

1298 
	}
}

1301 
uöt8_t


1302 
	$hfs_make_•ecülba£
(
TSK_FS_FILE
 * 
fs_fûe
)

1304 
fs_fûe
->
mëa
->
ty≥
 = 
TSK_FS_META_TYPE_REG
;

1305 
fs_fûe
->
mëa
->
mode
 = 0;

1306 
fs_fûe
->
mëa
->
∆ök
 = 1;

1307 
fs_fûe
->
mëa
->
Êags
 =

1308 (
TSK_FS_META_FLAG_USED
 | 
TSK_FS_META_FLAG_ALLOC
);

1309 
fs_fûe
->
mëa
->
uid
 = fs_fûe->mëa->
gid
 = 0;

1310 
fs_fûe
->
mëa
->
mtime
 = fs_fûe->mëa->
©ime
 = fs_fûe->mëa->
˘ime
 =

1311 
fs_fûe
->
mëa
->
¸time
 = 0;

1312 
fs_fûe
->
mëa
->
mtime_«no
 = fs_fûe->mëa->
©ime_«no
 =

1313 
fs_fûe
->
mëa
->
˘ime_«no
 = fs_fûe->mëa->
¸time_«no
 = 0;

1315 i‡(
fs_fûe
->
mëa
->
«me2
 =
NULL
) {

1316 i‡((
fs_fûe
->
mëa
->
«me2
 = (
TSK_FS_META_NAME_LIST
 *)

1317 
	`tsk_mÆloc
((
TSK_FS_META_NAME_LIST
))Ë=
NULL
)

1319 
fs_fûe
->
mëa
->
«me2
->
√xt
 = 
NULL
;

1322 i‡(
fs_fûe
->
mëa
->
©å
 !
NULL
) {

1323 
	`tsk_fs_©åli°_m¨kunu£d
(
fs_fûe
->
mëa
->
©å
);

1326 
fs_fûe
->
mëa
->
©å
 = 
	`tsk_fs_©åli°_Æloc
();

1329 
	}
}

1339 
uöt8_t


1340 
	$hfs_make_ˇèlog
(
HFS_INFO
 * 
hfs
, 
TSK_FS_FILE
 * 
fs_fûe
)

1342 
TSK_FS_INFO
 *
fs
 = (TSK_FS_INFO *Ë
hfs
;

1343 
TSK_FS_ATTR
 *
fs_©å
;

1344 
TSK_FS_ATTR_RUN
 *
©å_run
;

1346 i‡(
tsk_vîbo£
)

1347 
	`tsk_Ârötf
(
°dîr
,

1350 i‡(
	`hfs_make_•ecülba£
(
fs_fûe
))

1353 
fs_fûe
->
mëa
->
addr
 = 
HFS_CATALOG_FILE_ID
;

1354 
	`°∫˝y
(
fs_fûe
->
mëa
->
«me2
->
«me
, 
HFS_CATALOGNAME
,

1355 
TSK_FS_META_NAME_LIST_NSIZE
);

1357 
fs_fûe
->
mëa
->
size
 =

1358 
	`tsk_gëu64
(
fs
->
ídün
, 
hfs
->fs->
ˇt_fûe
.
logic_sz
);

1362 i‡(((
©å_run
 =

1363 
	`hfs_exã¡s_to_©å
(
fs
, 
hfs
->fs->
ˇt_fûe
.
exã¡s
,

1364 0)Ë=
NULL
Ë&& (
tsk_î∫o
)) {

1365 
	`°∫ˇt
(
tsk_îr°r2
, " - hfs_make_catalog",

1366 
TSK_ERRSTR_L
 - 
	`°æí
(
tsk_îr°r2
));

1370 i‡((
fs_©å
 =

1371 
	`tsk_fs_©åli°_gë√w
(
fs_fûe
->
mëa
->
©å
,

1372 
TSK_FS_ATTR_NONRES
)Ë=
NULL
) {

1373 
	`°∫ˇt
(
tsk_îr°r2
, " - hfs_make_catalog",

1374 
TSK_ERRSTR_L
 - 
	`°æí
(
tsk_îr°r2
));

1375 
	`tsk_fs_©å_run_‰ì
(
©å_run
);

1380 i‡(
	`tsk_fs_©å_£t_run
(
fs_fûe
, 
fs_©å
, 
©å_run
, 
NULL
,

1381 
TSK_FS_ATTR_TYPE_DEFAULT
, 
TSK_FS_ATTR_ID_DEFAULT
,

1382 
	`tsk_gëu64
(
fs
->
ídün
, 
hfs
->fs->
ˇt_fûe
.
logic_sz
),

1383 
	`tsk_gëu64
(
fs
->
ídün
, 
hfs
->fs->
ˇt_fûe
.
logic_sz
),

1384 
	`tsk_gëu64
(
fs
->
ídün
, 
hfs
->fs->
ˇt_fûe
.
logic_sz
), 0, 0)) {

1385 
	`°∫ˇt
(
tsk_îr°r2
, " - hfs_make_catalog",

1386 
TSK_ERRSTR_L
 - 
	`°æí
(
tsk_îr°r2
));

1387 
	`tsk_fs_©å_‰ì
(
fs_©å
);

1388 
	`tsk_fs_©å_run_‰ì
(
©å_run
);

1393 i‡(
	`hfs_ext_föd_exã¡_ªc‹d_©å
(
hfs
, 
HFS_CATALOG_FILE_ID
, 
fs_©å
)) {

1394 
	`°∫ˇt
(
tsk_îr°r2
, " - hfs_make_catalog",

1395 
TSK_ERRSTR_L
 - 
	`°æí
(
tsk_îr°r2
));

1396 
fs_fûe
->
mëa
->
©å_°©e
 = 
TSK_FS_META_ATTR_ERROR
;

1400 
fs_fûe
->
mëa
->
©å_°©e
 = 
TSK_FS_META_ATTR_STUDIED
;

1402 
	}
}

1412 
uöt8_t


1413 
	$hfs_make_exã¡s
(
HFS_INFO
 * 
hfs
, 
TSK_FS_FILE
 * 
fs_fûe
)

1415 
TSK_FS_INFO
 *
fs
 = (TSK_FS_INFO *Ë
hfs
;

1416 
TSK_FS_ATTR
 *
fs_©å
;

1417 
TSK_FS_ATTR_RUN
 *
©å_run
;

1419 i‡(
tsk_vîbo£
)

1420 
	`tsk_Ârötf
(
°dîr
,

1423 i‡(
	`hfs_make_•ecülba£
(
fs_fûe
))

1426 
fs_fûe
->
mëa
->
addr
 = 
HFS_EXTENTS_FILE_ID
;

1427 
	`°∫˝y
(
fs_fûe
->
mëa
->
«me2
->
«me
, 
HFS_EXTENTSNAME
,

1428 
TSK_FS_META_NAME_LIST_NSIZE
);

1430 
fs_fûe
->
mëa
->
size
 =

1431 
	`tsk_gëu64
(
fs
->
ídün
, 
hfs
->fs->
ext_fûe
.
logic_sz
);

1434 i‡(((
©å_run
 =

1435 
	`hfs_exã¡s_to_©å
(
fs
, 
hfs
->fs->
ext_fûe
.
exã¡s
,

1436 0)Ë=
NULL
Ë&& (
tsk_î∫o
)) {

1437 
	`°∫ˇt
(
tsk_îr°r2
, " - hfs_make_extents",

1438 
TSK_ERRSTR_L
 - 
	`°æí
(
tsk_îr°r2
));

1442 i‡((
fs_©å
 =

1443 
	`tsk_fs_©åli°_gë√w
(
fs_fûe
->
mëa
->
©å
,

1444 
TSK_FS_ATTR_NONRES
)Ë=
NULL
) {

1445 
	`°∫ˇt
(
tsk_îr°r2
, " - hfs_make_extents",

1446 
TSK_ERRSTR_L
 - 
	`°æí
(
tsk_îr°r2
));

1447 
	`tsk_fs_©å_run_‰ì
(
©å_run
);

1452 i‡(
	`tsk_fs_©å_£t_run
(
fs_fûe
, 
fs_©å
, 
©å_run
, 
NULL
,

1453 
TSK_FS_ATTR_TYPE_DEFAULT
, 
TSK_FS_ATTR_ID_DEFAULT
,

1454 
	`tsk_gëu64
(
fs
->
ídün
, 
hfs
->fs->
ext_fûe
.
logic_sz
),

1455 
	`tsk_gëu64
(
fs
->
ídün
, 
hfs
->fs->
ext_fûe
.
logic_sz
),

1456 
	`tsk_gëu64
(
fs
->
ídün
, 
hfs
->fs->
ext_fûe
.
logic_sz
), 0, 0)) {

1457 
	`°∫ˇt
(
tsk_îr°r2
, " - hfs_make_extents",

1458 
TSK_ERRSTR_L
 - 
	`°æí
(
tsk_îr°r2
));

1459 
	`tsk_fs_©å_‰ì
(
fs_©å
);

1460 
	`tsk_fs_©å_run_‰ì
(
©å_run
);

1466 
fs_fûe
->
mëa
->
©å_°©e
 = 
TSK_FS_META_ATTR_STUDIED
;

1468 
	}
}

1479 
uöt8_t


1480 
	$hfs_make_blockm≠
(
HFS_INFO
 * 
hfs
, 
TSK_FS_FILE
 * 
fs_fûe
)

1482 
TSK_FS_INFO
 *
fs
 = (TSK_FS_INFO *Ë
hfs
;

1483 
TSK_FS_ATTR
 *
fs_©å
;

1484 
TSK_FS_ATTR_RUN
 *
©å_run
;

1486 i‡(
tsk_vîbo£
)

1487 
	`tsk_Ârötf
(
°dîr
,

1490 i‡(
	`hfs_make_•ecülba£
(
fs_fûe
))

1493 
fs_fûe
->
mëa
->
addr
 = 
HFS_ALLOCATION_FILE_ID
;

1494 
	`°∫˝y
(
fs_fûe
->
mëa
->
«me2
->
«me
, 
HFS_ALLOCATIONNAME
,

1495 
TSK_FS_META_NAME_LIST_NSIZE
);

1497 
fs_fûe
->
mëa
->
size
 =

1498 
	`tsk_gëu64
(
fs
->
ídün
, 
hfs
->fs->
Æloc_fûe
.
logic_sz
);

1500 i‡(((
©å_run
 =

1501 
	`hfs_exã¡s_to_©å
(
fs
, 
hfs
->fs->
Æloc_fûe
.
exã¡s
,

1502 0)Ë=
NULL
Ë&& (
tsk_î∫o
)) {

1503 
	`°∫ˇt
(
tsk_îr°r2
, " - hfs_make_blockmap",

1504 
TSK_ERRSTR_L
 - 
	`°æí
(
tsk_îr°r2
));

1508 i‡((
fs_©å
 =

1509 
	`tsk_fs_©åli°_gë√w
(
fs_fûe
->
mëa
->
©å
,

1510 
TSK_FS_ATTR_NONRES
)Ë=
NULL
) {

1511 
	`°∫ˇt
(
tsk_îr°r2
, " - hfs_make_blockmap",

1512 
TSK_ERRSTR_L
 - 
	`°æí
(
tsk_îr°r2
));

1513 
	`tsk_fs_©å_run_‰ì
(
©å_run
);

1518 i‡(
	`tsk_fs_©å_£t_run
(
fs_fûe
, 
fs_©å
, 
©å_run
, 
NULL
,

1519 
TSK_FS_ATTR_TYPE_DEFAULT
, 
TSK_FS_ATTR_ID_DEFAULT
,

1520 
	`tsk_gëu64
(
fs
->
ídün
, 
hfs
->fs->
Æloc_fûe
.
logic_sz
),

1521 
	`tsk_gëu64
(
fs
->
ídün
, 
hfs
->fs->
Æloc_fûe
.
logic_sz
),

1522 
	`tsk_gëu64
(
fs
->
ídün
, 
hfs
->fs->
Æloc_fûe
.
logic_sz
), 0, 0)) {

1523 
	`°∫ˇt
(
tsk_îr°r2
, " - hfs_make_blockmap",

1524 
TSK_ERRSTR_L
 - 
	`°æí
(
tsk_îr°r2
));

1525 
	`tsk_fs_©å_‰ì
(
fs_©å
);

1526 
	`tsk_fs_©å_run_‰ì
(
©å_run
);

1531 i‡(
	`hfs_ext_föd_exã¡_ªc‹d_©å
(
hfs
, 
HFS_ALLOCATION_FILE_ID
,

1532 
fs_©å
)) {

1533 
	`°∫ˇt
(
tsk_îr°r2
, " - hfs_make_blockmap",

1534 
TSK_ERRSTR_L
 - 
	`°æí
(
tsk_îr°r2
));

1535 
fs_fûe
->
mëa
->
©å_°©e
 = 
TSK_FS_META_ATTR_ERROR
;

1539 
fs_fûe
->
mëa
->
©å_°©e
 = 
TSK_FS_META_ATTR_STUDIED
;

1541 
	}
}

1551 
uöt8_t


1552 
	$hfs_make_°¨tfûe
(
HFS_INFO
 * 
hfs
, 
TSK_FS_FILE
 * 
fs_fûe
)

1554 
TSK_FS_INFO
 *
fs
 = (TSK_FS_INFO *Ë
hfs
;

1555 
TSK_FS_ATTR
 *
fs_©å
;

1556 
TSK_FS_ATTR_RUN
 *
©å_run
;

1558 i‡(
tsk_vîbo£
)

1559 
	`tsk_Ârötf
(
°dîr
,

1562 i‡(
	`hfs_make_•ecülba£
(
fs_fûe
))

1565 
fs_fûe
->
mëa
->
addr
 = 
HFS_STARTUP_FILE_ID
;

1566 
	`°∫˝y
(
fs_fûe
->
mëa
->
«me2
->
«me
, 
HFS_STARTUPNAME
,

1567 
TSK_FS_META_NAME_LIST_NSIZE
);

1569 
fs_fûe
->
mëa
->
size
 =

1570 
	`tsk_gëu64
(
fs
->
ídün
, 
hfs
->fs->
°¨t_fûe
.
logic_sz
);

1572 i‡(((
©å_run
 =

1573 
	`hfs_exã¡s_to_©å
(
fs
, 
hfs
->fs->
°¨t_fûe
.
exã¡s
,

1574 0)Ë=
NULL
Ë&& (
tsk_î∫o
)) {

1575 
	`°∫ˇt
(
tsk_îr°r2
, " - hfs_make_startfile",

1576 
TSK_ERRSTR_L
 - 
	`°æí
(
tsk_îr°r2
));

1580 i‡((
fs_©å
 =

1581 
	`tsk_fs_©åli°_gë√w
(
fs_fûe
->
mëa
->
©å
,

1582 
TSK_FS_ATTR_NONRES
)Ë=
NULL
) {

1583 
	`°∫ˇt
(
tsk_îr°r2
, " - hfs_make_startfile",

1584 
TSK_ERRSTR_L
 - 
	`°æí
(
tsk_îr°r2
));

1585 
	`tsk_fs_©å_run_‰ì
(
©å_run
);

1590 i‡(
	`tsk_fs_©å_£t_run
(
fs_fûe
, 
fs_©å
, 
©å_run
, 
NULL
,

1591 
TSK_FS_ATTR_TYPE_DEFAULT
, 
TSK_FS_ATTR_ID_DEFAULT
,

1592 
	`tsk_gëu64
(
fs
->
ídün
, 
hfs
->fs->
°¨t_fûe
.
logic_sz
),

1593 
	`tsk_gëu64
(
fs
->
ídün
, 
hfs
->fs->
°¨t_fûe
.
logic_sz
),

1594 
	`tsk_gëu64
(
fs
->
ídün
, 
hfs
->fs->
°¨t_fûe
.
logic_sz
), 0, 0)) {

1595 
	`°∫ˇt
(
tsk_îr°r2
, " - hfs_make_startfile",

1596 
TSK_ERRSTR_L
 - 
	`°æí
(
tsk_îr°r2
));

1597 
	`tsk_fs_©å_‰ì
(
fs_©å
);

1598 
	`tsk_fs_©å_run_‰ì
(
©å_run
);

1603 i‡(
	`hfs_ext_föd_exã¡_ªc‹d_©å
(
hfs
, 
HFS_STARTUP_FILE_ID
, 
fs_©å
)) {

1604 
	`°∫ˇt
(
tsk_îr°r2
, " - hfs_make_startfile",

1605 
TSK_ERRSTR_L
 - 
	`°æí
(
tsk_îr°r2
));

1606 
fs_fûe
->
mëa
->
©å_°©e
 = 
TSK_FS_META_ATTR_ERROR
;

1610 
fs_fûe
->
mëa
->
©å_°©e
 = 
TSK_FS_META_ATTR_STUDIED
;

1612 
	}
}

1623 
uöt8_t


1624 
	$hfs_make_©åfûe
(
HFS_INFO
 * 
hfs
, 
TSK_FS_FILE
 * 
fs_fûe
)

1626 
TSK_FS_INFO
 *
fs
 = (TSK_FS_INFO *Ë
hfs
;

1627 
TSK_FS_ATTR
 *
fs_©å
;

1628 
TSK_FS_ATTR_RUN
 *
©å_run
;

1630 i‡(
tsk_vîbo£
)

1631 
	`tsk_Ârötf
(
°dîr
,

1634 i‡(
	`hfs_make_•ecülba£
(
fs_fûe
))

1637 
fs_fûe
->
mëa
->
addr
 = 
HFS_ATTRIBUTES_FILE_ID
;

1638 
	`°∫˝y
(
fs_fûe
->
mëa
->
«me2
->
«me
, 
HFS_ATTRIBUTESNAME
,

1639 
TSK_FS_META_NAME_LIST_NSIZE
);

1641 
fs_fûe
->
mëa
->
size
 =

1642 
	`tsk_gëu64
(
fs
->
ídün
, 
hfs
->fs->
©å_fûe
.
logic_sz
);

1644 i‡(((
©å_run
 =

1645 
	`hfs_exã¡s_to_©å
(
fs
, 
hfs
->fs->
©å_fûe
.
exã¡s
,

1646 0)Ë=
NULL
Ë&& (
tsk_î∫o
)) {

1647 
	`°∫ˇt
(
tsk_îr°r2
, " - hfs_make_attrfile",

1648 
TSK_ERRSTR_L
 - 
	`°æí
(
tsk_îr°r2
));

1652 i‡((
fs_©å
 =

1653 
	`tsk_fs_©åli°_gë√w
(
fs_fûe
->
mëa
->
©å
,

1654 
TSK_FS_ATTR_NONRES
)Ë=
NULL
) {

1655 
	`°∫ˇt
(
tsk_îr°r2
, " - hfs_make_attrfile",

1656 
TSK_ERRSTR_L
 - 
	`°æí
(
tsk_îr°r2
));

1657 
	`tsk_fs_©å_run_‰ì
(
©å_run
);

1662 i‡(
	`tsk_fs_©å_£t_run
(
fs_fûe
, 
fs_©å
, 
©å_run
, 
NULL
,

1663 
TSK_FS_ATTR_TYPE_DEFAULT
, 
TSK_FS_ATTR_ID_DEFAULT
,

1664 
	`tsk_gëu64
(
fs
->
ídün
, 
hfs
->fs->
©å_fûe
.
logic_sz
),

1665 
	`tsk_gëu64
(
fs
->
ídün
, 
hfs
->fs->
©å_fûe
.
logic_sz
),

1666 
	`tsk_gëu64
(
fs
->
ídün
, 
hfs
->fs->
©å_fûe
.
logic_sz
), 0, 0)) {

1667 
	`°∫ˇt
(
tsk_îr°r2
, " - hfs_make_attrfile",

1668 
TSK_ERRSTR_L
 - 
	`°æí
(
tsk_îr°r2
));

1669 
	`tsk_fs_©å_‰ì
(
fs_©å
);

1670 
	`tsk_fs_©å_run_‰ì
(
©å_run
);

1675 i‡(
	`hfs_ext_föd_exã¡_ªc‹d_©å
(
hfs
, 
HFS_ATTRIBUTES_FILE_ID
,

1676 
fs_©å
)) {

1677 
	`°∫ˇt
(
tsk_îr°r2
, " - hfs_make_attrfile",

1678 
TSK_ERRSTR_L
 - 
	`°æí
(
tsk_îr°r2
));

1679 
fs_fûe
->
mëa
->
©å_°©e
 = 
TSK_FS_META_ATTR_ERROR
;

1683 
fs_fûe
->
mëa
->
©å_°©e
 = 
TSK_FS_META_ATTR_STUDIED
;

1685 
	}
}

1695 
uöt8_t


1696 
	$hfs_make_badblockfûe
(
HFS_INFO
 * 
hfs
, 
TSK_FS_FILE
 * 
fs_fûe
)

1698 
TSK_FS_ATTR
 *
fs_©å
;

1700 i‡(
tsk_vîbo£
)

1701 
	`tsk_Ârötf
(
°dîr
,

1704 i‡(
	`hfs_make_•ecülba£
(
fs_fûe
))

1707 
fs_fûe
->
mëa
->
addr
 = 
HFS_BAD_BLOCK_FILE_ID
;

1708 
	`°∫˝y
(
fs_fûe
->
mëa
->
«me2
->
«me
, 
HFS_BAD_BLOCK_FILE_NAME
,

1709 
TSK_FS_META_NAME_LIST_NSIZE
);

1711 
fs_fûe
->
mëa
->
size
 = 0;

1713 i‡((
fs_©å
 =

1714 
	`tsk_fs_©åli°_gë√w
(
fs_fûe
->
mëa
->
©å
,

1715 
TSK_FS_ATTR_NONRES
)Ë=
NULL
) {

1716 
	`°∫ˇt
(
tsk_îr°r2
, " - hfs_make_attrfile",

1717 
TSK_ERRSTR_L
 - 
	`°æí
(
tsk_îr°r2
));

1722 i‡(
	`tsk_fs_©å_£t_run
(
fs_fûe
, 
fs_©å
, 
NULL
, NULL,

1723 
TSK_FS_ATTR_TYPE_DEFAULT
, 
TSK_FS_ATTR_ID_DEFAULT
,

1724 
fs_fûe
->
mëa
->
size
, fs_file->meta->size, fs_file->meta->size,

1726 
	`°∫ˇt
(
tsk_îr°r2
, " - hfs_make_attrfile",

1727 
TSK_ERRSTR_L
 - 
	`°æí
(
tsk_îr°r2
));

1728 
	`tsk_fs_©å_‰ì
(
fs_©å
);

1733 i‡(
	`hfs_ext_föd_exã¡_ªc‹d_©å
(
hfs
, 
HFS_BAD_BLOCK_FILE_ID
,

1734 
fs_©å
)) {

1735 
	`°∫ˇt
(
tsk_îr°r2
, " - hfs_make_attrfile",

1736 
TSK_ERRSTR_L
 - 
	`°æí
(
tsk_îr°r2
));

1737 
fs_fûe
->
mëa
->
©å_°©e
 = 
TSK_FS_META_ATTR_ERROR
;

1745 
fs_fûe
->
mëa
->
size
 = 
fs_©å
->
ƒd
.
öôsize
;

1746 
fs_©å
->
size
 = 
fs_fûe
->
mëa
->size;

1747 
fs_©å
->
ƒd
.
Ælocsize
 = 
fs_fûe
->
mëa
->
size
;

1749 
fs_fûe
->
mëa
->
©å_°©e
 = 
TSK_FS_META_ATTR_STUDIED
;

1751 
	}
}

1761 
uöt8_t


1762 
	$hfs_döode_c›y
(
HFS_INFO
 * 
a_hfs
, c⁄° 
hfs_fûe_fﬁdî
 * 
a_íåy
,

1763 
TSK_FS_META
 * 
a_fs_mëa
)

1765 c⁄° 
hfs_fûe_fﬁd_°d
 *
°d
;

1766 
TSK_FS_INFO
 *
fs
 = (TSK_FS_INFO *Ë& 
a_hfs
->
fs_öfo
;

1767 
uöt16_t
 
hfsmode
;

1769 i‡(
a_fs_mëa
 =
NULL
) {

1770 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

1771 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

1777 
°d
 = &(
a_íåy
->
fûe
.std);

1779 i‡(
tsk_vîbo£
)

1780 
	`tsk_Ârötf
(
°dîr
,

1781 "hfs_döode_c›y: cÆÀd f‹ fûe/fﬁdî %" 
PRIu32
 "\n",

1782 
	`tsk_gëu32
(
fs
->
ídün
, 
°d
->
˙id
));

1784 i‡(
a_fs_mëa
->
c⁄ã¡_Àn
 < 
HFS_FILE_CONTENT_LEN
) {

1785 i‡((
a_fs_mëa
 =

1786 
	`tsk_fs_mëa_ªÆloc
(
a_fs_mëa
,

1787 
HFS_FILE_CONTENT_LEN
)Ë=
NULL
) {

1791 
a_fs_mëa
->
©å_°©e
 = 
TSK_FS_META_ATTR_EMPTY
;

1792 i‡(
a_fs_mëa
->
©å
) {

1793 
	`tsk_fs_©åli°_m¨kunu£d
(
a_fs_mëa
->
©å
);

1799 
hfsmode
 = 
	`tsk_gëu16
(
fs
->
ídün
, 
°d
->
≥rm
.
mode
);

1801 i‡(
	`tsk_gëu16
(
fs
->
ídün
, 
°d
->
ªc_ty≥
Ë=
HFS_FOLDER_RECORD
) {

1803 i‡((
hfsmode
 & 
HFS_IN_IFMT
) == 0)

1804 
a_fs_mëa
->
ty≥
 = 
TSK_FS_META_TYPE_DIR
;

1805 
a_fs_mëa
->
size
 = 0;

1806 
	`mem£t
(
a_fs_mëa
->
c⁄ã¡_±r
, 0, 
HFS_FILE_CONTENT_LEN
);

1808 i‡(
	`tsk_gëu16
(
fs
->
ídün
, 
°d
->
ªc_ty≥
Ë=
HFS_FILE_RECORD
) {

1809 
hfs_f‹k
 *
f‹k
;

1811 i‡((
hfsmode
 & 
HFS_IN_IFMT
) == 0)

1812 
a_fs_mëa
->
ty≥
 = 
TSK_FS_META_TYPE_REG
;

1813 
a_fs_mëa
->
size
 =

1814 
	`tsk_gëu64
(
fs
->
ídün
, 
a_íåy
->
fûe
.
d©a
.
logic_sz
);

1817 
f‹k
 = (
hfs_f‹k
 *Ë
a_fs_mëa
->
c⁄ã¡_±r
;

1818 
	`mem˝y
(
f‹k
, &(
a_íåy
->
fûe
.
d©a
), (
hfs_f‹k
));

1819 
	`mem˝y
(&
f‹k
[1], &(
a_íåy
->
fûe
.
ªsour˚
), (
hfs_f‹k
));

1822 
	`tsk_Ârötf
(
°dîr
,

1831 i‡((
hfsmode
 & 
HFS_IN_IFMT
) == 0) {

1832 
a_fs_mëa
->
mode
 = 0;

1833 
a_fs_mëa
->
uid
 = 99;

1834 
a_fs_mëa
->
gid
 = 99;

1837 
a_fs_mëa
->
mode
 = 
	`hfsmode2tskmode
(
hfsmode
);

1838 
a_fs_mëa
->
ty≥
 = 
	`hfsmode2tskmë©y≥
(
hfsmode
);

1839 
a_fs_mëa
->
uid
 = 
	`tsk_gëu32
(
fs
->
ídün
, 
°d
->
≥rm
.
ow√r
);

1840 
a_fs_mëa
->
gid
 = 
	`tsk_gëu32
(
fs
->
ídün
, 
°d
->
≥rm
.
group
);

1844 i‡(
	`tsk_gëu32
(
fs
->
ídün
, 
°d
->
≥rm
.
•ecül
.
∆ök
))

1845 
a_fs_mëa
->
∆ök
 = 
	`tsk_gëu32
(
fs
->
ídün
, 
°d
->
≥rm
.
•ecül
.nlink);

1847 
a_fs_mëa
->
∆ök
 = 1;

1849 
a_fs_mëa
->
mtime
 = 
	`hfs2unixtime
(
	`tsk_gëu32
(
fs
->
ídün
, 
°d
->
cmtime
));

1850 
a_fs_mëa
->
©ime
 = 
	`hfs2unixtime
(
	`tsk_gëu32
(
fs
->
ídün
, 
°d
->atime));

1851 
a_fs_mëa
->
¸time
 = 
	`hfs2unixtime
(
	`tsk_gëu32
(
fs
->
ídün
, 
°d
->crtime));

1852 
a_fs_mëa
->
˘ime
 = 
	`hfs2unixtime
(
	`tsk_gëu32
(
fs
->
ídün
, 
°d
->
amtime
));

1853 
a_fs_mëa
->
time2
.
hfs
.
bkup_time
 =

1854 
	`hfs2unixtime
(
	`tsk_gëu32
(
fs
->
ídün
, 
°d
->
bkup_d©e
));

1855 
a_fs_mëa
->
mtime_«no
 =á_fs_mëa->
©ime_«no
 =á_fs_mëa->
˘ime_«no
 =

1856 
a_fs_mëa
->
¸time_«no
 = 0;

1857 
a_fs_mëa
->
time2
.
hfs
.
bkup_time_«no
 = 0;

1860 
a_fs_mëa
->
addr
 = 
	`tsk_gëu32
(
fs
->
ídün
, 
°d
->
˙id
);

1863 
a_fs_mëa
->
Êags
 = 
TSK_FS_META_FLAG_ALLOC
 | 
TSK_FS_META_FLAG_USED
;

1879 
	}
}

1890 
uöt8_t


1891 
	$hfs_öode_lookup
(
TSK_FS_INFO
 * 
fs
, 
TSK_FS_FILE
 * 
a_fs_fûe
,

1892 
TSK_INUM_T
 
öum
)

1894 
HFS_INFO
 *
hfs
 = (HFS_INFO *Ë
fs
;

1895 
HFS_ENTRY
 
íåy
;

1897 i‡(
a_fs_fûe
 =
NULL
) {

1898 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

1899 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

1904 i‡(
a_fs_fûe
->
mëa
 =
NULL
) {

1905 
a_fs_fûe
->
mëa
 = 
	`tsk_fs_mëa_Æloc
(
HFS_FILE_CONTENT_LEN
);

1906 i‡(
a_fs_fûe
->
mëa
 =
NULL
)

1910 
	`tsk_fs_mëa_ª£t
(
a_fs_fûe
->
mëa
);

1913 i‡(
tsk_vîbo£
)

1914 
	`tsk_Ârötf
(
°dîr
, "hfs_öode_lookup:Üookög u∞%" 
PRIuINUM
 "\n",

1915 
öum
);

1921 i‡(
öum
 =
HFS_EXTENTS_FILE_ID
) {

1922 i‡(
	`hfs_make_exã¡s
(
hfs
, 
a_fs_fûe
))

1927 i‡(
öum
 =
HFS_CATALOG_FILE_ID
) {

1928 i‡(
	`hfs_make_ˇèlog
(
hfs
, 
a_fs_fûe
))

1933 i‡(
öum
 =
HFS_BAD_BLOCK_FILE_ID
) {

1934 i‡(
	`hfs_make_badblockfûe
(
hfs
, 
a_fs_fûe
))

1939 i‡(
öum
 =
HFS_ALLOCATION_FILE_ID
) {

1940 i‡(
	`hfs_make_blockm≠
(
hfs
, 
a_fs_fûe
))

1945 i‡(
öum
 =
HFS_STARTUP_FILE_ID
) {

1946 i‡(
	`hfs_make_°¨tfûe
(
hfs
, 
a_fs_fûe
))

1951 i‡(
öum
 =
HFS_ATTRIBUTES_FILE_ID
) {

1952 i‡(
	`hfs_make_©åfûe
(
hfs
, 
a_fs_fûe
))

1959 i‡(
	`hfs_ˇt_fûe_lookup
(
hfs
, 
öum
, &
íåy
))

1963 i‡(
	`hfs_döode_c›y
(
hfs
, (c⁄° 
hfs_fûe_fﬁdî
 *Ë&
íåy
.
ˇt
,

1964 
a_fs_fûe
->
mëa
)) {

1969 
	}
}

1978 
uöt8_t


1979 
	$hfs_lﬂd_©ås
(
TSK_FS_FILE
 * 
fs_fûe
)

1981 
TSK_FS_INFO
 *
fs
;

1982 
HFS_INFO
 *
hfs
;

1983 
TSK_FS_ATTR
 *
fs_©å
;

1984 
TSK_FS_ATTR_RUN
 *
©å_run
;

1985 
hfs_f‹k
 *
f‹k
;

1988 
	`tsk_îr‹_ª£t
();

1990 i‡((
fs_fûe
 =
NULL
Ë|| (fs_fûe->
mëa
 == NULL)

1991 || (
fs_fûe
->
fs_öfo
 =
NULL
)) {

1992 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

1993 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

1997 i‡(
fs_fûe
->
mëa
->
c⁄ã¡_±r
 =
NULL
) {

1998 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

1999 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

2003 
fs
 = (
TSK_FS_INFO
 *Ë
fs_fûe
->
fs_öfo
;

2004 
hfs
 = (
HFS_INFO
 *Ë
fs
;

2006 i‡(
tsk_vîbo£
)

2007 
	`tsk_Ârötf
(
°dîr
,

2008 "hfs_lﬂd_©ås: Pro˚ssög fûê%" 
PRIuINUM
 "\n",

2009 
fs_fûe
->
mëa
->
addr
);

2012 i‡(
fs_fûe
->
mëa
->
©å_°©e
 =
TSK_FS_META_ATTR_STUDIED
) {

2015 i‡(
fs_fûe
->
mëa
->
©å_°©e
 =
TSK_FS_META_ATTR_ERROR
) {

2019 i‡(
fs_fûe
->
mëa
->
©å
 !
NULL
) {

2020 
	`tsk_fs_©åli°_m¨kunu£d
(
fs_fûe
->
mëa
->
©å
);

2022 i‡(
fs_fûe
->
mëa
->
©å
 =
NULL
) {

2023 
fs_fûe
->
mëa
->
©å
 = 
	`tsk_fs_©åli°_Æloc
();

2027 i‡((
fs_©å
 =

2028 
	`tsk_fs_©åli°_gë√w
(
fs_fûe
->
mëa
->
©å
,

2029 
TSK_FS_ATTR_NONRES
)Ë=
NULL
) {

2030 
	`°∫ˇt
(
tsk_îr°r2
, " - hfs_load_attrs",

2031 
TSK_ERRSTR_L
 - 
	`°æí
(
tsk_îr°r2
));

2039 i‡((
fs_fûe
->
mëa
->
ty≥
 !
TSK_FS_META_TYPE_REG
)

2040 && (
fs_fûe
->
mëa
->
ty≥
 !
TSK_FS_META_TYPE_LNK
)) {

2041 i‡(
	`tsk_fs_©å_£t_run
(
fs_fûe
, 
fs_©å
, 
NULL
, NULL,

2042 
TSK_FS_ATTR_TYPE_DEFAULT
, 
TSK_FS_ATTR_ID_DEFAULT
, 0, 0, 0,

2044 
	`°∫ˇt
(
tsk_îr°r2
, " - hfs_load_attrs (non-file)",

2045 
TSK_ERRSTR_L
 - 
	`°æí
(
tsk_îr°r2
));

2048 
fs_fûe
->
mëa
->
©å_°©e
 = 
TSK_FS_META_ATTR_STUDIED
;

2073 
f‹k
 = (
hfs_f‹k
 *Ë
fs_fûe
->
mëa
->
c⁄ã¡_±r
;

2074 i‡(((
©å_run
 = 
	`hfs_exã¡s_to_©å
(
fs
, 
f‹k
->
exã¡s
, 0)Ë=
NULL
)

2075 && (
tsk_î∫o
)) {

2076 
	`°∫ˇt
(
tsk_îr°r2
, " - hfs_load_attrs",

2077 
TSK_ERRSTR_L
 - 
	`°æí
(
tsk_îr°r2
));

2082 i‡(
	`tsk_fs_©å_£t_run
(
fs_fûe
, 
fs_©å
, 
©å_run
, 
NULL
,

2083 
TSK_FS_ATTR_TYPE_DEFAULT
, 
TSK_FS_ATTR_ID_DEFAULT
,

2084 
	`tsk_gëu64
(
fs
->
ídün
, 
f‹k
->
logic_sz
),

2085 
	`tsk_gëu64
(
fs
->
ídün
, 
f‹k
->
logic_sz
),

2086 (
TSK_OFF_T
Ë
	`tsk_gëu32
(
fs
->
ídün
,

2087 
f‹k
->
tŸÆ_blk
Ë* 
fs
->
block_size
, 0, 0)) {

2088 
	`°∫ˇt
(
tsk_îr°r2
, " - hfs_load_attrs",

2089 
TSK_ERRSTR_L
 - 
	`°æí
(
tsk_îr°r2
));

2090 
	`tsk_fs_©å_run_‰ì
(
©å_run
);

2095 i‡(
	`hfs_ext_föd_exã¡_ªc‹d_©å
(
hfs
,

2096 (
uöt32_t
Ë
fs_fûe
->
mëa
->
addr
, 
fs_©å
)) {

2097 
	`°∫ˇt
(
tsk_îr°r2
, " - hfs_load_attrs",

2098 
TSK_ERRSTR_L
 - 
	`°æí
(
tsk_îr°r2
));

2099 
fs_fûe
->
mëa
->
©å_°©e
 = 
TSK_FS_META_ATTR_ERROR
;

2105 
fs_fûe
->
mëa
->
©å_°©e
 = 
TSK_FS_META_ATTR_STUDIED
;

2108 
	}
}

2122 
öt8_t


2123 
	$hfs_block_is_Æloc
(
HFS_INFO
 * 
hfs
, 
TSK_DADDR_T
 
a_addr
)

2125 
TSK_FS_INFO
 *
fs
 = &(
hfs
->
fs_öfo
);

2126 
TSK_OFF_T
 
b
;

2127 
size_t
 
b2
;

2130 i‡(
hfs
->
blockm≠_fûe
 =
NULL
) {

2131 i‡((
hfs
->
blockm≠_fûe
 =

2132 
	`tsk_fs_fûe_›í_mëa
(
fs
, 
NULL
,

2133 
HFS_ALLOCATION_FILE_ID
)Ë=
NULL
) {

2134 
	`°∫ˇt
(
tsk_îr°r2
, " - Loading blockmap file",

2135 
TSK_ERRSTR_L
 - 
	`°æí
(
tsk_îr°r2
));

2140 
hfs
->
blockm≠_©å
 =

2141 
	`tsk_fs_©åli°_gë
(
hfs
->
blockm≠_fûe
->
mëa
->
©å
,

2142 
TSK_FS_ATTR_TYPE_DEFAULT
);

2143 i‡(!
hfs
->
blockm≠_©å
) {

2144 
	`°∫ˇt
(
tsk_îr°r2
,

2146 
TSK_ERRSTR_L
 - 
	`°æí
(
tsk_îr°r2
));

2149 
hfs
->
blockm≠_ˇche_°¨t
 = -1;

2150 
hfs
->
blockm≠_ˇche_Àn
 = 0;

2154 
b
 = (
TSK_OFF_T
Ë
a_addr
 / 8;

2155 i‡(
b
 > 
hfs
->
blockm≠_fûe
->
mëa
->
size
) {

2156 
tsk_î∫o
 = 
TSK_ERR_FS_CORRUPT
;

2157 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

2158 "hfs_block_is_Æloc: block %" 
PRIuDADDR


2159 " i†toÿœrgêf‹ bôm≠ (%" 
PRIuOFF
 ")", 
a_addr
,

2160 
hfs
->
blockm≠_fûe
->
mëa
->
size
);

2165 i‡((
hfs
->
blockm≠_ˇche_°¨t
 == -1)

2166 || (
hfs
->
blockm≠_ˇche_°¨t
 > 
b
)

2167 || (
hfs
->
blockm≠_ˇche_°¨t
 + hfs->
blockm≠_ˇche_Àn
 <
b
)) {

2168 
size_t
 
˙t
 = 
	`tsk_fs_©å_ªad
(
hfs
->
blockm≠_©å
, 
b
,

2169 
hfs
->
blockm≠_ˇche
,

2170 (
hfs
->
blockm≠_ˇche
), 0);

2171 i‡(
˙t
 < 1) {

2172 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

2174 
PRIuOFF
, 
b
);

2177 
hfs
->
blockm≠_ˇche_°¨t
 = 
b
;

2178 
hfs
->
blockm≠_ˇche_Àn
 = 
˙t
;

2180 
b2
 = (
size_t
Ë(
b
 - 
hfs
->
blockm≠_ˇche_°¨t
);

2181  (
hfs
->
blockm≠_ˇche
[
b2
] & (1 << (7 - (
a_addr
 % 8)))) != 0;

2182 
	}
}

2185 
TSK_FS_BLOCK_FLAG_ENUM


2186 
	$hfs_block_gëÊags
(
TSK_FS_INFO
 * 
a_fs
, 
TSK_DADDR_T
 
a_addr
)

2188  (
	`hfs_block_is_Æloc
((
HFS_INFO
 *Ë
a_fs
, 
a_addr
) == 1) ?

2189 
TSK_FS_BLOCK_FLAG_ALLOC
 : 
TSK_FS_BLOCK_FLAG_UNALLOC
;

2190 
	}
}

2193 
uöt8_t


2194 
	$hfs_block_wÆk
(
TSK_FS_INFO
 * 
fs
, 
TSK_DADDR_T
 
°¨t_blk
,

2195 
TSK_DADDR_T
 
íd_blk
, 
TSK_FS_BLOCK_WALK_FLAG_ENUM
 
Êags
,

2196 
TSK_FS_BLOCK_WALK_CB
 
a˘i⁄
, *
±r
)

2198 *
my«me
 = "hfs_block_walk";

2199 
HFS_INFO
 *
hfs
 = (HFS_INFO *Ë
fs
;

2200 
TSK_FS_BLOCK
 *
fs_block
;

2201 
TSK_DADDR_T
 
addr
;

2203 i‡(
tsk_vîbo£
)

2204 
	`tsk_Ârötf
(
°dîr
,

2205 "%s: sèπ_blk: %" 
PRIuDADDR
 "Énd_blk: %"

2206 
PRIuDADDR
 " fœgs: %" 
PRIu32
 "\n", 
my«me
, 
°¨t_blk
, 
íd_blk
,

2207 
Êags
);

2210 
	`tsk_îr‹_ª£t
();

2215 i‡(
°¨t_blk
 < 
fs
->
fú°_block
 || sèπ_blk > fs->
œ°_block
) {

2216 
tsk_î∫o
 = 
TSK_ERR_FS_WALK_RNG
;

2217 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

2218 "%s: invÆid sèπ blockÇumbî: %" 
PRIuDADDR
 "", 
my«me
,

2219 
°¨t_blk
);

2222 i‡(
íd_blk
 < 
fs
->
fú°_block
 ||Énd_blk > fs->
œ°_block
) {

2223 
tsk_î∫o
 = 
TSK_ERR_FS_WALK_RNG
;

2224 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

2225 "%s: invÆidÜa° blockÇumbî: %" 
PRIuDADDR
 "", 
my«me
,

2226 
íd_blk
);

2230 i‡(
°¨t_blk
 > 
íd_blk
)

2231 
	`XSWAP
(
°¨t_blk
, 
íd_blk
);

2234 i‡(((
Êags
 & 
TSK_FS_BLOCK_WALK_FLAG_ALLOC
) == 0) &&

2235 ((
Êags
 & 
TSK_FS_BLOCK_WALK_FLAG_UNALLOC
) == 0)) {

2236 
Êags
 |=

2237 (
TSK_FS_BLOCK_WALK_FLAG_ALLOC
 |

2238 
TSK_FS_BLOCK_WALK_FLAG_UNALLOC
);

2240 i‡(((
Êags
 & 
TSK_FS_BLOCK_WALK_FLAG_META
) == 0) &&

2241 ((
Êags
 & 
TSK_FS_BLOCK_WALK_FLAG_CONT
) == 0)) {

2242 
Êags
 |=

2243 (
TSK_FS_BLOCK_WALK_FLAG_CONT
 | 
TSK_FS_BLOCK_WALK_FLAG_META
);

2246 i‡((
fs_block
 = 
	`tsk_fs_block_Æloc
(
fs
)Ë=
NULL
) {

2253 
addr
 = 
°¨t_blk
;ádd∏<
íd_blk
;áddr++) {

2254 
ªtvÆ
;

2255 
myÊags
;

2258 
myÊags
 = 
	`hfs_block_is_Æloc
(
hfs
, 
addr
) ?

2259 
TSK_FS_BLOCK_FLAG_ALLOC
 : 
TSK_FS_BLOCK_FLAG_UNALLOC
;

2262 i‡((
myÊags
 & 
TSK_FS_BLOCK_FLAG_ALLOC
)

2263 && (!(
Êags
 & 
TSK_FS_BLOCK_WALK_FLAG_ALLOC
)))

2265 i‡((
myÊags
 & 
TSK_FS_BLOCK_FLAG_UNALLOC
)

2266 && (!(
Êags
 & 
TSK_FS_BLOCK_WALK_FLAG_UNALLOC
)))

2270 i‡(
	`tsk_fs_block_gë
(
fs
, 
fs_block
, 
addr
Ë=
NULL
) {

2271 
	`tsk_fs_block_‰ì
(
fs_block
);

2275 
ªtvÆ
 = 
	`a˘i⁄
(
fs_block
, 
±r
);

2276 i‡(
TSK_WALK_STOP
 =
ªtvÆ
) {

2279 i‡(
TSK_WALK_ERROR
 =
ªtvÆ
) {

2280 
	`tsk_fs_block_‰ì
(
fs_block
);

2285 
	`tsk_fs_block_‰ì
(
fs_block
);

2287 
	}
}

2289 
uöt8_t


2290 
	$hfs_öode_wÆk
(
TSK_FS_INFO
 * 
fs
, 
TSK_INUM_T
 
°¨t_öum
,

2291 
TSK_INUM_T
 
íd_öum
, 
TSK_FS_META_FLAG_ENUM
 
Êags
,

2292 
TSK_FS_META_WALK_CB
 
a˘i⁄
, *
±r
)

2294 
TSK_INUM_T
 
öum
;

2295 
TSK_FS_FILE
 *
fs_fûe
;

2297 i‡(
tsk_vîbo£
)

2298 
	`tsk_Ârötf
(
°dîr
,

2299 "hfs_öode_wÆk: sèπ_öum: %" 
PRIuINUM
 "Énd_inum: %"

2300 
PRIuINUM
 " fœgs: %" 
PRIu32
 "\n", 
°¨t_öum
, 
íd_öum
, 
Êags
);

2305 i‡(
°¨t_öum
 < 
fs
->
fú°_öum
) {

2306 
	`tsk_Ârötf
(
°dîr
,

2307 "Sèπög inodênumbî i†toÿsmÆ»(%" 
PRIuINUM
 ")",

2308 
°¨t_öum
);

2311 i‡(
°¨t_öum
 > 
fs
->
œ°_öum
) {

2312 
	`tsk_Ârötf
(
°dîr
,

2313 "Sèπög inodênumbî i†toÿœrgê(%" 
PRIuINUM
 ")",

2314 
°¨t_öum
);

2318 i‡(
íd_öum
 < 
fs
->
fú°_öum
) {

2319 
	`tsk_Ârötf
(
°dîr
,

2320 "Endög inodênumbî i†toÿsmÆ»(%" 
PRIuINUM
 ")", 
íd_öum
);

2324 i‡(
íd_öum
 > 
fs
->
œ°_öum
) {

2325 
	`tsk_Ârötf
(
°dîr
,

2326 "Endög inodênumbî i†toÿœrgê(%" 
PRIuINUM
 ")", 
íd_öum
);

2331 i‡(
Êags
 & 
TSK_FS_META_FLAG_ORPHAN
) {

2332 
Êags
 |
TSK_FS_META_FLAG_UNALLOC
;

2333 
Êags
 &~
TSK_FS_META_FLAG_ALLOC
;

2334 
Êags
 |
TSK_FS_META_FLAG_USED
;

2335 
Êags
 &~
TSK_FS_META_FLAG_UNUSED
;

2339 i‡(((
Êags
 & 
TSK_FS_META_FLAG_ALLOC
) == 0) &&

2340 ((
Êags
 & 
TSK_FS_META_FLAG_UNALLOC
) == 0)) {

2341 
Êags
 |(
TSK_FS_META_FLAG_ALLOC
 | 
TSK_FS_META_FLAG_UNALLOC
);

2347 i‡(((
Êags
 & 
TSK_FS_META_FLAG_USED
) == 0) &&

2348 ((
Êags
 & 
TSK_FS_META_FLAG_UNUSED
) == 0)) {

2349 
Êags
 |(
TSK_FS_META_FLAG_USED
 | 
TSK_FS_META_FLAG_UNUSED
);

2353 i‡((
fs_fûe
 = 
	`tsk_fs_fûe_Æloc
(
fs
)Ë=
NULL
)

2356 i‡((
fs_fûe
->
mëa
 = 
	`tsk_fs_mëa_Æloc
(
HFS_FILE_CONTENT_LEN
)Ë=
NULL
)

2359 i‡(
°¨t_öum
 > 
íd_öum
)

2360 
	`XSWAP
(
°¨t_öum
, 
íd_öum
);

2362 
öum
 = 
°¨t_öum
; inum <
íd_öum
; inum++) {

2363 
ªtvÆ
;

2365 i‡(
	`hfs_öode_lookup
(
fs
, 
fs_fûe
, 
öum
)) {

2367 i‡(
tsk_î∫o
 =
TSK_ERR_FS_INODE_NUM
) {

2368 
	`tsk_îr‹_ª£t
();

2376 i‡((
fs_fûe
->
mëa
->
Êags
 & flags) != fs_file->meta->flags)

2380 
ªtvÆ
 = 
	`a˘i⁄
(
fs_fûe
, 
±r
);

2381 i‡(
ªtvÆ
 =
TSK_WALK_STOP
) {

2382 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

2385 i‡(
ªtvÆ
 =
TSK_WALK_ERROR
) {

2386 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

2391 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

2393 
	}
}

2397 
uöt8_t


2398 
	$¥öt_öode_«me
(
FILE
 * 
hFûe
, 
TSK_FS_INFO
 * 
fs
, 
TSK_INUM_T
 
öum
)

2400 
HFS_INFO
 *
hfs
 = (HFS_INFO *Ë
fs
;

2401 
‚
[
HFS_MAXNAMLEN
 + 1];

2402 
HFS_ENTRY
 
íåy
;

2404 i‡(
	`hfs_ˇt_fûe_lookup
(
hfs
, 
öum
, &
íåy
))

2407 i‡(
	`hfs_uni2ascii
(
fs
, 
íåy
.
thªad
.
«me
.
unicode
,

2408 
	`tsk_gëu16
(
fs
->
ídün
, 
íåy
.
thªad
.
«me
.
Àngth
), 
‚
,

2409 
HFS_MAXNAMLEN
 + 1))

2412 
	`tsk_Ârötf
(
hFûe
, "%s", 
‚
);

2415 
	}
}

2421 
uöt8_t


2422 
	$¥öt_∑ª¡_∑th
(
FILE
 * 
hFûe
, 
TSK_FS_INFO
 * 
fs
, 
TSK_INUM_T
 
öum
)

2424 
HFS_INFO
 *
hfs
 = (HFS_INFO *Ë
fs
;

2425 
‚
[
HFS_MAXNAMLEN
 + 1];

2426 
HFS_ENTRY
 
íåy
;

2428 i‡(
öum
 =
HFS_ROOT_INUM
)

2431 i‡(
öum
 <
HFS_ROOT_INUM
) {

2432 
tsk_î∫o
 = 
TSK_ERR_FS_INODE_NUM
;

2433 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

2434 "¥öt_∑ª¡_∑th: out-of-øngêöodê%" 
PRIuINUM
, 
öum
);

2438 i‡(
	`hfs_ˇt_fûe_lookup
(
hfs
, 
öum
, &
íåy
))

2441 i‡(
	`hfs_uni2ascii
(
fs
, 
íåy
.
thªad
.
«me
.
unicode
,

2442 
	`tsk_gëu16
(
fs
->
ídün
, 
íåy
.
thªad
.
«me
.
Àngth
), 
‚
,

2443 
HFS_MAXNAMLEN
 + 1))

2446 i‡(
	`¥öt_∑ª¡_∑th
(
hFûe
, 
fs
, (
TSK_INUM_T
Ë
	`tsk_gëu32
(fs->
ídün
,

2447 
íåy
.
thªad
.
∑ª¡_˙id
)))

2450 
	`tsk_Ârötf
(
hFûe
, "/%s", 
‚
);

2452 
	}
}

2458 
uöt8_t


2459 
	$¥öt_öode_fûe
(
FILE
 * 
hFûe
, 
TSK_FS_INFO
 * 
fs
, 
TSK_INUM_T
 
öum
)

2461 
	`tsk_Ârötf
(
hFûe
, " [");

2462 i‡(
öum
 =
HFS_ROOT_INUM
)

2463 
	`tsk_Ârötf
(
hFûe
, "/");

2465 i‡(
	`¥öt_∑ª¡_∑th
(
hFûe
, 
fs
, 
öum
)) {

2466 
	`tsk_Ârötf
(
hFûe
, "unknown]");

2470 
	`tsk_Ârötf
(
hFûe
, "]");

2472 
	}
}

2474 
uöt8_t


2475 
	$hfs_fscheck
(
TSK_FS_INFO
 * 
fs
, 
FILE
 * 
hFûe
)

2477 
	`tsk_îr‹_ª£t
();

2478 
tsk_î∫o
 = 
TSK_ERR_FS_UNSUPFUNC
;

2479 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

2482 
	}
}

2485 
uöt8_t


2486 
	$hfs_fs°©
(
TSK_FS_INFO
 * 
fs
, 
FILE
 * 
hFûe
)

2489 
HFS_INFO
 *
hfs
 = (HFS_INFO *Ë
fs
;

2490 
hfs_∂us_vh
 *
sb
 = 
hfs
->
fs
;

2491 
time_t
 
mac_time
;

2492 
TSK_INUM_T
 
öode
;

2494 i‡(
tsk_vîbo£
)

2495 
	`tsk_Ârötf
(
°dîr
, "hfs_fstat: called\n");

2497 
	`tsk_Ârötf
(
hFûe
, "FILE SYSTEM INFORMATION\n");

2498 
	`tsk_Ârötf
(
hFûe
, "--------------------------------------------\n");

2500 
	`tsk_Ârötf
(
hFûe
, "File System Type: ");

2501 i‡(
	`tsk_gëu16
(
fs
->
ídün
, 
hfs
->fs->
sig«tuª
Ë=
HFS_VH_SIG_HFSPLUS
)

2502 
	`tsk_Ârötf
(
hFûe
, "HFS+\n");

2503 i‡(
	`tsk_gëu16
(
fs
->
ídün
, 
hfs
->fs->
sig«tuª
Ë=
HFS_VH_SIG_HFSX
)

2504 
	`tsk_Ârötf
(
hFûe
, "HFSX\n");

2506 
	`tsk_Ârötf
(
hFûe
, "Unknown\n");

2509 
	`tsk_Ârötf
(
hFûe
, "File System Version: ");

2510 
	`tsk_gëu16
(
fs
->
ídün
, 
hfs
->fs->
vîsi⁄
)) {

2512 
	`tsk_Ârötf
(
hFûe
, " HFS+\n");

2515 
	`tsk_Ârötf
(
hFûe
, " HFSX\n");

2518 
	`tsk_Ârötf
(
hFûe
, " Unknow¿(%" 
PRIu16
 ")\n",

2519 
	`tsk_gëu16
(
fs
->
ídün
, 
hfs
->fs->
vîsi⁄
));

2524 i‡(
hfs
->
hfs_wøµî_off£t
 > 0) {

2525 
	`tsk_Ârötf
(
hFûe
,

2526 "Fûêsy°em i†embedded i¿™ HFS wøµîáàoff£à%" 
PRIuOFF


2527 "\n", 
hfs
->
hfs_wøµî_off£t
);

2530 
	`tsk_Ârötf
(
hFûe
, "\nVolume Name: ");

2531 i‡(
	`¥öt_öode_«me
(
hFûe
, 
fs
, 
HFS_ROOT_INUM
))

2533 
	`tsk_Ârötf
(
hFûe
, "\n");

2535 
	`tsk_Ârötf
(
hFûe
, "VﬁumêIdítifõr: %08" 
PRIx32
 "%08" PRIx32 "\n",

2536 
	`tsk_gëu32
(
fs
->
ídün
, 
sb
->
födî_öfo
[
HFS_VH_FI_ID1
]),

2537 
	`tsk_gëu32
(
fs
->
ídün
, 
sb
->
födî_öfo
[
HFS_VH_FI_ID2
]));

2541 
	`tsk_Ârötf
(
hFûe
, "\nLast Mounted By: ");

2542 i‡(
	`tsk_gëu32
(
fs
->
ídün
, 
sb
->
œ°_m¡_vî
Ë=
HFS_VH_MVER_HFSPLUS
)

2543 
	`tsk_Ârötf
(
hFûe
, "Mac OS X\n");

2544 i‡(
	`tsk_gëu32
(
fs
->
ídün
, 
sb
->
œ°_m¡_vî
Ë=
HFS_VH_MVER_HFSJ
)

2545 
	`tsk_Ârötf
(
hFûe
, "Mac OS X, Journaled\n");

2546 i‡(
	`tsk_gëu32
(
fs
->
ídün
, 
sb
->
œ°_m¡_vî
Ë=
HFS_VH_MVER_FSK
)

2547 
	`tsk_Ârötf
(
hFûe
, "failed journalÑeplay\n");

2548 i‡(
	`tsk_gëu32
(
fs
->
ídün
, 
sb
->
œ°_m¡_vî
Ë=
HFS_VH_MVER_FSCK
)

2549 
	`tsk_Ârötf
(
hFûe
, "fsck_hfs\n");

2550 i‡(
	`tsk_gëu32
(
fs
->
ídün
, 
sb
->
œ°_m¡_vî
Ë=
HFS_VH_MVER_OS89
)

2551 
	`tsk_Ârötf
(
hFûe
, "Mac OS 8.1 - 9.2.2\n");

2553 
	`tsk_Ârötf
(
hFûe
, "Unknow¿(%" 
PRIx32
 "\n",

2554 
	`tsk_gëu32
(
fs
->
ídün
, 
sb
->
œ°_m¡_vî
));

2557 i‡((
	`tsk_gëu32
(
fs
->
ídün
, 
hfs
->fs->
©å
Ë& 
HFS_VH_ATTR_UNMOUNTED
)

2558 && (!(
	`tsk_gëu32
(
fs
->
ídün
,

2559 
hfs
->
fs
->
©å
Ë& 
HFS_VH_ATTR_INCONSISTENT
)))

2560 
	`tsk_Ârötf
(
hFûe
, "Volume Unmounted Properly\n");

2562 
	`tsk_Ârötf
(
hFûe
, "Volume Unmounted Improperly\n");

2564 
	`tsk_Ârötf
(
hFûe
, "Mou¡ Cou¡: %" 
PRIu32
 "\n",

2565 
	`tsk_gëu32
(
fs
->
ídün
, 
sb
->
wrôe_˙t
));

2570 
mac_time
 = 
	`hfs2unixtime
(
	`tsk_gëu32
(
fs
->
ídün
, 
hfs
->fs->
¸_d©e
));

2571 
	`tsk_Ârötf
(
hFûe
, "\nCreation Date: \t%s",

2572 
	`as˘ime
(
	`gmtime
(&
mac_time
)));

2574 
mac_time
 = 
	`hfs2unixtime
(
	`tsk_gëu32
(
fs
->
ídün
, 
hfs
->fs->
m_d©e
));

2575 
	`tsk_Ârötf
(
hFûe
, "La° Wrôã¿D©e: \t%s", 
	`˘ime
(&
mac_time
));

2577 
mac_time
 = 
	`hfs2unixtime
(
	`tsk_gëu32
(
fs
->
ídün
, 
hfs
->fs->
bkup_d©e
));

2578 
	`tsk_Ârötf
(
hFûe
, "La° Backu∞D©e: \t%s", 
	`˘ime
(&
mac_time
));

2580 
mac_time
 = 
	`hfs2unixtime
(
	`tsk_gëu32
(
fs
->
ídün
, 
hfs
->fs->
chk_d©e
));

2581 
	`tsk_Ârötf
(
hFûe
, "La° Checked D©e: \t%s", 
	`˘ime
(&
mac_time
));

2584 i‡(
	`tsk_gëu32
(
fs
->
ídün
, 
hfs
->fs->
©å
Ë& 
HFS_VH_ATTR_SOFTWARE_LOCK
)

2585 
	`tsk_Ârötf
(
hFûe
, "Software writeÖrotectÉnabled\n");

2588 i‡(
	`tsk_gëu32
(
fs
->
ídün
, 
sb
->
©å
Ë& 
HFS_VH_ATTR_JOURNALED
) {

2589 
	`tsk_Ârötf
(
hFûe
, "\nJou∫Æ InfÿBlock: %" 
PRIu32
 "\n",

2590 
	`tsk_gëu32
(
fs
->
ídün
, 
sb
->
jöfo_blk
));

2593 
	`tsk_Ârötf
(
hFûe
, "\nMETADATA INFORMATION\n");

2594 
	`tsk_Ârötf
(
hFûe
, "--------------------------------------------\n");

2596 
	`tsk_Ârötf
(
hFûe
, "R™ge: %" 
PRIuINUM
 " - %" PRIuINUM "\n",

2597 
fs
->
fú°_öum
, fs->
œ°_öum
);

2599 
öode
 = 
	`tsk_gëu32
(
fs
->
ídün
, 
sb
->
födî_öfo
[
HFS_VH_FI_BOOT
]);

2600 
	`tsk_Ârötf
(
hFûe
, "BoŸabÀ Fﬁdî ID: %" 
PRIuINUM
, 
öode
);

2601 i‡(
öode
 > 0)

2602 
	`¥öt_öode_fûe
(
hFûe
, 
fs
, 
öode
);

2603 
	`tsk_Ârötf
(
hFûe
, "\n");

2605 
öode
 = 
	`tsk_gëu32
(
fs
->
ídün
, 
sb
->
födî_öfo
[
HFS_VH_FI_START
]);

2606 
	`tsk_Ârötf
(
hFûe
, "Sèπu∞Aµ ID: %" 
PRIuINUM
, 
öode
);

2607 i‡(
öode
 > 0)

2608 
	`¥öt_öode_fûe
(
hFûe
, 
fs
, 
öode
);

2609 
	`tsk_Ârötf
(
hFûe
, "\n");

2611 
öode
 = 
	`tsk_gëu32
(
fs
->
ídün
, 
sb
->
födî_öfo
[
HFS_VH_FI_OPEN
]);

2612 
	`tsk_Ârötf
(
hFûe
, "Sèπu∞O≥¿Fﬁdî ID: %" 
PRIuINUM
, 
öode
);

2613 i‡(
öode
 > 0)

2614 
	`¥öt_öode_fûe
(
hFûe
, 
fs
, 
öode
);

2615 
	`tsk_Ârötf
(
hFûe
, "\n");

2617 
öode
 = 
	`tsk_gëu32
(
fs
->
ídün
, 
sb
->
födî_öfo
[
HFS_VH_FI_BOOT9
]);

2618 
	`tsk_Ârötf
(
hFûe
, "Ma¯OS 8/9 BÀs£d Sy°em Fﬁdî ID: %" 
PRIuINUM
,

2619 
öode
);

2620 i‡(
öode
 > 0)

2621 
	`¥öt_öode_fûe
(
hFûe
, 
fs
, 
öode
);

2622 
	`tsk_Ârötf
(
hFûe
, "\n");

2624 
öode
 = 
	`tsk_gëu32
(
fs
->
ídün
, 
sb
->
födî_öfo
[
HFS_VH_FI_BOOTX
]);

2625 
	`tsk_Ârötf
(
hFûe
, "Ma¯OS X BÀs£d Sy°em Fﬁdî ID: %" 
PRIuINUM
,

2626 
öode
);

2627 i‡(
öode
 > 0)

2628 
	`¥öt_öode_fûe
(
hFûe
, 
fs
, 
öode
);

2629 
	`tsk_Ârötf
(
hFûe
, "\n");

2631 
	`tsk_Ârötf
(
hFûe
, "Numbî o‡fûes: %" 
PRIu32
 "\n",

2632 
	`tsk_gëu32
(
fs
->
ídün
, 
sb
->
fûe_˙t
));

2633 
	`tsk_Ârötf
(
hFûe
, "Numbî o‡fﬁdîs: %" 
PRIu32
 "\n",

2634 
	`tsk_gëu32
(
fs
->
ídün
, 
sb
->
Êdr_˙t
));

2637 
	`tsk_Ârötf
(
hFûe
, "\nCONTENT INFORMATION\n");

2638 
	`tsk_Ârötf
(
hFûe
, "--------------------------------------------\n");

2640 
	`tsk_Ârötf
(
hFûe
, "Block R™ge: %" 
PRIuDADDR
 " - %" PRIuDADDR "\n",

2641 
fs
->
fú°_block
, fs->
œ°_block
);

2643 i‡(
fs
->
œ°_block
 !fs->
œ°_block_a˘
)

2644 
	`tsk_Ârötf
(
hFûe
,

2645 "TŸÆ R™gêö Image: %" 
PRIuDADDR
 " - %" PRIuDADDR "\n",

2646 
fs
->
fú°_block
, fs->
œ°_block_a˘
);

2648 
	`tsk_Ârötf
(
hFûe
, "AŒoˇti⁄ Block Size: %u\n", 
fs
->
block_size
);

2650 
	`tsk_Ârötf
(
hFûe
, "Numbî o‡FªêBlocks: %" 
PRIu32
 "\n",

2651 
	`tsk_gëu32
(
fs
->
ídün
, 
sb
->
‰ì_blks
));

2653 i‡(
	`tsk_gëu32
(
fs
->
ídün
, 
hfs
->fs->
©å
Ë& 
HFS_VH_ATTR_BADBLOCKS
)

2654 
	`tsk_Ârötf
(
hFûe
, "Volume has bad blocks\n");

2657 
	}
}

2662 
	#HFS_PRINT_WIDTH
 8

	)

2664 
FILE
 *
	mhFûe
;

2665 
	midx
;

2666 } 
	tHFS_PRINT_ADDR
;

2668 
TSK_WALK_RET_ENUM


2669 
	$¥öt_addr_a˘
(
TSK_FS_FILE
 * 
fs_fûe
, 
TSK_OFF_T
 
a_off
, 
TSK_DADDR_T
 
addr
,

2670 *
buf
, 
size_t
 
size
, 
TSK_FS_BLOCK_FLAG_ENUM
 
Êags
, *
±r
)

2672 
HFS_PRINT_ADDR
 *
¥öt
 = (HFS_PRINT_ADDR *Ë
±r
;

2673 
	`tsk_Ârötf
(
¥öt
->
hFûe
, "%" 
PRIuDADDR
 " ", 
addr
);

2675 i‡(++(
¥öt
->
idx
Ë=
HFS_PRINT_WIDTH
) {

2676 
	`tsk_Ârötf
(
¥öt
->
hFûe
, "\n");

2677 
¥öt
->
idx
 = 0;

2680  
TSK_WALK_CONT
;

2681 
	}
}

2694 
uöt8_t


2695 
	$hfs_i°©
(
TSK_FS_INFO
 * 
fs
, 
FILE
 * 
hFûe
, 
TSK_INUM_T
 
öum
,

2696 
TSK_DADDR_T
 
numblock
, 
öt32_t
 
£c_skew
)

2698 
HFS_INFO
 *
hfs
 = (HFS_INFO *Ë
fs
;

2699 
TSK_FS_FILE
 *
fs_fûe
;

2700 
hfs_mode
[12];

2701 
HFS_PRINT_ADDR
 
¥öt
;

2702 
HFS_ENTRY
 
íåy
;

2704 i‡(
tsk_vîbo£
)

2705 
	`tsk_Ârötf
(
°dîr
,

2706 "hfs_i°©: inum: %" 
PRIuINUM
 "Çumblock: %" 
PRIu32
 "\n",

2707 
öum
, 
numblock
);

2709 i‡((
fs_fûe
 = 
	`tsk_fs_fûe_›í_mëa
(
fs
, 
NULL
, 
öum
)) == NULL) {

2710 
	`°∫ˇt
(
tsk_îr°r2
, " - istat",

2711 
TSK_ERRSTR_L
 - 
	`°æí
(
tsk_îr°r2
));

2715 
	`tsk_Ârötf
(
hFûe
, "C©Æog Rec‹d: %" 
PRIuINUM
 "\n", 
öum
);

2716 
	`tsk_Ârötf
(
hFûe
, "%sAllocated\n",

2717 (
fs_fûe
->
mëa
->
Êags
 & 
TSK_FS_META_FLAG_UNALLOC
) ? "Not " : "");

2719 
	`tsk_Ârötf
(
hFûe
, "Type:\t");

2720 i‡(
fs_fûe
->
mëa
->
ty≥
 =
TSK_FS_META_TYPE_REG
)

2721 
	`tsk_Ârötf
(
hFûe
, "File\n");

2722 i‡(
fs_fûe
->
mëa
->
ty≥
 =
TSK_FS_META_TYPE_DIR
)

2723 
	`tsk_Ârötf
(
hFûe
, "Folder\n");

2725 
	`tsk_Ârötf
(
hFûe
, "\n");

2727 
	`tsk_fs_mëa_make_ls
(
fs_fûe
->
mëa
, 
hfs_mode
, (hfs_mode));

2728 
	`tsk_Ârötf
(
hFûe
, "Mode:\t%s\n", 
hfs_mode
);

2729 
	`tsk_Ârötf
(
hFûe
, "Size:\t%" 
PRIuOFF
 "\n", 
fs_fûe
->
mëa
->
size
);

2731 
	`tsk_Ârötf
(
hFûe
, "uid / gid: %" 
PRIuUID
 " / %" 
PRIuGID
 "\n",

2732 
fs_fûe
->
mëa
->
uid
, fs_fûe->mëa->
gid
);

2734 
	`tsk_Ârötf
(
hFûe
, "Lök cou¡:\t%d\n", 
fs_fûe
->
mëa
->
∆ök
);

2736 i‡(
	`hfs_ˇt_fûe_lookup
(
hfs
, 
öum
, &
íåy
) == 0) {

2737 
	`tsk_Ârötf
(
hFûe
, "\n");

2741 i‡((
fs_fûe
->
mëa
->
ty≥
 =
TSK_FS_META_TYPE_CHR
) ||

2742 (
fs_fûe
->
mëa
->
ty≥
 =
TSK_FS_META_TYPE_BLK
)) {

2743 
	`tsk_Ârötf
(
hFûe
, "Devi˚ ID:\t%" 
PRIu32
 "\n",

2744 
	`tsk_gëu32
(
fs
->
ídün
, 
íåy
.
ˇt
.
°d
.
≥rm
.
•ecül
.
øw
));

2746 i‡((
	`tsk_gëu32
(
fs
->
ídün
,

2747 
íåy
.
ˇt
.
°d
.
u_öfo
.
fûe_ty≥
) ==

2748 
HFS_HARDLINK_FILE_TYPE
)

2749 && (
	`tsk_gëu32
(
fs
->
ídün
,

2750 
íåy
.
ˇt
.
°d
.
u_öfo
.
fûe_¸
) ==

2751 
HFS_HARDLINK_FILE_CREATOR
)) {

2754 
	`tsk_Ârötf
(
hFûe
, "H¨dÜök inodênumbî\à%" 
PRIu32
 "\n",

2755 
	`tsk_gëu32
(
fs
->
ídün
, 
íåy
.
ˇt
.
°d
.
≥rm
.
•ecül
.
öum
));

2758 
	`tsk_Ârötf
(
hFûe
, "Admö fœgs: %" 
PRIu8
,

2759 
íåy
.
ˇt
.
°d
.
≥rm
.
a_Êags
);

2760 i‡(
íåy
.
ˇt
.
°d
.
≥rm
.
a_Êags
 != 0) {

2761 
	`tsk_Ârötf
(
hFûe
, " - ");

2762 i‡(
íåy
.
ˇt
.
°d
.
≥rm
.
a_Êags
 & 
HFS_PERM_AFLAG_ARCHIVED
)

2763 
	`tsk_Ârötf
(
hFûe
, "archived ");

2764 i‡(
íåy
.
ˇt
.
°d
.
≥rm
.
a_Êags
 & 
HFS_PERM_AFLAG_IMMUTABLE
)

2765 
	`tsk_Ârötf
(
hFûe
, "immutable ");

2766 i‡(
íåy
.
ˇt
.
°d
.
≥rm
.
a_Êags
 & 
HFS_PERM_AFLAG_APPEND
)

2767 
	`tsk_Ârötf
(
hFûe
, "append-only ");

2769 
	`tsk_Ârötf
(
hFûe
, "\n");

2771 
	`tsk_Ârötf
(
hFûe
, "Ow√∏Êags: %" 
PRIu8
,

2772 
íåy
.
ˇt
.
°d
.
≥rm
.
o_Êags
);

2773 i‡(
íåy
.
ˇt
.
°d
.
≥rm
.
o_Êags
 != 0) {

2774 
	`tsk_Ârötf
(
hFûe
, " - ");

2775 i‡(
íåy
.
ˇt
.
°d
.
≥rm
.
o_Êags
 & 
HFS_PERM_OFLAG_NODUMP
)

2776 
	`tsk_Ârötf
(
hFûe
, "no-dump ");

2777 i‡(
íåy
.
ˇt
.
°d
.
≥rm
.
o_Êags
 & 
HFS_PERM_OFLAG_IMMUTABLE
)

2778 
	`tsk_Ârötf
(
hFûe
, "immutable ");

2779 i‡(
íåy
.
ˇt
.
°d
.
≥rm
.
o_Êags
 & 
HFS_PERM_OFLAG_APPEND
)

2780 
	`tsk_Ârötf
(
hFûe
, "append-only ");

2781 i‡(
íåy
.
ˇt
.
°d
.
≥rm
.
o_Êags
 & 
HFS_PERM_OFLAG_OPAQUE
)

2782 
	`tsk_Ârötf
(
hFûe
, "opaque ");

2783 i‡(
íåy
.
ˇt
.
°d
.
≥rm
.
o_Êags
 & 
HFS_PERM_OFLAG_COMPRESSED
)

2784 
	`tsk_Ârötf
(
hFûe
, "compressed ");

2786 
	`tsk_Ârötf
(
hFûe
, "\n");

2788 i‡(
	`tsk_gëu16
(
fs
->
ídün
,

2789 
íåy
.
ˇt
.
°d
.
Êags
Ë& 
HFS_FILE_FLAG_LOCKED
)

2790 
	`tsk_Ârötf
(
hFûe
, "Locked\n");

2791 i‡(
	`tsk_gëu16
(
fs
->
ídün
,

2792 
íåy
.
ˇt
.
°d
.
Êags
Ë& 
HFS_FILE_FLAG_ATTR
)

2793 
	`tsk_Ârötf
(
hFûe
, "HasÉxtendedáttributes\n");

2794 i‡(
	`tsk_gëu16
(
fs
->
ídün
,

2795 
íåy
.
ˇt
.
°d
.
Êags
Ë& 
HFS_FILE_FLAG_ACL
)

2796 
	`tsk_Ârötf
(
hFûe
, "Has security data (ACLs)\n");

2798 
	`tsk_Ârötf
(
hFûe
,

2799 "Fûêty≥:\t%04" 
PRIx32
 "\nFile creator:\t%04" PRIx32 "\n",

2800 
	`tsk_gëu32
(
fs
->
ídün
, 
íåy
.
ˇt
.
°d
.
u_öfo
.
fûe_ty≥
),

2801 
	`tsk_gëu32
(
fs
->
ídün
, 
íåy
.
ˇt
.
°d
.
u_öfo
.
fûe_ty≥
));

2803 i‡(
	`tsk_gëu16
(
fs
->
ídün
,

2804 
íåy
.
ˇt
.
°d
.
u_öfo
.
Êags
Ë& 
HFS_FINDER_FLAG_NAME_LOCKED
)

2805 
	`tsk_Ârötf
(
hFûe
, "NameÜocked\n");

2806 i‡(
	`tsk_gëu16
(
fs
->
ídün
,

2807 
íåy
.
ˇt
.
°d
.
u_öfo
.
Êags
Ë& 
HFS_FINDER_FLAG_HAS_BUNDLE
)

2808 
	`tsk_Ârötf
(
hFûe
, "Has bundle\n");

2809 i‡(
	`tsk_gëu16
(
fs
->
ídün
,

2810 
íåy
.
ˇt
.
°d
.
u_öfo
.
Êags
Ë& 
HFS_FINDER_FLAG_IS_INVISIBLE
)

2811 
	`tsk_Ârötf
(
hFûe
, "Is invisible\n");

2812 i‡(
	`tsk_gëu16
(
fs
->
ídün
,

2813 
íåy
.
ˇt
.
°d
.
u_öfo
.
Êags
Ë& 
HFS_FINDER_FLAG_IS_ALIAS
)

2814 
	`tsk_Ârötf
(
hFûe
, "Isálias\n");

2817 
	`tsk_Ârötf
(
hFûe
, "Texàícodög:\t%" 
PRIx32
 "\n",

2818 
	`tsk_gëu32
(
fs
->
ídün
, 
íåy
.
ˇt
.
°d
.
ãxt_íc
));

2820 i‡(
	`tsk_gëu16
(
fs
->
ídün
,

2821 
íåy
.
ˇt
.
°d
.
ªc_ty≥
Ë=
HFS_FILE_RECORD
) {

2822 
	`tsk_Ârötf
(
hFûe
, "Resour˚ f‹k size:\t%" 
PRIu64
 "\n",

2823 
	`tsk_gëu64
(
fs
->
ídün
, 
íåy
.
ˇt
.
ªsour˚
.
logic_sz
));

2827 i‡(
£c_skew
 != 0) {

2828 
	`tsk_Ârötf
(
hFûe
, "\nAdjustedÅimes:\n");

2829 
fs_fûe
->
mëa
->
mtime
 -
£c_skew
;

2830 
fs_fûe
->
mëa
->
©ime
 -
£c_skew
;

2831 
fs_fûe
->
mëa
->
˘ime
 -
£c_skew
;

2832 
fs_fûe
->
mëa
->
¸time
 -
£c_skew
;

2833 
fs_fûe
->
mëa
->
time2
.
hfs
.
bkup_time
 -
£c_skew
;

2835 
	`tsk_Ârötf
(
hFûe
, "Cª©ed:\t%s", 
	`˘ime
(&
fs_fûe
->
mëa
->
¸time
));

2836 
	`tsk_Ârötf
(
hFûe
, "Content Modified:\t%s",

2837 
	`˘ime
(&
fs_fûe
->
mëa
->
mtime
));

2838 
	`tsk_Ârötf
(
hFûe
, "Attributes Modified:\t%s",

2839 
	`˘ime
(&
fs_fûe
->
mëa
->
˘ime
));

2840 
	`tsk_Ârötf
(
hFûe
, "Ac˚s£d:\t%s", 
	`˘ime
(&
fs_fûe
->
mëa
->
©ime
));

2841 
	`tsk_Ârötf
(
hFûe
, "Backed Up:\t%s",

2842 
	`˘ime
(&
fs_fûe
->
mëa
->
time2
.
hfs
.
bkup_time
));

2844 
fs_fûe
->
mëa
->
mtime
 +
£c_skew
;

2845 
fs_fûe
->
mëa
->
©ime
 +
£c_skew
;

2846 
fs_fûe
->
mëa
->
˘ime
 +
£c_skew
;

2847 
fs_fûe
->
mëa
->
¸time
 +
£c_skew
;

2848 
fs_fûe
->
mëa
->
time2
.
hfs
.
bkup_time
 +
£c_skew
;

2849 
	`tsk_Ârötf
(
hFûe
, "\nOriginalÅimes:\n");

2852 
	`tsk_Ârötf
(
hFûe
, "\nTimes:\n");

2855 
	`tsk_Ârötf
(
hFûe
, "Cª©ed:\t%s", 
	`˘ime
(&
fs_fûe
->
mëa
->
¸time
));

2856 
	`tsk_Ârötf
(
hFûe
, "Content Modified:\t%s",

2857 
	`˘ime
(&
fs_fûe
->
mëa
->
mtime
));

2858 
	`tsk_Ârötf
(
hFûe
, "Attributes Modified:\t%s",

2859 
	`˘ime
(&
fs_fûe
->
mëa
->
˘ime
));

2860 
	`tsk_Ârötf
(
hFûe
, "Ac˚s£d:\t%s", 
	`˘ime
(&
fs_fûe
->
mëa
->
©ime
));

2861 
	`tsk_Ârötf
(
hFûe
, "Backed Up:\t%s",

2862 
	`˘ime
(&
fs_fûe
->
mëa
->
time2
.
hfs
.
bkup_time
));

2866 
	`tsk_Ârötf
(
hFûe
, "\nData Fork Blocks:\n");

2867 
¥öt
.
idx
 = 0;

2868 
¥öt
.
hFûe
 = hFile;

2870 i‡(
	`tsk_fs_fûe_wÆk
(
fs_fûe
,

2871 (
TSK_FS_FILE_WALK_FLAG_AONLY
 | 
TSK_FS_FILE_WALK_FLAG_SLACK
),

2872 
¥öt_addr_a˘
, (*Ë&
¥öt
)) {

2873 
	`tsk_Ârötf
(
hFûe
, "\nErrorÑeading file\n");

2874 
	`tsk_îr‹_¥öt
(
hFûe
);

2875 
	`tsk_îr‹_ª£t
();

2877 i‡(
¥öt
.
idx
 != 0) {

2878 
	`tsk_Ârötf
(
hFûe
, "\n");

2881 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

2883 
	}
}

2885 
TSK_FS_ATTR_TYPE_ENUM


2886 
	$hfs_gë_deÁu…_©å_ty≥
(c⁄° 
TSK_FS_FILE
 * 
a_fûe
)

2888  
TSK_FS_ATTR_TYPE_DEFAULT
;

2889 
	}
}

2892 
	$hfs_˛o£
(
TSK_FS_INFO
 * 
fs
)

2894 
HFS_INFO
 *
hfs
 = (HFS_INFO *Ë
fs
;

2895 
fs
->
èg
 = 0;

2897 
	`‰ì
(
hfs
->
fs
);

2898 
	`tsk_fs_fûe_˛o£
(
hfs
->
ˇèlog_fûe
);

2899 
hfs
->
ˇèlog_©å
 = 
NULL
;

2901 i‡(
hfs
->
blockm≠_fûe
) {

2902 
	`tsk_fs_fûe_˛o£
(
hfs
->
blockm≠_fûe
);

2903 
hfs
->
blockm≠_©å
 = 
NULL
;

2906 
	`‰ì
(
hfs
);

2907 
	}
}

2914 
TSK_FS_INFO
 *

2915 
	$hfs_›í
(
TSK_IMG_INFO
 * 
img_öfo
, 
TSK_OFF_T
 
off£t
,

2916 
TSK_FS_TYPE_ENUM
 
·y≥
, 
uöt8_t
 
ã°
)

2918 
HFS_INFO
 *
hfs
;

2919 
Àn
;

2920 
TSK_FS_INFO
 *
fs
;

2921 
ssize_t
 
˙t
;

2923 
	`tsk_îr‹_ª£t
();

2925 i‡(
	`TSK_FS_TYPE_ISHFS
(
·y≥
) == 0) {

2926 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

2927 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
, "Invalid FS Type in hfs_open");

2928  
NULL
;

2931 i‡((
hfs
 = (
HFS_INFO
 *Ë
	`tsk_mÆloc
((HFS_INFO))Ë=
NULL
)

2932  
NULL
;

2934 
fs
 = &(
hfs
->
fs_öfo
);

2936 
fs
->
·y≥
 = 
TSK_FS_TYPE_HFS
;

2937 
fs
->
du«me
 = "Allocation Block";

2938 
fs
->
èg
 = 
TSK_FS_INFO_TAG
;

2939 
fs
->
Êags
 = 0;

2941 
fs
->
img_öfo
 = img_info;

2942 
fs
->
off£t
 = offset;

2947 
Àn
 = (
hfs_∂us_vh
);

2948 i‡((
hfs
->
fs
 = (
hfs_∂us_vh
 *Ë
	`tsk_mÆloc
(
Àn
)Ë=
NULL
) {

2949 
fs
->
èg
 = 0;

2950 
	`‰ì
(
hfs
);

2951  
NULL
;

2954 i‡(
	`hfs_checked_ªad_øndom
(
fs
, (*Ë
hfs
->fs, 
Àn
,

2955 (
TSK_OFF_T
Ë
HFS_VH_OFF
)) {

2956 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
, "hfs_open: superblock");

2957 
fs
->
èg
 = 0;

2958 
	`‰ì
(
hfs
->
fs
);

2959 
	`‰ì
(
hfs
);

2960  
NULL
;

2966 i‡(
	`tsk_fs_guessu16
(
fs
, 
hfs
->fs->
sig«tuª
, 
HFS_VH_SIG_HFSPLUS
) &&

2967 
	`tsk_fs_guessu16
(
fs
, 
hfs
->fs->
sig«tuª
, 
HFS_VH_SIG_HFSX
) &&

2968 
	`tsk_fs_guessu16
(
fs
, 
hfs
->fs->
sig«tuª
, 
HFS_VH_SIG_HFS
)) {

2970 
fs
->
èg
 = 0;

2971 
	`‰ì
(
hfs
->
fs
);

2972 
	`‰ì
(
hfs
);

2973 
tsk_î∫o
 = 
TSK_ERR_FS_MAGIC
;

2974 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

2976  
NULL
;

2983 i‡(
	`tsk_gëu16
(
fs
->
ídün
, 
hfs
->fs->
sig«tuª
Ë=
HFS_VH_SIG_HFS
) {

2985 
hfs_mdb
 *
wøµî_sb
 = (hfs_mdb *Ë
hfs
->
fs
;

2988 i‡((
	`tsk_gëu16
(
fs
->
ídün
,

2989 
wøµî_sb
->
drEmbedSigW‹d
Ë=
HFS_VH_SIG_HFSPLUS
)

2990 || (
	`tsk_gëu16
(
fs
->
ídün
,

2991 
wøµî_sb
->
drEmbedSigW‹d
Ë=
HFS_VH_SIG_HFSX
)) {

2993 
TSK_FS_INFO
 *
fs_öfo2
;

2995 
uöt16_t
 
drAlBlSt
 =

2996 
	`tsk_gëu16
(
fs
->
ídün
, 
wøµî_sb
->
drAlBlSt
);

2999 
uöt32_t
 
drAlBlkSiz
 =

3000 
	`tsk_gëu32
(
fs
->
ídün
, 
wøµî_sb
->
drAlBlkSiz
);

3003 
uöt16_t
 
°¨tBlock
 = 
	`tsk_gëu16
(
fs
->
ídün
,

3004 
wøµî_sb
->
drEmbedExã¡_°¨tBlock
);

3007 
TSK_OFF_T
 
hf•lus_off£t
 =

3008 (
drAlBlSt
 * (
TSK_OFF_T
) 512) +

3009 (
drAlBlkSiz
 * (
TSK_OFF_T
Ë
°¨tBlock
);

3011 i‡(
tsk_vîbo£
)

3012 
	`tsk_Ârötf
(
°dîr
,

3014 
PRIuOFF
 "\n", 
hf•lus_off£t
);

3016 
fs
->
èg
 = 0;

3017 
	`‰ì
(
hfs
->
fs
);

3018 
	`‰ì
(
hfs
);

3021 
fs_öfo2
 =

3022 
	`hfs_›í
(
img_öfo
, 
off£t
 + 
hf•lus_off£t
, 
·y≥
, 
ã°
);

3024 i‡(
fs_öfo2
)

3025 ((
HFS_INFO
 *Ë
fs_öfo2
)->
hfs_wøµî_off£t
 =

3026 
hf•lus_off£t
;

3028  
fs_öfo2
;

3031 
fs
->
èg
 = 0;

3032 
	`‰ì
(
hfs
->
fs
);

3033 
	`‰ì
(
hfs
);

3034 
tsk_î∫o
 = 
TSK_ERR_FS_MAGIC
;

3035 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

3037  
NULL
;

3041 
fs
->
block_cou¡
 = 
	`tsk_gëu32
(fs->
ídün
, 
hfs
->fs->
blk_˙t
);

3042 
fs
->
fú°_block
 = 0;

3043 
fs
->
œ°_block
 = fs->
œ°_block_a˘
 = fs->
block_cou¡
 - 1;

3050 
fs
->
dev_bsize
 = fs->
block_size
 =

3051 
	`tsk_gëu32
(
fs
->
ídün
, 
hfs
->fs->
blk_sz
);

3054 i‡((
TSK_DADDR_T
Ë((
img_öfo
->
size
 - 
off£t
Ë/ 
fs
->
block_size
) <

3055 
fs
->
block_cou¡
)

3056 
fs
->
œ°_block_a˘
 =

3057 (
img_öfo
->
size
 - 
off£t
Ë/ 
fs
->
block_size
 - 1;

3062 
fs
->
öode_wÆk
 = 
hfs_öode_wÆk
;

3063 
fs
->
block_wÆk
 = 
hfs_block_wÆk
;

3064 
fs
->
block_gëÊags
 = 
hfs_block_gëÊags
;

3065 
fs
->
lﬂd_©ås
 = 
hfs_lﬂd_©ås
;

3066 
fs
->
gë_deÁu…_©å_ty≥
 = 
hfs_gë_deÁu…_©å_ty≥
;

3068 
fs
->
fûe_add_mëa
 = 
hfs_öode_lookup
;

3069 
fs
->
dú_›í_mëa
 = 
hfs_dú_›í_mëa
;

3070 
fs
->
fs°©
 = 
hfs_fs°©
;

3071 
fs
->
fscheck
 = 
hfs_fscheck
;

3072 
fs
->
i°©
 = 
hfs_i°©
;

3073 
fs
->
˛o£
 = 
hfs_˛o£
;

3076 
hfs
->
blockm≠_fûe
 = 
NULL
;

3077 
hfs
->
blockm≠_©å
 = 
NULL
;

3078 
hfs
->
blockm≠_ˇche_°¨t
 = -1;

3079 
hfs
->
blockm≠_ˇche_Àn
 = 0;

3081 
fs
->
fú°_öum
 = 
HFS_ROOT_INUM
;

3082 
fs
->
roŸ_öum
 = 
HFS_ROOT_INUM
;

3083 
fs
->
œ°_öum
 = 
HFS_FIRST_USER_CNID
 - 1;

3084 
fs
->
öum_cou¡
 = fs->
œ°_öum
 - fs->
fú°_öum
 + 1;

3087 
hfs
->
exã¡s_fûe
 = 
NULL
;

3088 
hfs
->
exã¡s_©å
 = 
NULL
;

3091 i‡((
hfs
->
ˇèlog_fûe
 =

3092 
	`tsk_fs_fûe_›í_mëa
(
fs
, 
NULL
,

3093 
HFS_CATALOG_FILE_ID
)Ë=
NULL
) {

3094 
fs
->
èg
 = 0;

3095 
	`‰ì
(
hfs
->
fs
);

3096 
	`‰ì
(
hfs
);

3097  
NULL
;

3101 
hfs
->
ˇèlog_©å
 =

3102 
	`tsk_fs_©åli°_gë
(
hfs
->
ˇèlog_fûe
->
mëa
->
©å
,

3103 
TSK_FS_ATTR_TYPE_DEFAULT
);

3104 i‡(!
hfs
->
ˇèlog_©å
) {

3105 
fs
->
èg
 = 0;

3106 
	`tsk_fs_fûe_˛o£
(
hfs
->
ˇèlog_fûe
);

3107 
	`‰ì
(
hfs
->
fs
);

3108 
	`‰ì
(
hfs
);

3109 
	`°∫ˇt
(
tsk_îr°r2
, " - Data AttributeÇot found in Catalog File",

3110 
TSK_ERRSTR_L
 - 
	`°æí
(
tsk_îr°r2
));

3111  
NULL
;

3115 
˙t
 = 
	`tsk_fs_©å_ªad
(
hfs
->
ˇèlog_©å
, 14,

3116 (*Ë&(
hfs
->
ˇèlog_hódî
),

3117 (
hfs_båì_hódî_ªc‹d
), 0);

3118 i‡(
˙t
 !(
hfs_båì_hódî_ªc‹d
)) {

3119 i‡(
˙t
 >= 0) {

3120 
	`tsk_îr‹_ª£t
();

3121 
tsk_î∫o
 = 
TSK_ERR_FS_READ
;

3123 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

3125 
fs
->
èg
 = 0;

3126 
	`‰ì
(
hfs
->
fs
);

3127 
	`‰ì
(
hfs
);

3128  
NULL
;

3131 i‡(
	`tsk_gëu16
(
fs
->
ídün
, 
hfs
->fs->
vîsi⁄
Ë=
HFS_VH_VER_HFSPLUS
)

3132 
hfs
->
is_ˇ£_£nsôive
 = 0;

3133 i‡(
	`tsk_gëu16
(
fs
->
ídün
, 
hfs
->fs->
vîsi⁄
Ë=
HFS_VH_VER_HFSX
) {

3134 i‡(
hfs
->
ˇèlog_hódî
.
compTy≥
 =
HFS_BT_HEAD_COMP_SENS
)

3135 
hfs
->
is_ˇ£_£nsôive
 = 1;

3136 i‡(
hfs
->
ˇèlog_hódî
.
compTy≥
 =
HFS_BT_HEAD_COMP_INSENS
)

3137 
hfs
->
is_ˇ£_£nsôive
 = 0;

3139 
	`tsk_Ârötf
(
°dîr
,

3140 "hfs_›í: invÆid vÆuê(0x%02" 
PRIx8


3141 "Ëf‹ key com∑ªÅy≥\n", 
hfs
->
ˇèlog_hódî
.
compTy≥
);

3142 
hfs
->
is_ˇ£_£nsôive
 = 0;

3146 
	`tsk_Ârötf
(
°dîr
,

3147 "hfs_›í: unknow¿HFS+/HFSX vîsi⁄ (%" 
PRIu16
 "\n",

3148 
	`tsk_gëu16
(
fs
->
ídün
, 
hfs
->fs->
vîsi⁄
));

3149 
hfs
->
is_ˇ£_£nsôive
 = 0;

3153 
fs
->
œ°_öum
 = 
	`hfs_föd_highe°_öum
(
hfs
);

3154 
fs
->
öum_cou¡
 = fs->
œ°_öum
 + 1;

3156 
	`¢¥ötf
((*Ë
fs
->
fs_id
, 17, "%08" 
PRIx32
 "%08" PRIx32,

3157 
	`tsk_gëu32
(
fs
->
ídün
, 
hfs
->fs->
födî_öfo
[
HFS_VH_FI_ID1
]),

3158 
	`tsk_gëu32
(
fs
->
ídün
, 
hfs
->fs->
födî_öfo
[
HFS_VH_FI_ID2
]));

3159 
fs
->
fs_id_u£d
 = 16;

3162 
fs
->
jblk_wÆk
 = 
hfs_jblk_wÆk
;

3163 
fs
->
jíåy_wÆk
 = 
hfs_jíåy_wÆk
;

3164 
fs
->
j›í
 = 
hfs_j›í
;

3165 
fs
->
«me_cmp
 = 
hfs_«me_cmp
;

3166 
fs
->
jou∫_öum
 = 0;

3168  
fs
;

3169 
	}
}

	@tsk3/fs/hfs_dent.c

72 
	~"tsk_fs_i.h
"

73 
	~"tsk_hfs.h
"

75 
	#UTF16_NULL
 0x0000

	)

76 
	#UTF16_NULL_REPLACE
 0x005e

	)

77 
	#UTF16_SLASH
 0x002f

	)

78 
	#UTF16_COLON
 0x003a

	)

88 
uöt8_t


89 
	$hfs_uni2ascii
(
TSK_FS_INFO
 * 
fs
, 
uöt8_t
 * 
uni
, 
uÀn
, *
asc
,

90 
Æí
)

92 *
≠å
;

93 
uöt8_t
 *
uni˛ón
;

94 
uöt8_t
 *
u±r
;

95 
i
;

96 
TSKC⁄vîsi⁄Resu…
 
r
;

100 
uni˛ón
 = (
uöt8_t
 *Ë
	`tsk_mÆloc
(
uÀn
 * 2);

101 
	`mem˝y
(
uni˛ón
, 
uni
, 
uÀn
 * 2);

102 
i
 = 0; i < 
uÀn
; ++i) {

103 
uöt16_t
 
uc
 = 
	`tsk_gëu16
(
fs
->
ídün
, 
uni˛ón
 + 
i
 * 2);

104 
ch™ged
 = 0;

105 i‡(
uc
 =
UTF16_NULL
) {

106 
uc
 = 
UTF16_NULL_REPLACE
;

107 
ch™ged
 = 1;

109 i‡(
uc
 =
UTF16_SLASH
) {

110 
uc
 = 
UTF16_COLON
;

111 
ch™ged
 = 1;

113 i‡(
ch™ged
)

114 *((
uöt16_t
 *Ë(
uni˛ón
 + 
i
 * 2)) =

115 
	`tsk_gëu16
(
fs
->
ídün
, (
uöt8_t
 *Ë& 
uc
);

118 
	`mem£t
(
asc
, 0, 
Æí
);

119 
≠å
 = 
asc
;

120 
u±r
 = 
uni˛ón
;

121 
r
 = 
	`tsk_UTF16toUTF8
(
fs
->
ídün
, (c⁄° 
UTF16
 **Ë&
u±r
,

122 (c⁄° 
UTF16
 *Ë(
u±r
 + 
uÀn
 * 2), (
UTF8
 **Ë& 
≠å
,

123 (
UTF8
 *Ë
≠å
 + 
Æí
 - 1, 
TSK°ri˘C⁄vîsi⁄
);

125 i‡(
r
 !
TSKc⁄vîsi⁄OK
) {

126 
tsk_î∫o
 = 
TSK_ERR_FS_UNICODE
;

127 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

128 "hfs_uni2ascii: unicodêc⁄vîsi⁄ faûed (%d)", ()
r
);

129 
	`‰ì
(
uni˛ón
);

133 
	`‰ì
(
uni˛ón
);

135 
	}
}

137 
TSK_FS_NAME_TYPE_ENUM


138 
	$hfsmode2tsk«mëy≥
(
uöt16_t
 
a_mode
)

140 
a_mode
 & 
HFS_IN_IFMT
) {

141 
HFS_IN_IFIFO
:

142  
TSK_FS_NAME_TYPE_FIFO
;

143 
HFS_IN_IFCHR
:

144  
TSK_FS_NAME_TYPE_CHR
;

145 
HFS_IN_IFDIR
:

146  
TSK_FS_NAME_TYPE_DIR
;

147 
HFS_IN_IFBLK
:

148  
TSK_FS_NAME_TYPE_BLK
;

149 
HFS_IN_IFREG
:

150  
TSK_FS_NAME_TYPE_REG
;

151 
HFS_IN_IFLNK
:

152  
TSK_FS_NAME_TYPE_LNK
;

153 
HFS_IN_IFSOCK
:

154  
TSK_FS_NAME_TYPE_SOCK
;

155 
HFS_IFWHT
:

156  
TSK_FS_NAME_TYPE_WHT
;

157 
HFS_IFXATTR
:

158  
TSK_FS_NAME_TYPE_UNDEF
;

161  
TSK_FS_NAME_TYPE_UNDEF
;

163 
	}
}

168 
TSK_FS_DIR
 *
	mfs_dú
;

169 
TSK_FS_NAME
 *
	mfs_«me
;

170 } 
	tHFS_DIR_OPEN_META_INFO
;

172 
uöt8_t


173 
	$hfs_dú_›í_mëa_cb
(
HFS_INFO
 * 
hfs
, 
öt8_t
 
Àvñ_ty≥
,

174 c⁄° *
èrg_d©a
, c⁄° 
hfs_båì_key_ˇt
 * 
cur_key
,

175 
TSK_OFF_T
 
key_off
, *
±r
)

177 
uöt32_t
 *
˙id_p
 = (uöt32_à*Ë
èrg_d©a
;

178 
HFS_DIR_OPEN_META_INFO
 *
öfo
 = (HFS_DIR_OPEN_META_INFO *Ë
±r
;

179 
TSK_FS_INFO
 *
fs
 = &
hfs
->
fs_öfo
;

181 i‡(
tsk_vîbo£
)

182 
	`Ârötf
(
°dîr
,

183 "hfs_dú_›í_mëa_cb: w™à%" 
PRIu32
 " vs got %" PRIu32

184 " (%†node)\n", *
˙id_p
, 
	`tsk_gëu32
(
hfs
->
fs_öfo
.
ídün
,

185 
cur_key
->
∑ª¡_˙id
),

186 (
Àvñ_ty≥
 =
HFS_BT_NODE_TYPE_IDX
) ? "Index" : "Leaf");

188 i‡(
Àvñ_ty≥
 =
HFS_BT_NODE_TYPE_IDX
) {

189 i‡(
	`tsk_gëu32
(
hfs
->
fs_öfo
.
ídün
,

190 
cur_key
->
∑ª¡_˙id
Ë< *
˙id_p
)

191  
HFS_BTREE_CB_IDX_LT
;

193  
HFS_BTREE_CB_IDX_EQGT
;

196 
uöt8_t
 *
ªc_buf
 = (uöt8_à*Ë
cur_key
;

197 
uöt16_t
 
ªc_ty≥
;

198 
size_t
 
ªc_off2
;

200 i‡(
	`tsk_gëu32
(
hfs
->
fs_öfo
.
ídün
,

201 
cur_key
->
∑ª¡_˙id
Ë< *
˙id_p
)

202  
HFS_BTREE_CB_LEAF_GO
;

203 i‡(
	`tsk_gëu32
(
hfs
->
fs_öfo
.
ídün
,

204 
cur_key
->
∑ª¡_˙id
Ë> *
˙id_p
)

205  
HFS_BTREE_CB_LEAF_STOP
;

207 
ªc_off2
 = 2 + 
	`tsk_gëu16
(
hfs
->
fs_öfo
.
ídün
, 
cur_key
->
key_Àn
);

220 
ªc_ty≥
 = 
	`tsk_gëu16
(
hfs
->
fs_öfo
.
ídün
, &
ªc_buf
[
ªc_off2
]);

223 i‡(
ªc_ty≥
 =
HFS_FILE_THREAD
) {

224 
tsk_î∫o
 = 
TSK_ERR_FS_GENFS
;

225 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

227  
HFS_BTREE_CB_ERR
;

231 i‡(
ªc_ty≥
 =
HFS_FOLDER_THREAD
) {

232 
hfs_thªad
 *
thªad
 = (hfs_thªad *Ë& 
ªc_buf
[
ªc_off2
];

233 
	`°r˝y
(
öfo
->
fs_«me
->
«me
, "..");

234 
öfo
->
fs_«me
->
mëa_addr
 =

235 
	`tsk_gëu32
(
hfs
->
fs_öfo
.
ídün
, 
thªad
->
∑ª¡_˙id
);

236 
öfo
->
fs_«me
->
ty≥
 = 
TSK_FS_NAME_TYPE_DIR
;

237 
öfo
->
fs_«me
->
Êags
 = 
TSK_FS_NAME_FLAG_ALLOC
;

241 i‡(
ªc_ty≥
 =
HFS_FOLDER_RECORD
) {

242 
hfs_fﬁdî
 *
fﬁdî
 = (hfs_fﬁdî *Ë& 
ªc_buf
[
ªc_off2
];

244 
öfo
->
fs_«me
->
mëa_addr
 =

245 
	`tsk_gëu32
(
hfs
->
fs_öfo
.
ídün
, 
fﬁdî
->
°d
.
˙id
);

246 
öfo
->
fs_«me
->
ty≥
 = 
TSK_FS_NAME_TYPE_DIR
;

247 
öfo
->
fs_«me
->
Êags
 = 
TSK_FS_NAME_FLAG_ALLOC
;

250 i‡(
	`hfs_uni2ascii
(
fs
, (
uöt8_t
 *Ë
cur_key
->
«me
.
unicode
,

251 
	`tsk_gëu16
(
hfs
->
fs_öfo
.
ídün
, 
cur_key
->
«me
.
Àngth
),

252 
öfo
->
fs_«me
->
«me
, 
HFS_MAXNAMLEN
 + 1)) {

253  
HFS_BTREE_CB_ERR
;

258 i‡(
ªc_ty≥
 =
HFS_FILE_RECORD
) {

259 
hfs_fûe
 *
fûe
 = (hfs_fûê*Ë& 
ªc_buf
[
ªc_off2
];

260 
öfo
->
fs_«me
->
mëa_addr
 =

261 
	`tsk_gëu32
(
hfs
->
fs_öfo
.
ídün
, 
fûe
->
°d
.
˙id
);

262 
öfo
->
fs_«me
->
ty≥
 =

263 
	`hfsmode2tsk«mëy≥
(
	`tsk_gëu16
(
hfs
->
fs_öfo
.
ídün
,

264 
fûe
->
°d
.
≥rm
.
mode
));

265 
öfo
->
fs_«me
->
Êags
 = 
TSK_FS_NAME_FLAG_ALLOC
;

266 i‡(
	`hfs_uni2ascii
(
fs
, (
uöt8_t
 *Ë
cur_key
->
«me
.
unicode
,

267 
	`tsk_gëu16
(
hfs
->
fs_öfo
.
ídün
, 
cur_key
->
«me
.
Àngth
),

268 
öfo
->
fs_«me
->
«me
, 
HFS_MAXNAMLEN
 + 1)) {

269  
HFS_BTREE_CB_ERR
;

273 
tsk_î∫o
 = 
TSK_ERR_FS_GENFS
;

275 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

277 
ªc_ty≥
);

278  
HFS_BTREE_CB_ERR
;

281 i‡(
	`tsk_fs_dú_add
(
öfo
->
fs_dú
, info->
fs_«me
)) {

282  
HFS_BTREE_CB_ERR
;

284  
HFS_BTREE_CB_LEAF_GO
;

286 
	}
}

301 
TSK_RETVAL_ENUM


302 
	$hfs_dú_›í_mëa
(
TSK_FS_INFO
 * 
fs
, 
TSK_FS_DIR
 ** 
a_fs_dú
,

303 
TSK_INUM_T
 
a_addr
)

305 
HFS_INFO
 *
hfs
 = (HFS_INFO *Ë
fs
;

306 
uöt32_t
 
˙id
;

307 
TSK_FS_DIR
 *
fs_dú
;

308 
TSK_FS_NAME
 *
fs_«me
;

309 
HFS_DIR_OPEN_META_INFO
 
öfo
;

311 
	`tsk_îr‹_ª£t
();

313 
˙id
 = (
uöt32_t
Ë
a_addr
;

315 i‡(
tsk_vîbo£
)

316 
	`Ârötf
(
°dîr
,

317 "hfs_dú_›í_mëa: cÆÀd f‹ dúe˘‹y %" 
PRIu32
 "\n", 
˙id
);

319 i‡(
a_addr
 < 
fs
->
fú°_öum
 ||á_add∏> fs->
œ°_öum
) {

320 
	`tsk_îr‹_ª£t
();

321 
tsk_î∫o
 = 
TSK_ERR_FS_WALK_RNG
;

322 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

323 "hfs_dú_›í_mëa: InvÆid inodêvÆue: %" 
PRIuINUM
, 
a_addr
);

324  
TSK_ERR
;

326 i‡(
a_fs_dú
 =
NULL
) {

327 
	`tsk_îr‹_ª£t
();

328 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

329 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

331  
TSK_ERR
;

334 i‡(
tsk_vîbo£
)

335 
	`tsk_Ârötf
(
°dîr
,

336 "hfs_dú_›í_mëa: Pro˚ssög dúe˘‹y %" 
PRIuINUM
 "\n",

337 
a_addr
);

339 
fs_dú
 = *
a_fs_dú
;

340 i‡(
fs_dú
) {

341 
	`tsk_fs_dú_ª£t
(
fs_dú
);

343 i‡((*
a_fs_dú
 = 
fs_dú
 = 
	`tsk_fs_dú_Æloc
(
fs
, 128)Ë=
NULL
) {

344  
TSK_ERR
;

347 i‡((
fs_«me
 = 
	`tsk_fs_«me_Æloc
(
HFS_MAXNAMLEN
, 0)Ë=
NULL
) {

348  
TSK_ERR
;

350 
öfo
.
fs_dú
 = fs_dir;

351 
öfo
.
fs_«me
 = fs_name;

353 i‡((
fs_dú
->
fs_fûe
 =

354 
	`tsk_fs_fûe_›í_mëa
(
fs
, 
NULL
, 
a_addr
)) == NULL) {

355 
	`°∫ˇt
(
tsk_îr°r2
, " - hfs_dir_open_meta",

356 
TSK_ERRSTR_L
 - 
	`°æí
(
tsk_îr°r2
));

357 
	`tsk_fs_«me_‰ì
(
fs_«me
);

358  
TSK_ERR
;

362 i‡(
a_addr
 =
fs
->
roŸ_öum
) {

363 
i
;

364 
i
 = 0; i < 6; i++) {

365 
i
) {

367 
	`°∫˝y
(
fs_«me
->
«me
, 
HFS_EXTENTS_FILE_NAME
,

368 
fs_«me
->
«me_size
);

369 
fs_«me
->
mëa_addr
 = 
HFS_EXTENTS_FILE_ID
;

372 
	`°∫˝y
(
fs_«me
->
«me
, 
HFS_CATALOG_FILE_NAME
,

373 
fs_«me
->
«me_size
);

374 
fs_«me
->
mëa_addr
 = 
HFS_CATALOG_FILE_ID
;

377 
	`°∫˝y
(
fs_«me
->
«me
, 
HFS_BAD_BLOCK_FILE_NAME
,

378 
fs_«me
->
«me_size
);

379 
fs_«me
->
mëa_addr
 = 
HFS_BAD_BLOCK_FILE_ID
;

382 
	`°∫˝y
(
fs_«me
->
«me
, 
HFS_ALLOCATION_FILE_NAME
,

383 
fs_«me
->
«me_size
);

384 
fs_«me
->
mëa_addr
 = 
HFS_ALLOCATION_FILE_ID
;

387 
	`°∫˝y
(
fs_«me
->
«me
, 
HFS_STARTUP_FILE_NAME
,

388 
fs_«me
->
«me_size
);

389 
fs_«me
->
mëa_addr
 = 
HFS_STARTUP_FILE_ID
;

392 
	`°∫˝y
(
fs_«me
->
«me
, 
HFS_ATTRIBUTES_FILE_NAME
,

393 
fs_«me
->
«me_size
);

394 
fs_«me
->
mëa_addr
 = 
HFS_ATTRIBUTES_FILE_ID
;

407 
fs_«me
->
ty≥
 = 
TSK_FS_NAME_TYPE_REG
;

408 
fs_«me
->
Êags
 = 
TSK_FS_NAME_FLAG_ALLOC
;

409 i‡(
	`tsk_fs_dú_add
(
fs_dú
, 
fs_«me
)) {

410 
	`tsk_fs_«me_‰ì
(
fs_«me
);

411  
TSK_ERR
;

416 i‡(
	`hfs_ˇt_åavî£
(
hfs
, &
˙id
, 
hfs_dú_›í_mëa_cb
, &
öfo
)) {

417 
	`tsk_fs_«me_‰ì
(
fs_«me
);

418  
TSK_ERR
;

421 
	`tsk_fs_«me_‰ì
(
fs_«me
);

422  
TSK_OK
;

423 
	}
}

426 
	$hfs_«me_cmp
(
TSK_FS_INFO
 * 
a_fs_öfo
, c⁄° *
s1
, c⁄° *
s2
)

428 
HFS_INFO
 *
hfs
 = (HFS_INFO *Ë
a_fs_öfo
;

429 i‡(
hfs
->
is_ˇ£_£nsôive
)

430  
	`°rcmp
(
s1
, 
s2
);

432  
	`°rˇ£cmp
(
s1
, 
s2
);

433 
	}
}

	@tsk3/fs/hfs_journal.c

11 
	~"tsk_fs_i.h
"

12 
	~"tsk_hfs.h
"

14 
uöt8_t


15 
	$hfs_j›í
(
TSK_FS_INFO
 * 
fs
, 
TSK_INUM_T
 
öum
)

17 
	`tsk_Ârötf
(
°dîr
, "jopenÇot implemented for HFS yet");

20 
	}
}

22 
uöt8_t


23 
	$hfs_jíåy_wÆk
(
TSK_FS_INFO
 * 
fs
, 
Êags
, 
TSK_FS_JENTRY_WALK_CB
 
a˘i⁄
,

24 *
±r
)

26 
	`tsk_Ârötf
(
°dîr
, "jentry_walkÇot implemented for HFS yet");

29 
	}
}

31 
uöt8_t


32 
	$hfs_jblk_wÆk
(
TSK_FS_INFO
 * 
fs
, 
TSK_DADDR_T
 
°¨t
, TSK_DADDR_T 
íd
,

33 
Êags
, 
TSK_FS_JBLK_WALK_CB
 
a˘i⁄
, *
±r
)

36 
	`tsk_Ârötf
(
°dîr
, "jblk_walkÇot implemented for HFS yet");

39 
	}
}

	@tsk3/fs/hfs_unicompare.c

108 
	~"tsk_fs_i.h
"

109 
	~"tsk_hfs.h
"

111 
hfs_unicode_com∑ª_öt
(
uöt16_t
 
ídün
,

112 c⁄° 
hfs_uni_°r
 * 
uni1
, c⁄° hfs_uni_°∏* 
uni2
);

115 
	$hfs_unicode_com∑ª
(
HFS_INFO
 * 
hfs
, c⁄° 
hfs_uni_°r
 * 
uni1
,

116 c⁄° 
hfs_uni_°r
 * 
uni2
)

118 i‡(
hfs
->
is_ˇ£_£nsôive
) {

119 
uöt16_t
 
l1
, 
l2
;

120 c⁄° 
uöt8_t
 *
s1
, *
s2
;

121 
uöt16_t
 
c1
, 
c2
;

123 
l1
 = 
	`tsk_gëu16
(
hfs
->
fs_öfo
.
ídün
, 
uni1
->
Àngth
);

124 
l2
 = 
	`tsk_gëu16
(
hfs
->
fs_öfo
.
ídün
, 
uni2
->
Àngth
);

125 
s1
 = 
uni1
->
unicode
;

126 
s2
 = 
uni2
->
unicode
;

129 i‡((
l1
 =0Ë&& (
l2
 == 0))

131 i‡(
l1
 == 0)

133 i‡(
l2
 == 0)

135 
c1
 = 
	`tsk_gëu16
(
hfs
->
fs_öfo
.
ídün
, 
s1
);

136 
c2
 = 
	`tsk_gëu16
(
hfs
->
fs_öfo
.
ídün
, 
s2
);

137 i‡(
c1
 < 
c2
)

139 i‡(
c1
 > 
c2
)

141 
s1
 += 2;

142 
s2
 += 2;

143 --
l1
;

144 --
l2
;

148  
	`hfs_unicode_com∑ª_öt
(
hfs
->
fs_öfo
.
ídün
, 
uni1
, 
uni2
);

149 
	}
}

151 
uöt16_t
 
gLowîCa£TabÀ
[];

154 
	$hfs_unicode_com∑ª_öt
(
uöt16_t
 
ídün
, c⁄° 
hfs_uni_°r
 * 
uni1
,

155 c⁄° 
hfs_uni_°r
 * 
uni2
)

157 
uöt16_t
 
c1
, 
c2
;

158 
uöt16_t
 
ãmp
;

159 
uöt16_t
 *
lowîCa£TabÀ
;

161 c⁄° 
uöt8_t
 *
°r1
 = 
uni1
->
unicode
;

162 c⁄° 
uöt8_t
 *
°r2
 = 
uni2
->
unicode
;

163 
uöt16_t
 
Àngth1
 = 
	`tsk_gëu16
(
ídün
, 
uni1
->
Àngth
);

164 
uöt16_t
 
Àngth2
 = 
	`tsk_gëu16
(
ídün
, 
uni2
->
Àngth
);

166 
lowîCa£TabÀ
 = 
gLowîCa£TabÀ
;

170 
c1
 = 0;

171 
c2
 = 0;

173 
Àngth1
 && 
c1
 == 0) {

174 
c1
 = 
	`tsk_gëu16
(
ídün
, 
°r1
);

175 
°r1
 += 2;

176 --
Àngth1
;

177 i‡((
ãmp
 = 
lowîCa£TabÀ
[
c1
 >> 8]) != 0)

179 
c1
 = 
lowîCa£TabÀ
[
ãmp
 + (c1 & 0x00FF)];

182 
Àngth2
 && 
c2
 == 0) {

183 
c2
 = 
	`tsk_gëu16
(
ídün
, 
°r2
);

184 
°r2
 += 2;

185 --
Àngth2
;

186 i‡((
ãmp
 = 
lowîCa£TabÀ
[
c2
 >> 8]) != 0)

188 
c2
 = 
lowîCa£TabÀ
[
ãmp
 + (c2 & 0x00FF)];

190 i‡(
c1
 !
c2
)

192 i‡(
c1
 == 0)

195 i‡(
c1
 < 
c2
)

199 
	}
}

209 
uöt16_t
 
	ggLowîCa£TabÀ
[] = {

	@tsk3/fs/icat_lib.c

30 
	~"tsk_fs_i.h
"

36 
TSK_WALK_RET_ENUM


37 
	$iˇt_a˘i⁄
(
TSK_FS_FILE
 * 
fs_fûe
, 
TSK_OFF_T
 
a_off
, 
TSK_DADDR_T
 
addr
,

38 *
buf
, 
size_t
 
size
, 
TSK_FS_BLOCK_FLAG_ENUM
 
Êags
, *
±r
)

40 i‡(
size
 == 0)

41  
TSK_WALK_CONT
;

43 i‡(
	`fwrôe
(
buf
, 
size
, 1, 
°dout
) != 1) {

44 
	`tsk_îr‹_ª£t
();

45 
tsk_î∫o
 = 
TSK_ERR_FS_WRITE
;

46 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

47 "iˇt_a˘i⁄:Éº‹ wrôögÅÿ°dout: %s", 
	`°ªº‹
(
î∫o
));

48  
TSK_WALK_ERROR
;

51  
TSK_WALK_CONT
;

52 
	}
}

55 
uöt8_t


56 
	$tsk_fs_iˇt
(
TSK_FS_INFO
 * 
fs
, 
TSK_INUM_T
 
öum
,

57 
TSK_FS_ATTR_TYPE_ENUM
 
ty≥
, 
uöt8_t
 
ty≥_u£d
,

58 
uöt16_t
 
id
, 
uöt8_t
 
id_u£d
, 
TSK_FS_FILE_WALK_FLAG_ENUM
 
Êags
)

60 
TSK_FS_FILE
 *
fs_fûe
;

62 #ifde‡
TSK_WIN32


63 i‡(-1 =
	`_£tmode
(
	`_fûío
(
°dout
), 
_O_BINARY
)) {

64 
	`tsk_îr‹_ª£t
();

65 
tsk_î∫o
 = 
TSK_ERR_FS_WRITE
;

66 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

68 
	`°ªº‹
(
î∫o
));

73 
fs_fûe
 = 
	`tsk_fs_fûe_›í_mëa
(
fs
, 
NULL
, 
öum
);

74 i‡(!
fs_fûe
) {

78 i‡(
ty≥_u£d
) {

79 i‡(
id_u£d
 == 0) {

80 
Êags
 |
TSK_FS_FILE_WALK_FLAG_NOID
;

82 i‡(
	`tsk_fs_fûe_wÆk_ty≥
(
fs_fûe
, 
ty≥
, 
id
, 
Êags
, 
iˇt_a˘i⁄
,

83 
NULL
)) {

84 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

89 i‡(
	`tsk_fs_fûe_wÆk
(
fs_fûe
, 
Êags
, 
iˇt_a˘i⁄
, 
NULL
)) {

90 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

96 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

99 
	}
}

	@tsk3/fs/ifind_lib.c

28 
	~"tsk_fs_i.h
"

29 
	~"tsk_hfs.h
"

37 
TSK_INUM_T
 
	m∑röode
;

38 
TSK_FS_IFIND_FLAG_ENUM
 
	mÊags
;

39 
uöt8_t
 
	mfound
;

40 } 
	tIFIND_PAR_DATA
;

46 
TSK_WALK_RET_ENUM


47 
	$iföd_∑r_a˘
(
TSK_FS_FILE
 * 
fs_fûe
, *
±r
)

49 
IFIND_PAR_DATA
 *
d©a
 = (IFIND_PAR_DATA *Ë
±r
;

50 
TSK_FS_META_NAME_LIST
 *
fs_«me_li°
;

53 
fs_«me_li°
 = 
fs_fûe
->
mëa
->
«me2
;

54 
fs_«me_li°
) {

58 i‡(
fs_«me_li°
->
∑r_öode
 =
d©a
->
∑röode
) {

59 
i
, 
˙t
;

60 
uöt8_t
 
¥öãd
;

61 
TSK_FS_NAME
 *
fs_«me
;

63 i‡((
fs_«me
 = 
	`tsk_fs_«me_Æloc
(256, 0)Ë=
NULL
)

64  
TSK_WALK_ERROR
;

68 
fs_«me
->
mëa_addr
 = 
fs_fûe
->
mëa
->
addr
;

69 
fs_«me
->
Êags
 = 
TSK_FS_NAME_FLAG_UNALLOC
;

70 
	`°∫˝y
(
fs_«me
->
«me
, 
fs_«me_li°
->«me, fs_«me->
«me_size
);

73 
fs_fûe
->
«me
 = 
fs_«me
;

74 
¥öãd
 = 0;

77 
˙t
 = 
	`tsk_fs_fûe_©å_gësize
(
fs_fûe
);

78 
i
 = 0; i < 
˙t
; i++) {

79 c⁄° 
TSK_FS_ATTR
 *
fs_©å
 =

80 
	`tsk_fs_fûe_©å_gë_idx
(
fs_fûe
, 
i
);

81 i‡(!
fs_©å
)

84 i‡((
fs_©å
->
ty≥
 =
TSK_FS_ATTR_TYPE_NTFS_DATA
)

85 || (
fs_©å
->
ty≥
 =
TSK_FS_ATTR_TYPE_NTFS_IDXROOT
)) {

87 i‡(
d©a
->
Êags
 & 
TSK_FS_IFIND_PAR_LONG
) {

88 
	`tsk_fs_«me_¥öt_l⁄g
(
°dout
, 
fs_fûe
, 
NULL
,

89 
fs_fûe
->
fs_öfo
, 
fs_©å
, 0);

92 
	`tsk_fs_«me_¥öt
(
°dout
, 
fs_fûe
, 
NULL
,

93 
fs_fûe
->
fs_öfo
, 
fs_©å
, 0);

94 
	`tsk_¥ötf
("\n");

96 
¥öãd
 = 1;

101 i‡(
¥öãd
 == 0) {

102 i‡(
d©a
->
Êags
 & 
TSK_FS_IFIND_PAR_LONG
) {

103 
	`tsk_fs_«me_¥öt_l⁄g
(
°dout
, 
fs_fûe
, 
NULL
,

104 
fs_fûe
->
fs_öfo
, 
NULL
, 0);

107 
	`tsk_fs_«me_¥öt
(
°dout
, 
fs_fûe
, 
NULL
,

108 
fs_fûe
->
fs_öfo
, 
NULL
, 0);

109 
	`tsk_¥ötf
("\n");

112 
	`tsk_fs_«me_‰ì
(
fs_«me
);

113 
d©a
->
found
 = 1;

115 
fs_«me_li°
 = fs_«me_li°->
√xt
;

118  
TSK_WALK_CONT
;

119 
	}
}

131 
uöt8_t


132 
	$tsk_fs_iföd_∑r
(
TSK_FS_INFO
 * 
fs
, 
TSK_FS_IFIND_FLAG_ENUM
 
l˛Êags
,

133 
TSK_INUM_T
 
∑r
)

135 
IFIND_PAR_DATA
 
d©a
;

137 
d©a
.
found
 = 0;

138 
d©a
.
Êags
 = 
l˛Êags
;

139 
d©a
.
∑röode
 = 
∑r
;

142 i‡(
fs
->
	`öode_wÆk
(fs, fs->
fú°_öum
, fs->
œ°_öum
,

143 
TSK_FS_META_FLAG_UNALLOC
, 
iföd_∑r_a˘
, &
d©a
)) {

148 
	}
}

167 
öt8_t


168 
	$tsk_fs_∑th2öum
(
TSK_FS_INFO
 * 
a_fs
, c⁄° *
a_∑th
,

169 
TSK_INUM_T
 * 
a_ªsu…
, 
TSK_FS_NAME
 * 
a_fs_«me
)

171 *
˝©h
;

172 
size_t
 
˛í
;

173 *
cur_dú
;

174 *
cur_©å
;

175 *
°πok_œ°
;

176 
TSK_INUM_T
 
√xt_mëa
;

177 
uöt8_t
 
is_d⁄e
;

178 *
a_ªsu…
 = 0;

181 
˛í
 = 
	`°æí
(
a_∑th
) + 1;

182 i‡((
˝©h
 = (*Ë
	`tsk_mÆloc
(
˛í
)Ë=
NULL
) {

185 
	`°∫˝y
(
˝©h
, 
a_∑th
, 
˛í
);

188 
cur_dú
 = (*Ë
	`°πok_r
(
˝©h
, "/", &
°πok_œ°
);

189 
cur_©å
 = 
NULL
;

192 i‡(
cur_dú
 =
NULL
) {

193 
	`‰ì
(
˝©h
);

194 *
a_ªsu…
 = 
a_fs
->
roŸ_öum
;

197 i‡(
a_fs_«me
) {

198 
a_fs_«me
->
mëa_addr
 = 
a_fs
->
roŸ_öum
;

199 
a_fs_«me
->
ty≥
 = 
TSK_FS_NAME_TYPE_DIR
;

200 
a_fs_«me
->
Êags
 = 
TSK_FS_NAME_FLAG_ALLOC
;

201 i‡(
a_fs_«me
->
«me
)

202 
a_fs_«me
->
«me
[0] = '\0';

203 i‡(
a_fs_«me
->
shπ_«me
)

204 
a_fs_«me
->
shπ_«me
[0] = '\0';

210 i‡(
	`TSK_FS_TYPE_ISNTFS
(
a_fs
->
·y≥
)

211 && ((
cur_©å
 = 
	`°rchr
(
cur_dú
, ':')Ë!
NULL
)) {

212 *(
cur_©å
) = '\0';

213 
cur_©å
++;

216 i‡(
tsk_vîbo£
)

217 
	`tsk_Ârötf
(
°dîr
, "Lookög f‹ %s\n", 
cur_dú
);

220 
√xt_mëa
 = 
a_fs
->
roŸ_öum
;

224 
is_d⁄e
 = 0;

225 
is_d⁄e
 == 0) {

226 
size_t
 
i
;

227 
TSK_FS_FILE
 *
fs_fûe_Æloc
 = 
NULL
;

228 
TSK_FS_FILE
 *
fs_fûe_dñ
 = 
NULL
;

230 
TSK_FS_DIR
 *
fs_dú
 = 
NULL
;

233 i‡((
fs_dú
 = 
	`tsk_fs_dú_›í_mëa
(
a_fs
, 
√xt_mëa
)Ë=
NULL
) {

234 
	`‰ì
(
˝©h
);

239 
i
 = 0; i < 
	`tsk_fs_dú_gësize
(
fs_dú
); i++) {

241 
TSK_FS_FILE
 *
fs_fûe
;

242 
uöt8_t
 
found_«me
 = 0;

244 i‡((
fs_fûe
 = 
	`tsk_fs_dú_gë
(
fs_dú
, 
i
)Ë=
NULL
) {

245 
	`tsk_fs_dú_˛o£
(
fs_dú
);

246 
	`‰ì
(
˝©h
);

255 i‡(
	`TSK_FS_TYPE_ISFAT
(
a_fs
->
·y≥
)) {

256 i‡((
fs_fûe
->
«me
->name)

257 && (
a_fs
->
	`«me_cmp
◊_fs, 
fs_fûe
->
«me
->name,

258 
cur_dú
) == 0)) {

259 
found_«me
 = 1;

261 i‡((
fs_fûe
->
«me
->
shπ_«me
)

262 && (
a_fs
->
	`«me_cmp
◊_fs, 
fs_fûe
->
«me
->
shπ_«me
,

263 
cur_dú
) == 0)) {

264 
found_«me
 = 1;

269 i‡(
	`TSK_FS_TYPE_ISNTFS
(
a_fs
->
·y≥
)) {

270 i‡((
fs_fûe
->
«me
->name)

271 && (
a_fs
->
	`«me_cmp
◊_fs, 
fs_fûe
->
«me
->name,

272 
cur_dú
) == 0)) {

274 i‡(
cur_©å
 =
NULL
) {

275 
found_«me
 = 1;

278 i‡(
fs_fûe
->
mëa
) {

279 
˙t
, 
i
;

282 
˙t
 = 
	`tsk_fs_fûe_©å_gësize
(
fs_fûe
);

283 
i
 = 0; i < 
˙t
; i++) {

284 c⁄° 
TSK_FS_ATTR
 *
fs_©å
 =

285 
	`tsk_fs_fûe_©å_gë_idx
(
fs_fûe
, 
i
);

286 i‡(!
fs_©å
)

289 i‡((
fs_©å
->
«me
)

290 && (
a_fs
->
	`«me_cmp
◊_fs, 
fs_©å
->
«me
,

291 
cur_©å
) == 0)) {

292 
found_«me
 = 1;

300 i‡((
fs_fûe
->
«me
->name)

301 && (
a_fs
->
	`«me_cmp
◊_fs, 
fs_fûe
->
«me
->name,

302 
cur_dú
) == 0)) {

303 
found_«me
 = 1;

307 i‡(
found_«me
) {

311 i‡(
fs_fûe
->
«me
->
Êags
 & 
TSK_FS_NAME_FLAG_ALLOC
) {

312 
fs_fûe_Æloc
 = 
fs_fûe
;

317 i‡((
fs_fûe_dñ
)

318 && (
fs_fûe_dñ
->
«me
->
mëa_addr
 == 0)) {

319 
	`tsk_fs_fûe_˛o£
(
fs_fûe_dñ
);

321 
fs_fûe_dñ
 = 
fs_fûe
;

326 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

327 
fs_fûe
 = 
NULL
;

332 i‡((
fs_fûe_Æloc
Ë|| (
fs_fûe_dñ
)) {

334 c⁄° *
≤ame
;

335 
TSK_FS_FILE
 *
fs_fûe_tmp
;

338 i‡(
fs_fûe_Æloc
)

339 
fs_fûe_tmp
 = 
fs_fûe_Æloc
;

341 
fs_fûe_tmp
 = 
fs_fûe_dñ
;

343 
≤ame
 = 
cur_dú
;

346 
cur_dú
 = (*Ë
	`°πok_r
(
NULL
, "/", &(
°πok_œ°
));

347 
cur_©å
 = 
NULL
;

349 i‡(
tsk_vîbo£
)

350 
	`tsk_Ârötf
(
°dîr
,

351 "Found ià(%s),ÇowÜookög f‹ %s\n", 
≤ame
, 
cur_dú
);

354 i‡(
cur_dú
 =
NULL
) {

355 *
a_ªsu…
 = 
fs_fûe_tmp
->
«me
->
mëa_addr
;

358 i‡(
a_fs_«me
) {

359 
	`tsk_fs_«me_c›y
(
a_fs_«me
, 
fs_fûe_tmp
->
«me
);

362 
	`tsk_fs_dú_˛o£
(
fs_dú
);

363 
	`‰ì
(
˝©h
);

368 i‡(
	`TSK_FS_TYPE_ISNTFS
(
a_fs
->
·y≥
)

369 && ((
cur_©å
 = 
	`°rchr
(
cur_dú
, ':')Ë!
NULL
)) {

370 *(
cur_©å
) = '\0';

371 
cur_©å
++;

375 
√xt_mëa
 = 
fs_fûe_tmp
->
«me
->
mëa_addr
;

377 i‡(
fs_fûe_Æloc
) {

378 
	`tsk_fs_fûe_˛o£
(
fs_fûe_Æloc
);

379 
fs_fûe_Æloc
 = 
NULL
;

381 i‡(
fs_fûe_dñ
) {

382 
	`tsk_fs_fûe_˛o£
(
fs_fûe_dñ
);

383 
fs_fûe_dñ
 = 
NULL
;

389 
is_d⁄e
 = 1;

392 
	`tsk_fs_dú_˛o£
(
fs_dú
);

393 
fs_dú
 = 
NULL
;

396 
	`‰ì
(
˝©h
);

398 
	}
}

409 
öt8_t


410 
	$tsk_fs_iföd_∑th
(
TSK_FS_INFO
 * 
fs
, 
TSK_TCHAR
 * 
ç©h
, 
TSK_INUM_T
 * 
ªsu…
)

413 #ifde‡
TSK_WIN32


416 
size_t
 
˛í
;

417 
UTF8
 *
±r8
;

418 
UTF16
 *
±r16
;

419 
ªtvÆ
;

420 *
˝©h
;

422 
˛í
 = 
	`TSTRLEN
(
ç©h
) * 4;

423 i‡((
˝©h
 = (*Ë
	`tsk_mÆloc
(
˛í
)Ë=
NULL
) {

426 
±r8
 = (
UTF8
 *Ë
˝©h
;

427 
±r16
 = (
UTF16
 *Ë
ç©h
;

429 
ªtvÆ
 =

430 
	`tsk_UTF16toUTF8_l˛‹dî
((c⁄° 
UTF16
 **Ë&
±r16
, (UTF16 *)

431 & 
±r16
[
	`TSTRLEN
(
ç©h
Ë+ 1], &
±r8
,

432 (
UTF8
 *Ë((
uöçå_t
Ë
±r8
 + 
˛í
), 
TSKÀnõ¡C⁄vîsi⁄
);

433 i‡(
ªtvÆ
 !
TSKc⁄vîsi⁄OK
) {

434 
	`tsk_îr‹_ª£t
();

435 
tsk_î∫o
 = 
TSK_ERR_FS_UNICODE
;

436 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

438 
ªtvÆ
);

439 
	`‰ì
(
˝©h
);

442  
	`tsk_fs_∑th2öum
(
fs
, 
˝©h
, 
ªsu…
, 
NULL
);

445  
	`tsk_fs_∑th2öum
(
fs
, (c⁄° *Ë
ç©h
, 
ªsu…
, 
NULL
);

447 
	}
}

459 
TSK_DADDR_T
 
	mblock
;

460 
TSK_FS_IFIND_FLAG_ENUM
 
	mÊags
;

461 
uöt8_t
 
	mfound
;

463 
TSK_INUM_T
 
	mcuröode
;

464 
uöt32_t
 
	mcuπy≥
;

465 
uöt16_t
 
	mcurid
;

466 } 
	tIFIND_DATA_DATA
;

472 
TSK_WALK_RET_ENUM


473 
	$iföd_d©a_fûe_a˘
(
TSK_FS_FILE
 * 
fs_fûe
, 
TSK_OFF_T
 
a_off
,

474 
TSK_DADDR_T
 
addr
, *
buf
, 
size_t
 
size
, 
TSK_FS_BLOCK_FLAG_ENUM
 
Êags
,

475 *
±r
)

477 
TSK_FS_INFO
 *
fs
 = 
fs_fûe
->
fs_öfo
;

478 
IFIND_DATA_DATA
 *
d©a
 = (IFIND_DATA_DATA *Ë
±r
;

485 i‡(!
addr
)

486  
TSK_WALK_CONT
;

488 i‡((
d©a
->
block
 >
addr
) &&

489 (
d©a
->
block
 <

490 (
addr
 + (
size
 + 
fs
->
block_size
 - 1) / fs->block_size))) {

491 
	`tsk_¥ötf
("%" 
PRIuINUM
 "\n", 
d©a
->
curöode
);

492 
d©a
->
found
 = 1;

493  
TSK_WALK_STOP
;

495  
TSK_WALK_CONT
;

496 
	}
}

503 
TSK_WALK_RET_ENUM


504 
	$iföd_d©a_fûe_¡fs_a˘
(
TSK_FS_FILE
 * 
fs_fûe
, 
TSK_OFF_T
 
a_off
,

505 
TSK_DADDR_T
 
addr
, *
buf
, 
size_t
 
size
, 
TSK_FS_BLOCK_FLAG_ENUM
 
Êags
,

506 *
±r
)

508 
IFIND_DATA_DATA
 *
d©a
 = (IFIND_DATA_DATA *Ë
±r
;

510 i‡(
addr
 =
d©a
->
block
) {

511 
	`tsk_¥ötf
("%" 
PRIuINUM
 "-%" 
PRIu32
 "-%" 
PRIu16
 "\n",

512 
d©a
->
curöode
, d©a->
cuπy≥
, d©a->
curid
);

513 
d©a
->
found
 = 1;

514  
TSK_WALK_STOP
;

516  
TSK_WALK_CONT
;

517 
	}
}

526 
TSK_WALK_RET_ENUM


527 
	$iföd_d©a_a˘
(
TSK_FS_FILE
 * 
fs_fûe
, *
±r
)

529 
IFIND_DATA_DATA
 *
d©a
 = (IFIND_DATA_DATA *Ë
±r
;

530 
fûe_Êags
 = (
TSK_FS_FILE_WALK_FLAG_AONLY
);

532 
d©a
->
curöode
 = 
fs_fûe
->
mëa
->
addr
;

535 i‡(
	`TSK_FS_TYPE_ISNTFS
(
fs_fûe
->
fs_öfo
->
·y≥
)) {

536 
i
, 
˙t
;

538 
fûe_Êags
 |
TSK_FS_FILE_WALK_FLAG_SLACK
;

539 
˙t
 = 
	`tsk_fs_fûe_©å_gësize
(
fs_fûe
);

540 
i
 = 0; i < 
˙t
; i++) {

541 c⁄° 
TSK_FS_ATTR
 *
fs_©å
 =

542 
	`tsk_fs_fûe_©å_gë_idx
(
fs_fûe
, 
i
);

543 i‡(!
fs_©å
)

546 
d©a
->
cuπy≥
 = 
fs_©å
->
ty≥
;

547 
d©a
->
curid
 = 
fs_©å
->
id
;

548 i‡(
fs_©å
->
Êags
 & 
TSK_FS_ATTR_NONRES
) {

549 i‡(
	`tsk_fs_©å_wÆk
(
fs_©å
,

550 
fûe_Êags
, 
iföd_d©a_fûe_¡fs_a˘
, 
±r
)) {

551 i‡(
tsk_vîbo£
)

552 
	`tsk_Ârötf
(
°dîr
,

553 "Eº‹ wÆkög fûê%" 
PRIuINUM


554 " Aâribuã: %i", 
fs_fûe
->
mëa
->
addr
, 
i
);

557 
	`tsk_îr‹_ª£t
();

560 i‡((
d©a
->
found
Ë&& (!(d©a->
Êags
 & 
TSK_FS_IFIND_ALL
)))

564  
TSK_WALK_CONT
;

566 i‡(
	`TSK_FS_TYPE_ISFAT
(
fs_fûe
->
fs_öfo
->
·y≥
)) {

567 
fûe_Êags
 |(
TSK_FS_FILE_WALK_FLAG_SLACK
);

568 i‡(
	`tsk_fs_fûe_wÆk
(
fs_fûe
, 
fûe_Êags
,

569 
iföd_d©a_fûe_a˘
, 
±r
)) {

570 i‡(
tsk_vîbo£
)

571 
	`tsk_Ârötf
(
°dîr
, "Eº‹ wÆkög fûê%" 
PRIuINUM
,

572 
fs_fûe
->
mëa
->
addr
);

575 
	`tsk_îr‹_ª£t
();

583 c⁄° 
TSK_FS_ATTR
 *
fs_©å
;

585 i‡(
	`tsk_fs_fûe_wÆk
(
fs_fûe
, 
fûe_Êags
,

586 
iföd_d©a_fûe_a˘
, 
±r
)) {

587 i‡(
tsk_vîbo£
)

588 
	`tsk_Ârötf
(
°dîr
, "Eº‹ wÆkög fûê%" 
PRIuINUM
,

589 
fs_fûe
->
mëa
->
addr
);

592 
	`tsk_îr‹_ª£t
();

597 
fs_©å
 = 
	`tsk_fs_fûe_©å_gë_ty≥
(
fs_fûe
,

598 
TSK_FS_ATTR_TYPE_UNIX_INDIR
, 0, 0);

599 i‡(
fs_©å
) {

600 
d©a
->
cuπy≥
 = 
fs_©å
->
ty≥
;

601 
d©a
->
curid
 = 
fs_©å
->
id
;

603 i‡(
	`tsk_fs_©å_wÆk
(
fs_©å
,

604 
fûe_Êags
, 
iföd_d©a_fûe_a˘
, 
±r
)) {

605 i‡(
tsk_vîbo£
)

606 
	`tsk_Ârötf
(
°dîr
,

607 "Eº‹ wÆkög fûê%" 
PRIuINUM


608 " Indúe˘ Aâribuã", 
fs_fûe
->
mëa
->
addr
);

610 
	`tsk_îr‹_ª£t
();

615 i‡((
d©a
->
found
Ë&& (!(d©a->
Êags
 & 
TSK_FS_IFIND_ALL
)))

616  
TSK_WALK_STOP
;

618  
TSK_WALK_CONT
;

619 
	}
}

627 
uöt8_t


628 
	$tsk_fs_iföd_d©a
(
TSK_FS_INFO
 * 
fs
, 
TSK_FS_IFIND_FLAG_ENUM
 
l˛Êags
,

629 
TSK_DADDR_T
 
blk
)

631 
IFIND_DATA_DATA
 
d©a
;

633 
	`mem£t
(&
d©a
, 0, (
IFIND_DATA_DATA
));

634 
d©a
.
Êags
 = 
l˛Êags
;

635 
d©a
.
block
 = 
blk
;

637 i‡(
fs
->
	`öode_wÆk
(fs, fs->
fú°_öum
, fs->
œ°_öum
,

638 
TSK_FS_META_FLAG_ALLOC
 | 
TSK_FS_META_FLAG_UNALLOC
,

639 
iföd_d©a_a˘
, &
d©a
)) {

647 i‡(!
d©a
.
found
) {

648 
TSK_FS_BLOCK
 *
fs_block
;

650 i‡((
fs_block
 = 
	`tsk_fs_block_gë
(
fs
, 
NULL
, 
blk
)) != NULL) {

652 i‡(
fs_block
->
Êags
 & 
TSK_FS_BLOCK_FLAG_META
) {

653 
	`tsk_¥ötf
("Meta Data\n");

654 
d©a
.
found
 = 1;

656 
	`tsk_fs_block_‰ì
(
fs_block
);

659 i‡(!
d©a
.
found
) {

660 
	`tsk_¥ötf
("InodeÇot found\n");

663 
	}
}

	@tsk3/fs/ils_lib.c

31 
	~"tsk_fs_i.h
"

33 #ifde‡
TSK_WIN32


34 
	~<wösock2.h
>

39 c⁄° 
TSK_TCHAR
 *
	mimage
;

44 
öt32_t
 
	m£c_skew
;

46 
TSK_FS_ILS_FLAG_ENUM
 
	mÊags
;

47 } 
	tILS_DATA
;

53 
	$¥öt_hódî
(
TSK_FS_INFO
 * 
fs
)

55 
ho°«mebuf
[
BUFSIZ
];

56 
time_t
 
now
;

58 #i‚de‡
TSK_WIN32


59 i‡(
	`gëho°«me
(
ho°«mebuf
, (hostnamebuf) - 1) < 0) {

60 i‡(
tsk_vîbo£
)

61 
	`tsk_Ârötf
(
°dîr
, "error getting host byÇame\n");

63 
	`°r˝y
(
ho°«mebuf
, "unknown");

65 
ho°«mebuf
[(hostnamebuf) - 1] = 0;

67 
	`°r˝y
(
ho°«mebuf
, "unknown");

69 
now
 = 
	`time
((
time_t
 *) 0);

74 
	`tsk_¥ötf
("class|host|device|start_time\n");

75 
	`tsk_¥ötf
("ûs|%s||%" 
PRIu64
 "\n", 
ho°«mebuf
, (
uöt64_t
Ë
now
);

80 
tsk_¥ötf


83 
	`tsk_¥ötf
("|st_mode|st_nlink|st_size\n");

84 
	}
}

87 
	$¥öt_hódî_mac
()

89 
ho°«mebuf
[
BUFSIZ
];

90 
time_t
 
now
;

92 #i‚de‡
TSK_WIN32


93 i‡(
	`gëho°«me
(
ho°«mebuf
, (hostnamebuf) - 1) < 0) {

94 i‡(
tsk_vîbo£
)

95 
	`tsk_Ârötf
(
°dîr
, "Error getting host byÇame\n");

96 
	`°r˝y
(
ho°«mebuf
, "unknown");

98 
ho°«mebuf
[(hostnamebuf) - 1] = 0;

100 
	`°r˝y
(
ho°«mebuf
, "unknown");

102 
now
 = 
	`time
((
time_t
 *) 0);

108 
tsk_¥ötf


112 
	}
}

117 
TSK_WALK_RET_ENUM


118 
	$ûs_a˘
(
TSK_FS_FILE
 * 
fs_fûe
, *
±r
)

120 
ILS_DATA
 *
d©a
 = (ILS_DATA *Ë
±r
;

123 i‡((
fs_fûe
->
mëa
->
∆ök
 == 0)

124 && ((
d©a
->
Êags
 & 
TSK_FS_ILS_OPEN
) != 0)) {

125  
TSK_WALK_CONT
;

129 i‡((
fs_fûe
->
mëa
->
∆ök
 == 0)

130 && ((
d©a
->
Êags
 & 
TSK_FS_ILS_UNLINK
) == 0)) {

131  
TSK_WALK_CONT
;

133 i‡((
fs_fûe
->
mëa
->
∆ök
 > 0)

134 && ((
d©a
->
Êags
 & 
TSK_FS_ILS_LINK
) == 0)) {

135  
TSK_WALK_CONT
;

138 i‡(
d©a
->
£c_skew
 != 0) {

139 
fs_fûe
->
mëa
->
mtime
 -
d©a
->
£c_skew
;

140 
fs_fûe
->
mëa
->
©ime
 -
d©a
->
£c_skew
;

141 
fs_fûe
->
mëa
->
˘ime
 -
d©a
->
£c_skew
;

142 
fs_fûe
->
mëa
->
¸time
 -
d©a
->
£c_skew
;

144 
	`tsk_¥ötf
("%" 
PRIuINUM
 "|%c|%" 
PRIuUID
 "|%" 
PRIuGID
 "|%" 
PRIu32
 "|%"

145 
PRIu32
 "|%" PRIu32 "|%" PRIu32,

146 
fs_fûe
->
mëa
->
addr
,

147 (
fs_fûe
->
mëa
->
Êags
 & 
TSK_FS_META_FLAG_ALLOC
) ? 'a' : 'f',

148 
fs_fûe
->
mëa
->
uid
, fs_fûe->mëa->
gid
,

149 (
uöt32_t
Ë
fs_fûe
->
mëa
->
mtime
, (uöt32_tËfs_fûe->mëa->
©ime
,

150 (
uöt32_t
Ë
fs_fûe
->
mëa
->
˘ime
, (uöt32_tËfs_fûe->mëa->
¸time
);

152 i‡(
d©a
->
£c_skew
 != 0) {

153 
fs_fûe
->
mëa
->
mtime
 +
d©a
->
£c_skew
;

154 
fs_fûe
->
mëa
->
©ime
 +
d©a
->
£c_skew
;

155 
fs_fûe
->
mëa
->
˘ime
 +
d©a
->
£c_skew
;

156 
fs_fûe
->
mëa
->
¸time
 +
d©a
->
£c_skew
;

159 
	`tsk_¥ötf
("|%lo|%d|%" 
PRIuOFF
 "\n",

160 (Ë
fs_fûe
->
mëa
->
mode
, fs_fûe->mëa->
∆ök
,

161 
fs_fûe
->
mëa
->
size
);

163  
TSK_WALK_CONT
;

164 
	}
}

171 
TSK_WALK_RET_ENUM


172 
	$ûs_mac_a˘
(
TSK_FS_FILE
 * 
fs_fûe
, *
±r
)

174 
ls
[12];

175 
ILS_DATA
 *
d©a
 = (ILS_DATA *Ë
±r
;

177 i‡((
fs_fûe
->
mëa
->
∆ök
 == 0)

178 && ((
d©a
->
Êags
 & 
TSK_FS_ILS_UNLINK
) == 0)) {

179  
TSK_WALK_CONT
;

181 i‡((
fs_fûe
->
mëa
->
∆ök
 > 0)

182 && ((
d©a
->
Êags
 & 
TSK_FS_ILS_LINK
) == 0)) {

183  
TSK_WALK_CONT
;

187 
	`TFPRINTF
(
°dout
, 
	`_TSK_T
("0|<%s-"), 
d©a
->
image
);

188 
	`tsk_¥ötf
("%s%s%s-%" 
PRIuINUM
 ">|%" PRIuINUM "|",

189 (
fs_fûe
->
mëa
->
«me2
Ë? fs_fûe->mëa->«me2->
«me
 : "",

190 (
fs_fûe
->
mëa
->
«me2
) ? "-" : "",

191 (
fs_fûe
->
mëa
->
Êags
 & 
TSK_FS_META_FLAG_ALLOC
) ? "alive" : "dead",

192 
fs_fûe
->
mëa
->
addr
, fs_file->meta->addr);

195 
	`tsk_fs_mëa_make_ls
(
fs_fûe
->
mëa
, 
ls
, (ls));

197 i‡(
d©a
->
£c_skew
 != 0) {

198 
fs_fûe
->
mëa
->
mtime
 -
d©a
->
£c_skew
;

199 
fs_fûe
->
mëa
->
©ime
 -
d©a
->
£c_skew
;

200 
fs_fûe
->
mëa
->
˘ime
 -
d©a
->
£c_skew
;

201 
fs_fûe
->
mëa
->
¸time
 -
d©a
->
£c_skew
;

204 
	`tsk_¥ötf
("-/%s|%" 
PRIuUID
 "|%" 
PRIuGID
 "|%" 
PRIuOFF
 "|%" 
PRIu32


205 "|%" 
PRIu32
 "|%" PRIu32 "|%" PRIu32 "\n",

206 
ls
,

207 
fs_fûe
->
mëa
->
uid
, fs_fûe->mëa->
gid
, fs_fûe->mëa->
size
,

208 (
uöt32_t
Ë
fs_fûe
->
mëa
->
©ime
, (uöt32_tËfs_fûe->mëa->
mtime
,

209 (
uöt32_t
Ë
fs_fûe
->
mëa
->
˘ime
, (uöt32_tËfs_fûe->mëa->
¸time
);

211 i‡(
d©a
->
£c_skew
 != 0) {

212 
fs_fûe
->
mëa
->
mtime
 -
d©a
->
£c_skew
;

213 
fs_fûe
->
mëa
->
©ime
 -
d©a
->
£c_skew
;

214 
fs_fûe
->
mëa
->
˘ime
 -
d©a
->
£c_skew
;

215 
fs_fûe
->
mëa
->
¸time
 -
d©a
->
£c_skew
;

218  
TSK_WALK_CONT
;

219 
	}
}

236 
uöt8_t


237 
	$tsk_fs_ûs
(
TSK_FS_INFO
 * 
fs
, 
TSK_FS_ILS_FLAG_ENUM
 
l˛Êags
,

238 
TSK_INUM_T
 
i°¨t
, TSK_INUM_T 
ûa°
, 
TSK_FS_META_FLAG_ENUM
 
Êags
,

239 
öt32_t
 
skew
, c⁄° 
TSK_TCHAR
 * 
img
)

241 
ILS_DATA
 
d©a
;

244 i‡(
Êags
 & 
TSK_FS_META_FLAG_ORPHAN
) {

245 
l˛Êags
 |(
TSK_FS_ILS_LINK
 | 
TSK_FS_ILS_UNLINK
);

248 i‡(
l˛Êags
 & 
TSK_FS_ILS_OPEN
) {

249 
Êags
 |
TSK_FS_META_FLAG_UNALLOC
;

250 
Êags
 &~
TSK_FS_META_FLAG_ALLOC
;

251 
l˛Êags
 |
TSK_FS_ILS_LINK
;

252 
l˛Êags
 &~
TSK_FS_ILS_UNLINK
;

256 i‡(((
l˛Êags
 & 
TSK_FS_ILS_LINK
) == 0)

257 && ((
l˛Êags
 & 
TSK_FS_ILS_UNLINK
) == 0))

258 
l˛Êags
 |(
TSK_FS_ILS_LINK
 | 
TSK_FS_ILS_UNLINK
);

261 
d©a
.
Êags
 = 
l˛Êags
;

262 
d©a
.
£c_skew
 = 
skew
;

265 i‡(
l˛Êags
 & 
TSK_FS_ILS_MAC
) {

266 
TSK_TCHAR
 *
tmµå
;

267 
d©a
.
image
 = 
img
;

269 #ifde‡
TSK_WIN32


270 
tmµå
 = 
	`TSTRCHR
(
d©a
.
image
, '\\');

272 
tmµå
 = 
	`°ºchr
(
d©a
.
image
, '/');

275 i‡(
tmµå
)

276 
d©a
.
image
 = ++
tmµå
;

278 
	`¥öt_hódî_mac
();

280 i‡(
fs
->
	`öode_wÆk
(fs, 
i°¨t
, 
ûa°
, 
Êags
, 
ûs_mac_a˘
, &
d©a
))

284 
	`¥öt_hódî
(
fs
);

285 i‡(
fs
->
	`öode_wÆk
(fs, 
i°¨t
, 
ûa°
, 
Êags
, 
ûs_a˘
, &
d©a
))

290 
	}
}

	@tsk3/fs/iso9660.c

65 
	~"tsk_fs_i.h
"

66 
	~"tsk_iso9660.h
"

67 
	~<˘y≥.h
>

72 
	$iso9660_öode_li°_‰ì
(
TSK_FS_INFO
 * 
fs
)

74 
ISO_INFO
 *
iso
 = (ISO_INFO *Ë
fs
;

75 
iso9660_öode_node
 *
tmp
;

77 
iso
->
ö_li°
) {

78 
tmp
 = 
iso
->
ö_li°
;

79 
iso
->
ö_li°
 = iso->ö_li°->
√xt
;

80 
	`‰ì
(
tmp
);

82 
iso
->
ö_li°
 = 
NULL
;

83 
	}
}

96 
rockridge_ext
 *

97 
	$∑r£_su•
(
TSK_FS_INFO
 * 
fs
, *
buf
, 
cou¡
, 
FILE
 * 
hFûe
)

99 
rockridge_ext
 *
º
;

100 
ISO_INFO
 *
iso
 = (ISO_INFO *Ë
fs
;

102 *
íd
 = 
buf
 + 
cou¡
 - 1;

104 i‡(
tsk_vîbo£
)

105 
	`tsk_Ârötf
(
°dîr
, "∑r£_su•: cou¡ is: %d\n", 
cou¡
);

108 
º
 = (
rockridge_ext
 *Ë
	`tsk_mÆloc
((rockridge_ext));

109 i‡(
º
 =
NULL
) {

110  
NULL
;

113 
buf
 < 
íd
) {

114 
iso9660_su•_hód
 *
hód
 = (iso9660_su•_hód *Ë
buf
;

116 i‡(((
uöçå_t
Ë& (
hód
->
Àn
Ë>(uöçå_tË
íd
) ||

117 (
buf
 + 
hód
->
Àn
 - 1 > 
íd
))

124 i‡((
hód
->
sig
[0] == 'C') && (head->sig[1] == 'E')) {

125 
iso9660_su•_˚
 *
˚
 = (iso9660_su•_˚ *Ë
buf
;

127 i‡(
hFûe
) {

128 
	`Ârötf
(
hFûe
, "CE Entry\n");

129 
	`Ârötf
(
hFûe
, "* Block: %" 
PRIu32
 "\n",

130 
	`tsk_gëu32
(
fs
->
ídün
, 
˚
->
blk_m
));

131 
	`Ârötf
(
hFûe
, "* Off£t: %" 
PRIu32
 "\n",

132 
	`tsk_gëu32
(
fs
->
ídün
, 
˚
->
off£t_m
));

133 
	`Ârötf
(
hFûe
, "* Lí: %" 
PRIu32
 "\n",

134 
	`tsk_gëu32
(
fs
->
ídün
, 
˚
->
˚Àn_m
));

137 i‡((
	`tsk_gëu32
(
fs
->
ídün
, 
˚
->
blk_m
Ë< fs->
œ°_block
) &&

138 (
	`tsk_gëu32
(
fs
->
ídün
, 
˚
->
off£t_m
Ë< fs->
block_size
)) {

139 
ssize_t
 
˙t
;

140 
TSK_OFF_T
 
off
;

141 *
buf2
;

143 
off
 =

144 
	`tsk_gëu32
(
fs
->
ídün
,

145 
˚
->
blk_m
Ë* 
fs
->
block_size
 + 
	`tsk_gëu32
(fs->
ídün
,

146 
˚
->
off£t_m
);

147 
buf2
 =

148 (*Ë
	`tsk_mÆloc
(
	`tsk_gëu32
(
fs
->
ídün
,

149 
˚
->
˚Àn_m
));

151 i‡(
buf2
 !
NULL
) {

152 
˙t
 =

153 
	`tsk_fs_ªad
(
fs
, 
off
, 
buf2
,

154 
	`tsk_gëu32
(
fs
->
ídün
, 
˚
->
˚Àn_m
));

155 i‡(
˙t
 =
	`tsk_gëu32
(
fs
->
ídün
, 
˚
->
˚Àn_m
)) {

156 
	`∑r£_su•
(
fs
, 
buf2
, (Ë
˙t
, 
hFûe
);

158 i‡(
tsk_vîbo£
) {

159 
	`Ârötf
(
°dîr
,

161 
	`tsk_îr‹_¥öt
(
°dîr
);

162 
	`tsk_îr‹_ª£t
();

164 
	`‰ì
(
buf2
);

167 i‡(
tsk_vîbo£
)

168 
	`Ârötf
(
°dîr
,

170 
	`tsk_îr‹_ª£t
();

174 i‡(
tsk_vîbo£
)

175 
	`Ârötf
(
°dîr
,

179 
buf
 +
hód
->
Àn
;

182 i‡((
hód
->
sig
[0] == 'P') && (head->sig[1] == 'D')) {

183 i‡(
hFûe
) {

184 
	`Ârötf
(
hFûe
, "PD Entry\n");

186 
buf
 +
hód
->
Àn
;

189 i‡((
hód
->
sig
[0] == 'S') && (head->sig[1] == 'P')) {

190 
iso9660_su•_•
 *
•
 = (iso9660_su•_• *Ë
buf
;

191 i‡(
hFûe
) {

192 
	`Ârötf
(
hFûe
, "SP Entry\n");

193 
	`Ârötf
(
hFûe
, "* SKù Lí: %d\n", 
•
->
skù
);

195 
buf
 +
hód
->
Àn
;

198 i‡((
hód
->
sig
[0] == 'S') && (head->sig[1] == 'T')) {

199 i‡(
hFûe
) {

200 
	`Ârötf
(
hFûe
, "ST Entry\n");

202 
buf
 +
hód
->
Àn
;

205 i‡((
hód
->
sig
[0] == 'E') && (head->sig[1] == 'R')) {

206 
iso9660_su•_î
 *
î
 = (iso9660_su•_î *Ë
buf
;

207 i‡(
hFûe
) {

208 
buf
[258];

209 
	`Ârötf
(
hFûe
, "ER Entry\n");

211 
	`mem˝y
(
buf
, 
î
->
ext_id
,Ér->
Àn_id
);

212 
buf
[
î
->
Àn_id
] = '\0';

213 
	`Ârötf
(
hFûe
, "* Exãnsi⁄ ID: %s\n", 
buf
);

215 
	`mem˝y
(
buf
, 
î
->
ext_id
 +Ér->
Àn_id
,Ér->
Àn_des
);

216 
buf
[
î
->
Àn_des
] = '\0';

217 
	`Ârötf
(
hFûe
, "* Exãnsi⁄ Des¸ùt‹: %s\n", 
buf
);

219 
	`mem˝y
(
buf
, 
î
->
ext_id
 +Ér->
Àn_id
 +Ér->
Àn_des
,

220 
î
->
Àn_§c
);

221 
buf
[
î
->
Àn_§c
] = '\0';

222 
	`Ârötf
(
hFûe
, "* Exãnsi⁄ S≥¯Sour˚: %s\n", 
buf
);

224 
buf
 +
hód
->
Àn
;

227 i‡((
hód
->
sig
[0] == 'E') && (head->sig[1] == 'S')) {

228 i‡(
hFûe
) {

229 
	`Ârötf
(
hFûe
, "ES Entry\n");

231 
buf
 +
hód
->
Àn
;

239 i‡((
hód
->
sig
[0] == 'P') && (head->sig[1] == 'X')) {

240 
iso9660_º_px_íåy
 *
º_px
;

241 
º_px
 = (
iso9660_º_px_íåy
 *Ë
buf
;

242 
º
->
uid
 = 
	`tsk_gëu32
(
fs
->
ídün
, 
º_px
->
uid_m
);

243 
º
->
gid
 = 
	`tsk_gëu32
(
fs
->
ídün
, 
º_px
->
gid_m
);

244 
º
->
mode
 = 
	`tsk_gëu16
(
fs
->
ídün
, 
º_px
->
mode_m
);

245 
º
->
∆ök
 = 
	`tsk_gëu32
(
fs
->
ídün
, 
º_px
->
löks_m
);

246 i‡(
hFûe
) {

247 
	`Ârötf
(
hFûe
, "PX Entry\n");

248 
	`Ârötf
(
hFûe
, "* UID: %" 
PRIuUID
 "\n", 
º
->
uid
);

249 
	`Ârötf
(
hFûe
, "* GID: %" 
PRIuGID
 "\n", 
º
->
gid
);

250 
	`Ârötf
(
hFûe
, "* Mode: %d\n", 
º
->
mode
);

251 
	`Ârötf
(
hFûe
, "* Löks: %" 
PRIu32
 "\n", 
º
->
∆ök
);

253 
buf
 +
hód
->
Àn
;

257 i‡((
hód
->
sig
[0] == 'P') && (head->sig[1] == 'N')) {

258 
iso9660_º_≤_íåy
 *
º_≤
 = (iso9660_º_≤_íåy *Ë
buf
;

259 i‡(
hFûe
) {

260 
	`Ârötf
(
hFûe
, "PN Entry\n");

261 
	`Ârötf
(
hFûe
, "* Devi˚ ID High: %" 
PRIu32
 "\n",

262 
	`tsk_gëu32
(
fs
->
ídün
, 
º_≤
->
dev_h_m
));

263 
	`Ârötf
(
hFûe
, "* Devi˚ ID Low: %" 
PRIu32
 "\n",

264 
	`tsk_gëu32
(
fs
->
ídün
, 
º_≤
->
dev_l_m
));

266 
buf
 +
hód
->
Àn
;

270 i‡((
hód
->
sig
[0] == 'S') && (head->sig[1] == 'L')) {

272 i‡(
hFûe
) {

273 
	`Ârötf
(
hFûe
, "SL Entry\n");

275 
buf
 +
hód
->
Àn
;

278 i‡((
hód
->
sig
[0] == 'N') && (head->sig[1] == 'M')) {

279 
iso9660_º_nm_íåy
 *
º_nm
;

280 
º_nm
 = (
iso9660_º_nm_íåy
 *Ë
buf
;

281 
	`°∫˝y
(
º
->
‚
, &
º_nm
->
«me
[0], (Ëº_nm->
Àn
 - 5);

282 
º
->
‚
[(Ë
º_nm
->
Àn
 - 5] = '\0';

283 i‡(
hFûe
) {

284 
	`Ârötf
(
hFûe
, "NM Entry\n");

285 
	`Ârötf
(
hFûe
, "* %s\n", 
º
->
‚
);

287 
buf
 +
hód
->
Àn
;

290 i‡((
hód
->
sig
[0] == 'C') && (head->sig[1] == 'L')) {

291 i‡(
hFûe
) {

292 
	`Ârötf
(
hFûe
, "CL Entry\n");

294 
buf
 +
hód
->
Àn
;

297 i‡((
hód
->
sig
[0] == 'P') && (head->sig[1] == 'L')) {

298 i‡(
hFûe
) {

299 
	`Ârötf
(
hFûe
, "PL Entry\n");

301 
buf
 +
hód
->
Àn
;

304 i‡((
hód
->
sig
[0] == 'R') && (head->sig[1] == 'E')) {

305 i‡(
hFûe
) {

306 
	`Ârötf
(
hFûe
, "RE Entry\n");

308 
buf
 +
hód
->
Àn
;

311 i‡((
hód
->
sig
[0] == 'T') && (head->sig[1] == 'F')) {

312 i‡(
hFûe
) {

313 
	`Ârötf
(
hFûe
, "TF Entry\n");

315 
buf
 +
hód
->
Àn
;

318 i‡((
hód
->
sig
[0] == 'S') && (head->sig[1] == 'F')) {

319 i‡(
hFûe
) {

320 
	`Ârötf
(
hFûe
, "SF Entry\n");

322 
buf
 +
hód
->
Àn
;

326 i‡((
hód
->
sig
[0] == 'R') && (head->sig[1] == 'R')) {

327 
iso
->
º_found
 = 1;

328 i‡(
hFûe
) {

329 
	`Ârötf
(
hFûe
, "RR Entry\n");

331 
buf
 +
hód
->
Àn
;

335 
buf
 += 2;

336 i‡((
uöçå_t
Ë
buf
 % 2)

337 
buf
--;

341  
º
;

342 
	}
}

380 
	$iso9660_lﬂd_öodes_dú
(
TSK_FS_INFO
 * 
fs
, 
TSK_OFF_T
 
a_offs
, 
cou¡
,

381 
˘y≥
, c⁄° *
a_‚
, 
uöt8_t
 
is_fú°
)

383 
ISO_INFO
 *
iso
 = (ISO_INFO *Ë
fs
;

384 
s_˙t
 = 1;

385 
TSK_OFF_T
 
s_offs
 = 
a_offs
;

386 
i
;

388 i‡(
tsk_vîbo£
)

389 
	`tsk_Ârötf
(
°dîr
,

390 "iso9660_lﬂd_öodes_dú: fs: %lu offs: %" 
PRIuOFF


392 (
uöçå_t
Ë
fs
, 
a_offs
, 
cou¡
, 
˘y≥
, 
a_‚
);

395 
i
 = 0; i < 
s_˙t
; i++) {

396 
ssize_t
 
˙t1
;

397 
b_offs
;

398 
buf
[
ISO9660_SSIZE_B
];

400 
˙t1
 = 
	`tsk_fs_ªad
(
fs
, 
s_offs
, 
buf
, 
ISO9660_SSIZE_B
);

401 i‡(
˙t1
 !
ISO9660_SSIZE_B
) {

402 i‡(
˙t1
 >= 0) {

403 
	`tsk_îr‹_ª£t
();

404 
tsk_î∫o
 = 
TSK_ERR_FS_READ
;

406 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
, "iso_get_dentries");

412 
b_offs
 = 0; b_off†< 
ISO9660_SSIZE_B
;) {

413 
iso9660_öode_node
 *
ö_node
;

414 
iso9660_díåy
 *
díåy
;

416 
díåy
 = (
iso9660_díåy
 *Ë& 
buf
[
b_offs
];

418 i‡(
díåy
->
íåy_Àn
 == 0) {

419 
b_offs
 += 2;

427 i‡((
díåy
->
Êags
 & 
ISO9660_FLAG_DIR
Ë&& (
is_fú°
 == 0)) {

428 
b_offs
 +
díåy
->
íåy_Àn
;

433 
ö_node
 = (
iso9660_öode_node
 *)

434 
	`tsk_mÆloc
((
iso9660_öode_node
));

435 i‡(
ö_node
 =
NULL
) {

440 i‡((
i
 =0Ë&& (
b_offs
 == 0)) {

441 i‡(
díåy
->
fi_Àn
 != 0) {

446 
s_˙t
 =

447 
	`tsk_gëu32
(
fs
->
ídün
,

448 
díåy
->
d©a_Àn_m
Ë/ 
ISO9660_SSIZE_B
;

451 i‡(
	`°æí
(
a_‚
Ë> 
ISO9660_MAXNAMLEN_STD
) {

452 
	`tsk_îr‹_ª£t
();

453 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

454 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

458 
	`°∫˝y
(
ö_node
->
öode
.
‚
, 
a_‚
,

459 
ISO9660_MAXNAMLEN_STD
 + 1);

464 i‡(
cou¡
 != 0) {

465 
	`‰ì
(
ö_node
);

466 
ö_node
 = 
NULL
;

467 
b_offs
 +
díåy
->
íåy_Àn
;

468 
díåy
 = (
iso9660_díåy
 *Ë& 
buf
[
b_offs
];

469 
b_offs
 +
díåy
->
íåy_Àn
;

474 *
fûe_vî
;

477 i‡(
˘y≥
 =
ISO9660_CTYPE_UTF16
) {

478 
UTF16
 *
«me16
;

479 
UTF8
 *
«me8
;

480 
ªtVÆ
;

482 
«me16
 =

483 (
UTF16
 *Ë& 
buf
[
b_offs
 + (
iso9660_díåy
)];

485 i‡(
fs
->
ídün
 & 
TSK_LIT_ENDIAN
) {

486 
a
;

488 
a
 = 0;á < 
díåy
->
fi_Àn
 / 2;á++) {

489 
«me16
[
i
] = ((name16[i] & 0xff) << 8) +

490 ((
«me16
[
i
] & 0xff00) >> 8);

493 
«me8
 = (
UTF8
 *Ë
ö_node
->
öode
.
‚
;

495 
ªtVÆ
 =

496 
	`tsk_UTF16toUTF8
(
fs
->
ídün
,

497 (c⁄° 
UTF16
 **Ë&
«me16
,

498 (
UTF16
 *Ë& 
buf
[
b_offs
 + (
iso9660_díåy
) +

499 
díåy
->
fi_Àn
], &
«me8
,

500 (
UTF8
 *Ë((
uöçå_t
Ë& 
ö_node
->
öode
.

501 
‚
[
ISO9660_MAXNAMLEN_STD
]),

502 
TSKÀnõ¡C⁄vîsi⁄
);

503 i‡(
ªtVÆ
 !
TSKc⁄vîsi⁄OK
) {

504 i‡(
tsk_vîbo£
)

505 
	`tsk_Ârötf
(
°dîr
,

507 
ªtVÆ
);

508 
ö_node
->
öode
.
‚
[0] = '\0';

510 *
«me8
 = '\0';

513 i‡(
˘y≥
 =
ISO9660_CTYPE_ASCII
) {

514 
ªadÀn
;

516 
ªadÀn
 = 
díåy
->
fi_Àn
;

517 i‡(
ªadÀn
 > 
ISO9660_MAXNAMLEN_STD
)

518 
ªadÀn
 = 
ISO9660_MAXNAMLEN_STD
;

520 
	`mem˝y
(
ö_node
->
öode
.
‚
,

521 &
buf
[
b_offs
 + (
iso9660_díåy
)], 
ªadÀn
);

522 
ö_node
->
öode
.
‚
[
ªadÀn
] = '\0';

525 
	`tsk_îr‹_ª£t
();

526 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

527 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

533 
fûe_vî
 = 
	`°rchr
(
ö_node
->
öode
.
‚
, ';');

534 i‡(
fûe_vî
) {

535 
ö_node
->
öode
.
vîsi⁄
 = 
	`©oi
(
fûe_vî
 + 1);

536 *
fûe_vî
 = '\0';

537 
fûe_vî
 = 
NULL
;

541 i‡(
ö_node
->
öode
.
‚
[
	`°æí
(in_node->inode.fn) - 1] ==

543 
ö_node
->
öode
.
‚
[
	`°æí
(in_node->inode.fn) - 1] =

549 
	`mem˝y
(&(
ö_node
->
öode
.
dr
), 
díåy
, (
iso9660_díåy
));

551 
ö_node
->
öode
.
ó
 = 
NULL
;

552 
ö_node
->
off£t
 =

553 
	`tsk_gëu32
(
fs
->
ídün
, 
díåy
->
ext_loc_m
Ë* fs->
block_size
;

554 
ö_node
->
ó_size
 = 
díåy
->
ext_Àn
;

555 
ö_node
->
díåy_off£t
 = 
s_offs
 + 
b_offs
;

557 i‡(
is_fú°
)

558 
ö_node
->
öode
.
is_‹ph™
 = 0;

560 
ö_node
->
öode
.
is_‹ph™
 = 1;

563 
ö_node
->
size
 =

564 
	`tsk_gëu32
(
fs
->
ídün
, 
ö_node
->
öode
.
dr
.
d©a_Àn_m
);

565 
ö_node
->
öum
 = 
cou¡
++;

568 i‡((Ë(
díåy
->
íåy_Àn
 - (
iso9660_díåy
) -

569 
díåy
->
fi_Àn
) > 1) {

570 
exåa_byãs
 =

571 
díåy
->
íåy_Àn
 - (
iso9660_díåy
) -

572 
díåy
->
fi_Àn
;

574 
ö_node
->
öode
.
º
 =

575 
	`∑r£_su•
(
fs
,

576 &
buf
[
b_offs
 + (
iso9660_díåy
Ë+ 
díåy
->
fi_Àn
],

577 
exåa_byãs
, 
NULL
);

578 
ö_node
->
öode
.
su•_off
 =

579 
b_offs
 + (
iso9660_díåy
Ë+ 
díåy
->
fi_Àn
 +

580 
s_offs
;

581 
ö_node
->
öode
.
su•_Àn
 = 
exåa_byãs
;

583 i‡(
ö_node
->
öode
.
º
 =
NULL
) {

589 
ö_node
->
öode
.
su•_off
 = 0;

590 
ö_node
->
öode
.
su•_Àn
 = 0;

594 i‡(
iso
->
ö_li°
) {

595 
iso9660_öode_node
 *
tmp
, *
¥ev_tmp
;

597 
tmp
 = 
iso
->
ö_li°
;Åmp;Åm∞tmp->
√xt
) {

601 i‡((
ö_node
->
off£t
 =
tmp
->offset)

602 && (
ö_node
->
size
 =
tmp
->size)

603 && (
ö_node
->
size
Ë&& (
is_fú°
 == 0)) {

604 i‡(
ö_node
->
öode
.
º
) {

605 i‡(
tmp
->
öode
.
º
 =
NULL
) {

606 
tmp
->
öode
.
º
 = 
ö_node
->inode.rr;

607 
tmp
->
öode
.
su•_off
 =

608 
ö_node
->
öode
.
su•_off
;

609 
tmp
->
öode
.
su•_Àn
 =

610 
ö_node
->
öode
.
su•_Àn
;

611 
ö_node
->
öode
.
º
 = 
NULL
;

614 
	`‰ì
(
ö_node
->
öode
.
º
);

618 i‡(
tsk_vîbo£
)

619 
	`tsk_Ârötf
(
°dîr
,

621 
ö_node
->
öode
.
‚
);

622 
	`‰ì
(
ö_node
);

623 
ö_node
 = 
NULL
;

624 
cou¡
--;

627 
¥ev_tmp
 = 
tmp
;

631 i‡(
ö_node
) {

632 
¥ev_tmp
->
√xt
 = 
ö_node
;

633 
ö_node
->
√xt
 = 
NULL
;

637 
iso
->
ö_li°
 = 
ö_node
;

638 
ö_node
->
√xt
 = 
NULL
;

642 i‡((
i
 =0Ë&& (
b_offs
 =0Ë&& (
cou¡
 == 1)) {

643 
b_offs
 +
díåy
->
íåy_Àn
;

644 
díåy
 = (
iso9660_díåy
 *Ë& 
buf
[
b_offs
];

646 
b_offs
 +
díåy
->
íåy_Àn
;

648 
s_offs
 +
˙t1
;

650  
cou¡
;

651 
	}
}

666 
	$iso9660_lﬂd_öodes_±_jﬁõt
(
TSK_FS_INFO
 * 
fs
, 
iso9660_svd
 * 
svd
,

667 
cou¡
, 
uöt8_t
 
is_fú°
)

669 
TSK_OFF_T
 
±_offs
;

670 
size_t
 
±_Àn
;

673 
±_offs
 =

674 (
TSK_OFF_T
Ë(
	`tsk_gëu32
(
fs
->
ídün
,

675 
svd
->
±_loc_m
Ë* 
fs
->
block_size
);

676 
±_Àn
 = 
	`tsk_gëu32
(
fs
->
ídün
, 
svd
->
±_size_m
);

678 
±_Àn
 > 0) {

679 
utf16_buf
[
ISO9660_MAXNAMLEN_JOL
 + 1];

680 
utf8buf
[2 * 
ISO9660_MAXNAMLEN_JOL
 + 1];

681 
ªadÀn
;

682 
TSK_OFF_T
 
exã¡
;

683 
∑th_èbÀ_ªc
 
dú
;

684 
ªtVÆ
;

685 
ssize_t
 
˙t
;

687 
UTF16
 *
«me16
;

688 
UTF8
 *
«me8
;

691 
˙t
 = 
	`tsk_fs_ªad
(
fs
, 
±_offs
, (*Ë&
dú
, () (dir));

692 i‡(
˙t
 !(
dú
)) {

693 i‡(
˙t
 >= 0) {

694 
	`tsk_îr‹_ª£t
();

695 
tsk_î∫o
 = 
TSK_ERR_FS_READ
;

697 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
, "iso9660_load_inodes_pt");

700 
±_Àn
 -
˙t
;

701 
±_offs
 +(
TSK_OFF_T
Ë
˙t
;

703 
ªadÀn
 = 
dú
.
Àn_di
;

704 i‡(
dú
.
Àn_di
 > 
ISO9660_MAXNAMLEN_JOL
)

705 
ªadÀn
 = 
ISO9660_MAXNAMLEN_JOL
;

707 
	`mem£t
(
utf16_buf
, 0, 
ISO9660_MAXNAMLEN_JOL
);

709 
˙t
 = 
	`tsk_fs_ªad
(
fs
, 
±_offs
, (*Ë
utf16_buf
, 
ªadÀn
);

710 i‡(
˙t
 !
dú
.
Àn_di
) {

711 i‡(
˙t
 >= 0) {

712 
	`tsk_îr‹_ª£t
();

713 
tsk_î∫o
 = 
TSK_ERR_FS_READ
;

715 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
, "iso_find_inodes");

718 
±_Àn
 -
˙t
;

719 
±_offs
 +(
TSK_OFF_T
Ë
˙t
;

722 i‡(
fs
->
ídün
 & 
TSK_LIT_ENDIAN
) {

723 
i
;

724 
i
 = 0; i < 
˙t
; i += 2) {

725 
t
 = 
utf16_buf
[
i
];

726 
utf16_buf
[
i
] = utf16_buf[i + 1];

727 
utf16_buf
[
i
] = 
t
;

731 
«me16
 = (
UTF16
 *Ë
utf16_buf
;

732 
«me8
 = (
UTF8
 *Ë
utf8buf
;

734 
ªtVÆ
 = 
	`tsk_UTF16toUTF8
(
fs
->
ídün
, (c⁄° 
UTF16
 **Ë&
«me16
,

735 (
UTF16
 *Ë((
uöçå_t
Ë& 
utf16_buf
[
˙t
 + 1]), &
«me8
,

736 (
UTF8
 *Ë((
uöçå_t
Ë& 
utf8buf
[2 * 
ISO9660_MAXNAMLEN_JOL
]),

737 
TSKÀnõ¡C⁄vîsi⁄
);

738 i‡(
ªtVÆ
 !
TSKc⁄vîsi⁄OK
) {

739 i‡(
tsk_vîbo£
)

740 
	`tsk_Ârötf
(
°dîr
,

742 
ªtVÆ
);

743 
utf8buf
[0] = '\0';

745 *
«me8
 = '\0';

748 i‡(
dú
.
Àn_di
 % 2) {

749 
±_Àn
--;

750 
±_offs
++;

753 
exã¡
 =

754 (
TSK_OFF_T
Ë(
	`tsk_gëu32
(
fs
->
ídün
,

755 
dú
.
ext_loc
Ë* 
fs
->
block_size
);

758 
cou¡
 =

759 
	`iso9660_lﬂd_öodes_dú
(
fs
, 
exã¡
, 
cou¡
,

760 
ISO9660_CTYPE_UTF16
, 
utf8buf
, 
is_fú°
);

762 i‡(
cou¡
 == -1) {

766  
cou¡
;

767 
	}
}

777 
	$iso9660_lﬂd_öodes_±
(
ISO_INFO
 * 
iso
)

779 
TSK_FS_INFO
 *
fs
 = (TSK_FS_INFO *Ë& 
iso
->
fs_öfo
;

780 
cou¡
 = 0;

781 
iso9660_svd_node
 *
s
;

782 
iso9660_pvd_node
 *
p
;

783 
‚
[
ISO9660_MAXNAMLEN_STD
 + 1];

784 
∑th_èbÀ_ªc
 
dú
;

785 
TSK_OFF_T
 
±_offs
;

786 
size_t
 
±_Àn
;

787 
TSK_OFF_T
 
exã¡
;

788 
ssize_t
 
˙t
;

789 
uöt8_t
 
is_fú°
 = 1;

791 i‡(
tsk_vîbo£
)

792 
	`tsk_Ârötf
(
°dîr
, "iso9660_load_inodes_pt: iso: %lu\n",

793 (
uöçå_t
Ë
iso
);

796 
	`iso9660_öode_li°_‰ì
(
fs
);

797 
iso
->
ö_li°
 = 
NULL
;

802 
s
 = 
iso
->
svd
; s !
NULL
; s = s->
√xt
) {

805 i‡((
s
->
svd
.
esc_£q
[0] == 0x25) && (s->svd.esc_seq[1] == 0x2F) &&

806 ((
s
->
svd
.
esc_£q
[2] == 0x40) || (s->svd.esc_seq[2] == 0x43)

807 || (
s
->
svd
.
esc_£q
[2] == 0x45))) {

808 
cou¡
 =

809 
	`iso9660_lﬂd_öodes_±_jﬁõt
(
fs
, &(
s
->
svd
), 
cou¡
,

810 
is_fú°
);

811 i‡(
cou¡
 == -1) {

814 
is_fú°
 = 0;

820 
p
 = 
iso
->
pvd
;Ö !
NULL
;Ö =Ö->
√xt
) {

822 
±_offs
 =

823 (
TSK_OFF_T
Ë(
	`tsk_gëu32
(
fs
->
ídün
,

824 
p
->
pvd
.
±_loc_m
Ë* 
fs
->
block_size
);

825 
±_Àn
 = 
	`tsk_gëu32
(
fs
->
ídün
, 
p
->
pvd
.
±_size_m
);

827 
±_Àn
 > 0) {

828 
ªadÀn
;

831 
˙t
 = 
	`tsk_fs_ªad
(
fs
, 
±_offs
, (*Ë&
dú
, (dir));

832 i‡(
˙t
 !(
dú
)) {

833 i‡(
˙t
 >= 0) {

834 
	`tsk_îr‹_ª£t
();

835 
tsk_î∫o
 = 
TSK_ERR_FS_READ
;

837 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
, "iso_find_inodes");

840 
±_Àn
 -
˙t
;

841 
±_offs
 +(
TSK_OFF_T
Ë
˙t
;

843 
ªadÀn
 = 
dú
.
Àn_di
;

844 i‡(
ªadÀn
 > 
ISO9660_MAXNAMLEN_STD
)

845 
ªadÀn
 = 
ISO9660_MAXNAMLEN_STD
;

848 
˙t
 = 
	`tsk_fs_ªad
(
fs
, 
±_offs
, 
‚
, 
ªadÀn
);

849 i‡(
˙t
 !
ªadÀn
) {

850 i‡(
˙t
 >= 0) {

851 
	`tsk_îr‹_ª£t
();

852 
tsk_î∫o
 = 
TSK_ERR_FS_READ
;

854 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
, "iso_find_inodes");

857 
‚
[
˙t
] = '\0';

859 
±_Àn
 -
˙t
;

860 
±_offs
 +(
TSK_OFF_T
Ë
˙t
;

863 i‡(
dú
.
Àn_di
 % 2) {

864 
±_Àn
--;

865 
±_offs
++;

868 
exã¡
 =

869 (
TSK_OFF_T
Ë(
	`tsk_gëu32
(
fs
->
ídün
,

870 
dú
.
ext_loc
Ë* 
fs
->
block_size
);

873 
cou¡
 =

874 
	`iso9660_lﬂd_öodes_dú
(
fs
, 
exã¡
, 
cou¡
,

875 
ISO9660_CTYPE_ASCII
, 
‚
, 
is_fú°
);

877 i‡(
cou¡
 == -1) {

882  
cou¡
;

883 
	}
}

894 
uöt8_t


895 
	$iso9660_döode_lﬂd
(
ISO_INFO
 * 
iso
, 
TSK_INUM_T
 
öum
)

897 
iso9660_öode_node
 *
n
;

899 
n
 = 
iso
->
ö_li°
;

900 
n
 && (n->
öum
 != inum))

901 
n
 =Ç->
√xt
;

903 i‡(
n
) {

904 
	`mem˝y
(
iso
->
döode
, &
n
->
öode
, (
iso9660_öode
));

905 
iso
->
döum
 = 
öum
;

911 
	}
}

914 
uöt16_t


915 
	$isomode2tskmode
(
uöt16_t
 
a_mode
)

917 
uöt16_t
 
mode
 = 0;

919 i‡(
a_mode
 & 
ISO_EA_IRUSR
)

920 
mode
 |
TSK_FS_META_MODE_IRUSR
;

921 i‡(
a_mode
 & 
ISO_EA_IWUSR
)

922 
mode
 |
TSK_FS_META_MODE_IWUSR
;

923 i‡(
a_mode
 & 
ISO_EA_IXUSR
)

924 
mode
 |
TSK_FS_META_MODE_IXUSR
;

926 i‡(
a_mode
 & 
ISO_EA_IRGRP
)

927 
mode
 |
TSK_FS_META_MODE_IRGRP
;

928 i‡(
a_mode
 & 
ISO_EA_IWGRP
)

929 
mode
 |
TSK_FS_META_MODE_IWGRP
;

930 i‡(
a_mode
 & 
ISO_EA_IXGRP
)

931 
mode
 |
TSK_FS_META_MODE_IXGRP
;

933 i‡(
a_mode
 & 
ISO_EA_IROTH
)

934 
mode
 |
TSK_FS_META_MODE_IROTH
;

935 i‡(
a_mode
 & 
ISO_EA_IWOTH
)

936 
mode
 |
TSK_FS_META_MODE_IWOTH
;

937 i‡(
a_mode
 & 
ISO_EA_IXOTH
)

938 
mode
 |
TSK_FS_META_MODE_IXOTH
;

940  
mode
;

941 
	}
}

948 
uöt8_t


949 
	$iso9660_döode_c›y
(
ISO_INFO
 * 
iso
, 
TSK_FS_META
 * 
fs_mëa
)

951 
TSK_FS_INFO
 *
fs
 = (TSK_FS_INFO *Ë& 
iso
->
fs_öfo
;

952 
tm
 
t
;

954 i‡(
fs_mëa
 =
NULL
) {

955 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

956 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

961 
fs_mëa
->
©å_°©e
 = 
TSK_FS_META_ATTR_EMPTY
;

962 i‡(
fs_mëa
->
©å
) {

963 
	`tsk_fs_©åli°_m¨kunu£d
(
fs_mëa
->
©å
);

966 i‡(
fs_mëa
->
c⁄ã¡_Àn
 < 
ISO9660_FILE_CONTENT_LEN
) {

967 i‡((
fs_mëa
 =

968 
	`tsk_fs_mëa_ªÆloc
(
fs_mëa
,

969 
ISO9660_FILE_CONTENT_LEN
)Ë=
NULL
) {

974 
fs_mëa
->
addr
 = 
iso
->
döum
;

975 
fs_mëa
->
size
 = 
	`tsk_gëu32
(
fs
->
ídün
, 
iso
->
döode
->
dr
.
d©a_Àn_m
);

977 
	`mem£t
(&
t
, 0, (
tm
));

978 
t
.
tm_£c
 = 
iso
->
döode
->
dr
.
ªc_time
.
£c
;

979 
t
.
tm_mö
 = 
iso
->
döode
->
dr
.
ªc_time
.
mö
;

980 
t
.
tm_hour
 = 
iso
->
döode
->
dr
.
ªc_time
.
hour
;

981 
t
.
tm_mday
 = 
iso
->
döode
->
dr
.
ªc_time
.
day
;

982 
t
.
tm_m⁄
 = 
iso
->
döode
->
dr
.
ªc_time
.
m⁄th
 - 1;

983 
t
.
tm_yór
 = 
iso
->
döode
->
dr
.
ªc_time
.
yór
;

986 
fs_mëa
->
¸time
 = 
	`mktime
(&
t
);

987 
fs_mëa
->
mtime
 = fs_mëa->
©ime
 = fs_mëa->
˘ime
 = 0;

988 
fs_mëa
->
¸time_«no
 = fs_mëa->
mtime_«no
 = fs_mëa->
©ime_«no
 =

989 
fs_mëa
->
˘ime_«no
 = 0;

991 i‡(
iso
->
döode
->
dr
.
Êags
 & 
ISO9660_FLAG_DIR
)

992 
fs_mëa
->
ty≥
 = 
TSK_FS_META_TYPE_DIR
;

994 
fs_mëa
->
ty≥
 = 
TSK_FS_META_TYPE_REG
;

996 i‡(
iso
->
döode
->
ó
) {

997 
fs_mëa
->
uid
 = 
	`tsk_gëu32
(
fs
->
ídün
, 
iso
->
döode
->
ó
->uid);

998 
fs_mëa
->
gid
 = 
	`tsk_gëu32
(
fs
->
ídün
, 
iso
->
döode
->
ó
->gid);

999 
fs_mëa
->
mode
 =

1000 
	`isomode2tskmode
(
	`tsk_gëu16
(
fs
->
ídün
, 
iso
->
döode
->
ó
->
mode
));

1001 
fs_mëa
->
∆ök
 = 1;

1004 
fs_mëa
->
uid
 = 0;

1005 
fs_mëa
->
gid
 = 0;

1006 
fs_mëa
->
mode
 = 0;

1007 
fs_mëa
->
∆ök
 = 1;

1010 ((
TSK_DADDR_T
 *Ë
fs_mëa
->
c⁄ã¡_±r
)[0] =

1011 (
TSK_DADDR_T
Ë
	`tsk_gëu32
(
fs
->
ídün
, 
iso
->
döode
->
dr
.
ext_loc_m
);

1015 i‡(
iso
->
döode
->
is_‹ph™
)

1016 
fs_mëa
->
Êags
 = 
TSK_FS_META_FLAG_UNALLOC
 | 
TSK_FS_META_FLAG_USED
;

1018 
fs_mëa
->
Êags
 = 
TSK_FS_META_FLAG_ALLOC
 | 
TSK_FS_META_FLAG_USED
;

1020 
	}
}

1024 
uöt8_t


1025 
	$iso9660_öode_lookup
(
TSK_FS_INFO
 * 
fs
, 
TSK_FS_FILE
 * 
a_fs_fûe
,

1026 
TSK_INUM_T
 
öum
)

1028 
ISO_INFO
 *
iso
 = (ISO_INFO *Ë
fs
;

1030 i‡(
tsk_vîbo£
)

1031 
	`tsk_Ârötf
(
°dîr
, "iso9660_inode_lookup: iso: %lu"

1032 " inum: %" 
PRIuINUM
 "\n", (
uöçå_t
Ë
iso
, 
öum
);

1034 i‡(
a_fs_fûe
 =
NULL
) {

1035 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

1036 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

1041 i‡(
a_fs_fûe
->
mëa
 =
NULL
) {

1042 i‡((
a_fs_fûe
->
mëa
 =

1043 
	`tsk_fs_mëa_Æloc
(
ISO9660_FILE_CONTENT_LEN
)Ë=
NULL
)

1047 
	`tsk_fs_mëa_ª£t
(
a_fs_fûe
->
mëa
);

1051 i‡(
öum
 =
	`TSK_FS_ORPHANDIR_INUM
(
fs
)) {

1052 i‡(
	`tsk_fs_dú_make_‹ph™_dú_mëa
(
fs
, 
a_fs_fûe
->
mëa
))

1059 i‡(
	`iso9660_döode_lﬂd
(
iso
, 
öum
)) {

1064 i‡(
	`iso9660_döode_c›y
(
iso
, 
a_fs_fûe
->
mëa
)) {

1070 
	}
}

1072 
uöt8_t


1073 
	$iso9660_öode_wÆk
(
TSK_FS_INFO
 * 
fs
, 
TSK_INUM_T
 
°¨t
, TSK_INUM_T 
œ°
,

1074 
TSK_FS_META_FLAG_ENUM
 
Êags
, 
TSK_FS_META_WALK_CB
 
a˘i⁄
, *
±r
)

1076 *
my«me
 = "iso9660_inode_walk";

1077 
ISO_INFO
 *
iso
 = (ISO_INFO *Ë
fs
;

1078 
TSK_INUM_T
 
öum
, 
íd_öum_tmp
;

1079 
TSK_FS_FILE
 *
fs_fûe
;

1080 
myÊags
;

1083 
	`tsk_îr‹_ª£t
();

1085 i‡(
tsk_vîbo£
)

1086 
	`tsk_Ârötf
(
°dîr
, "iso9660_inode_walk: iso: %lu"

1087 " sèπ: %" 
PRIuINUM
 "Üast: %" PRIuINUM " flags: %d"

1089 (
uöçå_t
Ë
fs
, 
°¨t
, 
œ°
, 
Êags
, (uöçå_tË
a˘i⁄
,

1090 (
uöçå_t
Ë
±r
);

1092 
myÊags
 = 
TSK_FS_META_FLAG_ALLOC
;

1097 i‡(
°¨t
 < 
fs
->
fú°_öum
 || sèπ > fs->
œ°_öum
) {

1098 
	`tsk_îr‹_ª£t
();

1099 
tsk_î∫o
 = 
TSK_ERR_FS_WALK_RNG
;

1100 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

1101 "%s: Sèπ inode: %" 
PRIuINUM
 "", 
my«me
, 
°¨t
);

1104 i‡(
œ°
 < 
fs
->
fú°_öum
 ||Üa° > fs->
œ°_öum
 ||Üa° < 
°¨t
) {

1105 
	`tsk_îr‹_ª£t
();

1106 
tsk_î∫o
 = 
TSK_ERR_FS_WALK_RNG
;

1107 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

1108 "%s: End inode: %" 
PRIuINUM
 "", 
my«me
, 
œ°
);

1113 i‡(
Êags
 & 
TSK_FS_META_FLAG_ORPHAN
) {

1114 
Êags
 |
TSK_FS_META_FLAG_UNALLOC
;

1115 
Êags
 &~
TSK_FS_META_FLAG_ALLOC
;

1116 
Êags
 |
TSK_FS_META_FLAG_USED
;

1117 
Êags
 &~
TSK_FS_META_FLAG_UNUSED
;

1119 i‡(((
Êags
 & 
TSK_FS_META_FLAG_ALLOC
) == 0) &&

1120 ((
Êags
 & 
TSK_FS_META_FLAG_UNALLOC
) == 0)) {

1121 
Êags
 |(
TSK_FS_META_FLAG_ALLOC
 | 
TSK_FS_META_FLAG_UNALLOC
);

1127 i‡(((
Êags
 & 
TSK_FS_META_FLAG_USED
) == 0) &&

1128 ((
Êags
 & 
TSK_FS_META_FLAG_UNUSED
) == 0)) {

1129 
Êags
 |(
TSK_FS_META_FLAG_USED
 | 
TSK_FS_META_FLAG_UNUSED
);

1136 i‡((
Êags
 & 
TSK_FS_META_FLAG_ORPHAN
)

1137 && (
fs
->
li°_öum_«med
 =
NULL
)) {

1138 i‡(
	`tsk_fs_dú_lﬂd_öum_«med
(
fs
Ë!
TSK_OK
) {

1139 
	`°∫ˇt
(
tsk_îr°r2
,

1141 
TSK_ERRSTR_L
);

1147 i‡((
fs_fûe
 = 
	`tsk_fs_fûe_Æloc
(
fs
)Ë=
NULL
)

1150 i‡((
fs_fûe
->
mëa
 =

1151 
	`tsk_fs_mëa_Æloc
(
ISO9660_FILE_CONTENT_LEN
)Ë=
NULL
)

1156 i‡(
œ°
 =
	`TSK_FS_ORPHANDIR_INUM
(
fs
))

1157 
íd_öum_tmp
 = 
œ°
 - 1;

1159 
íd_öum_tmp
 = 
œ°
;

1164 
öum
 = 
°¨t
; inum <
íd_öum_tmp
; inum++) {

1165 
ªtvÆ
;

1166 i‡(
	`iso9660_döode_lﬂd
(
iso
, 
öum
)) {

1167 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

1171 i‡(
	`iso9660_döode_c›y
(
iso
, 
fs_fûe
->
mëa
))

1174 
myÊags
 = 
fs_fûe
->
mëa
->
Êags
;

1176 i‡((
Êags
 & 
myÊags
) != myflags)

1182 i‡((
myÊags
 & 
TSK_FS_META_FLAG_UNALLOC
) &&

1183 (
Êags
 & 
TSK_FS_META_FLAG_ORPHAN
) &&

1184 (
	`tsk_li°_föd
(
fs
->
li°_öum_«med
, 
öum
))) {

1188 
ªtvÆ
 = 
	`a˘i⁄
(
fs_fûe
, 
±r
);

1189 i‡(
ªtvÆ
 =
TSK_WALK_ERROR
) {

1190 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

1193 i‡(
ªtvÆ
 =
TSK_WALK_STOP
) {

1199 i‡((
œ°
 =
	`TSK_FS_ORPHANDIR_INUM
(
fs
))

1200 && (
Êags
 & 
TSK_FS_META_FLAG_ALLOC
)

1201 && (
Êags
 & 
TSK_FS_META_FLAG_USED
)) {

1202 
ªtvÆ
;

1204 i‡(
	`tsk_fs_dú_make_‹ph™_dú_mëa
(
fs
, 
fs_fûe
->
mëa
)) {

1205 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

1209 
ªtvÆ
 = 
	`a˘i⁄
(
fs_fûe
, 
±r
);

1210 i‡(
ªtvÆ
 =
TSK_WALK_STOP
) {

1211 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

1214 i‡(
ªtvÆ
 =
TSK_WALK_ERROR
) {

1215 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

1224 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

1226 
	}
}

1231 
	$iso9660_is_block_Æloc
(
TSK_FS_INFO
 * 
fs
, 
TSK_DADDR_T
 
blk_num
)

1233 
ISO_INFO
 *
iso
 = (ISO_INFO *Ë
fs
;

1234 
iso9660_öode_node
 *
ö_node
;

1236 i‡(
tsk_vîbo£
)

1237 
	`tsk_Ârötf
(
°dîr
, "iso9660_is_block_alloc: fs: %lu"

1238 " blk_num: %" 
PRIuDADDR
 "\n", (
uöçå_t
Ë
fs
, 
blk_num
);

1240 
ö_node
 = 
iso
->
ö_li°
; in_node; in_nodêö_node->
√xt
) {

1241 
TSK_DADDR_T
 
fú°_block
 = 
ö_node
->
off£t
 / 
fs
->
block_size
;

1242 
TSK_DADDR_T
 
fûe_size
 =

1243 
	`tsk_gëu32
(
fs
->
ídün
, 
ö_node
->
öode
.
dr
.
d©a_Àn_m
);

1244 
TSK_DADDR_T
 
œ°_block
 =

1245 
fú°_block
 + (
fûe_size
 / 
fs
->
block_size
);

1246 i‡(
fûe_size
 % 
fs
->
block_size
)

1247 
œ°_block
++;

1249 i‡((
blk_num
 >
fú°_block
Ë&& (blk_num <
œ°_block
))

1254 
	}
}

1257 
TSK_FS_BLOCK_FLAG_ENUM


1258 
	$iso9660_block_gëÊags
(
TSK_FS_INFO
 * 
a_fs
, 
TSK_DADDR_T
 
a_addr
)

1260  (
	`iso9660_is_block_Æloc
(
a_fs
, 
a_addr
)) ?

1261 
TSK_FS_BLOCK_FLAG_ALLOC
 : 
TSK_FS_BLOCK_FLAG_UNALLOC
;

1262 
	}
}

1269 
uöt8_t


1270 
	$iso9660_block_wÆk
(
TSK_FS_INFO
 * 
fs
, 
TSK_DADDR_T
 
°¨t
, TSK_DADDR_T 
œ°
,

1271 
TSK_FS_BLOCK_WALK_FLAG_ENUM
 
Êags
, 
TSK_FS_BLOCK_WALK_CB
 
a˘i⁄
,

1272 *
±r
)

1274 *
my«me
 = "iso9660_block_walk";

1275 
TSK_DADDR_T
 
addr
;

1276 
TSK_FS_BLOCK
 *
fs_block
;

1279 
	`tsk_îr‹_ª£t
();

1281 i‡(
tsk_vîbo£
)

1282 
	`tsk_Ârötf
(
°dîr
, "iso9660_block_walk: fs: %lu"

1283 " sèπ: %" 
PRIuDADDR
 "Üast: %" PRIuDADDR " flags: %d"

1285 (
uöçå_t
Ë
fs
, 
°¨t
, 
œ°
, 
Êags
, (uöçå_tË
a˘i⁄
,

1286 (
uöçå_t
Ë
±r
);

1291 i‡(
°¨t
 < 
fs
->
fú°_block
 || sèπ > fs->
œ°_block
) {

1292 
	`tsk_îr‹_ª£t
();

1293 
tsk_î∫o
 = 
TSK_ERR_FS_WALK_RNG
;

1294 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

1295 "%s: Sèπ block: %" 
PRIuDADDR
 "", 
my«me
, 
°¨t
);

1298 i‡(
œ°
 < 
fs
->
fú°_block
 ||Üa° > fs->
œ°_block
) {

1299 
	`tsk_îr‹_ª£t
();

1300 
tsk_î∫o
 = 
TSK_ERR_FS_WALK_RNG
;

1301 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

1302 "%s: End block: %" 
PRIuDADDR
 "", 
my«me
, 
œ°
);

1307 i‡(((
Êags
 & 
TSK_FS_BLOCK_WALK_FLAG_ALLOC
) == 0) &&

1308 ((
Êags
 & 
TSK_FS_BLOCK_WALK_FLAG_UNALLOC
) == 0)) {

1309 
Êags
 |=

1310 (
TSK_FS_BLOCK_WALK_FLAG_ALLOC
 |

1311 
TSK_FS_BLOCK_WALK_FLAG_UNALLOC
);

1313 i‡(((
Êags
 & 
TSK_FS_BLOCK_WALK_FLAG_META
) == 0) &&

1314 ((
Êags
 & 
TSK_FS_BLOCK_WALK_FLAG_CONT
) == 0)) {

1315 
Êags
 |=

1316 (
TSK_FS_BLOCK_WALK_FLAG_CONT
 | 
TSK_FS_BLOCK_WALK_FLAG_META
);

1319 i‡((
fs_block
 = 
	`tsk_fs_block_Æloc
(
fs
)Ë=
NULL
) {

1323 i‡(
tsk_vîbo£
)

1324 
	`tsk_Ârötf
(
°dîr
,

1325 "isofs_block_wÆk: Block WÆkög %" 
PRIuDADDR
 "Åo %" PRIuDADDR

1326 "\n", 
°¨t
, 
œ°
);

1329 
addr
 = 
°¨t
;ádd∏<
œ°
;áddr++) {

1330 
ªtvÆ
;

1331 
myÊags
 = 
	`iso9660_block_gëÊags
(
fs
, 
addr
);

1334 i‡((
myÊags
 & 
TSK_FS_BLOCK_FLAG_ALLOC
)

1335 && (!(
Êags
 & 
TSK_FS_BLOCK_WALK_FLAG_ALLOC
)))

1337 i‡((
myÊags
 & 
TSK_FS_BLOCK_FLAG_UNALLOC
)

1338 && (!(
Êags
 & 
TSK_FS_BLOCK_WALK_FLAG_UNALLOC
)))

1341 i‡(
	`tsk_fs_block_gë
(
fs
, 
fs_block
, 
addr
Ë=
NULL
) {

1342 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
, "iso_block_walk");

1343 
	`tsk_fs_block_‰ì
(
fs_block
);

1347 
ªtvÆ
 = 
	`a˘i⁄
(
fs_block
, 
±r
);

1348 i‡(
ªtvÆ
 =
TSK_WALK_ERROR
) {

1349 
	`tsk_fs_block_‰ì
(
fs_block
);

1352 i‡(
ªtvÆ
 =
TSK_WALK_STOP
) {

1357 
	`tsk_fs_block_‰ì
(
fs_block
);

1359 
	}
}

1363 
uöt8_t


1364 
	$iso9660_make_d©a_run
(
TSK_FS_FILE
 * 
a_fs_fûe
)

1366 
ISO_INFO
 *
iso
;

1367 
iso9660_díåy
 
dd
;

1368 
TSK_FS_INFO
 *
fs
 = 
NULL
;

1369 
TSK_FS_ATTR
 *
fs_©å
 = 
NULL
;

1370 
TSK_FS_ATTR_RUN
 *
d©a_run
 = 
NULL
;

1373 
	`tsk_îr‹_ª£t
();

1375 i‡((
a_fs_fûe
 =
NULL
Ë|| (a_fs_fûe->
mëa
 == NULL)

1376 || (
a_fs_fûe
->
fs_öfo
 =
NULL
)) {

1377 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

1378 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

1382 
fs
 = 
a_fs_fûe
->
fs_öfo
;

1383 
iso
 = (
ISO_INFO
 *Ë
fs
;

1386 i‡((
a_fs_fûe
->
mëa
->
©å
 !
NULL
)

1387 && (
a_fs_fûe
->
mëa
->
©å_°©e
 =
TSK_FS_META_ATTR_STUDIED
)) {

1390 i‡(
a_fs_fûe
->
mëa
->
©å_°©e
 =
TSK_FS_META_ATTR_ERROR
) {

1394 i‡(
a_fs_fûe
->
mëa
->
©å
 !
NULL
) {

1395 
	`tsk_fs_©åli°_m¨kunu£d
(
a_fs_fûe
->
mëa
->
©å
);

1397 i‡(
a_fs_fûe
->
mëa
->
©å
 =
NULL
) {

1398 
a_fs_fûe
->
mëa
->
©å
 = 
	`tsk_fs_©åli°_Æloc
();

1402 i‡(
	`iso9660_döode_lﬂd
(
iso
, 
a_fs_fûe
->
mëa
->
addr
)) {

1403 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
, "iso9660_make_data_run");

1404 
a_fs_fûe
->
mëa
->
©å_°©e
 = 
TSK_FS_META_ATTR_ERROR
;

1407 
	`mem˝y
(&
dd
, &
iso
->
döode
->
dr
, (
iso9660_díåy
));

1409 i‡(
dd
.
g≠_sz
) {

1410 
a_fs_fûe
->
mëa
->
©å_°©e
 = 
TSK_FS_META_ATTR_ERROR
;

1411 
tsk_î∫o
 = 
TSK_ERR_FS_UNSUPFUNC
;

1412 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

1413 "fûê%" 
PRIuINUM
 " hasán interleave gap --Çot supported",

1414 
a_fs_fûe
->
mëa
->
addr
);

1418 i‡((
fs_©å
 =

1419 
	`tsk_fs_©åli°_gë√w
(
a_fs_fûe
->
mëa
->
©å
,

1420 
TSK_FS_ATTR_NONRES
)Ë=
NULL
) {

1425 
d©a_run
 = 
	`tsk_fs_©å_run_Æloc
();

1426 i‡(
d©a_run
 =
NULL
)

1429 
d©a_run
->
addr
 = ((
TSK_DADDR_T
 *Ë
a_fs_fûe
->
mëa
->
c⁄ã¡_±r
)[0];

1430 
d©a_run
->
Àn
 =

1431 (
a_fs_fûe
->
mëa
->
size
 + 
fs
->
block_size
 - 1) / fs->block_size;

1432 
d©a_run
->
off£t
 = 0;

1435 i‡(
	`tsk_fs_©å_£t_run
(
a_fs_fûe
, 
fs_©å
, 
d©a_run
, 
NULL
,

1436 
TSK_FS_ATTR_TYPE_DEFAULT
, 
TSK_FS_ATTR_ID_DEFAULT
,

1437 
a_fs_fûe
->
mëa
->
size
,á_fs_file->meta->size,

1438 
	`roundup
(
a_fs_fûe
->
mëa
->
size
 + 
dd
.
ext_Àn
,

1439 
fs
->
block_size
Ë- 
dd
.
ext_Àn
, 0, 0)) {

1444 
fs_©å
->
ƒd
.
skùÀn
 = 
dd
.
ext_Àn
;

1446 
a_fs_fûe
->
mëa
->
©å_°©e
 = 
TSK_FS_META_ATTR_STUDIED
;

1449 
	}
}

1453 
uöt8_t


1454 
	$iso9660_fscheck
(
TSK_FS_INFO
 * 
fs
, 
FILE
 * 
hFûe
)

1456 
	`tsk_îr‹_ª£t
();

1457 
tsk_î∫o
 = 
TSK_ERR_FS_UNSUPFUNC
;

1458 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

1461 
	}
}

1471 
uöt8_t


1472 
	$iso9660_fs°©
(
TSK_FS_INFO
 * 
fs
, 
FILE
 * 
hFûe
)

1474 
°r
[129];

1475 
ISO_INFO
 *
iso
 = (ISO_INFO *Ë
fs
;

1476 *
˝
;

1477 
i
;

1479 
iso9660_pvd_node
 *
p
 = 
iso
->
pvd
;

1480 
iso9660_svd_node
 *
s
;

1483 
	`tsk_îr‹_ª£t
();

1485 i‡(
tsk_vîbo£
)

1486 
	`tsk_Ârötf
(
°dîr
, "iso9660_fs°©: fs: %lu \
: %lu\n", (
uöçå_t
Ë
fs
, (uöçå_tË
hFûe
);

1489 
i
 = 0;

1491 
p
 = 
iso
->
pvd
;Ö !
NULL
;Ö =Ö->
√xt
) {

1492 
i
++;

1493 
	`tsk_Ârötf
(
hFûe
, "\n==PRIMARY VOLUME DESCRIPTOR %d ===\n", 
i
);

1494 
	`tsk_Ârötf
(
hFûe
, "FILE SYSTEM INFORMATION\n");

1495 
	`tsk_Ârötf
(
hFûe
,

1497 
	`tsk_Ârötf
(
hFûe
, "File System Type: ISO9660\n");

1498 
	`tsk_Ârötf
(
hFûe
, "VﬁumêName: %s\n", 
p
->
pvd
.
vﬁ_id
);

1499 
	`tsk_Ârötf
(
hFûe
, "Volume Set Size: %d\n",

1500 
	`tsk_gëu16
(
fs
->
ídün
, 
p
->
pvd
.
vﬁ_£t_m
));

1501 
	`tsk_Ârötf
(
hFûe
, "Volume Set Sequence: %d\n",

1502 
	`tsk_gëu16
(
fs
->
ídün
, 
p
->
pvd
.
vﬁ_£q_m
));

1505 i‡(
p
->
pvd
.
pub_id
[0] == 0x5f)

1507 
	`¢¥ötf
(
°r
, 8, "In file\n");

1509 
	`¢¥ötf
(
°r
, 128, "%s", 
p
->
pvd
.
pub_id
);

1511 
˝
 = &
°r
[127];

1513 (!
	`i•röt
(*
˝
Ë|| 
	`is•a˚
(*˝)Ë&& (˝ !
°r
))

1514 
˝
--;

1515 *++
˝
 = '\0';

1516 
	`tsk_Ârötf
(
hFûe
, "Publishî: %s\n", 
°r
);

1517 
	`mem£t
(
°r
, ' ', 128);

1521 i‡(
p
->
pvd
.
¥ï_id
[0] == 0x5f)

1523 
	`¢¥ötf
(
°r
, 8, "In file\n");

1525 
	`¢¥ötf
(
°r
, 128, "%s", 
p
->
pvd
.
¥ï_id
);

1527 
˝
 = &
°r
[127];

1528 (!
	`i•röt
(*
˝
Ë|| 
	`is•a˚
(*˝)Ë&& (˝ !
°r
))

1529 
˝
--;

1530 *++
˝
 = '\0';

1531 
	`tsk_Ârötf
(
hFûe
, "D©®Pª∑ªr: %s\n", 
°r
);

1532 
	`mem£t
(
°r
, ' ', 128);

1536 i‡(
p
->
pvd
.
≠p_id
[0] == 0x5f)

1538 
	`¢¥ötf
(
°r
, 8, "In file\n");

1540 
	`¢¥ötf
(
°r
, 128, "%s", 
p
->
pvd
.
≠p_id
);

1541 
˝
 = &
°r
[127];

1542 (!
	`i•röt
(*
˝
Ë|| 
	`is•a˚
(*˝)Ë&& (˝ !
°r
))

1543 
˝
--;

1544 *++
˝
 = '\0';

1545 
	`tsk_Ârötf
(
hFûe
, "Rec‹dög Aµliˇti⁄: %s\n", 
°r
);

1546 
	`mem£t
(
°r
, ' ', 128);

1550 i‡(
p
->
pvd
.
c›y_id
[0] == 0x5f)

1552 
	`¢¥ötf
(
°r
, 8, "In file\n");

1554 
	`¢¥ötf
(
°r
, 37, "%s", 
p
->
pvd
.
c›y_id
);

1555 
˝
 = &
°r
[36];

1556 (!
	`i•röt
(*
˝
Ë|| 
	`is•a˚
(*˝)Ë&& (˝ !
°r
))

1557 
˝
--;

1558 *++
˝
 = '\0';

1559 
	`tsk_Ârötf
(
hFûe
, "C›yright: %s\n", 
°r
);

1560 
	`mem£t
(
°r
, ' ', 37);

1562 
	`tsk_Ârötf
(
hFûe
, "\nMETADATA INFORMATION\n");

1563 
	`tsk_Ârötf
(
hFûe
,

1565 
	`tsk_Ârötf
(
hFûe
,

1566 "P©h TabÀ Loˇti⁄: %" 
PRIu32
 "-%" PRIu32 "\n",

1567 
	`tsk_gëu32
(
fs
->
ídün
, 
p
->
pvd
.
±_loc_m
),Åsk_getu32(fs->endian,

1568 
p
->
pvd
.
±_loc_m
Ë+ 
	`tsk_gëu32
(
fs
->
ídün
,

1569 
p
->
pvd
.
±_size_m
Ë/ 
fs
->
block_size
);

1571 
	`tsk_Ârötf
(
hFûe
, "InodêR™ge: %" 
PRIuINUM
 " - %" PRIuINUM "\n",

1572 
fs
->
fú°_öum
, fs->
œ°_öum
);

1573 
	`tsk_Ârötf
(
hFûe
, "RoŸ Dúe˘‹y Block: %" 
PRIuDADDR
 "\n",

1574 
	`tsk_gëu32
(
fs
->
ídün
, 
p
->
pvd
.
dú_ªc
.
ext_loc_m
));

1576 
	`tsk_Ârötf
(
hFûe
, "\nCONTENT INFORMATION\n");

1577 
	`tsk_Ârötf
(
hFûe
,

1579 
	`tsk_Ârötf
(
hFûe
, "Se˘‹ Size: %d\n", 
ISO9660_SSIZE_B
);

1580 
	`tsk_Ârötf
(
hFûe
, "Block Size: %d\n", 
	`tsk_gëu16
(
fs
->
ídün
,

1581 
p
->
pvd
.
blk_sz_m
));

1583 
	`tsk_Ârötf
(
hFûe
, "Total Sector Range: 0 - %d\n",

1584 (Ë((
fs
->
block_size
 / 
ISO9660_SSIZE_B
) *

1585 (
fs
->
block_cou¡
 - 1)));

1587 
	`tsk_Ârötf
(
hFûe
, "Total Block Range: 0 - %d\n",

1588 (Ë
fs
->
block_cou¡
 - 1);

1591 
i
 = 0;

1593 
s
 = 
iso
->
svd
; s !
NULL
; s = s->
√xt
) {

1594 
i
++;

1595 
	`tsk_Ârötf
(
hFûe
,

1596 "\n==SUPPLEMENTARY VOLUME DESCRIPTOR %d ===\n", 
i
);

1597 
	`tsk_Ârötf
(
hFûe
, "FILE SYSTEM INFORMATION\n");

1598 
	`tsk_Ârötf
(
hFûe
,

1600 
	`tsk_Ârötf
(
hFûe
, "File System Type: ISO9660\n");

1601 
	`tsk_Ârötf
(
hFûe
, "VﬁumêName: %s\n", 
s
->
svd
.
vﬁ_id
);

1602 
	`tsk_Ârötf
(
hFûe
, "Volume Set Size: %d\n",

1603 
	`tsk_gëu16
(
fs
->
ídün
, 
s
->
svd
.
vﬁ_£t_m
));

1604 
	`tsk_Ârötf
(
hFûe
, "Volume Set Sequence: %d\n",

1605 
	`tsk_gëu16
(
fs
->
ídün
, 
s
->
svd
.
vﬁ_£q_m
));

1610 i‡(
s
->
svd
.
pub_id
[0] == 0x5f)

1612 
	`¢¥ötf
(
°r
, 8, "In file\n");

1614 
	`¢¥ötf
(
°r
, 128, "%s", 
s
->
svd
.
pub_id
);

1616 
˝
 = &
°r
[127];

1618 (!
	`i•röt
(*
˝
Ë|| 
	`is•a˚
(*˝)Ë&& (˝ !
°r
))

1619 
˝
--;

1620 *++
˝
 = '\0';

1621 
	`tsk_Ârötf
(
hFûe
, "Publishî: %s\n", 
°r
);

1622 
	`mem£t
(
°r
, ' ', 128);

1626 i‡(
s
->
svd
.
¥ï_id
[0] == 0x5f)

1628 
	`¢¥ötf
(
°r
, 8, "In file\n");

1630 
	`¢¥ötf
(
°r
, 128, "%s", 
s
->
svd
.
¥ï_id
);

1632 
˝
 = &
°r
[127];

1633 (!
	`i•röt
(*
˝
Ë|| 
	`is•a˚
(*˝)Ë&& (˝ !
°r
))

1634 
˝
--;

1635 *++
˝
 = '\0';

1636 
	`tsk_Ârötf
(
hFûe
, "D©®Pª∑ªr: %s\n", 
°r
);

1637 
	`mem£t
(
°r
, ' ', 128);

1641 i‡(
s
->
svd
.
≠p_id
[0] == 0x5f)

1643 
	`¢¥ötf
(
°r
, 8, "In file\n");

1645 
	`¢¥ötf
(
°r
, 128, "%s", 
s
->
svd
.
≠p_id
);

1646 
˝
 = &
°r
[127];

1647 (!
	`i•röt
(*
˝
Ë|| 
	`is•a˚
(*˝)Ë&& (˝ !
°r
))

1648 
˝
--;

1649 *++
˝
 = '\0';

1650 
	`tsk_Ârötf
(
hFûe
, "Rec‹dög Aµliˇti⁄: %s\n", 
°r
);

1651 
	`mem£t
(
°r
, ' ', 128);

1655 i‡(
s
->
svd
.
c›y_id
[0] == 0x5f)

1657 
	`¢¥ötf
(
°r
, 8, "In file\n");

1659 
	`¢¥ötf
(
°r
, 37, "%s\n", 
s
->
svd
.
c›y_id
);

1660 
˝
 = &
°r
[36];

1661 (!
	`i•röt
(*
˝
Ë|| 
	`is•a˚
(*˝)Ë&& (˝ !
°r
))

1662 
˝
--;

1663 *++
˝
 = '\0';

1664 
	`tsk_Ârötf
(
hFûe
, "C›yright: %s\n", 
°r
);

1665 
	`mem£t
(
°r
, ' ', 37);

1667 
	`tsk_Ârötf
(
hFûe
, "\nMETADATA INFORMATION\n");

1668 
	`tsk_Ârötf
(
hFûe
,

1670 
	`tsk_Ârötf
(
hFûe
,

1671 "P©h TabÀ Loˇti⁄: %" 
PRIu32
 "-%" PRIu32 "\n",

1672 
	`tsk_gëu32
(
fs
->
ídün
, 
s
->
svd
.
±_loc_m
),Åsk_getu32(fs->endian,

1673 
s
->
svd
.
±_loc_m
Ë+ 
	`tsk_gëu32
(
fs
->
ídün
,

1674 
s
->
svd
.
±_size_m
Ë/ 
fs
->
block_size
);

1676 
	`tsk_Ârötf
(
hFûe
, "RoŸ Dúe˘‹y Block: %" 
PRIuDADDR
 "\n",

1677 
	`tsk_gëu32
(
fs
->
ídün
, 
s
->
svd
.
dú_ªc
.
ext_loc_m
));

1680 i‡(!
	`°∫cmp
((*Ë
s
->
svd
.
esc_£q
, "%/E", 3))

1681 
	`tsk_Ârötf
(
hFûe
, "Joliet Name Encoding: UCS-2 Level 3\n");

1682 i‡(!
	`°∫cmp
((*Ë
s
->
svd
.
esc_£q
, "%/C", 3))

1683 
	`tsk_Ârötf
(
hFûe
, "Joliet Name Encoding: UCS-2 Level 2\n");

1684 i‡(!
	`°∫cmp
((*Ë
s
->
svd
.
esc_£q
, "%/@", 3))

1685 
	`tsk_Ârötf
(
hFûe
, "Joliet Name Encoding: UCS-2 Level 1\n");

1686 i‡(
iso
->
º_found
)

1687 
	`tsk_Ârötf
(
hFûe
, "RockRidge ExtensionsÖresent\n");

1690 
	`tsk_Ârötf
(
hFûe
, "\nCONTENT INFORMATION\n");

1691 
	`tsk_Ârötf
(
hFûe
,

1693 
	`tsk_Ârötf
(
hFûe
, "Se˘‹ Size: %d\n", 
ISO9660_SSIZE_B
);

1694 
	`tsk_Ârötf
(
hFûe
, "Block Size: %d\n", 
fs
->
block_size
);

1696 
	`tsk_Ârötf
(
hFûe
, "Total Sector Range: 0 - %d\n",

1697 (Ë((
fs
->
block_size
 / 
ISO9660_SSIZE_B
) *

1698 (
fs
->
block_cou¡
 - 1)));

1700 
	`tsk_Ârötf
(
hFûe
, "Total Block Range: 0 - %d\n",

1701 (Ë
fs
->
block_cou¡
 - 1);

1705 
	}
}

1713 
	$make_unix_≥rm
(
TSK_FS_INFO
 * 
fs
, 
iso9660_díåy
 * 
dd
)

1716 
≥rm
[11];

1717 
ISO_INFO
 *
iso
 = (ISO_INFO *Ë
fs
;

1719 i‡(
tsk_vîbo£
)

1720 
	`tsk_Ârötf
(
°dîr
, "make_unix_perm: fs: %lu"

1721 " dd: %lu\n", (
uöçå_t
Ë
fs
, (uöçå_tË
dd
);

1723 
≥rm
[10] = '\0';

1725 
	`mem£t
(
≥rm
, '-', 11);

1727 i‡(
dd
->
Êags
 & 
ISO9660_FLAG_DIR
)

1728 
≥rm
[0] = 'd';

1730 i‡(
iso
->
döode
->
ó
) {

1731 i‡(
	`tsk_gëu16
(
fs
->
ídün
, 
iso
->
döode
->
ó
->
mode
Ë& 
ISO9660_BIT_UR
)

1732 
≥rm
[1] = 'r';

1734 i‡(
	`tsk_gëu16
(
fs
->
ídün
, 
iso
->
döode
->
ó
->
mode
Ë& 
ISO9660_BIT_UX
)

1735 
≥rm
[3] = 'x';

1737 i‡(
	`tsk_gëu16
(
fs
->
ídün
, 
iso
->
döode
->
ó
->
mode
Ë& 
ISO9660_BIT_GR
)

1738 
≥rm
[4] = 'r';

1740 i‡(
	`tsk_gëu16
(
fs
->
ídün
, 
iso
->
döode
->
ó
->
mode
Ë& 
ISO9660_BIT_GX
)

1741 
≥rm
[6] = 'x';

1743 i‡(
	`tsk_gëu16
(
fs
->
ídün
, 
iso
->
döode
->
ó
->
mode
Ë& 
ISO9660_BIT_AR
)

1744 
≥rm
[7] = 'r';

1746 i‡(
	`tsk_gëu16
(
fs
->
ídün
, 
iso
->
döode
->
ó
->
mode
Ë& 
ISO9660_BIT_AX
)

1747 
≥rm
[9] = 'x';

1750 
	`°r˝y
(&
≥rm
[1], "r-xr-xr-x");

1753  
≥rm
;

1754 
	}
}

1758 
	$iso9660_¥öt_rockridge
(
FILE
 * 
hFûe
, 
rockridge_ext
 * 
º
)

1760 
mode_buf
[11];

1762 
	`tsk_Ârötf
(
hFûe
, "\nROCKRIDGE EXTENSIONS\n");

1764 
	`tsk_Ârötf
(
hFûe
, "Owner-ID: ");

1765 
	`tsk_Ârötf
(
hFûe
, "%d\t", (Ë
º
->
uid
);

1767 
	`tsk_Ârötf
(
hFûe
, "Group-ID: ");

1768 
	`tsk_Ârötf
(
hFûe
, "%d\n", (Ë
º
->
gid
);

1770 
	`tsk_Ârötf
(
hFûe
, "Mode: ");

1771 
	`mem£t
(
mode_buf
, '-', 11);

1772 
mode_buf
[10] = '\0';

1776 i‡((
º
->
mode
 & 
MODE_IFSOCK
) == MODE_IFSOCK)

1777 
mode_buf
[0] = 's';

1778 i‡((
º
->
mode
 & 
MODE_IFLNK
) == MODE_IFLNK)

1779 
mode_buf
[0] = 'l';

1780 i‡(
º
->
mode
 & 
MODE_IFDIR
)

1781 
mode_buf
[0] = 'd';

1782 i‡(
º
->
mode
 & 
MODE_IFIFO
)

1783 
mode_buf
[0] = 'p';

1784 i‡(
º
->
mode
 & 
MODE_IFBLK
)

1785 
mode_buf
[0] = 'b';

1786 i‡(
º
->
mode
 & 
MODE_IFCHR
)

1787 
mode_buf
[0] = 'c';

1790 i‡(
º
->
mode
 & 
TSK_FS_META_MODE_IRUSR
)

1791 
mode_buf
[1] = 'r';

1792 i‡(
º
->
mode
 & 
TSK_FS_META_MODE_IWUSR
)

1793 
mode_buf
[2] = 'w';

1795 i‡((
º
->
mode
 & 
TSK_FS_META_MODE_IXUSR
)

1796 && (
º
->
mode
 & 
TSK_FS_META_MODE_ISUID
))

1797 
mode_buf
[3] = 's';

1798 i‡(
º
->
mode
 & 
TSK_FS_META_MODE_IXUSR
)

1799 
mode_buf
[3] = 'x';

1800 i‡(
º
->
mode
 & 
TSK_FS_META_MODE_ISUID
)

1801 
mode_buf
[3] = 'S';

1804 i‡(
º
->
mode
 & 
TSK_FS_META_MODE_IRGRP
)

1805 
mode_buf
[4] = 'r';

1806 i‡(
º
->
mode
 & 
TSK_FS_META_MODE_IWGRP
)

1807 
mode_buf
[5] = 'w';

1809 i‡((
º
->
mode
 & 
TSK_FS_META_MODE_IXGRP
)

1810 && (
º
->
mode
 & 
TSK_FS_META_MODE_ISGID
))

1811 
mode_buf
[6] = 's';

1812 i‡(
º
->
mode
 & 
TSK_FS_META_MODE_IXGRP
)

1813 
mode_buf
[6] = 'x';

1814 i‡(
º
->
mode
 & 
TSK_FS_META_MODE_ISGID
)

1815 
mode_buf
[6] = 'S';

1818 i‡(
º
->
mode
 & 
TSK_FS_META_MODE_IROTH
)

1819 
mode_buf
[7] = 'r';

1820 i‡(
º
->
mode
 & 
TSK_FS_META_MODE_IWOTH
)

1821 
mode_buf
[8] = 'w';

1823 i‡((
º
->
mode
 & 
TSK_FS_META_MODE_IXOTH
)

1824 && (
º
->
mode
 & 
TSK_FS_META_MODE_ISVTX
))

1825 
mode_buf
[9] = 't';

1826 i‡(
º
->
mode
 & 
TSK_FS_META_MODE_IXOTH
)

1827 
mode_buf
[9] = 'x';

1828 i‡(
º
->
mode
 & 
TSK_FS_META_MODE_ISVTX
)

1829 
mode_buf
[9] = 'T';

1831 
	`tsk_Ârötf
(
hFûe
, "%s\n", 
mode_buf
);

1832 
	`tsk_Ârötf
(
hFûe
, "NumbîÜöks: %" 
PRIu32
 "\n", 
º
->
∆ök
);

1834 
	`tsk_Ârötf
(
hFûe
, "A…î«ãÇame: %s\n", 
º
->
‚
);

1835 
	`tsk_Ârötf
(
hFûe
, "\n");

1836 
	}
}

1850 
uöt8_t


1851 
	$iso9660_i°©
(
TSK_FS_INFO
 * 
fs
, 
FILE
 * 
hFûe
, 
TSK_INUM_T
 
öum
,

1852 
TSK_DADDR_T
 
numblock
, 
öt32_t
 
£c_skew
)

1854 
ISO_INFO
 *
iso
 = (ISO_INFO *Ë
fs
;

1855 
TSK_FS_FILE
 *
fs_fûe
;

1856 
iso9660_díåy
 
dd
;

1859 
	`tsk_îr‹_ª£t
();

1861 i‡((
fs_fûe
 = 
	`tsk_fs_fûe_›í_mëa
(
fs
, 
NULL
, 
öum
)) == NULL)

1864 
	`tsk_Ârötf
(
hFûe
, "E¡ry: %" 
PRIuINUM
 "\n", 
öum
);

1866 i‡(
	`iso9660_döode_lﬂd
(
iso
, 
öum
)) {

1867 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
, "iso9660_istat");

1868 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

1871 
	`mem˝y
(&
dd
, &
iso
->
döode
->
dr
, (
iso9660_díåy
));

1873 
	`tsk_Ârötf
(
hFûe
, "Type: ");

1874 i‡(
dd
.
Êags
 & 
ISO9660_FLAG_DIR
)

1875 
	`tsk_Ârötf
(
hFûe
, "Directory\n");

1877 
	`tsk_Ârötf
(
hFûe
, "File\n");

1879 
	`tsk_Ârötf
(
hFûe
, "Löks: %d\n", 
fs_fûe
->
mëa
->
∆ök
);

1881 i‡(
dd
.
g≠_sz
 > 0) {

1882 
	`tsk_Ârötf
(
hFûe
, "I¡îÀavêG≠ Size: %d\n", 
dd
.
g≠_sz
);

1883 
	`tsk_Ârötf
(
hFûe
, "I¡îÀavêFûêUnô Size: %d\n", 
dd
.
unô_sz
);

1886 
	`tsk_Ârötf
(
hFûe
, "Flags: ");

1888 i‡(
dd
.
Êags
 & 
ISO9660_FLAG_HIDE
)

1889 
	`tsk_Ârötf
(
hFûe
, "Hidden, ");

1891 i‡(
dd
.
Êags
 & 
ISO9660_FLAG_ASSOC
)

1892 
	`tsk_Ârötf
(
hFûe
, "Associated, ");

1894 i‡(
dd
.
Êags
 & 
ISO9660_FLAG_RECORD
)

1895 
	`tsk_Ârötf
(
hFûe
, "Record Format, ");

1897 i‡(
dd
.
Êags
 & 
ISO9660_FLAG_PROT
)

1898 
	`tsk_Ârötf
(
hFûe
, "Protected, ");

1901 i‡(
dd
.
Êags
 & 
ISO9660_FLAG_RES1
)

1902 
	`tsk_Ârötf
(
hFûe
, "Reserved1, ");

1904 i‡(
dd
.
Êags
 & 
ISO9660_FLAG_RES2
)

1905 
	`tsk_Ârötf
(
hFûe
, "Reserved2, ");

1907 i‡(
dd
.
Êags
 & 
ISO9660_FLAG_MULT
)

1908 
	`tsk_Ârötf
(
hFûe
, "Non-final multi-extentÉntry");

1909 
	`putch¨
('\n');

1911 
	`tsk_Ârötf
(
hFûe
, "Name: %s\n", 
iso
->
döode
->
‚
);

1912 
	`tsk_Ârötf
(
hFûe
, "Size: %" 
PRIu32
 "\n", 
	`tsk_gëu32
(
fs
->
ídün
,

1913 
iso
->
döode
->
dr
.
d©a_Àn_m
));

1915 i‡(
iso
->
döode
->
ó
) {

1916 
	`tsk_Ârötf
(
hFûe
, "\nEXTENDED ATTRIBUTE INFO\n");

1917 
	`tsk_Ârötf
(
hFûe
, "Ow√r-ID: %" 
PRIu32
 "\n",

1918 
	`tsk_gëu32
(
fs
->
ídün
, 
iso
->
döode
->
ó
->
uid
));

1919 
	`tsk_Ârötf
(
hFûe
, "Group-ID: %" 
PRIu32
 "\n",

1920 
	`tsk_gëu32
(
fs
->
ídün
, 
iso
->
döode
->
ó
->
gid
));

1921 
	`tsk_Ârötf
(
hFûe
, "Mode: %s\n", 
	`make_unix_≥rm
(
fs
, &
dd
));

1923 i‡(
iso
->
döode
->
su•_off
) {

1924 *
buf2
 = (*Ë
	`tsk_mÆloc
((
size_t
Ë
iso
->
döode
->
su•_Àn
);

1925 i‡(
buf2
 !
NULL
) {

1926 
ssize_t
 
˙t
;

1927 
	`Ârötf
(
hFûe
, "\nRock Ridge Extension Data\n");

1928 
˙t
 =

1929 
	`tsk_fs_ªad
(
fs
, 
iso
->
döode
->
su•_off
, 
buf2
,

1930 (
size_t
Ë
iso
->
döode
->
su•_Àn
);

1931 i‡(
˙t
 =
iso
->
döode
->
su•_Àn
) {

1932 
	`∑r£_su•
(
fs
, 
buf2
, (Ë
˙t
, 
hFûe
);

1935 
	`Ârötf
(
hFûe
, "ErrorÑeading Rock Ridge Location\n");

1936 i‡(
tsk_vîbo£
) {

1937 
	`Ârötf
(
°dîr
,

1939 
	`tsk_îr‹_¥öt
(
°dîr
);

1941 
	`tsk_îr‹_ª£t
();

1943 
	`‰ì
(
buf2
);

1946 i‡(
tsk_vîbo£
)

1947 
	`Ârötf
(
°dîr
,

1949 
	`tsk_îr‹_ª£t
();

1956 
	`tsk_Ârötf
(
hFûe
, "Owner-ID: 0\n");

1957 
	`tsk_Ârötf
(
hFûe
, "Group-ID: 0\n");

1958 
	`tsk_Ârötf
(
hFûe
, "Mode: %s\n", 
	`make_unix_≥rm
(
fs
, &
dd
));

1961 i‡(
£c_skew
 != 0) {

1962 
	`tsk_Ârötf
(
hFûe
, "\nAdjusted File Times:\n");

1963 
fs_fûe
->
mëa
->
mtime
 -
£c_skew
;

1964 
fs_fûe
->
mëa
->
©ime
 -
£c_skew
;

1965 
fs_fûe
->
mëa
->
¸time
 -
£c_skew
;

1967 
	`tsk_Ârötf
(
hFûe
, "Wrôãn:\t%s", 
	`˘ime
(&
fs_fûe
->
mëa
->
mtime
));

1968 
	`tsk_Ârötf
(
hFûe
, "Ac˚s£d:\t%s", 
	`˘ime
(&
fs_fûe
->
mëa
->
©ime
));

1969 
	`tsk_Ârötf
(
hFûe
, "Cª©ed:\t%s", 
	`˘ime
(&
fs_fûe
->
mëa
->
¸time
));

1971 
fs_fûe
->
mëa
->
mtime
 +
£c_skew
;

1972 
fs_fûe
->
mëa
->
©ime
 +
£c_skew
;

1973 
fs_fûe
->
mëa
->
¸time
 +
£c_skew
;

1975 
	`tsk_Ârötf
(
hFûe
, "\nOriginal File Times:\n");

1978 
	`tsk_Ârötf
(
hFûe
, "\nFile Times:\n");

1981 
	`tsk_Ârötf
(
hFûe
, "Cª©ed:\t%s", 
	`˘ime
(&
fs_fûe
->
mëa
->
¸time
));

1982 
	`tsk_Ârötf
(
hFûe
, "FûêModifõd:\t%s", 
	`˘ime
(&
fs_fûe
->
mëa
->
mtime
));

1983 
	`tsk_Ârötf
(
hFûe
, "Ac˚s£d:\t%s", 
	`˘ime
(&
fs_fûe
->
mëa
->
©ime
));

1986 
	`tsk_Ârötf
(
hFûe
, "\nSectors:\n");

1989 
block
 = 
	`tsk_gëu32
(
fs
->
ídün
, 
iso
->
döode
->
dr
.
ext_loc_m
);

1990 
TSK_OFF_T
 
size
 = 
fs_fûe
->
mëa
->size;

1991 
rowcou¡
 = 0;

1993 (
öt64_t
Ë
size
 > 0) {

1994 
	`tsk_Ârötf
(
hFûe
, "%d ", 
block
++);

1995 
size
 -
fs
->
block_size
;

1996 
rowcou¡
++;

1997 i‡(
rowcou¡
 == 8) {

1998 
rowcou¡
 = 0;

1999 
	`tsk_Ârötf
(
hFûe
, "\n");

2002 
	`tsk_Ârötf
(
hFûe
, "\n");

2005 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

2007 
	}
}

2012 
uöt8_t


2013 
	$iso9660_j›í
(
TSK_FS_INFO
 * 
fs
, 
TSK_INUM_T
 
öum
)

2015 
	`tsk_îr‹_ª£t
();

2016 
tsk_î∫o
 = 
TSK_ERR_FS_UNSUPFUNC
;

2017 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
, "ISO9660 doesÇot haveá journal");

2019 
	}
}

2021 
uöt8_t


2022 
	$iso9660_jíåy_wÆk
(
TSK_FS_INFO
 * 
fs
, 
Êags
,

2023 
TSK_FS_JENTRY_WALK_CB
 
a˘i⁄
, *
±r
)

2025 
	`tsk_îr‹_ª£t
();

2026 
tsk_î∫o
 = 
TSK_ERR_FS_UNSUPFUNC
;

2027 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
, "ISO9660 doesÇot haveá journal");

2029 
	}
}

2031 
uöt8_t


2032 
	$iso9660_jblk_wÆk
(
TSK_FS_INFO
 * 
fs
, 
TSK_DADDR_T
 
°¨t
, TSK_DADDR_T 
íd
,

2033 
Êags
, 
TSK_FS_JBLK_WALK_CB
 
a˘i⁄
, *
±r
)

2035 
	`tsk_îr‹_ª£t
();

2036 
tsk_î∫o
 = 
TSK_ERR_FS_UNSUPFUNC
;

2037 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
, "ISO9660 doesÇot haveá journal");

2039 
	}
}

2042 
TSK_FS_ATTR_TYPE_ENUM


2043 
	$iso9660_gë_deÁu…_©å_ty≥
(c⁄° 
TSK_FS_FILE
 * 
a_fûe
)

2045  
TSK_FS_ATTR_TYPE_DEFAULT
;

2046 
	}
}

2049 
	$iso9660_˛o£
(
TSK_FS_INFO
 * 
fs
)

2051 
ISO_INFO
 *
iso
 = (ISO_INFO *Ë
fs
;

2052 
iso9660_pvd_node
 *
p
;

2053 
iso9660_svd_node
 *
s
;

2055 
fs
->
èg
 = 0;

2056 
iso
->
pvd
 !
NULL
) {

2057 
p
 = 
iso
->
pvd
;

2058 
iso
->
pvd
 = iso->pvd->
√xt
;

2059 
	`‰ì
(
p
);

2062 
iso
->
svd
 !
NULL
) {

2063 
s
 = 
iso
->
svd
;

2064 
iso
->
svd
 = iso->svd->
√xt
;

2065 
	`‰ì
(
s
);

2068 
	`‰ì
((*Ë
iso
->
döode
);

2070 i‡(
fs
->
li°_öum_«med
) {

2071 
	`tsk_li°_‰ì
(
fs
->
li°_öum_«med
);

2072 
fs
->
li°_öum_«med
 = 
NULL
;

2075 
	`‰ì
(
fs
);

2076 
	}
}

2091 
	$lﬂd_vﬁ_desc
(
TSK_FS_INFO
 * 
fs
)

2093 
cou¡
 = 0;

2094 
ISO_INFO
 *
iso
 = (ISO_INFO *Ë
fs
;

2095 
TSK_OFF_T
 
offs
;

2096 *
my«me
 = "iso_load_vol_desc";

2097 
ssize_t
 
˙t
;

2098 
iso9660_pvd_node
 *
p
;

2099 
iso9660_svd_node
 *
s
;

2101 
iso
->
pvd
 = 
NULL
;

2102 
iso
->
svd
 = 
NULL
;

2103 
fs
->
block_size
 = 0;

2104 
fs
->
dev_bsize
 = fs->
img_öfo
->
£˘‹_size
;

2107 
b
 = (
iso_boŸªc
 *Ë
	`tsk_mÆloc
((iso_bootrec));

2108 i‡(
b
 =
NULL
) {

2114 
offs
 = 
ISO9660_SBOFF
;; off†+(
iso9660_gvd
)) {

2115 
iso9660_gvd
 *
vd
;

2119 i‡((
vd
 =

2120 (
iso9660_gvd
 *Ë
	`tsk_mÆloc
((
iso9660_pvd_node
))) ==

2121 
NULL
) {

2126 
˙t
 = 
	`tsk_fs_ªad
(
fs
, 
offs
, (*Ë
vd
, (
iso9660_gvd
));

2127 i‡(
˙t
 !(
iso9660_gvd
)) {

2128 i‡(
˙t
 >= 0) {

2129 
	`tsk_îr‹_ª£t
();

2130 
tsk_î∫o
 = 
TSK_ERR_FS_READ
;

2132 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

2134 
	`‰ì
(
vd
);

2139 i‡(
	`°∫cmp
(
vd
->
magic
, 
ISO9660_MAGIC
, 5)) {

2140 i‡(
tsk_vîbo£
)

2141 
	`tsk_Ârötf
(
°dîr
, "%s: Bad vﬁumêdes¸ùt‹: \
Çumbî i†nŸ CD001\n", 
my«me
);

2143 
	`‰ì
(
vd
);

2148 i‡(
vd
->
ty≥
 =
ISO9660_VOL_DESC_SET_TERM
)

2151 
vd
->
ty≥
) {

2153 
ISO9660_PRIM_VOL_DESC
:

2154 
p
 = (
iso9660_pvd_node
 *Ë
vd
;

2157 i‡(
iso
->
pvd
) {

2158 
iso9660_pvd_node
 *
±mp
 = 
iso
->
pvd
;

2160 (
p
->
pvd
.
±_loc_l
 !
±mp
->pvd.pt_loc_l)

2161 && (
±mp
->
√xt
))

2162 
±mp
 =Ötmp->
√xt
;

2165 i‡(
p
->
pvd
.
±_loc_l
 =
±mp
->pvd.pt_loc_l) {

2166 
	`‰ì
(
vd
);

2167 
p
 = 
NULL
;

2168 
vd
 = 
NULL
;

2171 
±mp
->
√xt
 = 
p
;

2172 
p
->
√xt
 = 
NULL
;

2173 
cou¡
++;

2179 
iso
->
pvd
 = 
p
;

2180 
p
->
√xt
 = 
NULL
;

2181 
cou¡
++;

2186 
ISO9660_SUPP_VOL_DESC
:

2187 
s
 = (
iso9660_svd_node
 *Ë
vd
;

2190 i‡(
iso
->
svd
) {

2191 
iso9660_svd_node
 *
°mp
 = 
iso
->
svd
;

2193 (
s
->
svd
.
±_loc_l
 !
°mp
->svd.pt_loc_l)

2194 && (
°mp
->
√xt
))

2195 
°mp
 = stmp->
√xt
;

2198 i‡(
s
->
svd
.
±_loc_l
 =
°mp
->svd.pt_loc_l) {

2199 
	`‰ì
(
vd
);

2200 
s
 = 
NULL
;

2201 
vd
 = 
NULL
;

2204 
°mp
->
√xt
 = 
s
;

2205 
s
->
√xt
 = 
NULL
;

2206 
cou¡
++;

2212 
iso
->
svd
 = 
s
;

2213 
s
->
√xt
 = 
NULL
;

2214 
cou¡
++;

2220 
ISO9660_BOOT_RECORD
:

2222 
˙t
 = 
	`tsk_fs_ªad
(
fs
, 
offs
, (*Ë
b
, (
iso_boŸªc
));

2223 i‡(
˙t
 !(
iso_boŸªc
)) {

2224 i‡(
˙t
 >= 0) {

2225 
	`tsk_îr‹_ª£t
();

2226 
tsk_î∫o
 = 
TSK_ERR_FS_READ
;

2228 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

2232 
offs
 +(
iso_boŸªc
);

2242 
s
 = 
iso
->
svd
; s !
NULL
; s = s->
√xt
) {

2243 
p
 = 
iso
->
pvd
;Ö !
NULL
;Ö =Ö->
√xt
) {

2245 i‡(
	`tsk_gëu32
(
fs
->
ídün
,

2246 
p
->
pvd
.
±_loc_m
Ë=
	`tsk_gëu32
(
fs
->
ídün
,

2247 
s
->
svd
.
±_loc_m
)) {

2249 i‡(
p
 =
iso
->
pvd
) {

2250 
iso
->
pvd
 = 
p
->
√xt
;

2253 
iso9660_pvd_node
 *
±mp
 = 
iso
->
pvd
;

2254 
±mp
->
√xt
 !
p
)

2255 
±mp
 =Ötmp->
√xt
;

2256 
±mp
->
√xt
 = 
p
->next;

2258 
p
->
√xt
 = 
NULL
;

2259 
	`‰ì
(
p
);

2260 
p
 = 
NULL
;

2261 
cou¡
--;

2267 i‡((
iso
->
pvd
 =
NULL
Ë&& (iso->
svd
 == NULL)) {

2268 
	`tsk_îr‹_ª£t
();

2269 
tsk_î∫o
 = 
TSK_ERR_FS_MAGIC
;

2270 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

2277 
	}
}

2285 
TSK_FS_INFO
 *

2286 
	$iso9660_›í
(
TSK_IMG_INFO
 * 
img_öfo
, 
TSK_OFF_T
 
off£t
,

2287 
TSK_FS_TYPE_ENUM
 
·y≥
, 
uöt8_t
 
ã°
)

2289 
ISO_INFO
 *
iso
;

2290 
TSK_FS_INFO
 *
fs
;

2291 
uöt8_t
 
tmpguess
[4];

2293 i‡(
	`TSK_FS_TYPE_ISISO9660
(
·y≥
) == 0) {

2294 
	`tsk_îr‹_ª£t
();

2295 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

2296 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

2298  
NULL
;

2301 i‡(
tsk_vîbo£
) {

2302 
	`tsk_Ârötf
(
°dîr
, "iso9660_open img_info: %lu"

2303 " fty≥: %" 
PRIu8
 "Åe°: %" PRIu8 "\n", (
uöçå_t
Ë
img_öfo
,

2304 
·y≥
, 
ã°
);

2307 i‡((
iso
 = (
ISO_INFO
 *Ë
	`tsk_mÆloc
((ISO_INFO))Ë=
NULL
) {

2308  
NULL
;

2310 
fs
 = &(
iso
->
fs_öfo
);

2312 
iso
->
º_found
 = 0;

2313 
iso
->
ö_li°
 = 
NULL
;

2315 
fs
->
·y≥
 = 
TSK_FS_TYPE_ISO9660
;

2316 
fs
->
du«me
 = "Block";

2317 
fs
->
Êags
 = 0;

2318 
fs
->
èg
 = 
TSK_FS_INFO_TAG
;

2319 
fs
->
img_öfo
 = img_info;

2320 
fs
->
off£t
 = offset;

2329 
tmpguess
[0] = 0;

2330 
tmpguess
[1] = 0;

2331 
tmpguess
[2] = 0;

2332 
tmpguess
[3] = 1;

2333 
	`tsk_fs_guessu32
(
fs
, 
tmpguess
, 1);

2336 i‡(
	`lﬂd_vﬁ_desc
(
fs
) == -1) {

2337 
fs
->
èg
 = 0;

2338 
	`iso9660_˛o£
(
fs
);

2339 i‡(
ã°
)

2340  
NULL
;

2342 
	`tsk_îr‹_ª£t
();

2343 
tsk_î∫o
 = 
TSK_ERR_FS_MAGIC
;

2344 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

2346  
NULL
;

2350 i‡(
iso
->
pvd
) {

2351 
fs
->
block_size
 = 
	`tsk_gëu16
(fs->
ídün
, 
iso
->
pvd
->pvd.
blk_sz_m
);

2352 
fs
->
block_cou¡
 = 
	`tsk_gëu32
(fs->
ídün
, 
iso
->
pvd
->pvd.
vs_sz_m
);

2355 
fs
->
fs_id_u£d
 = 0; fs->fs_id_used < 32; fs->fs_id_used++) {

2356 
fs
->
fs_id
[fs->
fs_id_u£d
] =

2357 
iso
->
pvd
->pvd.
vﬁ_id
[
fs
->
fs_id_u£d
];

2362 
fs
->
block_size
 = 
	`tsk_gëu16
(fs->
ídün
, 
iso
->
svd
->svd.
blk_sz_m
);

2363 
fs
->
block_cou¡
 = 
	`tsk_gëu32
(fs->
ídün
, 
iso
->
svd
->svd.
vs_sz_m
);

2366 
fs
->
fs_id_u£d
 = 0; fs->fs_id_used < 32; fs->fs_id_used++) {

2367 
fs
->
fs_id
[fs->
fs_id_u£d
] =

2368 
iso
->
svd
->svd.
vﬁ_id
[
fs
->
fs_id_u£d
];

2372 
fs
->
fú°_block
 = 0;

2373 
fs
->
œ°_block
 = fs->
œ°_block_a˘
 = fs->
block_cou¡
 - 1;

2376 i‡((
TSK_DADDR_T
Ë((
img_öfo
->
size
 - 
off£t
Ë/ 
fs
->
block_size
) <

2377 
fs
->
block_cou¡
)

2378 
fs
->
œ°_block_a˘
 =

2379 (
img_öfo
->
size
 - 
off£t
Ë/ 
fs
->
block_size
 - 1;

2381 
fs
->
öum_cou¡
 = 
	`iso9660_lﬂd_öodes_±
(
iso
);

2382 i‡((Ë
fs
->
öum_cou¡
 == -1) {

2383 
fs
->
èg
 = 0;

2384 
	`iso9660_˛o£
(
fs
);

2385  
NULL
;

2387 
fs
->
öum_cou¡
++;

2389 
fs
->
œ°_öum
 = fs->
öum_cou¡
 - 1;

2390 
fs
->
fú°_öum
 = 
ISO9660_FIRSTINO
;

2391 
fs
->
roŸ_öum
 = 
ISO9660_ROOTINO
;

2394 
fs
->
öode_wÆk
 = 
iso9660_öode_wÆk
;

2395 
fs
->
block_wÆk
 = 
iso9660_block_wÆk
;

2396 
fs
->
block_gëÊags
 = 
iso9660_block_gëÊags
;

2398 
fs
->
gë_deÁu…_©å_ty≥
 = 
iso9660_gë_deÁu…_©å_ty≥
;

2399 
fs
->
lﬂd_©ås
 = 
iso9660_make_d©a_run
;

2401 
fs
->
fûe_add_mëa
 = 
iso9660_öode_lookup
;

2402 
fs
->
dú_›í_mëa
 = 
iso9660_dú_›í_mëa
;

2403 
fs
->
fs°©
 = 
iso9660_fs°©
;

2404 
fs
->
fscheck
 = 
iso9660_fscheck
;

2405 
fs
->
i°©
 = 
iso9660_i°©
;

2406 
fs
->
˛o£
 = 
iso9660_˛o£
;

2407 
fs
->
«me_cmp
 = 
iso9660_«me_cmp
;

2409 
fs
->
jblk_wÆk
 = 
iso9660_jblk_wÆk
;

2410 
fs
->
jíåy_wÆk
 = 
iso9660_jíåy_wÆk
;

2411 
fs
->
j›í
 = 
iso9660_j›í
;

2416 
iso
->
döode
 = (
iso9660_öode
 *Ë
	`tsk_mÆloc
((iso9660_inode));

2417 i‡(
iso
->
döode
 =
NULL
) {

2418 
fs
->
èg
 = 0;

2419 
	`iso9660_˛o£
(
fs
);

2420  
NULL
;

2422 
iso
->
döum
 = -1;

2424 
fs
->
li°_öum_«med
 = 
NULL
;

2426  
fs
;

2427 
	}
}

	@tsk3/fs/iso9660_dent.c

72 
	~"tsk_fs_i.h
"

73 
	~"tsk_iso9660.h
"

89 
uöt8_t


90 
	$iso9660_¥oc_dú
(
TSK_FS_INFO
 * 
a_fs
, 
TSK_FS_DIR
 * 
a_fs_dú
, *
buf
,

91 
size_t
 
a_Àngth
, 
TSK_INUM_T
 
a_addr
, 
TSK_OFF_T
 
a_dú_addr
)

93 
ISO_INFO
 *
iso
 = (ISO_INFO *Ë
a_fs
;

94 
TSK_FS_NAME
 *
fs_«me
;

95 
size_t
 
buf_idx
;

97 
iso9660_díåy
 *
dd
;

98 
iso9660_öode_node
 *
ö
;

99 
TSK_OFF_T
 
dú_offs
 = 
a_dú_addr
 * 
a_fs
->
block_size
;

101 i‡((
fs_«me
 = 
	`tsk_fs_«me_Æloc
(
ISO9660_MAXNAMLEN
 + 1, 0)Ë=
NULL
)

102  
TSK_ERR
;

104 
buf_idx
 = 0;

105 
dd
 = (
iso9660_díåy
 *Ë& 
buf
[
buf_idx
];

108 
fs_«me
->
mëa_addr
 = 
a_addr
;

109 
	`°r˝y
(
fs_«me
->
«me
, ".");

110 
fs_«me
->
ty≥
 = 
TSK_FS_NAME_TYPE_DIR
;

111 
fs_«me
->
Êags
 = 
TSK_FS_NAME_FLAG_ALLOC
;

113 
	`tsk_fs_dú_add
(
a_fs_dú
, 
fs_«me
);

115 
buf_idx
 +
dd
->
íåy_Àn
;

116 i‡(
buf_idx
 > 
a_Àngth
 - (
iso9660_díåy
)) {

117 
	`‰ì
(
buf
);

118 
	`tsk_fs_«me_‰ì
(
fs_«me
);

119  
TSK_OK
;

121 
dd
 = (
iso9660_díåy
 *Ë& 
buf
[
buf_idx
];

124 
ö
 = 
iso
->
ö_li°
;

125 
ö


126 && (
	`tsk_gëu32
(
a_fs
->
ídün
, 
ö
->
öode
.
dr
.
ext_loc_m
) !=

127 
	`tsk_gëu32
(
a_fs
->
ídün
, 
dd
->
ext_loc_m
)))

128 
ö
 = in->
√xt
;

129 i‡(
ö
) {

130 
fs_«me
->
mëa_addr
 = 
ö
->
öum
;

131 
	`°r˝y
(
fs_«me
->
«me
, "..");

133 
fs_«me
->
ty≥
 = 
TSK_FS_NAME_TYPE_DIR
;

134 
fs_«me
->
Êags
 = 
TSK_FS_NAME_FLAG_ALLOC
;

136 
	`tsk_fs_dú_add
(
a_fs_dú
, 
fs_«me
);

138 
buf_idx
 +
dd
->
íåy_Àn
;

141 
buf_idx
 < 
a_Àngth
 - (
iso9660_díåy
)) {

142 
dd
 = (
iso9660_díåy
 *Ë& 
buf
[
buf_idx
];

145 i‡((
dd
->
íåy_Àn
Ë&& (
buf_idx
 + dd->íåy_À¿< 
a_Àngth
)) {

146 
i
;

155 
ö
 = 
iso
->
ö_li°
; in; i¿ö->
√xt
) {

156 i‡(
ö
->
díåy_off£t
 =
dú_offs
 + 
buf_idx
)

161 i‡(!
ö
) {

162 
buf_idx
++;

167 
fs_«me
->
mëa_addr
 = 
ö
->
öum
;

168 
	`°∫˝y
(
fs_«me
->
«me
, 
ö
->
öode
.
‚
, 
ISO9660_MAXNAMLEN
);

171 
i
 = 0; 
fs_«me
->
«me
[i] != '\0'; i++) {

172 i‡(
	`TSK_IS_CNTRL
(
fs_«me
->
«me
[
i
]))

173 
fs_«me
->
«me
[
i
] = '^';

176 i‡(
dd
->
Êags
 & 
ISO9660_FLAG_DIR
)

177 
fs_«me
->
ty≥
 = 
TSK_FS_NAME_TYPE_DIR
;

179 
fs_«me
->
ty≥
 = 
TSK_FS_NAME_TYPE_REG
;

180 
fs_«me
->
Êags
 = 
TSK_FS_NAME_FLAG_ALLOC
;

182 
	`tsk_fs_dú_add
(
a_fs_dú
, 
fs_«me
);

184 
buf_idx
 +
dd
->
íåy_Àn
;

190 ; 
buf_idx
 < 
a_Àngth
 - (
iso9660_díåy
); buf_idx++) {

191 i‡(
buf
[
buf_idx
] != 0) {

192 
dd
 = (
iso9660_díåy
 *Ë& 
buf
[
buf_idx
];

193 i‡((
dd
->
íåy_Àn
)

194 && (
buf_idx
 + 
dd
->
íåy_Àn
 < 
a_Àngth
))

198 i‡(
buf_idx
 % 
a_fs
->
block_size
 == 0)

204 
	`‰ì
(
buf
);

205 
	`tsk_fs_«me_‰ì
(
fs_«me
);

207  
TSK_OK
;

208 
	}
}

225 
TSK_RETVAL_ENUM


226 
	$iso9660_dú_›í_mëa
(
TSK_FS_INFO
 * 
a_fs
, 
TSK_FS_DIR
 ** 
a_fs_dú
,

227 
TSK_INUM_T
 
a_addr
)

229 
TSK_RETVAL_ENUM
 
ªtvÆ
;

230 
TSK_FS_DIR
 *
fs_dú
;

231 
ssize_t
 
˙t
;

232 *
buf
;

233 
size_t
 
Àngth
;

235 i‡(
a_addr
 < 
a_fs
->
fú°_öum
 ||á_add∏>á_fs->
œ°_öum
) {

236 
	`tsk_îr‹_ª£t
();

237 
tsk_î∫o
 = 
TSK_ERR_FS_WALK_RNG
;

238 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

239 "iso9660_dú_›í_mëa: InvÆid inodêvÆue: %" 
PRIuINUM
,

240 
a_addr
);

241  
TSK_ERR
;

243 i‡(
a_fs_dú
 =
NULL
) {

244 
	`tsk_îr‹_ª£t
();

245 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

246 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

248  
TSK_ERR
;

251 i‡(
tsk_vîbo£
)

252 
	`tsk_Ârötf
(
°dîr
,

253 "iso9660_dú_›í_mëa: Pro˚ssög dúe˘‹y %" 
PRIuINUM
 "\n",

254 
a_addr
);

256 
fs_dú
 = *
a_fs_dú
;

257 i‡(
fs_dú
) {

258 
	`tsk_fs_dú_ª£t
(
fs_dú
);

261 i‡((*
a_fs_dú
 = 
fs_dú
 = 
	`tsk_fs_dú_Æloc
(
a_fs
, 128)Ë=
NULL
) {

262  
TSK_ERR
;

267 i‡(
a_addr
 =
	`TSK_FS_ORPHANDIR_INUM
(
a_fs
)) {

268  
	`tsk_fs_dú_föd_‹ph™s
(
a_fs
, 
fs_dú
);

271 
fs_dú
->
fs_fûe
 = 
	`tsk_fs_fûe_›í_mëa
(
a_fs
, 
NULL
, 
a_addr
);

272 i‡(
fs_dú
->
fs_fûe
 =
NULL
) {

273 
	`tsk_îr‹_ª£t
();

274 
tsk_î∫o
 = 
TSK_ERR_FS_INODE_NUM
;

275 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

276 "iso9660_dú_›í_mëa: %" 
PRIuINUM
 " isÇotá valid inode",

277 
a_addr
);

278  
TSK_COR
;

282 
Àngth
 = (
size_t
Ë
fs_dú
->
fs_fûe
->
mëa
->
size
;

283 i‡((
buf
 = 
	`tsk_mÆloc
(
Àngth
)Ë=
NULL
)

284  
TSK_ERR
;

286 
˙t
 = 
	`tsk_fs_fûe_ªad
(
fs_dú
->
fs_fûe
, 0, 
buf
, 
Àngth
, 0);

287 i‡(
˙t
 !
Àngth
) {

288 i‡(
˙t
 >= 0) {

289 
	`tsk_îr‹_ª£t
();

290 
tsk_î∫o
 = 
TSK_ERR_FS_READ
;

291 
tsk_îr°r
[0] = '\0';

293 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
, "iso9660_dir_open_meta");

294  
TSK_ERR
;

298 
ªtvÆ
 = 
	`iso9660_¥oc_dú
(
a_fs
, 
fs_dú
, 
buf
, 
Àngth
, 
a_addr
,

299 
fs_dú
->
fs_fûe
->
mëa
->
©å
->
hód
->
ƒd
.
run
->
addr
);

302 i‡(
a_addr
 =
a_fs
->
roŸ_öum
) {

303 
TSK_FS_NAME
 *
fs_«me
 = 
	`tsk_fs_«me_Æloc
(256, 0);

304 i‡(
fs_«me
 =
NULL
)

305  
TSK_ERR
;

307 i‡(
	`tsk_fs_dú_make_‹ph™_dú_«me
(
a_fs
, 
fs_«me
)) {

308 
	`tsk_fs_«me_‰ì
(
fs_«me
);

309  
TSK_ERR
;

312 i‡(
	`tsk_fs_dú_add
(
fs_dú
, 
fs_«me
)) {

313 
	`tsk_fs_«me_‰ì
(
fs_«me
);

314  
TSK_ERR
;

316 
	`tsk_fs_«me_‰ì
(
fs_«me
);

319  
ªtvÆ
;

320 
	}
}

323 
	$iso9660_«me_cmp
(
TSK_FS_INFO
 * 
a_fs_öfo
, c⁄° *
s1
, c⁄° *
s2
)

325  
	`°rcmp
(
s1
, 
s2
);

326 
	}
}

	@tsk3/fs/nofs_misc.c

13 
	~"tsk_fs_i.h
"

32 
uöt8_t


33 
	$tsk_fs_nofs_fs°©
(
TSK_FS_INFO
 * 
a_fs
, 
FILE
 * 
hFûe
)

35 
	`tsk_Ârötf
(
hFûe
, "%†D©a\n", 
	`tsk_fs_ty≥_t⁄ame
(
a_fs
->
·y≥
));

36 
	`tsk_Ârötf
(
hFûe
, "Block Size: %d\n", 
a_fs
->
block_size
);

37 
	`tsk_Ârötf
(
hFûe
, "Block R™ge: 0 - %" 
PRIuDADDR
 "\n",

38 
a_fs
->
œ°_block
);

40 
	}
}

45 
TSK_FS_ATTR_TYPE_ENUM


46 
	$tsk_fs_nofs_gë_deÁu…_©å_ty≥
(c⁄° 
TSK_FS_FILE
 * 
a_fs_fûe
)

48  
TSK_FS_ATTR_TYPE_DEFAULT
;

49 
	}
}

54 
uöt8_t


55 
	$tsk_fs_nofs_make_d©a_run
(
TSK_FS_FILE
 * 
a_fs_fûe
)

57 
	`tsk_îr‹_ª£t
();

58 
tsk_î∫o
 = 
TSK_ERR_FS_UNSUPFUNC
;

59 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

61 (
a_fs_fûe
->
fs_öfo
Ë? 
	`tsk_fs_ty≥_t⁄ame
(a_fs_file->

62 
fs_öfo
->
·y≥
) : "");

64 
	}
}

71 
	$tsk_fs_nofs_˛o£
(
TSK_FS_INFO
 * 
a_fs
)

73 
a_fs
->
èg
 = 0;

74 
	`‰ì
(
a_fs
);

75 
	}
}

81 
TSK_FS_BLOCK_FLAG_ENUM


82 
	$tsk_fs_nofs_block_gëÊags
(
TSK_FS_INFO
 * 
a_fs
, 
TSK_DADDR_T
 
a_addr
)

84  
TSK_FS_BLOCK_FLAG_ALLOC
 | 
TSK_FS_BLOCK_FLAG_CONT
;

85 
	}
}

92 
uöt8_t


93 
	$tsk_fs_nofs_block_wÆk
(
TSK_FS_INFO
 * 
fs
, 
TSK_DADDR_T
 
a_°¨t_blk
,

94 
TSK_DADDR_T
 
a_íd_blk
, 
TSK_FS_BLOCK_WALK_FLAG_ENUM
 
a_Êags
,

95 
TSK_FS_BLOCK_WALK_CB
 
a_a˘i⁄
, *
a_±r
)

97 
TSK_FS_BLOCK
 *
fs_block
;

98 
TSK_DADDR_T
 
addr
;

101 
	`tsk_îr‹_ª£t
();

106 i‡(
a_°¨t_blk
 < 
fs
->
fú°_block
 ||á_°¨t_blk > fs->
œ°_block
) {

107 
	`tsk_îr‹_ª£t
();

108 
tsk_î∫o
 = 
TSK_ERR_FS_WALK_RNG
;

109 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

110 "nofs_block_wÆk: Sèπ blockÇumbî: %" 
PRIuDADDR
,

111 
a_°¨t_blk
);

115 i‡(
a_íd_blk
 < 
fs
->
fú°_block
 ||á_íd_blk > fs->
œ°_block


116 || 
a_íd_blk
 < 
a_°¨t_blk
) {

117 
	`tsk_îr‹_ª£t
();

118 
tsk_î∫o
 = 
TSK_ERR_FS_WALK_RNG
;

119 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

120 "nofs_block_wÆk: La° blockÇumbî: %" 
PRIuDADDR
, 
a_íd_blk
);

125 i‡(((
a_Êags
 & 
TSK_FS_BLOCK_WALK_FLAG_ALLOC
) == 0) &&

126 ((
a_Êags
 & 
TSK_FS_BLOCK_WALK_FLAG_UNALLOC
) == 0)) {

127 
a_Êags
 |=

128 (
TSK_FS_BLOCK_WALK_FLAG_ALLOC
 |

129 
TSK_FS_BLOCK_WALK_FLAG_UNALLOC
);

133 i‡(!(
a_Êags
 & 
TSK_FS_BLOCK_FLAG_ALLOC
)) {

137 i‡((
fs_block
 = 
	`tsk_fs_block_Æloc
(
fs
)Ë=
NULL
) {

141 
addr
 = 
a_°¨t_blk
;ádd∏<
a_íd_blk
;áddr++) {

142 
ªtvÆ
;

144 i‡(
	`tsk_fs_block_gë
(
fs
, 
fs_block
, 
addr
Ë=
NULL
) {

145 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

146 "nofs_block_wÆk: Block %" 
PRIuDADDR
, 
addr
);

147 
	`tsk_fs_block_‰ì
(
fs_block
);

151 
ªtvÆ
 = 
	`a_a˘i⁄
(
fs_block
, 
a_±r
);

152 i‡(
ªtvÆ
 =
TSK_WALK_STOP
) {

155 i‡(
ªtvÆ
 =
TSK_WALK_ERROR
) {

156 
	`tsk_fs_block_‰ì
(
fs_block
);

164 
	`tsk_fs_block_‰ì
(
fs_block
);

166 
	}
}

174 
uöt8_t


175 
	$tsk_fs_nofs_öode_wÆk
(
TSK_FS_INFO
 * 
a_fs
, 
TSK_INUM_T
 
a_°¨t_öum
,

176 
TSK_INUM_T
 
a_íd_öum
, 
TSK_FS_META_FLAG_ENUM
 
a_Êags
,

177 
TSK_FS_META_WALK_CB
 
a_a˘i⁄
, *
a_±r
)

179 
	`tsk_îr‹_ª£t
();

180 
tsk_î∫o
 = 
TSK_ERR_FS_UNSUPFUNC
;

181 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

183 
	`tsk_fs_ty≥_t⁄ame
(
a_fs
->
·y≥
));

185 
	}
}

189 
uöt8_t


190 
	$tsk_fs_nofs_fûe_add_mëa
(
TSK_FS_INFO
 * 
a_fs
, 
TSK_FS_FILE
 * 
a_fs_fûe
,

191 
TSK_INUM_T
 
öum
)

193 
	`tsk_îr‹_ª£t
();

194 
tsk_î∫o
 = 
TSK_ERR_FS_UNSUPFUNC
;

195 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

197 
	`tsk_fs_ty≥_t⁄ame
(
a_fs
->
·y≥
));

199 
	}
}

203 
uöt8_t


204 
	$tsk_fs_nofs_i°©
(
TSK_FS_INFO
 * 
a_fs
, 
FILE
 * 
hFûe
, 
TSK_INUM_T
 
öum
,

205 
TSK_DADDR_T
 
numblock
, 
öt32_t
 
£c_skew
)

207 
	`tsk_îr‹_ª£t
();

208 
tsk_î∫o
 = 
TSK_ERR_FS_UNSUPFUNC
;

209 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

211 
	`tsk_fs_ty≥_t⁄ame
(
a_fs
->
·y≥
));

213 
	}
}

221 
TSK_RETVAL_ENUM


222 
	$tsk_fs_nofs_dú_›í_mëa
(
TSK_FS_INFO
 * 
a_fs
, 
TSK_FS_DIR
 ** 
a_fs_dú
,

223 
TSK_INUM_T
 
a_addr
)

225 
	`tsk_îr‹_ª£t
();

226 
tsk_î∫o
 = 
TSK_ERR_FS_UNSUPFUNC
;

227 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

229 
	`tsk_fs_ty≥_t⁄ame
(
a_fs
->
·y≥
));

230  
TSK_ERR
;

231 
	}
}

237 
uöt8_t


238 
	$tsk_fs_nofs_j›í
(
TSK_FS_INFO
 * 
a_fs
, 
TSK_INUM_T
 
öum
)

240 
	`tsk_îr‹_ª£t
();

241 
tsk_î∫o
 = 
TSK_ERR_FS_UNSUPFUNC
;

242 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

244 
	`tsk_fs_ty≥_t⁄ame
(
a_fs
->
·y≥
));

246 
	}
}

250 
uöt8_t


251 
	$tsk_fs_nofs_jíåy_wÆk
(
TSK_FS_INFO
 * 
a_fs
, 
a_Êags
,

252 
TSK_FS_JENTRY_WALK_CB
 
a_a˘i⁄
, *
a_±r
)

254 
	`tsk_îr‹_ª£t
();

255 
tsk_î∫o
 = 
TSK_ERR_FS_UNSUPFUNC
;

256 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

258 
	`tsk_fs_ty≥_t⁄ame
(
a_fs
->
·y≥
));

260 
	}
}

265 
uöt8_t


266 
	$tsk_fs_nofs_jblk_wÆk
(
TSK_FS_INFO
 * 
a_fs
, 
TSK_INUM_T
 
°¨t
, TSK_INUM_T 
íd
,

267 
a_Êags
, 
TSK_FS_JBLK_WALK_CB
 
a_a˘i⁄
, *
a_±r
)

269 
	`tsk_îr‹_ª£t
();

270 
tsk_î∫o
 = 
TSK_ERR_FS_UNSUPFUNC
;

271 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

273 
	`tsk_fs_ty≥_t⁄ame
(
a_fs
->
·y≥
));

275 
	}
}

278 
	$tsk_fs_nofs_«me_cmp
(
TSK_FS_INFO
 * 
a_fs_öfo
, c⁄° *
s1
,

279 c⁄° *
s2
)

281  
	`°rcmp
(
s1
, 
s2
);

282 
	}
}

	@tsk3/fs/ntfs.c

19 
	~"tsk_fs_i.h
"

20 
	~"tsk_¡fs.h
"

22 
	~<˘y≥.h
>

40 
uöt8_t
 
¡fs_¥oc_©åli°
(
NTFS_INFO
 *, 
TSK_FS_FILE
 *,

41 c⁄° 
TSK_FS_ATTR
 *);

90 
uöt32_t


91 
	$¡2unixtime
(
uöt64_t
 
¡d©e
)

94 
	#NSEC_BTWN_1601_1970
 (
uöt64_t
)(116444736000000000ULL)

	)

96 
¡d©e
 -(
uöt64_t
Ë
NSEC_BTWN_1601_1970
;

97 
¡d©e
 /(
uöt64_t
) 10000000;

99  (
uöt32_t
Ë
¡d©e
;

100 
	}
}

106 
uöt32_t


107 
	$¡2«no
(
uöt64_t
 
¡d©e
)

109  (
uöt32_t
Ë(
¡d©e
 % 10000000);

110 
	}
}

133 
TSK_RETVAL_ENUM


134 
	$¡fs_döode_lookup
(
NTFS_INFO
 * 
a_¡fs
, 
¡fs_m·
 * 
a_m·
,

135 
TSK_INUM_T
 
a_m·num
)

137 
TSK_OFF_T
 
m·addr_b
, 
m·addr2_b
, 
off£t
;

138 
size_t
 
m·addr_Àn
 = 0;

139 
i
;

140 
TSK_FS_INFO
 *
fs
 = (TSK_FS_INFO *Ë& 
a_¡fs
->
fs_öfo
;

141 
TSK_FS_ATTR_RUN
 *
d©a_run
;

142 
¡fs_upd
 *
upd
;

143 
uöt16_t
 
sig_£q
;

146 i‡(!
a_m·
) {

147 
	`tsk_îr‹_ª£t
();

148 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

149 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
, "mft_lookup:Çull mft buffer");

150  
TSK_ERR
;

153 i‡(
a_m·num
 < 
fs
->
fú°_öum
) {

154 
	`tsk_îr‹_ª£t
();

155 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

156 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

157 "m·_lookup: inodênumbî i†toÿsmÆ»(%" 
PRIuINUM
 ")",

158 
a_m·num
);

159  
TSK_ERR
;

165 i‡(
a_m·num
 > 
fs
->
œ°_öum
 - 1) {

166 
	`tsk_îr‹_ª£t
();

167 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

168 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

169 "m·_lookup: inodênumbî i†toÿœrgê(%" 
PRIuINUM
 ")",

170 
a_m·num
);

171  
TSK_ERR
;

175 i‡(
tsk_vîbo£
)

176 
	`tsk_Ârötf
(
°dîr
,

177 "¡fs_döode_lookup: Pro˚ssög MFT %" 
PRIuINUM
 "\n",

178 
a_m·num
);

185 i‡(!
a_¡fs
->
m·_d©a
) {

191 i‡(
a_m·num
 > 
NTFS_LAST_DEFAULT_INO
) {

192 
	`tsk_îr‹_ª£t
();

193 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

194 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

196 
PRIuINUM
 ")", 
a_m·num
);

197  
TSK_ERR
;

200 
m·addr_b
 = 
a_¡fs
->
roŸ_m·_addr
 + 
a_m·num
 *á_¡fs->
m·_rsize_b
;

201 
m·addr2_b
 = 0;

211 
m·addr_b
 = 
m·addr2_b
 = 0;

214 
off£t
 = 
a_m·num
 * 
a_¡fs
->
m·_rsize_b
;

221 
d©a_run
 = 
a_¡fs
->
m·_d©a
->
ƒd
.
run
;

222 
d©a_run
 !
NULL
; d©a_ru¿d©a_run->
√xt
) {

225 
TSK_OFF_T
 
run_Àn
 = 
d©a_run
->
Àn
 * 
a_¡fs
->
csize_b
;

228 i‡(
off£t
 < 
run_Àn
) {

230 i‡(
tsk_vîbo£
)

231 
	`tsk_Ârötf
(
°dîr
,

233 
PRIuDADDR
 " size: %" PRIuDADDR "át offset: %"

234 
PRIuOFF
 "\n", 
d©a_run
->
addr
, d©a_run->
Àn
,

235 
off£t
);

241 i‡(
run_Àn
 < 
off£t
 + 
a_¡fs
->
m·_rsize_b
) {

243 i‡(
tsk_vîbo£
)

244 
	`tsk_Ârötf
(
°dîr
,

247 i‡(
d©a_run
->
√xt
 =
NULL
) {

248 
	`tsk_îr‹_ª£t
();

249 
tsk_î∫o
 = 
TSK_ERR_FS_INODE_COR
;

250 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

252  
TSK_COR
;

256 
m·addr2_b
 = 
d©a_run
->
√xt
->
addr
 * 
a_¡fs
->
csize_b
;

258 
m·addr_Àn
 = (
size_t
Ë(
run_Àn
 - 
off£t
);

262 
m·addr_b
 = 
d©a_run
->
addr
 * 
a_¡fs
->
csize_b
 + 
off£t
;

263 i‡(
tsk_vîbo£
)

264 
	`tsk_Ârötf
(
°dîr
,

266 
PRIuOFF
 "\n", 
m·addr_b
);

271 
off£t
 -
run_Àn
;

275 i‡(!
m·addr_b
) {

276 
	`tsk_îr‹_ª£t
();

277 
tsk_î∫o
 = 
TSK_ERR_FS_INODE_NUM
;

278 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

280 
PRIuINUM
 " i¿$MFT", 
a_m·num
);

281  
TSK_ERR
;

287 i‡(
m·addr2_b
) {

288 
ssize_t
 
˙t
;

290 
˙t
 =

291 
	`tsk_fs_ªad
(&
a_¡fs
->
fs_öfo
, 
m·addr_b
, (*Ë
a_m·
,

292 
m·addr_Àn
);

293 i‡(
˙t
 !
m·addr_Àn
) {

294 i‡(
˙t
 >= 0) {

295 
	`tsk_îr‹_ª£t
();

296 
tsk_î∫o
 = 
TSK_ERR_FS_READ
;

298 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

300 
PRIuOFF
, 
m·addr_b
);

301  
TSK_ERR
;

305 
˙t
 = 
tsk_fs_ªad


306 (&
a_¡fs
->
fs_öfo
, 
m·addr2_b
,

307 (*Ë((
uöçå_t
Ë
a_m·
 + (uöçå_tË
m·addr_Àn
),

308 
a_¡fs
->
m·_rsize_b
 - 
m·addr_Àn
);

309 i‡(
˙t
 !
a_¡fs
->
m·_rsize_b
 - 
m·addr_Àn
) {

310 i‡(
˙t
 >= 0) {

311 
	`tsk_îr‹_ª£t
();

312 
tsk_î∫o
 = 
TSK_ERR_FS_READ
;

314 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

316 
PRIuOFF
, 
m·addr2_b
);

317  
TSK_ERR
;

321 
ssize_t
 
˙t
;

323 
˙t
 =

324 
	`tsk_fs_ªad
(&
a_¡fs
->
fs_öfo
, 
m·addr_b
, (*Ë
a_m·
,

325 
a_¡fs
->
m·_rsize_b
);

326 i‡(
˙t
 !
a_¡fs
->
m·_rsize_b
) {

327 i‡(
˙t
 >= 0) {

328 
	`tsk_îr‹_ª£t
();

329 
tsk_î∫o
 = 
TSK_ERR_FS_READ
;

331 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

333 
PRIuOFF
, 
m·addr_b
);

334  
TSK_ERR
;

339 i‡((
uöçå_t
Ë
a_m·
 =(uöçå_tË
a_¡fs
->
m·
)

340 
a_¡fs
->
mnum
 = 
a_m·num
;

349 i‡((
	`tsk_gëu32
(
fs
->
ídün
, 
m·
->
magic
Ë!
NTFS_MFT_MAGIC
)

350 && (
	`tsk_gëu32
(
fs
->
ídün
, 
m·
->
magic
Ë!
NTFS_MFT_MAGIC_BAAD
)

351 && (
	`tsk_gëu32
(
fs
->
ídün
, 
m·
->
magic
Ë!
NTFS_MFT_MAGIC_ZERO
)) {

352 
tsk_î∫o
 = 
TSK_ERR_FS_INODE_COR
;

353 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

355 
m·num
, 
	`tsk_gëu32
(
fs
->
ídün
, 
m·
->
magic
));

368 i‡((
	`tsk_gëu16
(
fs
->
ídün
, 
a_m·
->
upd_˙t
) > 0) &&

369 (((
uöt32_t
Ë(
	`tsk_gëu16
(
fs
->
ídün
,

370 
a_m·
->
upd_˙t
Ë- 1Ë* 
a_¡fs
->
ssize_b
) >

371 
a_¡fs
->
m·_rsize_b
)) {

372 
	`tsk_îr‹_ª£t
();

373 
tsk_î∫o
 = 
TSK_ERR_FS_INODE_COR
;

374 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

376  
TSK_COR
;

378 i‡(
	`tsk_gëu16
(
fs
->
ídün
, 
a_m·
->
upd_off
Ë> 
a_¡fs
->
m·_rsize_b
) {

379 
	`tsk_îr‹_ª£t
();

380 
tsk_î∫o
 = 
TSK_ERR_FS_INODE_COR
;

381 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

383  
TSK_COR
;

387 
upd
 =

388 (
¡fs_upd
 *Ë((
uöçå_t
Ë
a_m·
 + 
	`tsk_gëu16
(
fs
->
ídün
,

389 
a_m·
->
upd_off
));

391 
sig_£q
 = 
	`tsk_gëu16
(
fs
->
ídün
, 
upd
->
upd_vÆ
);

393 
i
 = 1; i < 
	`tsk_gëu16
(
fs
->
ídün
, 
a_m·
->
upd_˙t
); i++) {

394 
uöt8_t
 *
√w_vÆ
, *
ﬁd_vÆ
;

396 
size_t
 
off£t
 = 
i
 * 
a_¡fs
->
ssize_b
 - 2;

398 
uöt16_t
 
cur_£q
 =

399 
	`tsk_gëu16
(
fs
->
ídün
, (
uöçå_t
Ë
a_m·
 + 
off£t
);

400 i‡(
cur_£q
 !
sig_£q
) {

402 
uöt16_t
 
cur_ª∂
 =

403 
	`tsk_gëu16
(
fs
->
ídün
, &
upd
->
upd_£q
 + (
i
 - 1) * 2);

404 
	`tsk_îr‹_ª£t
();

405 
tsk_î∫o
 = 
TSK_ERR_FS_GENFS
;

407 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

409 
PRIx16
 " Actual Value: 0x%" PRIx16

410 " Rïœ˚míàVÆue: 0x%" 
PRIx16


412 
sig_£q
, 
cur_£q
, 
cur_ª∂
);

413  
TSK_COR
;

416 
√w_vÆ
 = &
upd
->
upd_£q
 + (
i
 - 1) * 2;

417 
ﬁd_vÆ
 = (
uöt8_t
 *Ë((
uöçå_t
Ë
a_m·
 + 
off£t
);

426 *
ﬁd_vÆ
++ = *
√w_vÆ
++;

427 *
ﬁd_vÆ
 = *
√w_vÆ
;

430  
TSK_OK
;

431 
	}
}

440 
	$is_˛u°Æloc
(
NTFS_INFO
 * 
¡fs
, 
TSK_DADDR_T
 
addr
)

442 
bôs_p_˛u°
, 
b
;

443 
TSK_DADDR_T
 
ba£
;

444 
bôs_p_˛u°
 = 8 * 
¡fs
->
fs_öfo
.
block_size
;

450 i‡(
¡fs
->
lﬂdög_the_MFT
 == 1) {

453 i‡(
¡fs
->
bm≠
 =
NULL
) {

454 
	`tsk_îr‹_ª£t
();

455 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

457 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

458 "is_˛u°Æloc: Bôm≠Öoöã∏i†nuŒ: %" 
PRIuDADDR


459 "\n", 
addr
);

464 i‡(
addr
 > 
¡fs
->
fs_öfo
.
œ°_block
) {

465 
	`tsk_îr‹_ª£t
();

466 
tsk_î∫o
 = 
TSK_ERR_FS_INODE_COR
;

467 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

473 
ba£
 = 
addr
 / 
bôs_p_˛u°
;

474 
b
 = (Ë(
addr
 % 
bôs_p_˛u°
);

477 i‡(
ba£
 !
¡fs
->
bm≠_buf_off
) {

478 
TSK_DADDR_T
 
c
 = 
ba£
;

479 
TSK_FS_ATTR_RUN
 *
run
;

480 
TSK_DADDR_T
 
fßddr
 = 0;

481 
ssize_t
 
˙t
;

484 
run
 = 
¡fs
->
bm≠
;Ñun;Ñu¿run->
√xt
) {

485 i‡(
run
->
Àn
 <
c
) {

486 
c
 -
run
->
Àn
;

489 
fßddr
 = 
run
->
addr
 + 
c
;

494 i‡(
fßddr
 == 0) {

495 
	`tsk_îr‹_ª£t
();

496 
tsk_î∫o
 = 
TSK_ERR_FS_BLK_NUM
;

497 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

499 
PRIuDADDR
 "", 
c
);

502 i‡(
fßddr
 > 
¡fs
->
fs_öfo
.
œ°_block
) {

503 
	`tsk_îr‹_ª£t
();

504 
tsk_î∫o
 = 
TSK_ERR_FS_BLK_NUM
;

505 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

507 
PRIuDADDR
, 
fßddr
);

510 
¡fs
->
bm≠_buf_off
 = 
ba£
;

511 
˙t
 = 
tsk_fs_ªad_block


512 (&
¡fs
->
fs_öfo
, 
fßddr
,Çtfs->
bm≠_buf
,

513 
¡fs
->
fs_öfo
.
block_size
);

514 i‡(
˙t
 !
¡fs
->
fs_öfo
.
block_size
) {

515 i‡(
˙t
 >= 0) {

516 
	`tsk_îr‹_ª£t
();

517 
tsk_î∫o
 = 
TSK_ERR_FS_READ
;

519 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

521 
PRIuDADDR
, 
fßddr
);

527  (
	`is£t
(
¡fs
->
bm≠_buf
, 
b
)) ? 1 : 0;

528 
	}
}

550 
TSK_RETVAL_ENUM


551 
	$¡fs_make_d©a_run
(
NTFS_INFO
 * 
¡fs
, 
TSK_OFF_T
 
°¨t_v˙
,

552 
¡fs_ru∆i°
 * 
ru∆i°_hód
, 
TSK_FS_ATTR_RUN
 ** 
a_d©a_run_hód
,

553 
TSK_OFF_T
 * 
tŸÀn
)

555 
TSK_FS_INFO
 *
fs
 = (TSK_FS_INFO *Ë
¡fs
;

556 
¡fs_ru∆i°
 *
run
;

557 
TSK_FS_ATTR_RUN
 *
d©a_run
, *
d©a_run_¥ev
 = 
NULL
;

558 
i
, 
idx
;

559 
TSK_DADDR_T
 
¥ev_addr
 = 0;

560 
TSK_OFF_T
 
fûe_off£t
 = 
°¨t_v˙
;

562 
run
 = 
ru∆i°_hód
;

563 *
a_d©a_run_hód
 = 
NULL
;

566 i‡(
tŸÀn
)

567 *
tŸÀn
 = 0;

573 
	`NTFS_RUNL_LENSZ
(
run
) != 0) {

574 
öt64_t
 
addr_off£t
 = 0;

577 i‡((
d©a_run
 = 
	`tsk_fs_©å_run_Æloc
()Ë=
NULL
) {

578 
	`tsk_fs_©å_run_‰ì
(*
a_d©a_run_hód
);

579 *
a_d©a_run_hód
 = 
NULL
;

580  
TSK_ERR
;

584 i‡(
d©a_run_¥ev
)

585 
d©a_run_¥ev
->
√xt
 = 
d©a_run
;

587 *
a_d©a_run_hód
 = 
d©a_run
;

588 
d©a_run_¥ev
 = 
d©a_run
;

593 
idx
 = 0;

595 
i
 = 0, 
d©a_run
->
Àn
 = 0; i < 
	`NTFS_RUNL_LENSZ
(
run
); i++) {

596 
d©a_run
->
Àn
 |(
run
->
buf
[
idx
++] << (
i
 * 8));

597 i‡(
tsk_vîbo£
)

598 
	`tsk_Ârötf
(
°dîr
,

600 
PRIu8
 " (%" 
PRIx8
 "ËtŸ: %" 
PRIuDADDR


601 " (%" 
PRIxDADDR
 ")\n", 
i
,

602 
run
->
buf
[
idx
 - 1],Ñun->buf[idx - 1],

603 
d©a_run
->
Àn
, data_run->len);

607 i‡(
d©a_run
->
Àn
 > 
fs
->
block_cou¡
) {

608 
	`tsk_îr‹_ª£t
();

609 
tsk_î∫o
 = 
TSK_ERR_FS_INODE_COR
;

610 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

612 
	`tsk_fs_©å_run_‰ì
(*
a_d©a_run_hód
);

613 *
a_d©a_run_hód
 = 
NULL
;

614  
TSK_COR
;

617 
d©a_run
->
off£t
 = 
fûe_off£t
;

618 
fûe_off£t
 +
d©a_run
->
Àn
;

621 i‡(
tŸÀn
)

622 *
tŸÀn
 +(
d©a_run
->
Àn
 * 
¡fs
->
csize_b
);

625 
i
 = 0, 
d©a_run
->
addr
 = 0; i < 
	`NTFS_RUNL_OFFSZ
(
run
); i++) {

627 
addr_off£t
 |(
run
->
buf
[
idx
++] << (
i
 * 8));

628 i‡(
tsk_vîbo£
)

629 
	`tsk_Ârötf
(
°dîr
,

631 
PRIu8
 " (%" 
PRIx8
 "ËtŸ: %" 
PRIuDADDR


632 " (%" 
PRIxDADDR
 ")\n", 
i
,

633 
run
->
buf
[
idx
 - 1],Ñun->buf[idx - 1], 
addr_off£t
,

634 
addr_off£t
);

638 i‡((
öt8_t
Ë
run
->
buf
[
idx
 - 1] < 0) {

639 ; 
i
 < (
addr_off£t
); i++)

640 
addr_off£t
 |(
öt64_t
Ë((öt64_tË0xf‡<< (
i
 * 8));

643 i‡(
tsk_vîbo£
)

644 
	`tsk_Ârötf
(
°dîr
,

646 
PRIdDADDR
 " Previousáddress: %"

647 
PRIdDADDR
 "\n", 
addr_off£t
, 
¥ev_addr
);

658 i‡(((
addr_off£t
 =-1Ë&& (
¥ev_addr
 == 0))

659 || ((
addr_off£t
 == -1)

660 && (
¡fs
->
vî
 =
NTFS_VINFO_NT
))) {

661 
d©a_run
->
Êags
 |
TSK_FS_ATTR_RUN_FLAG_SPARSE
;

662 
d©a_run
->
addr
 = 0;

663 i‡(
tsk_vîbo£
)

664 
	`tsk_Ârötf
(
°dîr
, "ntfs_make_data_run: Sparse Run\n");

677 i‡((
addr_off£t
Ë|| (
¡fs
->
mnum
 =
NTFS_MFT_BOOT
)) {

679 
d©a_run
->
addr
 = 
¥ev_addr
 + 
addr_off£t
;

680 
¥ev_addr
 = 
d©a_run
->
addr
;

683 i‡(
d©a_run
->
addr
 + d©a_run->
Àn
 > 
fs
->
block_cou¡
) {

684 
	`tsk_îr‹_ª£t
();

685 
tsk_î∫o
 = 
TSK_ERR_FS_INODE_COR
;

686 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

688 
	`tsk_fs_©å_run_‰ì
(*
a_d©a_run_hód
);

689 *
a_d©a_run_hód
 = 
NULL
;

690  
TSK_COR
;

695 
d©a_run
->
Êags
 |
TSK_FS_ATTR_RUN_FLAG_SPARSE
;

696 i‡(
tsk_vîbo£
)

697 
	`tsk_Ârötf
(
°dîr
, "ntfs_make_data_run: Sparse Run\n");

701 
run
 = (
¡fs_ru∆i°
 *Ë((
uöçå_t
Ëru¿+ (1 + 
	`NTFS_RUNL_LENSZ
(run)

702 + 
	`NTFS_RUNL_OFFSZ
(
run
)));

711 i‡((*
a_d©a_run_hód
 !
NULL
)

712 && ((*
a_d©a_run_hód
)->
√xt
 =
NULL
)

713 && ((*
a_d©a_run_hód
)->
Êags
 & 
TSK_FS_ATTR_RUN_FLAG_SPARSE
)

714 && ((*
a_d©a_run_hód
)->
Àn
 =
fs
->
œ°_block
 + 1)) {

715 
	`tsk_fs_©å_run_‰ì
(*
a_d©a_run_hód
);

716 *
a_d©a_run_hód
 = 
NULL
;

719  
TSK_OK
;

720 
	}
}

750 *
	muncomp_buf
;

751 *
	mcomp_buf
;

752 
size_t
 
	mcomp_Àn
;

753 
size_t
 
	muncomp_idx
;

754 
size_t
 
	mbuf_size_b
;

755 } 
	tNTFS_COMP_INFO
;

765 
	$¡fs_uncom¥ess_ª£t
(
NTFS_COMP_INFO
 * 
comp
)

767 
	`mem£t
(
comp
->
uncomp_buf
, 0, comp->
buf_size_b
);

768 
comp
->
uncomp_idx
 = 0;

769 
	`mem£t
(
comp
->
comp_buf
, 0, comp->
buf_size_b
);

770 
comp
->
comp_Àn
 = 0;

771 
	}
}

784 
	$¡fs_uncom¥ess_£tup
(
TSK_FS_INFO
 * 
fs
, 
NTFS_COMP_INFO
 * 
comp
,

785 
uöt32_t
 
compunô_size_c
)

787 
comp
->
buf_size_b
 = 
fs
->
block_size
 * 
compunô_size_c
;

788 i‡((
comp
->
uncomp_buf
 = 
	`tsk_mÆloc
(comp->
buf_size_b
)Ë=
NULL
) {

789 
comp
->
buf_size_b
 = 0;

792 i‡((
comp
->
comp_buf
 = 
	`tsk_mÆloc
(comp->
buf_size_b
)Ë=
NULL
) {

793 
comp
->
buf_size_b
 = 0;

797 
	`¡fs_uncom¥ess_ª£t
(
comp
);

800 
	}
}

803 
	$¡fs_uncom¥ess_d⁄e
(
NTFS_COMP_INFO
 * 
comp
)

805 i‡(
comp
->
uncomp_buf
)

806 
	`‰ì
(
comp
->
uncomp_buf
);

807 
comp
->
uncomp_buf
 = 
NULL
;

808 i‡(
comp
->
comp_buf
)

809 
	`‰ì
(
comp
->
comp_buf
);

810 
comp
->
comp_buf
 = 
NULL
;

811 
comp
->
buf_size_b
 = 0;

812 
	}
}

824 
uöt8_t


825 
	$¡fs_uncom¥ess_compunô
(
NTFS_COMP_INFO
 * 
comp
)

827 
size_t
 
˛_ödex
;

829 
	`tsk_îr‹_ª£t
();

831 
comp
->
uncomp_idx
 = 0;

837 
˛_ödex
 = 0; cl_ödex + 1 < 
comp
->
comp_Àn
;) {

838 
size_t
 
blk_íd
;

839 
size_t
 
blk_size
;

840 
uöt8_t
 
iscomp
;

841 
size_t
 
blk_°_uncomp
;

845 
blk_size
 = ((((Ë
comp
->
comp_buf
[
˛_ödex
 + 1] << 8) |

846 ((Ë
comp
->
comp_buf
[
˛_ödex
])) & 0x0FFF) + 3;

849 i‡(
blk_size
 == 3)

852 
blk_íd
 = 
˛_ödex
 + 
blk_size
;

853 i‡(
blk_íd
 > 
comp
->
comp_Àn
) {

854 
tsk_î∫o
 = 
TSK_ERR_FS_FWALK
;

855 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

857 
PRIuSIZE
 "", 
blk_íd
);

861 i‡(
tsk_vîbo£
)

862 
	`tsk_Ârötf
(
°dîr
,

863 "¡fs_uncom¥ess_compunô: Block sizêi†%" 
PRIuSIZE
 "\n",

864 
blk_size
);

867 i‡((
comp
->
comp_buf
[
˛_ödex
 + 1] & 0x8000) == 0)

868 
iscomp
 = 0;

870 
iscomp
 = 1;

873 
blk_°_uncomp
 = 
comp
->
uncomp_idx
;

874 
˛_ödex
 += 2;

877 i‡((
iscomp
Ë|| (
blk_size
 - 2 != 4096)) {

880 
˛_ödex
 < 
blk_íd
) {

881 
a
;

884 
hódî
 = 
comp
->
comp_buf
[
˛_ödex
];

885 
˛_ödex
++;

887 i‡(
tsk_vîbo£
)

888 
	`tsk_Ârötf
(
°dîr
,

889 "¡fs_uncom¥ess_compunô: New Tag: %x\n", 
hódî
);

891 
a
 = 0;á < 8 && 
˛_ödex
 < 
blk_íd
;á++) {

897 i‡((
hódî
 & 
NTFS_TOKEN_MASK
Ë=
NTFS_SYMBOL_TOKEN
) {

898 i‡(
tsk_vîbo£
)

899 
	`tsk_Ârötf
(
°dîr
,

901 
PRIuSIZE
 "\n", 
˛_ödex
);

903 i‡(
comp
->
uncomp_idx
 >comp->
buf_size_b
) {

904 
tsk_î∫o
 = 
TSK_ERR_FS_FWALK
;

905 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

907 
PRIuSIZE
 "", 
comp
->
uncomp_idx
);

910 
comp
->
uncomp_buf
[comp->
uncomp_idx
++] =

911 
comp
->
comp_buf
[
˛_ödex
];

913 
˛_ödex
++;

920 
size_t
 
i
;

921 
shi·
;

922 
size_t
 
°¨t_posôi⁄_ödex
 = 0;

923 
size_t
 
íd_posôi⁄_ödex
 = 0;

924 
off£t
 = 0;

925 
Àngth
 = 0;

926 
uöt16_t
 
phódî
;

928 i‡(
˛_ödex
 + 1 >
blk_íd
) {

929 
tsk_î∫o
 = 
TSK_ERR_FS_FWALK
;

930 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

932 
a
);

936 
phódî
 =

937 ((((
comp
->
comp_buf
[
˛_ödex
 +

939 (
comp
->
comp_buf
[
˛_ödex
] & 0xFF));

940 
˛_ödex
 += 2;

947 
shi·
 = 0;

948 
i
 =

949 
comp
->
uncomp_idx
 -

950 
blk_°_uncomp
 - 1; 
i
 >= 0x10; i >>= 1) {

951 
shi·
++;

956 
off£t
 = (
phódî
 >> (12 - 
shi·
)) + 1;

957 
Àngth
 = (
phódî
 & (0xFFF >> 
shi·
)) + 2;

959 
°¨t_posôi⁄_ödex
 = 
comp
->
uncomp_idx
 - 
off£t
;

960 
íd_posôi⁄_ödex
 = 
°¨t_posôi⁄_ödex
 + 
Àngth
;

962 i‡(
tsk_vîbo£
)

963 
	`tsk_Ârötf
(
°dîr
,

965 
PRIuSIZE
 "\t%d\t%d\t%x\n", 
˛_ödex
,

966 
Àngth
, 
off£t
, 
phódî
);

969 i‡(
off£t
 > 
comp
->
uncomp_idx
) {

970 
	`tsk_îr‹_ª£t
();

971 
tsk_î∫o
 = 
TSK_ERR_FS_FWALK
;

972 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

974 
PRIuSIZE
 ")", 
off£t
, 
comp
->
uncomp_idx
);

977 i‡(
Àngth
 + 
°¨t_posôi⁄_ödex
 >

978 
comp
->
buf_size_b
) {

979 
	`tsk_îr‹_ª£t
();

980 
tsk_î∫o
 = 
TSK_ERR_FS_FWALK
;

981 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

983 
Àngth
,

984 
comp
->
buf_size_b
 - 
°¨t_posôi⁄_ödex
);

987 i‡(
íd_posôi⁄_ödex
 -

988 
°¨t_posôi⁄_ödex
 + 1 >

989 
comp
->
buf_size_b
 - comp->
uncomp_idx
) {

990 
	`tsk_îr‹_ª£t
();

991 
tsk_î∫o
 = 
TSK_ERR_FS_FWALK
;

992 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

994 
PRIuSIZE
 ")",

995 
íd_posôi⁄_ödex
 - 
°¨t_posôi⁄_ödex
 +

996 1, 
comp
->
buf_size_b
 - comp->
uncomp_idx
);

1001 
°¨t_posôi⁄_ödex
 <
íd_posôi⁄_ödex


1002 && 
comp
->
uncomp_idx
 < comp->
buf_size_b
;

1003 
°¨t_posôi⁄_ödex
++) {

1006 
comp
->
uncomp_buf
[comp->
uncomp_idx
++]

1007 
comp
->
uncomp_buf
[
°¨t_posôi⁄_ödex
];

1010 
hódî
 >>= 1;

1018 
˛_ödex
 < 
blk_íd
 && cl_ödex < 
comp
->
comp_Àn
) {

1021 i‡(
comp
->
uncomp_idx
 >comp->
buf_size_b
) {

1022 
	`tsk_îr‹_ª£t
();

1023 
tsk_î∫o
 = 
TSK_ERR_FS_FWALK
;

1024 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

1030 
comp
->
uncomp_buf
[comp->
uncomp_idx
++] =

1031 
comp
->
comp_buf
[
˛_ödex
++];

1037 
	}
}

1050 
uöt8_t


1051 
	$¡fs_¥oc_compunô
(
NTFS_INFO
 * 
¡fs
, 
NTFS_COMP_INFO
 * 
comp
,

1052 
TSK_DADDR_T
 * 
comp_unô
, 
uöt32_t
 
comp_unô_size
)

1054 
TSK_FS_INFO
 *
fs
 = (TSK_FS_INFO *Ë
¡fs
;

1055 
•¨£
;

1056 
uöt64_t
 
a
;

1065 
•¨£
 = 1;

1066 
a
 = 0;á < 
comp_unô_size
 && 
•¨£
 == 1;á++) {

1067 i‡(
comp_unô
[
a
]) {

1068 
•¨£
 = 0;

1074 i‡(
•¨£
) {

1075 i‡(
tsk_vîbo£
)

1076 
	`tsk_Ârötf
(
°dîr
,

1079 
	`mem£t
(
comp
->
uncomp_buf
, 0, comp->
buf_size_b
);

1080 
comp
->
uncomp_idx
 = comp->
buf_size_b
;

1085 i‡(
comp_unô
[
comp_unô_size
 - 1] == 0) {

1087 i‡(
tsk_vîbo£
)

1088 
	`tsk_Ârötf
(
°dîr
,

1092 
	`¡fs_uncom¥ess_ª£t
(
comp
);

1093 
a
 = 0;á < 
comp_unô_size
;á++) {

1094 
ssize_t
 
˙t
;

1096 i‡(
comp_unô
[
a
] == 0)

1101 
˙t
 =

1102 
	`tsk_fs_ªad_block
(
fs
, 
comp_unô
[
a
],

1103 &
comp
->
comp_buf
[comp->
comp_Àn
], 
fs
->
block_size
);

1104 i‡(
˙t
 !
fs
->
block_size
) {

1105 i‡(
˙t
 >= 0) {

1106 
	`tsk_îr‹_ª£t
();

1107 
tsk_î∫o
 = 
TSK_ERR_FS_READ
;

1109 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

1111 
PRIuDADDR
, 
comp_unô
[
a
]);

1114 
comp
->
comp_Àn
 +
fs
->
block_size
;

1117 i‡(
	`¡fs_uncom¥ess_compunô
(
comp
)) {

1124 i‡(
tsk_vîbo£
)

1125 
	`tsk_Ârötf
(
°dîr
,

1128 
comp
->
uncomp_idx
 = 0;

1129 
a
 = 0;á < 
comp_unô_size
;á++) {

1130 
ssize_t
 
˙t
;

1132 
˙t
 =

1133 
	`tsk_fs_ªad_block
(
fs
, 
comp_unô
[
a
],

1134 &
comp
->
uncomp_buf
[comp->
uncomp_idx
], 
fs
->
block_size
);

1135 i‡(
˙t
 !
fs
->
block_size
) {

1136 i‡(
˙t
 >= 0) {

1137 
	`tsk_îr‹_ª£t
();

1138 
tsk_î∫o
 = 
TSK_ERR_FS_READ
;

1140 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

1142 
PRIuDADDR
, 
comp_unô
[
a
]);

1145 
comp
->
uncomp_idx
 +
fs
->
block_size
;

1149 
	}
}

1156 
uöt8_t


1157 
	$¡fs_©å_wÆk_•ecül
(c⁄° 
TSK_FS_ATTR
 * 
fs_©å
,

1158 
Êags
, 
TSK_FS_FILE_WALK_CB
 
a_a˘i⁄
, *
±r
)

1160 
TSK_FS_INFO
 *
fs
;

1161 
NTFS_INFO
 *
¡fs
;

1164 
	`tsk_îr‹_ª£t
();

1165 i‡((
fs_©å
 =
NULL
Ë|| (fs_©å->
fs_fûe
 == NULL)

1166 || (
fs_©å
->
fs_fûe
->
mëa
 =
NULL
)

1167 || (
fs_©å
->
fs_fûe
->
fs_öfo
 =
NULL
)) {

1168 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

1169 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

1174 
fs
 = 
fs_©å
->
fs_fûe
->
fs_öfo
;

1175 
¡fs
 = (
NTFS_INFO
 *Ë
fs
;

1188 i‡(
fs_©å
->
Êags
 & 
TSK_FS_ATTR_COMP
) {

1189 
TSK_DADDR_T
 
addr
;

1190 
TSK_FS_ATTR_RUN
 *
fs_©å_run
;

1191 
TSK_DADDR_T
 *
comp_unô
;

1192 
uöt32_t
 
comp_unô_idx
 = 0;

1193 
NTFS_COMP_INFO
 
comp
;

1194 
TSK_OFF_T
 
off
 = 0;

1195 
ªtvÆ
;

1196 
uöt8_t
 
°›_lo›
 = 0;

1198 i‡(
fs_©å
->
ƒd
.
compsize
 <= 0) {

1199 
tsk_î∫o
 = 
TSK_ERR_FS_FWALK
;

1200 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

1206 i‡(
	`¡fs_uncom¥ess_£tup
(
fs
, &
comp
, 
fs_©å
->
ƒd
.
compsize
)) {

1210 
comp_unô
 =

1211 (
TSK_DADDR_T
 *Ë
	`tsk_mÆloc
(
fs_©å
->
ƒd
.
compsize
 *

1212 (
TSK_DADDR_T
));

1213 i‡(
comp_unô
 =
NULL
) {

1214 
	`¡fs_uncom¥ess_d⁄e
(&
comp
);

1217 
ªtvÆ
 = 
TSK_WALK_CONT
;

1220 
fs_©å_run
 = 
fs_©å
->
ƒd
.
run
; fs_attr_run;

1221 
fs_©å_run
 = fs_©å_run->
√xt
) {

1222 
size_t
 
Àn_idx
;

1228 i‡(
fs_©å_run
->
Êags
 & 
TSK_FS_ATTR_RUN_FLAG_FILLER
) {

1229 i‡(
fs_©å_run
->
addr
 != 0) {

1230 
	`tsk_îr‹_ª£t
();

1232 i‡(
fs_©å
->
fs_fûe
->

1233 
mëa
->
Êags
 & 
TSK_FS_META_FLAG_UNALLOC
)

1234 
tsk_î∫o
 = 
TSK_ERR_FS_RECOVER
;

1236 
tsk_î∫o
 = 
TSK_ERR_FS_GENFS
;

1237 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

1239 
PRIuDADDR
 "@%" PRIuDADDR

1240 " -Åy≥: %" 
PRIu32
 " id: %d", 
fs_©å_run
->
Àn
,

1241 
fs_©å_run
->
addr
, 
fs_©å
->
ty≥
, fs_©å->
id
);

1242 
	`‰ì
(
comp_unô
);

1243 
	`¡fs_uncom¥ess_d⁄e
(&
comp
);

1247 
off
 +(
fs_©å_run
->
Àn
 * 
fs
->
block_size
);

1252 
addr
 = 
fs_©å_run
->addr;

1255 
Àn_idx
 = 0;Üí_idx < 
fs_©å_run
->
Àn
;Üen_idx++) {

1257 i‡(
addr
 > 
fs
->
œ°_block
) {

1258 
	`tsk_îr‹_ª£t
();

1260 i‡(
fs_©å
->
fs_fûe
->

1261 
mëa
->
Êags
 & 
TSK_FS_META_FLAG_UNALLOC
)

1262 
tsk_î∫o
 = 
TSK_ERR_FS_RECOVER
;

1264 
tsk_î∫o
 = 
TSK_ERR_FS_BLK_NUM
;

1265 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

1267 
PRIuDADDR
 "", 
addr
);

1269 
	`‰ì
(
comp_unô
);

1270 
	`¡fs_uncom¥ess_d⁄e
(&
comp
);

1275 
comp_unô
[
comp_unô_idx
++] = 
addr
;

1278 i‡((
comp_unô_idx
 =
fs_©å
->
ƒd
.
compsize
)

1279 || ((
Àn_idx
 =
fs_©å_run
->
Àn
 - 1)

1280 && (
fs_©å_run
->
√xt
 =
NULL
))) {

1281 
size_t
 
i
;

1284 i‡(
	`¡fs_¥oc_compunô
(
¡fs
, &
comp
, 
comp_unô
,

1285 
comp_unô_idx
)) {

1286 
	`‰ì
(
comp_unô
);

1287 
	`¡fs_uncom¥ess_d⁄e
(&
comp
);

1292 
i
 = 0; i < 
comp_unô_idx
; i++) {

1293 
myÊags
;

1294 
size_t
 
ªad_Àn
;

1296 
myÊags
 =

1297 
TSK_FS_BLOCK_FLAG_CONT
 |

1298 
TSK_FS_BLOCK_FLAG_COMP
;

1299 
ªtvÆ
 = 
	`is_˛u°Æloc
(
¡fs
, 
comp_unô
[
i
]);

1300 i‡(
ªtvÆ
 == -1) {

1301 i‡(
fs_©å
->
fs_fûe
->

1302 
mëa
->
Êags
 & 
TSK_FS_META_FLAG_UNALLOC
)

1303 
tsk_î∫o
 = 
TSK_ERR_FS_RECOVER
;

1304 
	`‰ì
(
comp_unô
);

1305 
	`¡fs_uncom¥ess_d⁄e
(&
comp
);

1308 i‡(
ªtvÆ
 == 1) {

1309 
myÊags
 |
TSK_FS_BLOCK_FLAG_ALLOC
;

1311 i‡(
ªtvÆ
 == 0) {

1312 
myÊags
 |
TSK_FS_BLOCK_FLAG_UNALLOC
;

1315 i‡(
fs_©å
->
size
 - 
off
 > 
fs
->
block_size
)

1316 
ªad_Àn
 = 
fs
->
block_size
;

1318 
ªad_Àn
 = (
size_t
Ë(
fs_©å
->
size
 - 
off
);

1320 i‡(
i
 * 
fs
->
block_size
 + 
ªad_Àn
 >

1321 
comp
.
uncomp_idx
) {

1322 
tsk_î∫o
 = 
TSK_ERR_FS_FWALK
;

1323 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

1325 
PRIuSIZE
 " %" PRIuSIZE "",

1326 
i
 * 
fs
->
block_size
 + 
ªad_Àn
,

1327 
comp
.
uncomp_idx
);

1328 
	`‰ì
(
comp_unô
);

1329 
	`¡fs_uncom¥ess_d⁄e
(&
comp
);

1334 
ªtvÆ
 =

1335 
	`a_a˘i⁄
(
fs_©å
->
fs_fûe
, 
off
, 
comp_unô
[
i
],

1336 &
comp
.
uncomp_buf
[
i
 * 
fs
->
block_size
], 
ªad_Àn
,

1337 
myÊags
, 
±r
);

1339 
off
 +
ªad_Àn
;

1341 i‡(
off
 >
fs_©å
->
size
) {

1342 
°›_lo›
 = 1;

1345 i‡(
ªtvÆ
 !
TSK_WALK_CONT
) {

1346 
°›_lo›
 = 1;

1350 
comp_unô_idx
 = 0;

1353 i‡(
°›_lo›
)

1358 i‡(((
fs_©å_run
->
Êags
 & 
TSK_FS_ATTR_RUN_FLAG_SPARSE
) ==

1360 && ((
fs_©å_run
->
Êags
 & 
TSK_FS_ATTR_RUN_FLAG_FILLER
)

1362 
addr
++;

1365 i‡(
°›_lo›
)

1369 
	`¡fs_uncom¥ess_d⁄e
(&
comp
);

1370 
	`‰ì
(
comp_unô
);

1372 i‡(
ªtvÆ
 =
TSK_WALK_ERROR
)

1378 
tsk_î∫o
 = 
TSK_ERR_FS_FWALK
;

1379 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

1381 
fs_©å
->
Êags
);

1384 
	}
}

1391 
ssize_t


1392 
	$¡fs_fûe_ªad_•ecül
(c⁄° 
TSK_FS_ATTR
 * 
a_fs_©å
,

1393 
TSK_OFF_T
 
a_off£t
, *
a_buf
, 
size_t
 
a_Àn
)

1395 
TSK_FS_INFO
 *
fs
 = 
NULL
;

1396 
NTFS_INFO
 *
¡fs
 = 
NULL
;

1398 i‡((
a_fs_©å
 =
NULL
Ë|| (a_fs_©å->
fs_fûe
 == NULL)

1399 || (
a_fs_©å
->
fs_fûe
->
mëa
 =
NULL
)

1400 || (
a_fs_©å
->
fs_fûe
->
fs_öfo
 =
NULL
)) {

1401 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

1402 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

1407 
fs
 = 
a_fs_©å
->
fs_fûe
->
fs_öfo
;

1408 
¡fs
 = (
NTFS_INFO
 *Ë
fs
;

1410 i‡(
a_fs_©å
->
Êags
 & 
TSK_FS_ATTR_COMP
) {

1411 
TSK_FS_ATTR_RUN
 *
d©a_run_cur
;

1412 
TSK_OFF_T
 
cu_blkoff£t
;

1413 
size_t
 
byãoff£t
;

1414 
TSK_DADDR_T
 *
comp_unô
;

1415 
uöt32_t
 
comp_unô_idx
 = 0;

1416 
NTFS_COMP_INFO
 
comp
;

1417 
size_t
 
buf_idx
 = 0;

1419 i‡(
a_fs_©å
->
ƒd
.
compsize
 <= 0) {

1420 
tsk_î∫o
 = 
TSK_ERR_FS_FWALK
;

1421 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

1426 i‡(
a_off£t
 >
a_fs_©å
->
size
) {

1427 
	`tsk_îr‹_ª£t
();

1428 
tsk_î∫o
 = 
TSK_ERR_FS_READ_OFF
;

1429 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

1430 "¡fs_fûe_ªad_•ecü»- %" 
PRIuOFF
, 
a_off£t
);

1435 i‡(
a_off£t
 >
a_fs_©å
->
ƒd
.
öôsize
) {

1436 
ssize_t
 
Àn
;

1438 i‡(
tsk_vîbo£
)

1439 
	`Ârötf
(
°dîr
,

1441 
PRIuINUM
 ")\n", 
a_fs_©å
->
fs_fûe
->
mëa
->
addr
);

1443 i‡(
a_off£t
 + 
a_Àn
 > 
a_fs_©å
->
ƒd
.
Ælocsize
)

1444 
Àn
 = (
ssize_t
Ë(
a_fs_©å
->
ƒd
.
Ælocsize
 - 
a_off£t
);

1446 
Àn
 = (
ssize_t
Ë
a_Àn
;

1447 
	`mem£t
(
a_buf
, 0, 
a_Àn
);

1448  
Àn
;

1452 i‡(
	`¡fs_uncom¥ess_£tup
(
fs
, &
comp
, 
a_fs_©å
->
ƒd
.
compsize
)) {

1456 
comp_unô
 =

1457 (
TSK_DADDR_T
 *Ë
	`tsk_mÆloc
(
a_fs_©å
->
ƒd
.
compsize
 *

1458 (
TSK_DADDR_T
));

1459 i‡(
comp_unô
 =
NULL
) {

1460 
	`¡fs_uncom¥ess_d⁄e
(&
comp
);

1465 
cu_blkoff£t
 = 
a_off£t
 / 
fs
->
block_size
;

1466 i‡(
cu_blkoff£t
) {

1467 
cu_blkoff£t
 /
a_fs_©å
->
ƒd
.
compsize
;

1468 
cu_blkoff£t
 *
a_fs_©å
->
ƒd
.
compsize
;

1471 
byãoff£t
 = (
size_t
Ë(
a_off£t
 - 
cu_blkoff£t
 * 
fs
->
block_size
);

1474 
d©a_run_cur
 = 
a_fs_©å
->
ƒd
.
run
;

1475 (
d©a_run_cur
Ë&& (
buf_idx
 < 
a_Àn
);

1476 
d©a_run_cur
 = d©a_run_cur->
√xt
) {

1478 
TSK_DADDR_T
 
addr
;

1479 
size_t
 
a
;

1482 i‡(
d©a_run_cur
->
off£t
 + d©a_run_cur->
Àn
 <

1483 (
TSK_DADDR_T
Ë
cu_blkoff£t
)

1488 i‡(
d©a_run_cur
->
off£t
 > (
TSK_DADDR_T
Ë
cu_blkoff£t
)

1489 
a
 = 0;

1491 
a
 = (
size_t
Ë(
cu_blkoff£t
 - 
d©a_run_cur
->
off£t
);

1493 
addr
 = 
d©a_run_cur
->addr;

1495 i‡(
addr
)

1496 
addr
 +
a
;

1499 ; 
a
 < 
d©a_run_cur
->
Àn
 && 
buf_idx
 < 
a_Àn
;á++) {

1502 
comp_unô
[
comp_unô_idx
++] = 
addr
;

1505 i‡((
comp_unô_idx
 =
a_fs_©å
->
ƒd
.
compsize
)

1506 || ((
a
 =
d©a_run_cur
->
Àn
 - 1)

1507 && (
d©a_run_cur
->
√xt
 =
NULL
))) {

1508 
size_t
 
˝yÀn
;

1511 i‡(
	`¡fs_¥oc_compunô
(
¡fs
, &
comp
, 
comp_unô
,

1512 
comp_unô_idx
)) {

1513 
	`‰ì
(
comp_unô
);

1514 
	`¡fs_uncom¥ess_d⁄e
(&
comp
);

1519 i‡(
comp
.
uncomp_idx
 < 
byãoff£t
) {

1522 
	`‰ì
(
comp_unô
);

1523 
	`¡fs_uncom¥ess_d⁄e
(&
comp
);

1526 i‡(
comp
.
uncomp_idx
 - 
byãoff£t
 <

1527 
a_Àn
 - 
buf_idx
) {

1528 
˝yÀn
 = 
comp
.
uncomp_idx
 - 
byãoff£t
;

1531 
˝yÀn
 = 
a_Àn
 - 
buf_idx
;

1534 i‡(
˝yÀn
 >

1535 (
a_fs_©å
->
size
 - (
a_off£t
 + 
buf_idx
)))

1536 
˝yÀn
 =

1537 (
size_t
Ë(
a_fs_©å
->
size
 - (
a_off£t
 + 
buf_idx
));

1539 
	`mem˝y
(&
a_buf
[
buf_idx
], &
comp
.
uncomp_buf
[
byãoff£t
],

1540 
˝yÀn
);

1543 
byãoff£t
 = 0;

1544 
buf_idx
 +
˝yÀn
;

1545 
comp_unô_idx
 = 0;

1549 i‡(((
d©a_run_cur
->
Êags
 & 
TSK_FS_ATTR_RUN_FLAG_SPARSE
) ==

1551 && ((
d©a_run_cur
->
Êags
 & 
TSK_FS_ATTR_RUN_FLAG_FILLER
)

1553 
addr
++;

1557 
	`‰ì
(
comp_unô
);

1558 
	`¡fs_uncom¥ess_d⁄e
(&
comp
);

1559  (
ssize_t
Ë
buf_idx
;

1562 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

1563 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

1565 
a_fs_©å
->
Êags
);

1568 
	}
}

1584 
TSK_RETVAL_ENUM


1585 
	$¡fs_¥oc_©å£q
(
NTFS_INFO
 * 
¡fs
,

1586 
TSK_FS_FILE
 * 
fs_fûe
, 
¡fs_©å
 * 
©å£q
, 
size_t
 
Àn
)

1588 
¡fs_©å
 *
©å
 = 
©å£q
;

1589 c⁄° 
TSK_FS_ATTR
 *
fs_©å_©ål
 = 
NULL
;

1590 
«me
[
NTFS_MAXNAMLEN_UTF8
 + 1];

1591 
TSK_FS_INFO
 *
fs
 = (TSK_FS_INFO *Ë& 
¡fs
->
fs_öfo
;

1593 i‡(
tsk_vîbo£
)

1594 
	`tsk_Ârötf
(
°dîr
,

1596 
PRIuINUM
 "\n", 
fs_fûe
->
mëa
->
addr
);

1598 i‡(
fs_fûe
->
mëa
->
©å
 =
NULL
) {

1599 
	`tsk_îr‹_ª£t
();

1600 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

1601 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

1603  
TSK_ERR
;

1606 ; ((
uöçå_t
Ë
©å
 >(uöçå_tË
©å£q
)

1607 && ((
uöçå_t
Ë
©å
 <((uöçå_tË
©å£q
 + 
Àn
))

1608 && (
	`tsk_gëu32
(
fs
->
ídün
, 
©å
->
Àn
) > 0

1609 && (
	`tsk_gëu32
(
fs
->
ídün
, 
©å
->
ty≥
) !=

1611 
©å
 =

1612 (
¡fs_©å
 *Ë((
uöçå_t
Ë
©å
 + 
	`tsk_gëu32
(
fs
->
ídün
,

1613 
©å
->
Àn
))) {

1615 
UTF16
 *
«me16
;

1616 
UTF8
 *
«me8
;

1617 
ªtVÆ
;

1618 
uöt8_t
 
isDeÁu…D©a
 = 0;

1621 
uöt32_t
 
ty≥
 = 
	`tsk_gëu32
(
fs
->
ídün
, 
©å
->type);

1624 i‡(
©å
->
∆í
) {

1625 
i
;

1627 
«me8
 = (
UTF8
 *Ë
«me
;

1628 
«me16
 =

1629 (
UTF16
 *Ë((
uöçå_t
Ë
©å
 + 
	`tsk_gëu16
(
fs
->
ídün
,

1630 
©å
->
«me_off
));

1632 
ªtVÆ
 =

1633 
	`tsk_UTF16toUTF8
(
fs
->
ídün
, (c⁄° 
UTF16
 **Ë&
«me16
,

1634 (
UTF16
 *Ë((
uöçå_t
Ë
«me16
 +

1635 
©å
->
∆í
 * 2),

1636 &
«me8
,

1637 (
UTF8
 *Ë((
uöçå_t
Ë
«me8
 +

1638 (
«me
)), 
TSKÀnõ¡C⁄vîsi⁄
);

1640 i‡(
ªtVÆ
 !
TSKc⁄vîsi⁄OK
) {

1641 i‡(
tsk_vîbo£
)

1642 
	`tsk_Ârötf
(
°dîr
,

1644 
PRIuINUM
, 
ªtVÆ
, 
fs_fûe
->
mëa
->
addr
);

1645 *
«me
 = '\0';

1649 i‡((
uöçå_t
Ë
«me8
 >(uöçå_tË
«me
 + (name))

1650 
«me
[(name) - 1] = '\0';

1652 *
«me8
 = '\0';

1655 
i
 = 0;

1656 
«me
[
i
] != '\0') {

1657 i‡(
	`TSK_IS_CNTRL
(
«me
[
i
]))

1658 
«me
[
i
] = '^';

1659 
i
++;

1663 i‡(
ty≥
 =
NTFS_ATYPE_DATA
) {

1664 
«me
[0] = '$';

1665 
«me
[1] = 'D';

1666 
«me
[2] = 'a';

1667 
«me
[3] = 't';

1668 
«me
[4] = 'a';

1669 
«me
[5] = '\0';

1670 
isDeÁu…D©a
 = 1;

1673 
«me
[0] = 'N';

1674 
«me
[1] = '/';

1675 
«me
[2] = 'A';

1676 
«me
[3] = '\0';

1684 i‡(
©å
->
ªs
 =
NTFS_MFT_RES
) {

1685 
TSK_FS_ATTR
 *
fs_©å
;

1687 i‡(
tsk_vîbo£
)

1688 
	`tsk_Ârötf
(
°dîr
,

1690 
PRIu32
 " Id: %" 
PRIu16
 " Name: %s\n", 
ty≥
,

1691 
	`tsk_gëu16
(
fs
->
ídün
, 
©å
->
id
), 
«me
);

1694 i‡(((
	`tsk_gëu16
(
fs
->
ídün
,

1695 
©å
->
c
.
r
.
soff
Ë+ (
uöçå_t
)áttr) >

1696 ((
uöçå_t
Ë
©å£q
 + 
Àn
))

1697 || ((
	`tsk_gëu16
(
fs
->
ídün
,

1698 
©å
->
c
.
r
.
soff
Ë+ 
	`tsk_gëu32
(
fs
->
ídün
,

1699 
©å
->
c
.
r
.
ssize
Ë+ (
uöçå_t
)áttr) >

1700 ((
uöçå_t
Ë
©å£q
 + 
Àn
))) {

1701 
	`tsk_îr‹_ª£t
();

1702 
tsk_î∫o
 = 
TSK_ERR_FS_CORRUPT
;

1703 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

1704 "¡fs_©å_wÆk: Residíà©åibuã %" 
PRIuINUM


1705 "-%" 
PRIu32
 " starting offsetándÜengthÅooÜarge",

1706 
fs_fûe
->
mëa
->
addr
, 
ty≥
);

1707  
TSK_COR
;

1711 i‡((
fs_©å
 =

1712 
	`tsk_fs_©åli°_gë√w
(
fs_fûe
->
mëa
->
©å
,

1713 
TSK_FS_ATTR_RES
)Ë=
NULL
) {

1714 
	`°∫ˇt
(
tsk_îr°r2
, " -Öroc_attrseq",

1715 
TSK_ERRSTR_L
 - 
	`°æí
(
tsk_îr°r2
));

1716  
TSK_ERR
;

1720 i‡(
	`tsk_fs_©å_£t_°r
(
fs_fûe
, 
fs_©å
, 
«me
, 
ty≥
,

1721 
	`tsk_gëu16
(
fs
->
ídün
, 
©å
->
id
),

1722 (*Ë((
uöçå_t
Ë
©å
 +

1723 
	`tsk_gëu16
(
fs
->
ídün
,

1724 
©å
->
c
.
r
.
soff
)), 
	`tsk_gëu32
(
fs
->
ídün
,

1725 
©å
->
c
.
r
.
ssize
))) {

1726 
	`°∫ˇt
(
tsk_îr°r2
, " -Öroc_attrseq",

1727 
TSK_ERRSTR_L
 - 
	`°æí
(
tsk_îr°r2
));

1728  
TSK_ERR
;

1732 i‡((
fs_fûe
->
mëa
->
ty≥
 =
TSK_FS_META_TYPE_DIR
)

1733 && (
ty≥
 =
NTFS_ATYPE_IDXROOT
)) {

1734 
fs_fûe
->
mëa
->
size
 =

1735 
	`tsk_gëu32
(
fs
->
ídün
, 
©å
->
c
.
r
.
ssize
);

1737 i‡((
fs_fûe
->
mëa
->
ty≥
 =
TSK_FS_META_TYPE_REG
)

1738 && (
ty≥
 =
NTFS_ATYPE_DATA
Ë&& (
isDeÁu…D©a
)) {

1739 
fs_fûe
->
mëa
->
size
 =

1740 
	`tsk_gëu32
(
fs
->
ídün
, 
©å
->
c
.
r
.
ssize
);

1749 
TSK_FS_ATTR
 *
fs_©å
 = 
NULL
;

1750 
TSK_FS_ATTR_RUN
 *
fs_©å_run
 = 
NULL
;

1751 
uöt8_t
 
d©a_Êag
 = 0;

1752 
uöt16_t
 
id
 = 
	`tsk_gëu16
(
fs
->
ídün
, 
©å
->id);

1753 
uöt32_t
 
compsize
 = 0;

1754 
TSK_RETVAL_ENUM
 
ªtvÆ
;

1756 i‡(
tsk_vîbo£
)

1757 
	`tsk_Ârötf
(
°dîr
,

1759 
PRIu32
 " Id: %" 
PRIu16
 " Name: %† Sèπ VCN: %" 
PRIu64


1760 "\n", 
ty≥
, 
id
, 
«me
, 
	`tsk_gëu64
(
fs
->
ídün
,

1761 
©å
->
c
.
ƒ
.
°¨t_v˙
));

1764 
ªtvÆ
 = 
	`¡fs_make_d©a_run
(
¡fs
,

1765 
	`tsk_gëu64
(
fs
->
ídün
, 
©å
->
c
.
ƒ
.
°¨t_v˙
),

1766 (
¡fs_ru∆i°
 *Ë((
uöçå_t
)

1767 
©å
 + 
	`tsk_gëu16
(
fs
->
ídün
,

1768 
©å
->
c
.
ƒ
.
run_off
)), &
fs_©å_run
, 
NULL
);

1769 i‡(
ªtvÆ
 !
TSK_OK
) {

1770 
	`°∫ˇt
(
tsk_îr°r2
, " -Öroc_attrseq",

1771 
TSK_ERRSTR_L
 - 
	`°æí
(
tsk_îr°r2
));

1772  
ªtvÆ
;

1776 
d©a_Êag
 = 0;

1777 i‡(
	`tsk_gëu16
(
fs
->
ídün
, 
©å
->
Êags
Ë& 
NTFS_ATTR_FLAG_COMP
) {

1778 
d©a_Êag
 |
TSK_FS_ATTR_COMP
;

1779 
fs_fûe
->
mëa
->
Êags
 |
TSK_FS_META_FLAG_COMP
;

1782 i‡(
	`tsk_gëu16
(
fs
->
ídün
, 
©å
->
Êags
Ë& 
NTFS_ATTR_FLAG_ENC
)

1783 
d©a_Êag
 |
TSK_FS_ATTR_ENC
;

1785 i‡(
	`tsk_gëu16
(
fs
->
ídün
, 
©å
->
Êags
Ë& 
NTFS_ATTR_FLAG_SPAR
)

1786 
d©a_Êag
 |
TSK_FS_ATTR_SPARSE
;

1802 i‡(
id
 == 0) {

1803 
˙t
, 
i
;

1806 
˙t
 = 
	`tsk_fs_fûe_©å_gësize
(
fs_fûe
);

1807 
i
 = 0; i < 
˙t
; i++) {

1809 c⁄° 
TSK_FS_ATTR
 *
fs_©å2
 =

1810 
	`tsk_fs_fûe_©å_gë_idx
(
fs_fûe
, 
i
);

1811 i‡(!
fs_©å2
)

1815 i‡((
fs_©å2
->
ty≥
 ==Åype) &&

1816 (
	`°rcmp
(
fs_©å2
->
«me
,Çame) == 0)) {

1817 
id
 = 
fs_©å2
->id;

1818 i‡(
tsk_vîbo£
)

1819 
	`tsk_Ârötf
(
°dîr
,

1821 
PRIu16
 "\n", 
id
);

1830 i‡(
	`tsk_gëu16
(
fs
->
ídün
, 
©å
->
c
.
ƒ
.
compusize
) > 0) {

1831 
compsize
 =

1832 1 << (
	`tsk_gëu16
(
fs
->
ídün
, 
©å
->
c
.
ƒ
.
compusize
));

1835 
compsize
 = 0;

1841 i‡(
d©a_Êag
 & 
TSK_FS_ATTR_COMP
) {

1842 i‡(
tsk_vîbo£
)

1843 
	`Ârötf
(
°dîr
,

1845 
PRIuINUM
 "-%d because compsize is 0\n",

1846 
fs_fûe
->
mëa
->
addr
, 
ty≥
);

1847 
d©a_Êag
 &~
TSK_FS_ATTR_COMP
;

1854 
fs_©å
 =

1855 (
TSK_FS_ATTR
 *Ë
	`tsk_fs_©åli°_gë_id
(
fs_fûe
->
mëa
->
©å
,

1856 
ty≥
, 
id
);

1857 i‡(
fs_©å
 =
NULL
) {

1858 
uöt64_t
 
ssize
;

1859 
uöt64_t
 
Æí
;

1861 i‡((
fs_©å
 =

1862 
	`tsk_fs_©åli°_gë√w
(
fs_fûe
->
mëa
->
©å
,

1863 
TSK_FS_ATTR_RES
)Ë=
NULL
) {

1864 
	`°∫ˇt
(
tsk_îr°r2
, " -Öroc_attrseq: getnew",

1865 
TSK_ERRSTR_L
 - 
	`°æí
(
tsk_îr°r2
));

1868 i‡(
fs_©å_run
)

1869 
	`tsk_fs_©å_run_‰ì
(
fs_©å_run
);

1870 
fs_©å_run
 = 
NULL
;

1871  
TSK_ERR
;

1874 
ssize
 = 
	`tsk_gëu64
(
fs
->
ídün
, 
©å
->
c
.
ƒ
.ssize);

1878 i‡((
ssize
 =0Ë&& (
fs_©å_run
)) {

1879 
TSK_FS_ATTR_RUN
 *
fs_©å_run_tmp
;

1881 
ssize
 = 
fs_©å_run
->
off£t
 * 
fs
->
block_size
;

1882 
fs_©å_run_tmp
 = 
fs_©å_run
;

1883 
fs_©å_run_tmp
) {

1884 
ssize
 +(
fs_©å_run_tmp
->
Àn
 * 
fs
->
block_size
);

1885 
fs_©å_run_tmp
 = fs_©å_run_tmp->
√xt
;

1890 i‡((
fs_fûe
->
mëa
->
ty≥
 =
TSK_FS_META_TYPE_REG
)

1891 && (
ty≥
 =
NTFS_ATYPE_DATA
Ë&& (
isDeÁu…D©a
)) {

1892 
fs_fûe
->
mëa
->
size
 = 
ssize
;

1895 
Æí
 = 
	`tsk_gëu64
(
fs
->
ídün
, 
©å
->
c
.
ƒ
.alen);

1898 i‡(
Æí
 == 0) {

1899 
Æí
 = 
ssize
;

1902 i‡(
	`tsk_fs_©å_£t_run
(
fs_fûe
, 
fs_©å
,

1903 
fs_©å_run
, 
«me
,

1904 
ty≥
, 
id
, 
ssize
,

1905 
	`tsk_gëu64
(
fs
->
ídün
, 
©å
->
c
.
ƒ
.
öôsize
),

1906 
Æí
, 
d©a_Êag
, 
compsize
)) {

1907 
	`°∫ˇt
(
tsk_îr°r2
, " -Öroc_attrseq: setÑun",

1908 
TSK_ERRSTR_L
 - 
	`°æí
(
tsk_îr°r2
));

1909  
TSK_ERR
;

1912 i‡(
fs_fûe
->
mëa
->
Êags
 & 
TSK_FS_META_FLAG_COMP
) {

1913 
fs_©å
->
w
 = 
¡fs_©å_wÆk_•ecül
;

1914 
fs_©å
->
r
 = 
¡fs_fûe_ªad_•ecül
;

1919 i‡(
	`tsk_fs_©å_add_run
(
fs
, 
fs_©å
, 
fs_©å_run
)) {

1920 
	`°∫ˇt
(
tsk_îr°r2
, " -Öroc_attrseq:ÖutÑun",

1921 
TSK_ERRSTR_L
 - 
	`°æí
(
tsk_îr°r2
));

1922  
TSK_ERR
;

1934 i‡(
ty≥
 =
NTFS_ATYPE_SI
) {

1935 
¡fs_©å_si
 *
si
;

1936 i‡(
©å
->
ªs
 !
NTFS_MFT_RES
) {

1937 
	`tsk_îr‹_ª£t
();

1938 
tsk_î∫o
 = 
TSK_ERR_FS_INODE_COR
;

1939 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

1941  
TSK_COR
;

1943 
si
 = (
¡fs_©å_si
 *Ë((
uöçå_t
Ë
©å
 +

1944 
	`tsk_gëu16
(
fs
->
ídün
, 
©å
->
c
.
r
.
soff
));

1945 
fs_fûe
->
mëa
->
mtime
 =

1946 
	`¡2unixtime
(
	`tsk_gëu64
(
fs
->
ídün
, 
si
->
mtime
));

1947 
fs_fûe
->
mëa
->
mtime_«no
 =

1948 
	`¡2«no
(
	`tsk_gëu64
(
fs
->
ídün
, 
si
->
mtime
));

1950 
fs_fûe
->
mëa
->
©ime
 =

1951 
	`¡2unixtime
(
	`tsk_gëu64
(
fs
->
ídün
, 
si
->
©ime
));

1952 
fs_fûe
->
mëa
->
©ime_«no
 =

1953 
	`¡2«no
(
	`tsk_gëu64
(
fs
->
ídün
, 
si
->
©ime
));

1955 
fs_fûe
->
mëa
->
˘ime
 =

1956 
	`¡2unixtime
(
	`tsk_gëu64
(
fs
->
ídün
, 
si
->
˘ime
));

1957 
fs_fûe
->
mëa
->
˘ime_«no
 =

1958 
	`¡2«no
(
	`tsk_gëu64
(
fs
->
ídün
, 
si
->
˘ime
));

1960 
fs_fûe
->
mëa
->
¸time
 =

1961 
	`¡2unixtime
(
	`tsk_gëu64
(
fs
->
ídün
, 
si
->
¸time
));

1962 
fs_fûe
->
mëa
->
¸time_«no
 =

1963 
	`¡2«no
(
	`tsk_gëu64
(
fs
->
ídün
, 
si
->
¸time
));

1965 
fs_fûe
->
mëa
->
uid
 = 
	`tsk_gëu32
(
fs
->
ídün
, 
si
->
own_id
);

1966 
fs_fûe
->
mëa
->
mode
 |=

1967 (
TSK_FS_META_MODE_IXUSR
 | 
TSK_FS_META_MODE_IXGRP
 |

1968 
TSK_FS_META_MODE_IXOTH
);

1969 i‡((
	`tsk_gëu32
(
fs
->
ídün
, 
si
->
dos
Ë& 
NTFS_SI_RO
) == 0)

1970 
fs_fûe
->
mëa
->
mode
 |=

1971 (
TSK_FS_META_MODE_IRUSR
 | 
TSK_FS_META_MODE_IRGRP
 |

1972 
TSK_FS_META_MODE_IROTH
);

1973 i‡((
	`tsk_gëu32
(
fs
->
ídün
, 
si
->
dos
Ë& 
NTFS_SI_HID
) == 0)

1974 
fs_fûe
->
mëa
->
mode
 |=

1975 (
TSK_FS_META_MODE_IWUSR
 | 
TSK_FS_META_MODE_IWGRP
 |

1976 
TSK_FS_META_MODE_IWOTH
);

1980 i‡(
ty≥
 =
NTFS_ATYPE_FNAME
) {

1981 
¡fs_©å_‚ame
 *
‚ame
;

1982 
TSK_FS_META_NAME_LIST
 *
fs_«me
;

1983 
UTF16
 *
«me16
;

1984 
UTF8
 *
«me8
;

1985 i‡(
©å
->
ªs
 !
NTFS_MFT_RES
) {

1986 
	`tsk_îr‹_ª£t
();

1987 
tsk_î∫o
 = 
TSK_ERR_FS_INODE_COR
;

1988 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

1990  
TSK_COR
;

1992 
‚ame
 =

1993 (
¡fs_©å_‚ame
 *Ë((
uöçå_t
Ë
©å
 +

1994 
	`tsk_gëu16
(
fs
->
ídün
, 
©å
->
c
.
r
.
soff
));

1995 i‡(
‚ame
->
n•a˚
 =
NTFS_FNAME_DOS
) {

2000 i‡(
fs_fûe
->
mëa
->
«me2
) {

2001 
fs_«me
 = 
fs_fûe
->
mëa
->
«me2
;

2002 (
fs_«me
Ë&& (fs_«me->
√xt
 !
NULL
);

2003 
fs_«me
 = fs_«me->
√xt
) {

2007 
fs_«me
->
√xt
 = (
TSK_FS_META_NAME_LIST
 *)

2008 
	`tsk_mÆloc
((
TSK_FS_META_NAME_LIST
));

2009 i‡(
fs_«me
->
√xt
 =
NULL
) {

2010  
TSK_ERR
;

2012 
fs_«me
 = fs_«me->
√xt
;

2013 
fs_«me
->
√xt
 = 
NULL
;

2017 
fs_fûe
->
mëa
->
«me2
 = 
fs_«me
 = (
TSK_FS_META_NAME_LIST
 *)

2018 
	`tsk_mÆloc
((
TSK_FS_META_NAME_LIST
));

2019 i‡(
fs_«me
 =
NULL
) {

2020  
TSK_ERR
;

2022 
fs_«me
->
√xt
 = 
NULL
;

2025 
«me16
 = (
UTF16
 *Ë& 
‚ame
->
«me
;

2026 
«me8
 = (
UTF8
 *Ë
fs_«me
->
«me
;

2027 
ªtVÆ
 =

2028 
	`tsk_UTF16toUTF8
(
fs
->
ídün
, (c⁄° 
UTF16
 **Ë&
«me16
,

2029 (
UTF16
 *Ë((
uöçå_t
Ë
«me16
 +

2030 
‚ame
->
∆í
 * 2),

2031 &
«me8
,

2032 (
UTF8
 *Ë((
uöçå_t
Ë
«me8
 +

2033 (
fs_«me
->
«me
)), 
TSKÀnõ¡C⁄vîsi⁄
);

2034 i‡(
ªtVÆ
 !
TSKc⁄vîsi⁄OK
) {

2035 i‡(
tsk_vîbo£
)

2036 
	`tsk_Ârötf
(
°dîr
,

2038 
ªtVÆ
);

2039 *
«me8
 = '\0';

2042 i‡((
uöçå_t
Ë
«me8
 >=

2043 (
uöçå_t
Ë
fs_«me
->
«me
 + (fs_name->name))

2044 
fs_«me
->
«me
[(fs_name->name) - 1] = '\0';

2046 *
«me8
 = '\0';

2048 
fs_«me
->
∑r_öode
 = 
	`tsk_gëu48
(
fs
->
ídün
, 
‚ame
->
∑r_ªf
);

2049 
fs_«me
->
∑r_£q
 = 
	`tsk_gëu16
(
fs
->
ídün
, 
‚ame
->par_seq);

2059 i‡(
ty≥
 =
NTFS_ATYPE_ATTRLIST
) {

2060 i‡(
fs_©å_©ål
) {

2061 
	`tsk_îr‹_ª£t
();

2062 
tsk_î∫o
 = 
TSK_ERR_FS_UNSUPFUNC
;

2063 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

2066  
TSK_ERR
;

2068 
fs_©å_©ål
 = 
	`tsk_fs_©åli°_gë_id
(
fs_fûe
->
mëa
->
©å
,

2069 
NTFS_ATYPE_ATTRLIST
, 
	`tsk_gëu16
(
fs
->
ídün
, 
©å
->
id
));

2070 i‡(
fs_©å_©ål
 =
NULL
) {

2071 
	`°∫ˇt
(
tsk_îr°r2
,

2073 
TSK_ERRSTR_L
 - 
	`°æí
(
tsk_îr°r2
));

2074  
TSK_ERR
;

2081 i‡(
¡fs
->
lﬂdög_the_MFT
 == 1) {

2087 i‡(!
¡fs
->
m·_d©a
) {

2088 
˙t
, 
i
;

2091 
˙t
 = 
	`tsk_fs_fûe_©å_gësize
(
fs_fûe
);

2092 
i
 = 0; i < 
˙t
; i++) {

2093 c⁄° 
TSK_FS_ATTR
 *
fs_©å
 =

2094 
	`tsk_fs_fûe_©å_gë_idx
(
fs_fûe
, 
i
);

2095 i‡(!
fs_©å
)

2098 i‡((
fs_©å
->
ty≥
 =
NTFS_ATYPE_DATA
) &&

2099 (
	`°rcmp
(
fs_©å
->
«me
, "$Data") == 0)) {

2100 
¡fs
->
m·_d©a
 = 
fs_©å
;

2106 i‡(!
¡fs
->
m·_d©a
) {

2107 
	`tsk_îr‹_ª£t
();

2108 
tsk_î∫o
 = 
TSK_ERR_FS_GENFS
;

2109 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

2111  
TSK_ERR
;

2119 
fs
->
öum_cou¡
 = 
¡fs
->
m·_d©a
->
size
 /Çtfs->
m·_rsize_b
;

2120 
fs
->
œ°_öum
 = fs->
öum_cou¡
 - 1;

2129 i‡(
fs_©å_©ål
) {

2130 i‡(
	`¡fs_¥oc_©åli°
(
¡fs
, 
fs_fûe
, 
fs_©å_©ål
)) {

2131  
TSK_ERR
;

2135 
fs_fûe
->
mëa
->
©å_°©e
 = 
TSK_FS_META_ATTR_STUDIED
;

2136  
TSK_OK
;

2137 
	}
}

2153 
uöt8_t


2154 
	$¡fs_¥oc_©åli°
(
NTFS_INFO
 * 
¡fs
,

2155 
TSK_FS_FILE
 * 
fs_fûe
, c⁄° 
TSK_FS_ATTR
 * 
fs_©å_©åli°
)

2157 
¡fs_©åli°
 *
li°
;

2158 *
buf
;

2159 
uöçå_t
 
ídaddr
;

2160 
TSK_FS_INFO
 *
fs
 = (TSK_FS_INFO *Ë& 
¡fs
->
fs_öfo
;

2161 
¡fs_m·
 *
m·
;

2162 
TSK_FS_LOAD_FILE
 
lﬂd_fûe
;

2163 
TSK_INUM_T
 
hi°
[256];

2164 
uöt16_t
 
hi°˙t
 = 0;

2166 i‡(
tsk_vîbo£
)

2167 
	`tsk_Ârötf
(
°dîr
,

2169 
PRIuINUM
 "\n", 
fs_fûe
->
mëa
->
addr
);

2171 i‡((
m·
 = (
¡fs_m·
 *Ë
	`tsk_mÆloc
(
¡fs
->
m·_rsize_b
)Ë=
NULL
) {

2176 
	`mem£t
(
hi°
, 0, (hist));

2179 
hi°
[
hi°˙t
++] = 
¡fs
->
mnum
;

2182 
lﬂd_fûe
.
À·
 =Üﬂd_fûe.
tŸÆ
 = (
size_t
Ë
fs_©å_©åli°
->
size
;

2183 
lﬂd_fûe
.
ba£
 =Üﬂd_fûe.
cur
 = 
buf
 =

2184 
	`tsk_mÆloc
((
size_t
Ë
fs_©å_©åli°
->
size
);

2185 i‡(
buf
 =
NULL
) {

2186 
	`‰ì
(
m·
);

2189 
ídaddr
 = (
uöçå_t
Ë
buf
 + (uöçå_tË
fs_©å_©åli°
->
size
;

2190 i‡(
	`tsk_fs_©å_wÆk
(
fs_©å_©åli°
, 0, 
tsk_fs_lﬂd_fûe_a˘i⁄
,

2191 (*Ë&
lﬂd_fûe
)) {

2192 
	`°∫ˇt
(
tsk_îr°r2
, " -Örocessingáttrlist",

2193 
TSK_ERRSTR_L
 - 
	`°æí
(
tsk_îr°r2
));

2194 
	`‰ì
(
m·
);

2201 i‡(
lﬂd_fûe
.
À·
 > 0) {

2202 
	`tsk_îr‹_ª£t
();

2203 
tsk_î∫o
 = 
TSK_ERR_FS_FWALK
;

2204 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

2205 "¥o˚ssögáâæi° o‡íåy %" 
PRIuINUM
, 
¡fs
->
mnum
);

2206 
	`‰ì
(
m·
);

2207 
	`‰ì
(
buf
);

2213 
li°
 = (
¡fs_©åli°
 *Ë
buf
;

2214 (
li°
Ë&& ((
uöçå_t
Ëli° < 
ídaddr
)

2215 && (
	`tsk_gëu16
(
fs
->
ídün
, 
li°
->
Àn
) > 0);

2216 
li°
 =

2217 (
¡fs_©åli°
 *Ë((
uöçå_t
Ë
li°
 + 
	`tsk_gëu16
(
fs
->
ídün
,

2218 
li°
->
Àn
))) {

2219 
TSK_INUM_T
 
m·num
;

2220 
uöt32_t
 
ty≥
;

2221 
uöt16_t
 
id
, 
i
;

2222 
TSK_RETVAL_ENUM
 
ªtvÆ
;

2225 
m·num
 = 
	`tsk_gëu48
(
fs
->
ídün
, 
li°
->
fûe_ªf
);

2230 
i
 = 0; i < 
hi°˙t
; i++) {

2231 i‡(
hi°
[
i
] =
m·num
)

2235 i‡(
hi°
[
i
] =
m·num
)

2238 i‡(
hi°˙t
 < 256)

2239 
hi°
[
hi°˙t
++] = 
m·num
;

2240 
ty≥
 = 
	`tsk_gëu32
(
fs
->
ídün
, 
li°
->type);

2241 
id
 = 
	`tsk_gëu16
(
fs
->
ídün
, 
li°
->id);

2242 i‡(
tsk_vîbo£
)

2243 
	`tsk_Ârötf
(
°dîr
,

2244 "¡fs_¥oc_©åli°: m·: %" 
PRIuINUM


2245 "Åy≥ %" 
PRIu32
 " id %" 
PRIu16


2246 " VCN: %" 
PRIu64
 "\n", 
m·num
, 
ty≥
,

2247 
id
, 
	`tsk_gëu64
(
fs
->
ídün
, 
li°
->
°¨t_v˙
));

2252 i‡(
m·num
 < 
¡fs
->
fs_öfo
.
fú°_öum
 ||

2253 
m·num
 > 
¡fs
->
fs_öfo
.
œ°_öum
) {

2255 i‡(
tsk_vîbo£
) {

2258 
	`tsk_Ârötf
(
°dîr
,

2260 
PRIuINUM


2262 
PRIuINUM
 "", 
m·num
, 
¡fs
->
mnum
);

2268 i‡((
ªtvÆ
 = 
	`¡fs_döode_lookup
(
¡fs
, 
m·
, 
m·num
)Ë!
TSK_OK
) {

2270 i‡(
ªtvÆ
 =
TSK_COR
) {

2271 i‡(
tsk_vîbo£
)

2272 
	`tsk_îr‹_¥öt
(
°dîr
);

2273 
	`tsk_îr‹_ª£t
();

2277 
	`‰ì
(
m·
);

2278 
	`‰ì
(
buf
);

2279 
	`°∫ˇt
(
tsk_îr°r2
, " -Öroc_attrlist",

2280 
TSK_ERRSTR_L
 - 
	`°æí
(
tsk_îr°r2
));

2285 i‡(
	`tsk_gëu48
(
fs
->
ídün
, 
m·
->
ba£_ªf
Ë!
¡fs
->
mnum
) {

2291 i‡((
	`tsk_gëu16
(
fs
->
ídün
,

2292 
¡fs
->
m·
->
Êags
Ë& 
NTFS_MFT_INUSE
) == 0) {

2296 
	`tsk_îr‹_ª£t
();

2297 
tsk_î∫o
 = 
TSK_ERR_FS_INODE_COR
;

2298 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

2299 "Exãnsi⁄Ñec‹d %" 
PRIuINUM


2300 " (fûêª‡%" 
PRIuINUM


2302 
PRIuINUM
 "", 
m·num
, 
	`tsk_gëu48
(
fs
->
ídün
,

2303 
m·
->
ba£_ªf
), 
¡fs
->
mnum
);

2304 
	`‰ì
(
m·
);

2305 
	`‰ì
(
buf
);

2314 i‡((
ªtvÆ
 =

2315 
	`¡fs_¥oc_©å£q
(
¡fs
, 
fs_fûe
, (
¡fs_©å
 *Ë((
uöçå_t
)

2316 
m·
 + 
	`tsk_gëu16
(
fs
->
ídün
, m·->
©å_off
)),

2317 
¡fs
->
m·_rsize_b
 - 
	`tsk_gëu16
(
fs
->
ídün
,

2318 
m·
->
©å_off
))Ë!
TSK_OK
) {

2320 i‡(
ªtvÆ
 =
TSK_COR
) {

2321 i‡(
tsk_vîbo£
)

2322 
	`tsk_îr‹_¥öt
(
°dîr
);

2323 
	`tsk_îr‹_ª£t
();

2326 
	`°∫ˇt
(
tsk_îr°r2
, "-Öroc_attrlist",

2327 
TSK_ERRSTR_L
 - 
	`°æí
(
tsk_îr°r2
));

2328 
	`‰ì
(
m·
);

2329 
	`‰ì
(
buf
);

2334 
	`‰ì
(
m·
);

2335 
	`‰ì
(
buf
);

2337 
	}
}

2349 
TSK_RETVAL_ENUM


2350 
	$¡fs_döode_c›y
(
NTFS_INFO
 * 
¡fs
, 
TSK_FS_FILE
 * 
a_fs_fûe
)

2352 
¡fs_m·
 *
m·
 = 
¡fs
->mft;

2353 
¡fs_©å
 *
©å
;

2354 
TSK_FS_INFO
 *
fs
 = (TSK_FS_INFO *Ë& 
¡fs
->
fs_öfo
;

2355 
TSK_RETVAL_ENUM
 
ªtvÆ
;

2357 i‡((
a_fs_fûe
 =
NULL
Ë|| (a_fs_fûe->
mëa
 == NULL)) {

2358 
	`tsk_îr‹_ª£t
();

2359 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

2360 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

2362  
TSK_ERR
;

2368 i‡(
a_fs_fûe
->
mëa
->
©å
) {

2369 
	`tsk_fs_©åli°_m¨kunu£d
(
a_fs_fûe
->
mëa
->
©å
);

2372 
a_fs_fûe
->
mëa
->
©å
 = 
	`tsk_fs_©åli°_Æloc
();

2373 i‡(
a_fs_fûe
->
mëa
->
©å
 =
NULL
)

2374  
TSK_ERR
;

2376 
a_fs_fûe
->
mëa
->
©å_°©e
 = 
TSK_FS_META_ATTR_EMPTY
;

2379 i‡(
a_fs_fûe
->
mëa
->
«me2
) {

2380 
TSK_FS_META_NAME_LIST
 *
fs_«me1
, *
fs_«me2
;

2381 
fs_«me1
 = 
a_fs_fûe
->
mëa
->
«me2
;

2383 
fs_«me1
) {

2384 
fs_«me2
 = 
fs_«me1
->
√xt
;

2385 
	`‰ì
(
fs_«me1
);

2386 
fs_«me1
 = 
fs_«me2
;

2388 
a_fs_fûe
->
mëa
->
«me2
 = 
NULL
;

2392 
a_fs_fûe
->
mëa
->
∆ök
 = 
	`tsk_gëu16
(
fs
->
ídün
, 
m·
->
lök
);

2393 
a_fs_fûe
->
mëa
->
£q
 = 
	`tsk_gëu16
(
fs
->
ídün
, 
m·
->seq);

2394 
a_fs_fûe
->
mëa
->
addr
 = 
¡fs
->
mnum
;

2397 i‡(
	`tsk_gëu16
(
fs
->
ídün
, 
¡fs
->
m·
->
Êags
Ë& 
NTFS_MFT_DIR
)

2398 
a_fs_fûe
->
mëa
->
ty≥
 = 
TSK_FS_META_TYPE_DIR
;

2400 
a_fs_fûe
->
mëa
->
ty≥
 = 
TSK_FS_META_TYPE_REG
;

2401 
a_fs_fûe
->
mëa
->
mode
 = 0;

2406 
a_fs_fûe
->
mëa
->
uid
 = 0;

2407 
a_fs_fûe
->
mëa
->
gid
 = 0;

2408 
a_fs_fûe
->
mëa
->
size
 = 0;

2409 
a_fs_fûe
->
mëa
->
mtime
 = 0;

2410 
a_fs_fûe
->
mëa
->
mtime_«no
 = 0;

2411 
a_fs_fûe
->
mëa
->
©ime
 = 0;

2412 
a_fs_fûe
->
mëa
->
©ime_«no
 = 0;

2413 
a_fs_fûe
->
mëa
->
˘ime
 = 0;

2414 
a_fs_fûe
->
mëa
->
˘ime_«no
 = 0;

2415 
a_fs_fûe
->
mëa
->
¸time
 = 0;

2416 
a_fs_fûe
->
mëa
->
¸time_«no
 = 0;

2419 
a_fs_fûe
->
mëa
->
Êags
 =

2420 ((
	`tsk_gëu16
(
fs
->
ídün
, 
¡fs
->
m·
->
Êags
) &

2421 
NTFS_MFT_INUSE
Ë? 
TSK_FS_META_FLAG_ALLOC
 :

2422 
TSK_FS_META_FLAG_UNALLOC
);

2427 
©å
 =

2428 (
¡fs_©å
 *Ë((
uöçå_t
Ë
m·
 + 
	`tsk_gëu16
(
fs
->
ídün
,

2429 
m·
->
©å_off
));

2430 i‡((
ªtvÆ
 = 
	`¡fs_¥oc_©å£q
(
¡fs
, 
a_fs_fûe
, 
©å
,

2431 
¡fs
->
m·_rsize_b
 - 
	`tsk_gëu16
(
fs
->
ídün
,

2432 
m·
->
©å_off
))Ë!
TSK_OK
) {

2433  
ªtvÆ
;

2438 i‡((
a_fs_fûe
->
mëa
->
©å
 =
NULL
)

2439 || (
a_fs_fûe
->
mëa
->
©å
->
hód
 =
NULL
)

2440 || ((
a_fs_fûe
->
mëa
->
©å
->
hód
->
Êags
 & 
TSK_FS_ATTR_INUSE
) == 0))

2441 
a_fs_fûe
->
mëa
->
Êags
 |
TSK_FS_META_FLAG_UNUSED
;

2443 
a_fs_fûe
->
mëa
->
Êags
 |
TSK_FS_META_FLAG_USED
;

2446 
	}
}

2457 
TSK_RETVAL_ENUM


2458 
	$¡fs_döode_lﬂd
(
NTFS_INFO
 * 
a_¡fs
, 
TSK_INUM_T
 
a_m·num
)

2460 
TSK_RETVAL_ENUM
 
ªtvÆ
;

2463 i‡((
ªtvÆ
 =

2464 
	`¡fs_döode_lookup
(
a_¡fs
,á_¡fs->
m·
, 
a_m·num
)Ë!
TSK_OK
)

2465  
ªtvÆ
;

2466 
a_¡fs
->
mnum
 = 
a_m·num
;

2468 
	}
}

2477 
uöt8_t


2478 
	$¡fs_lﬂd_©ås
(
TSK_FS_FILE
 * 
a_fs_fûe
)

2480 i‡((
a_fs_fûe
 =
NULL
Ë|| (a_fs_fûe->
mëa
 == NULL)) {

2481 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

2482 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

2488 i‡(
a_fs_fûe
->
mëa
->
©å
 =
NULL
) {

2489 i‡(
a_fs_fûe
->
mëa
->
Êags
 & 
TSK_FS_META_FLAG_UNALLOC
)

2490 
tsk_î∫o
 = 
TSK_ERR_FS_RECOVER
;

2492 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

2493 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

2498 
	}
}

2507 
uöt8_t


2508 
	$¡fs_öode_lookup
(
TSK_FS_INFO
 * 
fs
, 
TSK_FS_FILE
 * 
a_fs_fûe
,

2509 
TSK_INUM_T
 
m·num
)

2511 
NTFS_INFO
 *
¡fs
 = (NTFS_INFO *Ë
fs
;

2514 
	`tsk_îr‹_ª£t
();

2516 i‡(
a_fs_fûe
 =
NULL
) {

2517 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

2518 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

2523 i‡(
a_fs_fûe
->
mëa
 =
NULL
) {

2524 
a_fs_fûe
->
mëa
 = 
	`tsk_fs_mëa_Æloc
(
NTFS_FILE_CONTENT_LEN
);

2525 i‡(
a_fs_fûe
->
mëa
 =
NULL
)

2529 
	`tsk_fs_mëa_ª£t
(
a_fs_fûe
->
mëa
);

2533 i‡(
m·num
 =
	`TSK_FS_ORPHANDIR_INUM
(
fs
)) {

2534 i‡(
	`tsk_fs_dú_make_‹ph™_dú_mëa
(
fs
, 
a_fs_fûe
->
mëa
))

2541 i‡(
	`¡fs_döode_lﬂd
(
¡fs
, 
m·num
Ë!
TSK_OK
) {

2546 i‡(
	`¡fs_döode_c›y
(
¡fs
, 
a_fs_fûe
Ë!
TSK_OK
) {

2551 
	}
}

2570 
uöt8_t


2571 
	$¡fs_lﬂd_©ådef
(
NTFS_INFO
 * 
¡fs
)

2573 
TSK_FS_FILE
 *
fs_fûe
;

2574 c⁄° 
TSK_FS_ATTR
 *
fs_©å
;

2575 
TSK_FS_INFO
 *
fs
 = &
¡fs
->
fs_öfo
;

2576 
TSK_FS_LOAD_FILE
 
lﬂd_fûe
;

2579 i‡(
¡fs
->
©ådef
)

2582 i‡((
fs_fûe
 = 
	`tsk_fs_fûe_›í_mëa
(
fs
, 
NULL
, 
NTFS_MFT_ATTR
)) == NULL)

2585 
fs_©å
 = 
	`tsk_fs_©åli°_gë
(
fs_fûe
->
mëa
->
©å
, 
NTFS_ATYPE_DATA
);

2586 i‡(!
fs_©å
) {

2588 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

2595 
lﬂd_fûe
.
À·
 =Üﬂd_fûe.
tŸÆ
 = (
size_t
Ë
fs_©å
->
size
;

2596 
lﬂd_fûe
.
ba£
 =Üﬂd_fûe.
cur
 = 
	`tsk_mÆloc
((
size_t
Ë
fs_©å
->
size
);

2597 i‡(
lﬂd_fûe
.
cur
 =
NULL
) {

2598 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

2601 
¡fs
->
©ådef
 = (
¡fs_©ådef
 *Ë
lﬂd_fûe
.
ba£
;

2603 i‡(
	`tsk_fs_©å_wÆk
(
fs_©å
,

2604 0, 
tsk_fs_lﬂd_fûe_a˘i⁄
, (*Ë&
lﬂd_fûe
)) {

2605 
	`°∫ˇt
(
tsk_îr°r2
, " -Üoad_attrdef",

2606 
TSK_ERRSTR_L
 - 
	`°æí
(
tsk_îr°r2
));

2607 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

2608 
	`‰ì
(
¡fs
->
©ådef
);

2609 
¡fs
->
©ådef
 = 
NULL
;

2612 i‡(
lﬂd_fûe
.
À·
 > 0) {

2613 
	`tsk_îr‹_ª£t
();

2614 
tsk_î∫o
 = 
TSK_ERR_FS_FWALK
;

2615 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

2617 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

2618 
	`‰ì
(
¡fs
->
©ådef
);

2619 
¡fs
->
©ådef
 = 
NULL
;

2623 
¡fs
->
©ådef_Àn
 = (
size_t
Ë
fs_©å
->
size
;

2624 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

2626 
	}
}

2635 
uöt8_t


2636 
	$¡fs_©å«me_lookup
(
TSK_FS_INFO
 * 
fs
, 
uöt16_t
 
ty≥
, *
«me
, 
Àn
)

2638 
NTFS_INFO
 *
¡fs
 = (NTFS_INFO *Ë
fs
;

2639 
¡fs_©ådef
 *
©ådef
;

2640 i‡(!
¡fs
->
©ådef
) {

2641 i‡(
	`¡fs_lﬂd_©ådef
(
¡fs
))

2645 
©ådef
 = 
¡fs
->attrdef;

2647 (((
uöçå_t
Ë
©ådef
 - (uöçå_tË
¡fs
->attrdef +

2648 (
¡fs_©ådef
)Ë< 
¡fs
->
©ådef_Àn
) &&

2649 (
	`tsk_gëu32
(
fs
->
ídün
, 
©ådef
->
ty≥
))) {

2650 i‡(
	`tsk_gëu32
(
fs
->
ídün
, 
©ådef
->
ty≥
) ==Åype) {

2652 
UTF16
 *
«me16
 = (UTF16 *Ë
©ådef
->
œbñ
;

2653 
UTF8
 *
«me8
 = (UTF8 *Ë
«me
;

2654 
ªtVÆ
;

2655 
ªtVÆ
 =

2656 
	`tsk_UTF16toUTF8
(
fs
->
ídün
, (c⁄° 
UTF16
 **Ë&
«me16
,

2657 (
UTF16
 *Ë((
uöçå_t
Ë
«me16
 +

2658 (
©ådef
->
œbñ
)),

2659 &
«me8
,

2660 (
UTF8
 *Ë((
uöçå_t
Ë
«me8
 + 
Àn
), 
TSKÀnõ¡C⁄vîsi⁄
);

2661 i‡(
ªtVÆ
 !
TSKc⁄vîsi⁄OK
) {

2662 i‡(
tsk_vîbo£
)

2663 
	`tsk_Ârötf
(
°dîr
,

2665 
ªtVÆ
);

2670 i‡((
uöçå_t
Ë
«me8
 >(uöçå_tË
«me
 + 
Àn
)

2671 
«me
[
Àn
-1] = '\0';

2673 *
«me8
 = '\0';

2676 
©ådef
++;

2679 
	`¢¥ötf
(
«me
, 
Àn
, "?");

2681 
	}
}

2688 
uöt8_t


2689 
	$¡fs_lﬂd_bm≠
(
NTFS_INFO
 * 
¡fs
)

2691 
ssize_t
 
˙t
;

2692 
¡fs_©å
 *
©å
;

2693 
TSK_FS_INFO
 *
fs
 = &
¡fs
->
fs_öfo
;

2696 i‡(
	`¡fs_döode_lﬂd
(
¡fs
, 
NTFS_MFT_BMAP
Ë!
TSK_OK
) {

2700 
©å
 = (
¡fs_©å
 *Ë((
uöçå_t
Ë
¡fs
->
m·
 +

2701 
	`tsk_gëu16
(
fs
->
ídün
, 
¡fs
->
m·
->
©å_off
));

2704 ((
uöçå_t
Ë
©å
 >(uöçå_tË
¡fs
->
m·
)

2705 && ((
uöçå_t
Ë
©å
 <=

2706 ((
uöçå_t
Ë
¡fs
->
m·
 + (uöçå_tË¡fs->
m·_rsize_b
))

2707 && (
	`tsk_gëu32
(
fs
->
ídün
, 
©å
->
Àn
) > 0

2708 && (
	`tsk_gëu32
(
fs
->
ídün
, 
©å
->
ty≥
) != 0xffffffff)

2709 && (
	`tsk_gëu32
(
fs
->
ídün
, 
©å
->
ty≥
Ë!
NTFS_ATYPE_DATA
))) {

2710 
©å
 =

2711 (
¡fs_©å
 *Ë((
uöçå_t
Ë
©å
 + 
	`tsk_gëu32
(
fs
->
ídün
,

2712 
©å
->
Àn
));

2716 i‡(
	`tsk_gëu32
(
fs
->
ídün
, 
©å
->
ty≥
Ë!
NTFS_ATYPE_DATA
) {

2717 
	`tsk_îr‹_ª£t
();

2718 
tsk_î∫o
 = 
TSK_ERR_FS_INODE_COR
;

2719 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

2725 i‡((
	`¡fs_make_d©a_run
(
¡fs
,

2726 
	`tsk_gëu64
(
fs
->
ídün
, 
©å
->
c
.
ƒ
.
°¨t_v˙
),

2727 (
¡fs_ru∆i°


2728 *Ë((
uöçå_t
Ë
©å
 + 
	`tsk_gëu16
(
fs
->
ídün
,

2729 
©å
->
c
.
ƒ
.
run_off
)), &(
¡fs
->
bm≠
),

2730 
NULL
)Ë!
TSK_OK
) {

2734 
¡fs
->
bm≠_buf
 = (*Ë
	`tsk_mÆloc
(
fs
->
block_size
);

2735 i‡(
¡fs
->
bm≠_buf
 =
NULL
) {

2740 
¡fs
->
bm≠_buf_off
 = 0;

2741 i‡(
¡fs
->
bm≠
->
addr
 > 
fs
->
œ°_block
) {

2742 
	`tsk_îr‹_ª£t
();

2743 
tsk_î∫o
 = 
TSK_ERR_FS_GENFS
;

2744 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

2746 
PRIuDADDR
 "", 
¡fs
->
bm≠
->
addr
);

2749 
˙t
 =

2750 
	`tsk_fs_ªad_block
(
fs
,

2751 
¡fs
->
bm≠
->
addr
,Çtfs->
bm≠_buf
, 
fs
->
block_size
);

2752 i‡(
˙t
 !
fs
->
block_size
) {

2753 i‡(
˙t
 >= 0) {

2754 
	`tsk_îr‹_ª£t
();

2755 
tsk_î∫o
 = 
TSK_ERR_FS_READ
;

2757 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

2759 
PRIuDADDR
, 
¡fs
->
bm≠
->
addr
);

2763 
	}
}

2772 
uöt8_t


2773 
	$¡fs_lﬂd_vî
(
NTFS_INFO
 * 
¡fs
)

2775 
TSK_FS_INFO
 *
fs
 = (TSK_FS_INFO *Ë& 
¡fs
->
fs_öfo
;

2776 
TSK_FS_FILE
 *
fs_fûe
;

2777 c⁄° 
TSK_FS_ATTR
 *
fs_©å
;

2779 i‡((
fs_fûe
 = 
	`tsk_fs_fûe_›í_mëa
(
fs
, 
NULL
, 
NTFS_MFT_VOL
)) == NULL) {

2784 
fs_©å
 = 
	`tsk_fs_©åli°_gë
(
fs_fûe
->
mëa
->
©å
, 
NTFS_ATYPE_VINFO
);

2785 i‡(!
fs_©å
) {

2786 
	`tsk_îr‹_ª£t
();

2787 
tsk_î∫o
 = 
TSK_ERR_FS_INODE_COR
;

2788 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

2790 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

2794 i‡((
fs_©å
->
Êags
 & 
TSK_FS_ATTR_RES
)

2795 && (
fs_©å
->
size
)) {

2796 
¡fs_©å_vöfo
 *
vöfo
 = (¡fs_©å_vöfÿ*Ë
fs_©å
->
rd
.
buf
;

2798 i‡((
vöfo
->
maj_vî
 == 1)

2799 && (
vöfo
->
mö_vî
 == 2)) {

2800 
¡fs
->
vî
 = 
NTFS_VINFO_NT
;

2802 i‡((
vöfo
->
maj_vî
 == 3)

2803 && (
vöfo
->
mö_vî
 == 0)) {

2804 
¡fs
->
vî
 = 
NTFS_VINFO_2K
;

2806 i‡((
vöfo
->
maj_vî
 == 3)

2807 && (
vöfo
->
mö_vî
 == 1)) {

2808 
¡fs
->
vî
 = 
NTFS_VINFO_XP
;

2811 
	`tsk_îr‹_ª£t
();

2812 
tsk_î∫o
 = 
TSK_ERR_FS_GENFS
;

2813 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

2815 
vöfo
->
maj_vî
, vöfo->
mö_vî
);

2816 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

2821 
	`tsk_îr‹_ª£t
();

2822 
tsk_î∫o
 = 
TSK_ERR_FS_GENFS
;

2823 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

2828 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

2830 
	}
}

2833 #i‡
TSK_USE_SID


2843 
uöt8_t


2844 
	$¡fs_sds_to_°r
(
TSK_FS_INFO
 * 
a_fs
, c⁄° 
¡fs_©å_sds
 * 
a_sds
,

2845 **
a_sid°r
)

2847 *
sid_°r
 = 
NULL
;

2848 
¡fs_sid
 *
sid
 = 
NULL
;

2851 
sid_°r_Àn
 = 2;

2852 
uöt32_t
 
ow√r_off£t
 = 0;

2854 i‡((
a_fs
 =
NULL
Ë|| (
a_sds
 =NULLË|| (
a_sid°r
 == NULL)) {

2855 
	`tsk_îr‹_ª£t
();

2856 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

2857 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
, "Invalidárgument");

2861 
ow√r_off£t
 =

2862 
	`tsk_gëu32
(
a_fs
->
ídün
, 
a_sds
->
£lf_ªl_£c_desc
.
ow√r
);

2864 i‡(((
uöçå_t
Ë& 
a_sds
->
£lf_ªl_£c_desc
 + 
ow√r_off£t
) >

2865 ((
uöçå_t
Ë
a_sds
 + 
	`tsk_gëu32
(
a_fs
->
ídün
,á_sds->
ít_size
))) {

2866 
	`tsk_îr‹_ª£t
();

2867 
tsk_î∫o
 = 
TSK_ERR_FS_INODE_COR
;

2868 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

2873 *
a_sid°r
 = 
NULL
;

2875 
sid
 =

2876 (
¡fs_sid
 *Ë((
uöt8_t
 *Ë& 
a_sds
->
£lf_ªl_£c_desc
 +

2877 
ow√r_off£t
);

2880 
sid_°r_Àn
 += 2;

2885 i‡(
sid
->
ªvisi⁄
 == 1) {

2886 
ödex
;

2887 
Àn
;

2888 
uöt64_t
 
auth‹ôy
;

2889 
i
, 
j
;

2890 *
sid_°r_off£t
;

2894 
auth‹ôy
 = 
i
 = 0, 
j
 = 40; i < 6; i++, j -= 8)

2895 
auth‹ôy
 +(
uöt64_t
Ë
sid
->
idít_auth
[
i
] << 
j
;

2900 
sid_°r_Àn
 +(1 + 10Ë* 
sid
->
sub_auth_cou¡
;

2903 i‡((
sid_°r
 = (*Ë
	`tsk_mÆloc
(
sid_°r_Àn
)Ë=
NULL
) {

2907 
Àn
 = 
	`•rötf
(
sid_°r
, "S-1-%" 
PRIu64
, 
auth‹ôy
);

2908 
sid_°r_off£t
 = 
sid_°r
 + 
Àn
;

2910 
ödex
 = 0; index < 
sid
->
sub_auth_cou¡
; index++) {

2911 
Àn
 =

2912 
	`•rötf
(
sid_°r_off£t
, "-%" 
PRIu32
, 
sid
->
sub_auth
[
ödex
]);

2913 
sid_°r_off£t
 +
Àn
;

2915 *
a_sid°r
 = 
sid_°r
;

2919 
	`tsk_îr‹_ª£t
();

2920 
tsk_î∫o
 = 
TSK_ERR_FS_GENFS
;

2921 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

2922 "¡fs_sds_to_°r: InvÆid SIDÑevisi⁄ (%d)", 
sid
->
ªvisi⁄
);

2927 
	}
}

2939 c⁄° 
¡fs_©å_sds
 *

2940 
	$¡fs_gë_sds
(
TSK_FS_INFO
 * 
fs
, 
uöt32_t
 
£cid
)

2942 
uöt32_t
 
i
 = 0;

2943 
NTFS_INFO
 *
¡fs
 = (NTFS_INFO *Ë
fs
;

2944 
¡fs_©å_sii
 *
sii
 = 
NULL
;

2945 
¡fs_©å_sds
 *
sds
 = 
NULL
;

2946 
uöt32_t
 
sii_£cid
 = 0;

2947 
uöt32_t
 
sds_£cid
 = 0;

2948 
uöt32_t
 
sii_£chash
 = 0;

2949 
uöt32_t
 
sds_£chash
 = 0;

2950 
uöt64_t
 
sds_fûe_off
 = 0;

2951 
uöt32_t
 
sds_ít_size
 = 0;

2952 
uöt64_t
 
sii_sds_fûe_off
 = 0;

2953 
uöt32_t
 
sii_sds_ít_size
 = 0;

2956 i‡(
fs
 =
NULL
) {

2957 
	`tsk_îr‹_ª£t
();

2958 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

2959 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
, "Invalidárgument");

2960  
NULL
;

2971 
i
 = 0; i < 
¡fs
->
sii_d©a
.
u£d
; i++) {

2972 i‡(
	`tsk_gëu32
(
fs
->
ídün
,

2973 ((
¡fs_©å_sii
 *Ë(
¡fs
->
sii_d©a
.

2974 
buf„r
))[
i
].
key_£c_id
Ë=
£cid
) {

2975 
sii
 = &((
¡fs_©å_sii
 *Ë(
¡fs
->
sii_d©a
.
buf„r
))[
i
];

2980 i‡(
sii
 =
NULL
) {

2981 
	`tsk_îr‹_ª£t
();

2982 
tsk_î∫o
 = 
TSK_ERR_FS_GENFS
;

2983 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

2984 "¡fs_gë_sds: SIIÉ¡ryÇŸ found (%" 
PRIu32
 ")", 
£cid
);

2985  
NULL
;

2988 
sii_£cid
 = 
	`tsk_gëu32
(
fs
->
ídün
, 
sii
->
key_£c_id
);

2989 
sii_£chash
 = 
	`tsk_gëu32
(
fs
->
ídün
, 
sii
->
d©a_hash_£c_desc
);

2990 
sii_sds_fûe_off
 = 
	`tsk_gëu64
(
fs
->
ídün
, 
sii
->
£c_desc_off
);

2991 
sii_sds_ít_size
 = 
	`tsk_gëu32
(
fs
->
ídün
, 
sii
->
£c_desc_size
);

2994 i‡((
uöt32_t
Ë
sii_sds_fûe_off
 > 
¡fs
->
sds_d©a
.
size
) {

2995 
	`tsk_îr‹_ª£t
();

2996 
tsk_î∫o
 = 
TSK_ERR_FS_GENFS
;

2997 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

2998 "¡fs_gë_sds: SII off£àtoÿœrgê(%" 
PRIu64
 ")",

2999 
sii_sds_fûe_off
);

3000  
NULL
;

3003 
sds
 =

3004 (
¡fs_©å_sds
 *Ë((
uöt8_t
 *Ë
¡fs
->
sds_d©a
.
buf„r
 +

3005 
sii_sds_fûe_off
);

3006 
sds_£cid
 = 
	`tsk_gëu32
(
fs
->
ídün
, 
sds
->
£c_id
);

3007 
sds_£chash
 = 
	`tsk_gëu32
(
fs
->
ídün
, 
sds
->
hash_£c_desc
);

3008 
sds_fûe_off
 = 
	`tsk_gëu64
(
fs
->
ídün
, 
sds
->
fûe_off
);

3009 
sds_ít_size
 = 
	`tsk_gëu32
(
fs
->
ídün
, 
sds
->
ít_size
);

3013 i‡((
sds_£cid
 =
sii_£cid
) &&

3014 (
sds_£chash
 =
sii_£chash
Ë&& (
sds_fûe_off
 =
sii_sds_fûe_off
)

3017  
sds
;

3020 i‡(
sii_£cid
 != 0) {

3029 
	`tsk_îr‹_ª£t
();

3030 
tsk_î∫o
 = 
TSK_ERR_FS_GENFS
;

3031 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

3033  
NULL
;

3034 
	}
}

3051 
uöt8_t


3052 
	$¡fs_fûe_gë_sid°r
(
TSK_FS_FILE
 * 
a_fs_fûe
, **
sid_°r
)

3054 #i‡
TSK_USE_SID


3055 c⁄° 
TSK_FS_ATTR
 *
fs_d©a
;

3056 
¡fs_©å_si
 *
si
;

3057 c⁄° 
¡fs_©å_sds
 *
sds
;

3059 *
sid_°r
 = 
NULL
;

3061 i‡(!
a_fs_fûe
->
mëa
->
©å
) {

3062 
	`tsk_îr‹_ª£t
();

3063 
tsk_î∫o
 = 
TSK_ERR_FS_GENFS
;

3064 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

3070 
fs_d©a
 = 
	`tsk_fs_©åli°_gë
(
a_fs_fûe
->
mëa
->
©å
,

3071 
TSK_FS_ATTR_TYPE_NTFS_SI
);

3072 i‡(!
fs_d©a
) {

3073 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

3078 
si
 = (
¡fs_©å_si
 *Ë
fs_d©a
->
rd
.
buf
;

3079 i‡(!
si
) {

3080 
	`tsk_îr‹_ª£t
();

3081 
tsk_î∫o
 = 
TSK_ERR_FS_GENFS
;

3082 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

3086 
sds
 =

3087 
	`¡fs_gë_sds
(
a_fs_fûe
->
fs_öfo
,

3088 
	`tsk_gëu32
(
a_fs_fûe
->
fs_öfo
->
ídün
, 
si
->
£c_id
));

3089 i‡(!
sds
) {

3090 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

3094 i‡(
	`¡fs_sds_to_°r
(
a_fs_fûe
->
fs_öfo
, 
sds
, 
sid_°r
)) {

3095 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

3101 *
sid_°r
 = 
NULL
;

3102 
	`tsk_îr‹_ª£t
();

3103 
tsk_î∫o
 = 
TSK_ERR_FS_UNSUPFUNC
;

3104 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
, "Unsupported function");

3107 
	}
}

3110 #i‡
TSK_USE_SID


3112 
	$¡fs_¥oc_sii
(
TSK_FS_INFO
 * 
fs
, 
NTFS_SXX_BUFFER
 * 
sii_buf„r
)

3114 
tŸÆ_byãs_¥o˚s£d
 = 0;

3115 
idx_buf„r_Àngth
 = 0;

3116 
sii_buf„r_off£t
 = 0;

3118 
NTFS_INFO
 *
¡fs
 = (NTFS_INFO *Ë
fs
;

3119 
¡fs_©å_sii
 *
sii
;

3121 i‡((
fs
 =
NULL
Ë|| (
sii_buf„r
 == NULL)

3122 || (
¡fs
->
sii_d©a
.
buf„r
 =
NULL
))

3126 
sii_buf„r_off£t
 = 0; sii_buf„r_off£à< 
sii_buf„r
->
size
;

3127 
sii_buf„r_off£t
 +
¡fs
->
idx_rsize_b
) {

3128 
¡fs_idxªc
 *
idxªc
 =

3129 (
¡fs_idxªc
 *Ë& 
sii_buf„r
->
buf„r
[
sii_buf„r_off£t
];

3131 
idx_buf„r_Àngth
 =

3132 
	`tsk_gëu32
(
fs
->
ídün
, 
idxªc
->
li°
.
bu„nd_off
);

3134 
sii
 =

3135 (
¡fs_©å_sii
 *Ë((
uöçå_t
Ë& 
idxªc
->
li°
 +

3136 
	`tsk_gëu32
(
fs
->
ídün
, 
idxªc
->
li°
.
begö_off
));

3138 
tŸÆ_byãs_¥o˚s£d
 =

3139 (
uöt8_t
Ë((
uöçå_t
Ë
sii
 - (uöçå_tË
idxªc
);

3149 
	`mem˝y
(
¡fs
->
sii_d©a
.
buf„r
 +

3150 (
¡fs
->
sii_d©a
.
u£d
 * (
¡fs_©å_sii
)), 
sii
,

3151 (
¡fs_©å_sii
));

3152 
¡fs
->
sii_d©a
.
size
 +(
¡fs_©å_sii
);

3153 
¡fs
->
sii_d©a
.
u£d
 += 1;

3170 
sii
++;

3171 
tŸÆ_byãs_¥o˚s£d
 +(
¡fs_©å_sii
);

3172 } 
tŸÆ_byãs_¥o˚s£d
 + (
¡fs_©å_sii
) <=

3173 
idx_buf„r_Àngth
);

3175 
	}
}

3182 
uöt8_t


3183 
	$¡fs_lﬂd_£cuª
(
NTFS_INFO
 * 
¡fs
)

3185 
TSK_FS_INFO
 *
fs
 = (TSK_FS_INFO *Ë& 
¡fs
->
fs_öfo
;

3186 
TSK_FS_META
 *
fs_mëa
 = 
NULL
;

3187 c⁄° 
TSK_FS_ATTR
 *
fs_©å
 = 
NULL
;

3188 c⁄° 
TSK_FS_ATTR
 *
fs_©å_sii
 = 
NULL
;

3189 
NTFS_SXX_BUFFER
 
sds_buf„r
;

3190 
NTFS_SXX_BUFFER
 
sii_buf„r
;

3191 
TSK_FS_FILE
 *
£cuª
 = 
NULL
;

3192 
ssize_t
 
˙t
;

3194 
¡fs
->
sii_d©a
.
buf„r
 = 
NULL
;

3195 
¡fs
->
sii_d©a
.
size
 = 0;

3196 
¡fs
->
sii_d©a
.
u£d
 = 0;

3197 
¡fs
->
sds_d©a
.
buf„r
 = 
NULL
;

3198 
¡fs
->
sds_d©a
.
size
 = 0;

3199 
¡fs
->
sds_d©a
.
u£d
 = 0;

3204 
£cuª
 = 
	`tsk_fs_fûe_›í_mëa
(
fs
, 
NULL
, 
NTFS_MFT_SECURE
);

3205 i‡(!
£cuª
) {

3206 i‡(
tsk_vîbo£
)

3207 
	`tsk_Ârötf
(
°dîr
,

3209 
tsk_îr°r
);

3210 
	`tsk_îr‹_ª£t
();

3215 
fs_mëa
 = 
£cuª
->
mëa
;

3216 i‡(!
fs_mëa
) {

3217 i‡(
tsk_vîbo£
)

3218 
	`tsk_Ârötf
(
°dîr
,

3220 
	`tsk_îr‹_ª£t
();

3224 
fs_©å_sii
 =

3225 
	`tsk_fs_©åli°_gë_«me_ty≥
(
fs_mëa
->
©å
, 
NTFS_ATYPE_IDXALLOC
,

3227 i‡(!
fs_©å_sii
) {

3228 i‡(
tsk_vîbo£
)

3229 
	`tsk_Ârötf
(
°dîr
,

3231 
	`tsk_îr‹_ª£t
();

3236 
fs_©å
 = 
	`tsk_fs_©åli°_gë
(
fs_mëa
->
©å
, 
NTFS_ATYPE_DATA
);

3237 i‡(!
fs_©å
) {

3238 i‡(
tsk_vîbo£
)

3239 
	`tsk_Ârötf
(
°dîr
,

3241 
	`tsk_îr‹_ª£t
();

3246 
sii_buf„r
.
size
 = (
size_t
Ë
	`roundup
(
fs_©å_sii
->size, 
fs
->
block_size
);

3247 
sii_buf„r
.
u£d
 = 0;

3248 i‡((
sii_buf„r
.
buf„r
 = 
	`tsk_mÆloc
(sii_buf„r.
size
)Ë=
NULL
) {

3253 
¡fs
->
sii_d©a
.
size
 = 0;

3254 
¡fs
->
sii_d©a
.
u£d
 = 0;

3255 i‡((
¡fs
->
sii_d©a
.
buf„r
 = 
	`tsk_mÆloc
(
sii_buf„r
.
size
)Ë=
NULL
) {

3256 i‡(
sii_buf„r
.
buf„r
)

3257 
	`‰ì
(
sii_buf„r
.
buf„r
);

3258 
sii_buf„r
.
buf„r
 = 
NULL
;

3265 
sds_buf„r
.
size
 = (
size_t
Ë
	`roundup
(
fs_©å
->size, 
fs
->
block_size
);

3266 
sds_buf„r
.
u£d
 = 0;

3267 i‡((
sds_buf„r
.
buf„r
 = 
	`tsk_mÆloc
(sds_buf„r.
size
)Ë=
NULL
) {

3268 i‡(
sii_buf„r
.
buf„r
)

3269 
	`‰ì
(
sii_buf„r
.
buf„r
);

3270 
sii_buf„r
.
buf„r
 = 
NULL
;

3272 i‡(
¡fs
->
sii_d©a
.
buf„r
)

3273 
	`‰ì
(
¡fs
->
sii_d©a
.
buf„r
);

3274 
¡fs
->
sii_d©a
.
buf„r
 = 
NULL
;

3280 
˙t
 =

3281 
	`tsk_fs_©å_ªad
(
fs_©å_sii
, 0, 
sii_buf„r
.
buf„r
,

3282 
sii_buf„r
.
size
, (
TSK_FS_FILE_READ_FLAG_ENUM
) 0);

3283 i‡(
˙t
 !
sii_buf„r
.
size
) {

3284 i‡(
tsk_vîbo£
)

3285 
	`tsk_Ârötf
(
°dîr
,

3287 
tsk_îr°r
);

3288 
	`tsk_îr‹_ª£t
();

3293 
˙t
 =

3294 
	`tsk_fs_©å_ªad
(
fs_©å
, (
TSK_OFF_T
Ë
sds_buf„r
.
u£d
,

3295 
sds_buf„r
.
buf„r
, sds_buf„r.
size
,

3296 (
TSK_FS_FILE_READ_FLAG_ENUM
) 0);

3297 i‡(
˙t
 !
sds_buf„r
.
size
) {

3298 i‡(
tsk_vîbo£
)

3299 
	`tsk_Ârötf
(
°dîr
,

3301 
tsk_îr°r
);

3302 
	`tsk_îr‹_ª£t
();

3307 
	`¡fs_¥oc_sii
(
fs
, &
sii_buf„r
);

3310 
¡fs
->
sds_d©a
 = 
sds_buf„r
;

3312 i‡(
sii_buf„r
.
buf„r
)

3313 
	`‰ì
(
sii_buf„r
.
buf„r
);

3315 
	`tsk_fs_mëa_˛o£
(
fs_mëa
);

3317 
	}
}

3328 
TSK_FS_BLOCK_FLAG_ENUM


3329 
	$¡fs_block_gëÊags
(
TSK_FS_INFO
 * 
a_fs
, 
TSK_DADDR_T
 
a_addr
)

3331 
NTFS_INFO
 *
¡fs
 = (NTFS_INFO *Ë
a_fs
;

3332 
ªtvÆ
;

3333 
Êags
 = 0;

3336 
ªtvÆ
 = 
	`is_˛u°Æloc
(
¡fs
, 
a_addr
);

3337 i‡(
ªtvÆ
 == 1)

3338 
Êags
 = 
TSK_FS_BLOCK_FLAG_ALLOC
;

3339 i‡(
ªtvÆ
 == 0)

3340 
Êags
 = 
TSK_FS_BLOCK_FLAG_UNALLOC
;

3342  
Êags
;

3343 
	}
}

3353 
uöt8_t


3354 
	$¡fs_block_wÆk
(
TSK_FS_INFO
 * 
fs
,

3355 
TSK_DADDR_T
 
a_°¨t_blk
, TSK_DADDR_T 
a_íd_blk
,

3356 
TSK_FS_BLOCK_WALK_FLAG_ENUM
 
a_Êags
, 
TSK_FS_BLOCK_WALK_CB
 
a_a˘i⁄
,

3357 *
a_±r
)

3359 *
my«me
 = "ntfs_block_walk";

3360 
NTFS_INFO
 *
¡fs
 = (NTFS_INFO *Ë
fs
;

3361 
TSK_DADDR_T
 
addr
;

3362 
TSK_FS_BLOCK
 *
fs_block
;

3365 
	`tsk_îr‹_ª£t
();

3370 i‡(
a_°¨t_blk
 < 
fs
->
fú°_block
 ||á_°¨t_blk > fs->
œ°_block
) {

3371 
	`tsk_îr‹_ª£t
();

3372 
tsk_î∫o
 = 
TSK_ERR_FS_WALK_RNG
;

3373 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

3374 "%s: sèπ block: %" 
PRIuDADDR
 "", 
my«me
, 
a_°¨t_blk
);

3377 i‡(
a_íd_blk
 < 
fs
->
fú°_block
 ||á_íd_blk > fs->
œ°_block
) {

3378 
	`tsk_îr‹_ª£t
();

3379 
tsk_î∫o
 = 
TSK_ERR_FS_WALK_RNG
;

3380 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

3381 "%s:Üa° block: %" 
PRIuDADDR
 "", 
my«me
, 
a_íd_blk
);

3386 i‡(((
a_Êags
 & 
TSK_FS_BLOCK_WALK_FLAG_ALLOC
) == 0) &&

3387 ((
a_Êags
 & 
TSK_FS_BLOCK_WALK_FLAG_UNALLOC
) == 0)) {

3388 
a_Êags
 |=

3389 (
TSK_FS_BLOCK_WALK_FLAG_ALLOC
 |

3390 
TSK_FS_BLOCK_WALK_FLAG_UNALLOC
);

3392 i‡(((
a_Êags
 & 
TSK_FS_BLOCK_WALK_FLAG_META
) == 0) &&

3393 ((
a_Êags
 & 
TSK_FS_BLOCK_WALK_FLAG_CONT
) == 0)) {

3394 
a_Êags
 |=

3395 (
TSK_FS_BLOCK_WALK_FLAG_CONT
 | 
TSK_FS_BLOCK_WALK_FLAG_META
);

3399 i‡((
fs_block
 = 
	`tsk_fs_block_Æloc
(
fs
)Ë=
NULL
) {

3404 
addr
 = 
a_°¨t_blk
;ádd∏<
a_íd_blk
;áddr++) {

3405 
ªtvÆ
;

3406 
myÊags
;

3409 
ªtvÆ
 = 
	`is_˛u°Æloc
(
¡fs
, 
addr
);

3410 i‡(
ªtvÆ
 == -1) {

3411 
	`tsk_fs_block_‰ì
(
fs_block
);

3415 i‡(
ªtvÆ
 == 1) {

3416 
myÊags
 = 
TSK_FS_BLOCK_FLAG_ALLOC
;

3419 
myÊags
 = 
TSK_FS_BLOCK_FLAG_UNALLOC
;

3423 i‡((
myÊags
 & 
TSK_FS_BLOCK_FLAG_ALLOC
)

3424 && (!(
a_Êags
 & 
TSK_FS_BLOCK_WALK_FLAG_ALLOC
)))

3426 i‡((
myÊags
 & 
TSK_FS_BLOCK_FLAG_UNALLOC
)

3427 && (!(
a_Êags
 & 
TSK_FS_BLOCK_WALK_FLAG_UNALLOC
)))

3430 i‡(
	`tsk_fs_block_gë
(
fs
, 
fs_block
, 
addr
Ë=
NULL
) {

3431 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

3433 
PRIuDADDR
, 
addr
);

3434 
	`tsk_fs_block_‰ì
(
fs_block
);

3438 
ªtvÆ
 = 
	`a_a˘i⁄
(
fs_block
, 
a_±r
);

3439 i‡(
ªtvÆ
 =
TSK_WALK_STOP
) {

3442 i‡(
ªtvÆ
 =
TSK_WALK_ERROR
) {

3443 
	`tsk_fs_block_‰ì
(
fs_block
);

3448 
	`tsk_fs_block_‰ì
(
fs_block
);

3450 
	}
}

3464 
uöt8_t


3465 
	$¡fs_öode_wÆk
(
TSK_FS_INFO
 * 
fs
, 
TSK_INUM_T
 
°¨t_öum
,

3466 
TSK_INUM_T
 
íd_öum
, 
TSK_FS_META_FLAG_ENUM
 
Êags
,

3467 
TSK_FS_META_WALK_CB
 
a_a˘i⁄
, *
±r
)

3469 
NTFS_INFO
 *
¡fs
 = (NTFS_INFO *Ë
fs
;

3470 
myÊags
;

3471 
TSK_INUM_T
 
m·num
;

3472 
TSK_FS_FILE
 *
fs_fûe
;

3473 
TSK_INUM_T
 
íd_öum_tmp
;

3478 i‡(
°¨t_öum
 < 
fs
->
fú°_öum
) {

3479 
	`tsk_îr‹_ª£t
();

3480 
tsk_î∫o
 = 
TSK_ERR_FS_WALK_RNG
;

3481 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

3483 
PRIuINUM
 ")", 
°¨t_öum
);

3486 i‡(
°¨t_öum
 > 
fs
->
œ°_öum
) {

3487 
	`tsk_îr‹_ª£t
();

3488 
tsk_î∫o
 = 
TSK_ERR_FS_WALK_RNG
;

3489 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

3491 
PRIuINUM
 ")", 
°¨t_öum
);

3494 i‡(
íd_öum
 < 
fs
->
fú°_öum
) {

3495 
	`tsk_îr‹_ª£t
();

3496 
tsk_î∫o
 = 
TSK_ERR_FS_WALK_RNG
;

3497 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

3499 
PRIuINUM
 ")", 
íd_öum
);

3502 i‡(
íd_öum
 > 
fs
->
œ°_öum
) {

3503 
	`tsk_îr‹_ª£t
();

3504 
tsk_î∫o
 = 
TSK_ERR_FS_WALK_RNG
;

3505 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

3506 "Endög inodênumbî i†toÿœrgê(%" 
PRIuINUM
 ")", 
íd_öum
);

3512 i‡(
Êags
 & 
TSK_FS_META_FLAG_ORPHAN
) {

3513 
Êags
 |
TSK_FS_META_FLAG_UNALLOC
;

3514 
Êags
 &~
TSK_FS_META_FLAG_ALLOC
;

3515 
Êags
 |
TSK_FS_META_FLAG_USED
;

3516 
Êags
 &~
TSK_FS_META_FLAG_UNUSED
;

3520 i‡(((
Êags
 & 
TSK_FS_META_FLAG_ALLOC
) == 0) &&

3521 ((
Êags
 & 
TSK_FS_META_FLAG_UNALLOC
) == 0)) {

3522 
Êags
 |(
TSK_FS_META_FLAG_ALLOC
 | 
TSK_FS_META_FLAG_UNALLOC
);

3528 i‡(((
Êags
 & 
TSK_FS_META_FLAG_USED
) == 0) &&

3529 ((
Êags
 & 
TSK_FS_META_FLAG_UNUSED
) == 0)) {

3530 
Êags
 |(
TSK_FS_META_FLAG_USED
 | 
TSK_FS_META_FLAG_UNUSED
);

3539 i‡((
Êags
 & 
TSK_FS_META_FLAG_ORPHAN
)

3540 && (
fs
->
li°_öum_«med
 =
NULL
)) {

3541 i‡(
	`tsk_fs_dú_lﬂd_öum_«med
(
fs
Ë!
TSK_OK
) {

3542 
	`°∫ˇt
(
tsk_îr°r2
,

3544 
TSK_ERRSTR_L
);

3549 i‡((
fs_fûe
 = 
	`tsk_fs_fûe_Æloc
(
fs
)Ë=
NULL
)

3552 i‡((
fs_fûe
->
mëa
 = 
	`tsk_fs_mëa_Æloc
(
NTFS_FILE_CONTENT_LEN
)Ë=
NULL
) {

3554 i‡(
fs_fûe
)

3555 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

3561 i‡(
íd_öum
 =
	`TSK_FS_ORPHANDIR_INUM
(
fs
))

3562 
íd_öum_tmp
 = 
íd_öum
 - 1;

3564 
íd_öum_tmp
 = 
íd_öum
;

3567 
m·num
 = 
°¨t_öum
; m·num <
íd_öum_tmp
; mftnum++) {

3568 
ªtvÆ
;

3569 
TSK_RETVAL_ENUM
 
ªtvÆ2
;

3572 i‡((
ªtvÆ2
 = 
	`¡fs_döode_lﬂd
(
¡fs
, 
m·num
)Ë!
TSK_OK
) {

3574 i‡(
ªtvÆ2
 =
TSK_COR
) {

3575 i‡(
tsk_vîbo£
)

3576 
	`tsk_îr‹_¥öt
(
°dîr
);

3577 
	`tsk_îr‹_ª£t
();

3580 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

3587 i‡(
	`tsk_gëu48
(
fs
->
ídün
, 
¡fs
->
m·
->
ba£_ªf
Ë!
NTFS_MFT_BASE
)

3594 
myÊags
 =

3595 ((
	`tsk_gëu16
(
fs
->
ídün
, 
¡fs
->
m·
->
Êags
) &

3596 
NTFS_MFT_INUSE
Ë? 
TSK_FS_META_FLAG_ALLOC
 :

3597 
TSK_FS_META_FLAG_UNALLOC
);

3602 i‡((
myÊags
 & 
TSK_FS_META_FLAG_UNALLOC
) &&

3603 (
Êags
 & 
TSK_FS_META_FLAG_ORPHAN
) &&

3604 (
	`tsk_li°_föd
(
fs
->
li°_öum_«med
, 
m·num
))) {

3609 i‡((
ªtvÆ
 = 
	`¡fs_döode_c›y
(
¡fs
, 
fs_fûe
)Ë!
TSK_OK
) {

3611 i‡(
ªtvÆ
 =
TSK_COR
) {

3612 i‡(
tsk_vîbo£
)

3613 
	`tsk_îr‹_¥öt
(
°dîr
);

3614 
	`tsk_îr‹_ª£t
();

3617 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

3621 
myÊags
 |=

3622 (
fs_fûe
->
mëa
->

3623 
Êags
 & (
TSK_FS_META_FLAG_USED
 | 
TSK_FS_META_FLAG_UNUSED
));

3624 i‡((
Êags
 & 
myÊags
) != myflags)

3628 
ªtvÆ
 = 
	`a_a˘i⁄
(
fs_fûe
, 
±r
);

3629 i‡(
ªtvÆ
 =
TSK_WALK_STOP
) {

3630 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

3633 i‡(
ªtvÆ
 =
TSK_WALK_ERROR
) {

3634 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

3640 i‡((
íd_öum
 =
	`TSK_FS_ORPHANDIR_INUM
(
fs
))

3641 && (
Êags
 & 
TSK_FS_META_FLAG_ALLOC
)

3642 && (
Êags
 & 
TSK_FS_META_FLAG_USED
)) {

3643 
ªtvÆ
;

3645 i‡(
	`tsk_fs_dú_make_‹ph™_dú_mëa
(
fs
, 
fs_fûe
->
mëa
)) {

3646 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

3650 
ªtvÆ
 = 
	`a_a˘i⁄
(
fs_fûe
, 
±r
);

3651 i‡(
ªtvÆ
 =
TSK_WALK_STOP
) {

3652 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

3655 i‡(
ªtvÆ
 =
TSK_WALK_ERROR
) {

3656 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

3661 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

3663 
	}
}

3667 
uöt8_t


3668 
	$¡fs_fscheck
(
TSK_FS_INFO
 * 
fs
, 
FILE
 * 
hFûe
)

3670 
	`tsk_îr‹_ª£t
();

3671 
tsk_î∫o
 = 
TSK_ERR_FS_UNSUPFUNC
;

3672 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

3675 
	}
}

3686 
uöt8_t


3687 
	$¡fs_fs°©
(
TSK_FS_INFO
 * 
fs
, 
FILE
 * 
hFûe
)

3689 
NTFS_INFO
 *
¡fs
 = (NTFS_INFO *Ë
fs
;

3690 
TSK_FS_FILE
 *
fs_fûe
;

3691 c⁄° 
TSK_FS_ATTR
 *
fs_©å
;

3692 
asc
[512];

3693 
¡fs_©ådef
 *
©åde·mp
;

3695 
	`tsk_Ârötf
(
hFûe
, "FILE SYSTEM INFORMATION\n");

3696 
	`tsk_Ârötf
(
hFûe
, "--------------------------------------------\n");

3697 
	`tsk_Ârötf
(
hFûe
, "File System Type: NTFS\n");

3698 
	`tsk_Ârötf
(
hFûe
,

3699 "VﬁumêSîü»Numbî: %.16" 
PRIX64


3700 "\n", 
	`tsk_gëu64
(
fs
->
ídün
, 
¡fs
->fs->
£rül
));

3701 
	`tsk_Ârötf
(
hFûe
, "OEM Name: %c%c%c%c%c%c%c%c\n",

3702 
¡fs
->
fs
->
€m«me
[0],

3703 
¡fs
->
fs
->
€m«me
[1],

3704 
¡fs
->
fs
->
€m«me
[2],

3705 
¡fs
->
fs
->
€m«me
[3],

3706 
¡fs
->
fs
->
€m«me
[4],

3707 
¡fs
->
fs
->
€m«me
[5],Çtfs->fs->oemname[6],Çtfs->fs->oemname[7]);

3711 i‡((
fs_fûe
 = 
	`tsk_fs_fûe_›í_mëa
(
fs
, 
NULL
, 
NTFS_MFT_VOL
)) == NULL) {

3712 
	`tsk_îr‹_ª£t
();

3713 
tsk_î∫o
 = 
TSK_ERR_FS_INODE_NUM
;

3714 
	`°∫ˇt
(
tsk_îr°r2
, " - fsstat: Error finding Volume MFT Entry",

3715 
TSK_ERRSTR_L
 - 
	`°æí
(
tsk_îr°r2
));

3719 
fs_©å
 = 
	`tsk_fs_©åli°_gë
(
fs_fûe
->
mëa
->
©å
, 
NTFS_ATYPE_VNAME
);

3720 i‡(!
fs_©å
) {

3721 
	`tsk_îr‹_ª£t
();

3722 
tsk_î∫o
 = 
TSK_ERR_FS_INODE_COR
;

3723 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

3728 i‡((
fs_©å
->
Êags
 & 
TSK_FS_ATTR_RES
)

3729 && (
fs_©å
->
size
)) {

3731 
UTF16
 *
«me16
 = (UTF16 *Ë
fs_©å
->
rd
.
buf
;

3732 
UTF8
 *
«me8
 = (UTF8 *Ë
asc
;

3733 
ªtVÆ
;

3734 
ªtVÆ
 =

3735 
	`tsk_UTF16toUTF8
(
fs
->
ídün
, (c⁄° 
UTF16
 **Ë&
«me16
,

3736 (
UTF16
 *Ë((
uöçå_t
Ë
«me16
 +

3737 (Ë
fs_©å
->
size
), &
«me8
,

3738 (
UTF8
 *Ë((
uöçå_t
Ë
«me8
 + (
asc
)),

3739 
TSKÀnõ¡C⁄vîsi⁄
);

3740 i‡(
ªtVÆ
 !
TSKc⁄vîsi⁄OK
) {

3741 i‡(
tsk_vîbo£
)

3742 
	`tsk_Ârötf
(
°dîr
,

3744 
ªtVÆ
);

3745 *
«me8
 = '\0';

3749 i‡((
uöçå_t
Ë
«me8
 >(uöçå_tË
asc
 + (asc))

3750 
asc
[(asc) - 1] = '\0';

3752 *
«me8
 = '\0';

3753 
	`tsk_Ârötf
(
hFûe
, "VﬁumêName: %s\n", 
asc
);

3756 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

3757 
fs_fûe
 = 
NULL
;

3758 
fs_©å
 = 
NULL
;

3759 i‡(
¡fs
->
vî
 =
NTFS_VINFO_NT
)

3760 
	`tsk_Ârötf
(
hFûe
, "Version: Windows NT\n");

3761 i‡(
¡fs
->
vî
 =
NTFS_VINFO_2K
)

3762 
	`tsk_Ârötf
(
hFûe
, "Version: Windows 2000\n");

3763 i‡(
¡fs
->
vî
 =
NTFS_VINFO_XP
)

3764 
	`tsk_Ârötf
(
hFûe
, "Version: Windows XP\n");

3765 
	`tsk_Ârötf
(
hFûe
, "\nMETADATA INFORMATION\n");

3766 
	`tsk_Ârötf
(
hFûe
, "--------------------------------------------\n");

3767 
	`tsk_Ârötf
(
hFûe
,

3768 "Fú° Clu°î o‡MFT: %" 
PRIu64
 "\n",

3769 
	`tsk_gëu64
(
fs
->
ídün
, 
¡fs
->fs->
m·_˛u°
));

3770 
	`tsk_Ârötf
(
hFûe
,

3772 
PRIu64
 "\n", 
	`tsk_gëu64
(
fs
->
ídün
, 
¡fs
->fs->
m·m_˛u°
));

3773 
	`tsk_Ârötf
(
hFûe
,

3774 "Sizêo‡MFT E¡rõs: %" 
PRIu16
 " byãs\n", 
¡fs
->
m·_rsize_b
);

3775 
	`tsk_Ârötf
(
hFûe
,

3776 "Sizêo‡Index Rec‹ds: %" 
PRIu16
 " byãs\n", 
¡fs
->
idx_rsize_b
);

3777 
	`tsk_Ârötf
(
hFûe
,

3778 "R™ge: %" 
PRIuINUM
 " - %" PRIuINUM

3779 "\n", 
fs
->
fú°_öum
, fs->
œ°_öum
);

3780 
	`tsk_Ârötf
(
hFûe
, "RoŸ Dúe˘‹y: %" 
PRIuINUM
 "\n", 
fs
->
roŸ_öum
);

3781 
	`tsk_Ârötf
(
hFûe
, "\nCONTENT INFORMATION\n");

3782 
	`tsk_Ârötf
(
hFûe
, "--------------------------------------------\n");

3783 
	`tsk_Ârötf
(
hFûe
, "Se˘‹ Size: %" 
PRIu16
 "\n", 
¡fs
->
ssize_b
);

3784 
	`tsk_Ârötf
(
hFûe
, "Clu°î Size: %" 
PRIu16
 "\n", 
¡fs
->
csize_b
);

3785 
	`tsk_Ârötf
(
hFûe
,

3786 "TŸÆ Clu°î R™ge: %" 
PRIuDADDR


3787 " - %" 
PRIuDADDR
 "\n", 
fs
->
fú°_block
, fs->
œ°_block
);

3789 i‡(
fs
->
œ°_block
 !fs->
œ°_block_a˘
)

3790 
	`tsk_Ârötf
(
hFûe
,

3791 "TŸÆ R™gêö Image: %" 
PRIuDADDR
 " - %" PRIuDADDR "\n",

3792 
fs
->
fú°_block
, fs->
œ°_block_a˘
);

3794 
	`tsk_Ârötf
(
hFûe
,

3795 "TŸÆ Se˘‹ R™ge: 0 - %" 
PRIu64


3796 "\n", 
	`tsk_gëu64
(
fs
->
ídün
, 
¡fs
->fs->
vﬁ_size_s
) - 1);

3800 
	`tsk_Ârötf
(
hFûe
, "\n$AttrDef Attribute Values:\n");

3801 i‡(!
¡fs
->
©ådef
) {

3802 i‡(
	`¡fs_lﬂd_©ådef
(
¡fs
)) {

3803 
	`tsk_Ârötf
(
hFûe
, "ErrorÜoadingáttribute definitions\n");

3804 
©ådef_egªss
;

3808 
©åde·mp
 = 
¡fs
->
©ådef
;

3809 (((
uöçå_t
Ë
©åde·mp
 - (uöçå_tË
¡fs
->
©ådef
 +

3810 (
¡fs_©ådef
)Ë< 
¡fs
->
©ådef_Àn
) &&

3811 (
	`tsk_gëu32
(
fs
->
ídün
, 
©åde·mp
->
ty≥
))) {

3812 
UTF16
 *
«me16
 = (UTF16 *Ë
©åde·mp
->
œbñ
;

3813 
UTF8
 *
«me8
 = (UTF8 *Ë
asc
;

3814 
ªtVÆ
;

3815 
ªtVÆ
 =

3816 
	`tsk_UTF16toUTF8
(
fs
->
ídün
, (c⁄° 
UTF16
 **Ë&
«me16
,

3817 (
UTF16
 *Ë((
uöçå_t
Ë
«me16
 +

3818 (
©åde·mp
->
œbñ
)),

3819 &
«me8
,

3820 (
UTF8
 *Ë((
uöçå_t
Ë
«me8
 + (
asc
)),

3821 
TSKÀnõ¡C⁄vîsi⁄
);

3822 i‡(
ªtVÆ
 !
TSKc⁄vîsi⁄OK
) {

3823 i‡(
tsk_vîbo£
)

3824 
	`tsk_Ârötf
(
°dîr
,

3826 
ªtVÆ
);

3827 *
«me8
 = '\0';

3831 i‡((
uöçå_t
Ë
«me8
 >(uöçå_tË
asc
 + (asc))

3832 
asc
[(asc) - 1] = '\0';

3834 *
«me8
 = '\0';

3835 
	`tsk_Ârötf
(
hFûe
, "%†(%" 
PRIu32
 ") ",

3836 
asc
, 
	`tsk_gëu32
(
fs
->
ídün
, 
©åde·mp
->
ty≥
));

3837 i‡((
	`tsk_gëu64
(
fs
->
ídün
, 
©åde·mp
->
mösize
) == 0) &&

3838 (
	`tsk_gëu64
(
fs
->
ídün
,

3839 
©åde·mp
->
maxsize
) == 0xffffffffffffffffULL)) {

3841 
	`tsk_Ârötf
(
hFûe
, "Size: No Limit");

3844 
	`tsk_Ârötf
(
hFûe
, "Size: %" 
PRIu64
 "-%" PRIu64,

3845 
	`tsk_gëu64
(
fs
->
ídün
, 
©åde·mp
->
mösize
),

3846 
	`tsk_gëu64
(
fs
->
ídün
, 
©åde·mp
->
maxsize
));

3849 
	`tsk_Ârötf
(
hFûe
, " Flags: %s%s%s\n",

3850 (
	`tsk_gëu32
(
fs
->
ídün
, 
©åde·mp
->
Êags
) &

3851 
NTFS_ATTRDEF_FLAGS_RES
 ? "Resident" :

3852 ""), (
	`tsk_gëu32
(
fs
->
ídün
,

3853 
©åde·mp
->
Êags
) &

3854 
NTFS_ATTRDEF_FLAGS_NONRES
 ?

3856 (
	`tsk_gëu32
(
fs
->
ídün
, 
©åde·mp
->
Êags
) &

3857 
NTFS_ATTRDEF_FLAGS_IDX
 ? ",Index" : ""));

3858 
©åde·mp
++;

3861 
©ådef_egªss
:

3864 
	}
}

3869 
	#NTFS_PRINT_WIDTH
 8

	)

3871 
FILE
 *
	mhFûe
;

3872 
	midx
;

3873 } 
	tNTFS_PRINT_ADDR
;

3874 
TSK_WALK_RET_ENUM


3875 
	$¥öt_addr_a˘
(
TSK_FS_FILE
 * 
fs_fûe
, 
TSK_OFF_T
 
a_off
, 
TSK_DADDR_T
 
addr
,

3876 *
buf
, 
size_t
 
size
, 
TSK_FS_BLOCK_FLAG_ENUM
 
Êags
, *
±r
)

3878 
NTFS_PRINT_ADDR
 *
¥öt
 = (NTFS_PRINT_ADDR *Ë
±r
;

3879 
	`tsk_Ârötf
(
¥öt
->
hFûe
, "%" 
PRIuDADDR
 " ", 
addr
);

3880 i‡(++(
¥öt
->
idx
Ë=
NTFS_PRINT_WIDTH
) {

3881 
	`tsk_Ârötf
(
¥öt
->
hFûe
, "\n");

3882 
¥öt
->
idx
 = 0;

3885  
TSK_WALK_CONT
;

3886 
	}
}

3899 
uöt8_t


3900 
	$¡fs_i°©
(
TSK_FS_INFO
 * 
fs
, 
FILE
 * 
hFûe
,

3901 
TSK_INUM_T
 
öum
, 
TSK_DADDR_T
 
numblock
, 
öt32_t
 
£c_skew
)

3903 
TSK_FS_FILE
 *
fs_fûe
;

3904 c⁄° 
TSK_FS_ATTR
 *
fs_©å
;

3905 
NTFS_INFO
 *
¡fs
 = (NTFS_INFO *Ë
fs
;

3908 
	`tsk_îr‹_ª£t
();

3910 i‡((
fs_fûe
 = 
	`tsk_fs_fûe_›í_mëa
(
fs
, 
NULL
, 
öum
)) == NULL) {

3911 
	`°∫ˇt
(
tsk_îr°r2
, " - istat",

3912 
TSK_ERRSTR_L
 - 
	`°æí
(
tsk_îr°r2
));

3916 
	`tsk_Ârötf
(
hFûe
, "MFT Entry Header Values:\n");

3917 
	`tsk_Ârötf
(
hFûe
,

3918 "E¡ry: %" 
PRIuINUM


3919 " Sequí˚: %" 
PRIu32
 "\n", 
öum
, 
fs_fûe
->
mëa
->
£q
);

3920 i‡(
	`tsk_gëu48
(
fs
->
ídün
, 
¡fs
->
m·
->
ba£_ªf
) != 0) {

3921 
	`tsk_Ârötf
(
hFûe
,

3922 "Ba£ FûêRec‹d: %" 
PRIu64
 "\n",

3923 (
uöt64_t
Ë
	`tsk_gëu48
(
fs
->
ídün
, 
¡fs
->
m·
->
ba£_ªf
));

3926 
	`tsk_Ârötf
(
hFûe
,

3927 "$LogFûêSequí˚ Numbî: %" 
PRIu64


3928 "\n", 
	`tsk_gëu64
(
fs
->
ídün
, 
¡fs
->
m·
->
l¢
));

3929 
	`tsk_Ârötf
(
hFûe
, "%sAllocated %s\n",

3930 (
fs_fûe
->
mëa
->
Êags
 & 
TSK_FS_META_FLAG_ALLOC
) ? "" :

3932 (
fs_fûe
->
mëa
->
ty≥
 ==

3933 
TSK_FS_META_TYPE_DIR
) ? "Directory" : "File");

3934 
	`tsk_Ârötf
(
hFûe
, "Löks: %u\n", 
fs_fûe
->
mëa
->
∆ök
);

3937 
fs_©å
 = 
	`tsk_fs_©åli°_gë
(
fs_fûe
->
mëa
->
©å
, 
NTFS_ATYPE_SI
);

3938 i‡(
fs_©å
) {

3939 
¡fs_©å_si
 *
si
 = (¡fs_©å_sò*Ë
fs_©å
->
rd
.
buf
;

3940 *
sid_°r
;

3942 
a
 = 0;

3943 
	`tsk_Ârötf
(
hFûe
, "\n$STANDARD_INFORMATION Attribute Values:\n");

3944 
	`tsk_Ârötf
(
hFûe
, "Flags: ");

3945 i‡(
	`tsk_gëu32
(
fs
->
ídün
, 
si
->
dos
Ë& 
NTFS_SI_RO
)

3946 
	`tsk_Ârötf
(
hFûe
, "%sRód O∆y", 
a
++ == 0 ? "" : ", ");

3947 i‡(
	`tsk_gëu32
(
fs
->
ídün
, 
si
->
dos
Ë& 
NTFS_SI_HID
)

3948 
	`tsk_Ârötf
(
hFûe
, "%sHiddí", 
a
++ == 0 ? "" : ", ");

3949 i‡(
	`tsk_gëu32
(
fs
->
ídün
, 
si
->
dos
Ë& 
NTFS_SI_SYS
)

3950 
	`tsk_Ârötf
(
hFûe
, "%sSy°em", 
a
++ == 0 ? "" : ", ");

3951 i‡(
	`tsk_gëu32
(
fs
->
ídün
, 
si
->
dos
Ë& 
NTFS_SI_ARCH
)

3952 
	`tsk_Ârötf
(
hFûe
, "%sArchive", 
a
++ == 0 ? "" : ", ");

3953 i‡(
	`tsk_gëu32
(
fs
->
ídün
, 
si
->
dos
Ë& 
NTFS_SI_DEV
)

3954 
	`tsk_Ârötf
(
hFûe
, "%sDevi˚", 
a
++ == 0 ? "" : ", ");

3955 i‡(
	`tsk_gëu32
(
fs
->
ídün
, 
si
->
dos
Ë& 
NTFS_SI_NORM
)

3956 
	`tsk_Ârötf
(
hFûe
, "%sN‹mÆ", 
a
++ == 0 ? "" : ", ");

3957 i‡(
	`tsk_gëu32
(
fs
->
ídün
, 
si
->
dos
Ë& 
NTFS_SI_TEMP
)

3958 
	`tsk_Ârötf
(
hFûe
, "%sTemp‹¨y", 
a
++ == 0 ? "" : ", ");

3959 i‡(
	`tsk_gëu32
(
fs
->
ídün
, 
si
->
dos
Ë& 
NTFS_SI_SPAR
)

3960 
	`tsk_Ârötf
(
hFûe
, "%sS∑r£", 
a
++ == 0 ? "" : ", ");

3961 i‡(
	`tsk_gëu32
(
fs
->
ídün
, 
si
->
dos
Ë& 
NTFS_SI_REP
)

3962 
	`tsk_Ârötf
(
hFûe
, "%sRï¨£ Poöt", 
a
++ == 0 ? "" : ", ");

3963 i‡(
	`tsk_gëu32
(
fs
->
ídün
, 
si
->
dos
Ë& 
NTFS_SI_COMP
)

3964 
	`tsk_Ârötf
(
hFûe
, "%sCom¥es£d", 
a
++ == 0 ? "" : ", ");

3965 i‡(
	`tsk_gëu32
(
fs
->
ídün
, 
si
->
dos
Ë& 
NTFS_SI_OFF
)

3966 
	`tsk_Ârötf
(
hFûe
, "%sOfÊöe", 
a
++ == 0 ? "" : ", ");

3967 i‡(
	`tsk_gëu32
(
fs
->
ídün
, 
si
->
dos
Ë& 
NTFS_SI_NOIDX
)

3968 
	`tsk_Ârötf
(
hFûe
, "%sNot Content Indexed",

3969 
a
++ == 0 ? "" : ", ");

3970 i‡(
	`tsk_gëu32
(
fs
->
ídün
, 
si
->
dos
Ë& 
NTFS_SI_ENC
)

3971 
	`tsk_Ârötf
(
hFûe
, "%sEn¸y±ed", 
a
++ == 0 ? "" : ", ");

3972 
	`tsk_Ârötf
(
hFûe
, "\n");

3973 
	`tsk_Ârötf
(
hFûe
, "Ow√∏ID: %" 
PRIu32
 "\n",

3974 
	`tsk_gëu32
(
fs
->
ídün
, 
si
->
own_id
));

3976 #i‡
TSK_USE_SID


3977 
	`¡fs_fûe_gë_sid°r
(
fs_fûe
, &
sid_°r
);

3979 
	`tsk_Ârötf
(
hFûe
, "Securôy ID: %" 
PRIu32
 " (%s)\n",

3980 
	`tsk_gëu32
(
fs
->
ídün
, 
si
->
£c_id
), 
sid_°r
 ? sid_str : "");

3981 
	`‰ì
(
sid_°r
);

3982 
sid_°r
 = 
NULL
;

3986 i‡(
	`tsk_gëu32
(
fs
->
ídün
, 
si
->
maxvî
) != 0) {

3987 
	`tsk_Ârötf
(
hFûe
,

3988 "Vîsi⁄ %" 
PRIu32
 " of %" PRIu32

3989 "\n", 
	`tsk_gëu32
(
fs
->
ídün
, 
si
->
vî
),

3990 
	`tsk_gëu32
(
fs
->
ídün
, 
si
->
maxvî
));

3993 i‡(
	`tsk_gëu64
(
fs
->
ídün
, 
si
->
quŸa
) != 0) {

3994 
	`tsk_Ârötf
(
hFûe
, "QuŸ®Ch¨ged: %" 
PRIu64
 "\n",

3995 
	`tsk_gëu64
(
fs
->
ídün
, 
si
->
quŸa
));

3998 i‡(
	`tsk_gëu64
(
fs
->
ídün
, 
si
->
u¢
) != 0) {

3999 
	`tsk_Ârötf
(
hFûe
,

4001 
PRIu64
 "\n", 
	`tsk_gëu64
(
fs
->
ídün
, 
si
->
u¢
));

4007 i‡(
£c_skew
 != 0) {

4008 
	`tsk_Ârötf
(
hFûe
, "\nAdjustedÅimes:\n");

4009 
fs_fûe
->
mëa
->
mtime
 -
£c_skew
;

4010 
fs_fûe
->
mëa
->
©ime
 -
£c_skew
;

4011 
fs_fûe
->
mëa
->
˘ime
 -
£c_skew
;

4012 
fs_fûe
->
mëa
->
¸time
 -
£c_skew
;

4013 
	`tsk_Ârötf
(
hFûe
, "Created:\t%s",

4014 
	`˘ime
(&
fs_fûe
->
mëa
->
¸time
));

4015 
	`tsk_Ârötf
(
hFûe
, "File Modified:\t%s",

4016 
	`˘ime
(&
fs_fûe
->
mëa
->
mtime
));

4017 
	`tsk_Ârötf
(
hFûe
, "MFT Modified:\t%s",

4018 
	`˘ime
(&
fs_fûe
->
mëa
->
˘ime
));

4019 
	`tsk_Ârötf
(
hFûe
, "Accessed:\t%s",

4020 
	`˘ime
(&
fs_fûe
->
mëa
->
©ime
));

4021 
fs_fûe
->
mëa
->
mtime
 +
£c_skew
;

4022 
fs_fûe
->
mëa
->
©ime
 +
£c_skew
;

4023 
fs_fûe
->
mëa
->
˘ime
 +
£c_skew
;

4024 
fs_fûe
->
mëa
->
¸time
 +
£c_skew
;

4025 
	`tsk_Ârötf
(
hFûe
, "\nOriginalÅimes:\n");

4028 
	`tsk_Ârötf
(
hFûe
, "Cª©ed:\t%s", 
	`˘ime
(&
fs_fûe
->
mëa
->
¸time
));

4029 
	`tsk_Ârötf
(
hFûe
, "File Modified:\t%s",

4030 
	`˘ime
(&
fs_fûe
->
mëa
->
mtime
));

4031 
	`tsk_Ârötf
(
hFûe
, "MFT Modified:\t%s",

4032 
	`˘ime
(&
fs_fûe
->
mëa
->
˘ime
));

4033 
	`tsk_Ârötf
(
hFûe
, "Ac˚s£d:\t%s", 
	`˘ime
(&
fs_fûe
->
mëa
->
©ime
));

4037 
fs_©å
 = 
	`tsk_fs_©åli°_gë
(
fs_fûe
->
mëa
->
©å
, 
NTFS_ATYPE_FNAME
);

4038 i‡(
fs_©å
) {

4040 
¡fs_©å_‚ame
 *
‚ame
 = (¡fs_©å_‚amê*Ë
fs_©å
->
rd
.
buf
;

4041 
time_t
 
¸_time
, 
m_time
, 
c_time
, 
a_time
;

4042 
uöt64_t
 
Êags
;

4043 
a
 = 0;

4044 
	`tsk_Ârötf
(
hFûe
, "\n$FILE_NAME Attribute Values:\n");

4045 
Êags
 = 
	`tsk_gëu64
(
fs
->
ídün
, 
‚ame
->flags);

4046 
	`tsk_Ârötf
(
hFûe
, "Flags: ");

4047 i‡(
Êags
 & 
NTFS_FNAME_FLAGS_DIR
)

4048 
	`tsk_Ârötf
(
hFûe
, "%sDúe˘‹y", 
a
++ == 0 ? "" : ", ");

4049 i‡(
Êags
 & 
NTFS_FNAME_FLAGS_DEV
)

4050 
	`tsk_Ârötf
(
hFûe
, "%sDevi˚", 
a
++ == 0 ? "" : ", ");

4051 i‡(
Êags
 & 
NTFS_FNAME_FLAGS_NORM
)

4052 
	`tsk_Ârötf
(
hFûe
, "%sN‹mÆ", 
a
++ == 0 ? "" : ", ");

4053 i‡(
Êags
 & 
NTFS_FNAME_FLAGS_RO
)

4054 
	`tsk_Ârötf
(
hFûe
, "%sRód O∆y", 
a
++ == 0 ? "" : ", ");

4055 i‡(
Êags
 & 
NTFS_FNAME_FLAGS_HID
)

4056 
	`tsk_Ârötf
(
hFûe
, "%sHiddí", 
a
++ == 0 ? "" : ", ");

4057 i‡(
Êags
 & 
NTFS_FNAME_FLAGS_SYS
)

4058 
	`tsk_Ârötf
(
hFûe
, "%sSy°em", 
a
++ == 0 ? "" : ", ");

4059 i‡(
Êags
 & 
NTFS_FNAME_FLAGS_ARCH
)

4060 
	`tsk_Ârötf
(
hFûe
, "%sArchive", 
a
++ == 0 ? "" : ", ");

4061 i‡(
Êags
 & 
NTFS_FNAME_FLAGS_TEMP
)

4062 
	`tsk_Ârötf
(
hFûe
, "%sTemp", 
a
++ == 0 ? "" : ", ");

4063 i‡(
Êags
 & 
NTFS_FNAME_FLAGS_SPAR
)

4064 
	`tsk_Ârötf
(
hFûe
, "%sS∑r£", 
a
++ == 0 ? "" : ", ");

4065 i‡(
Êags
 & 
NTFS_FNAME_FLAGS_REP
)

4066 
	`tsk_Ârötf
(
hFûe
, "%sRï¨£ Poöt", 
a
++ == 0 ? "" : ", ");

4067 i‡(
Êags
 & 
NTFS_FNAME_FLAGS_COMP
)

4068 
	`tsk_Ârötf
(
hFûe
, "%sCom¥es£d", 
a
++ == 0 ? "" : ", ");

4069 i‡(
Êags
 & 
NTFS_FNAME_FLAGS_ENC
)

4070 
	`tsk_Ârötf
(
hFûe
, "%sEn¸y±ed", 
a
++ == 0 ? "" : ", ");

4071 i‡(
Êags
 & 
NTFS_FNAME_FLAGS_OFF
)

4072 
	`tsk_Ârötf
(
hFûe
, "%sOfÊöe", 
a
++ == 0 ? "" : ", ");

4073 i‡(
Êags
 & 
NTFS_FNAME_FLAGS_NOIDX
)

4074 
	`tsk_Ârötf
(
hFûe
, "%sNot Content Indexed",

4075 
a
++ == 0 ? "" : ", ");

4076 i‡(
Êags
 & 
NTFS_FNAME_FLAGS_IDXVIEW
)

4077 
	`tsk_Ârötf
(
hFûe
, "%sIndex Võw", 
a
++ == 0 ? "" : ", ");

4078 
	`tsk_Ârötf
(
hFûe
, "\n");

4081 i‡(
fs_fûe
->
mëa
->
«me2
) {

4082 
TSK_FS_META_NAME_LIST
 *
fs_«me
 = 
fs_fûe
->
mëa
->
«me2
;

4083 
	`tsk_Ârötf
(
hFûe
, "Name: ");

4084 
fs_«me
) {

4085 
	`tsk_Ârötf
(
hFûe
, "%s", 
fs_«me
->
«me
);

4086 
fs_«me
 = fs_«me->
√xt
;

4087 i‡(
fs_«me
)

4088 
	`tsk_Ârötf
(
hFûe
, ", ");

4090 
	`tsk_Ârötf
(
hFûe
, "\n");

4094 
	`tsk_Ârötf
(
hFûe
,

4095 "P¨íàMFT E¡ry: %" 
PRIu64


4096 " \tSequí˚: %" 
PRIu16
 "\n",

4097 (
uöt64_t
Ë
	`tsk_gëu48
(
fs
->
ídün
, 
‚ame
->
∑r_ªf
),

4098 
	`tsk_gëu16
(
fs
->
ídün
, 
‚ame
->
∑r_£q
));

4099 
	`tsk_Ârötf
(
hFûe
,

4100 "AŒoˇãd Size: %" 
PRIu64


4101 " \tA˘uÆ Size: %" 
PRIu64
 "\n",

4102 
	`tsk_gëu64
(
fs
->
ídün
, 
‚ame
->
Æloc_fsize
),

4103 
	`tsk_gëu64
(
fs
->
ídün
, 
‚ame
->
ªÆ_fsize
));

4107 
¸_time
 = 
	`¡2unixtime
(
	`tsk_gëu64
(
fs
->
ídün
, 
‚ame
->
¸time
));

4109 
m_time
 = 
	`¡2unixtime
(
	`tsk_gëu64
(
fs
->
ídün
, 
‚ame
->
mtime
));

4111 
c_time
 = 
	`¡2unixtime
(
	`tsk_gëu64
(
fs
->
ídün
, 
‚ame
->
˘ime
));

4113 
a_time
 = 
	`¡2unixtime
(
	`tsk_gëu64
(
fs
->
ídün
, 
‚ame
->
©ime
));

4114 i‡(
£c_skew
 != 0) {

4115 
	`tsk_Ârötf
(
hFûe
, "\nAdjustedÅimes:\n");

4116 
¸_time
 -
£c_skew
;

4117 
m_time
 -
£c_skew
;

4118 
a_time
 -
£c_skew
;

4119 
c_time
 -
£c_skew
;

4120 
	`tsk_Ârötf
(
hFûe
, "Cª©ed:\t%s", 
	`˘ime
(&
¸_time
));

4121 
	`tsk_Ârötf
(
hFûe
, "FûêModifõd:\t%s", 
	`˘ime
(&
m_time
));

4122 
	`tsk_Ârötf
(
hFûe
, "MFT Modifõd:\t%s", 
	`˘ime
(&
c_time
));

4123 
	`tsk_Ârötf
(
hFûe
, "Ac˚s£d:\t%s", 
	`˘ime
(&
a_time
));

4124 
¸_time
 +
£c_skew
;

4125 
m_time
 +
£c_skew
;

4126 
a_time
 +
£c_skew
;

4127 
c_time
 +
£c_skew
;

4128 
	`tsk_Ârötf
(
hFûe
, "\nOriginalÅimes:\n");

4131 
	`tsk_Ârötf
(
hFûe
, "Cª©ed:\t%s", 
	`˘ime
(&
¸_time
));

4132 
	`tsk_Ârötf
(
hFûe
, "FûêModifõd:\t%s", 
	`˘ime
(&
m_time
));

4133 
	`tsk_Ârötf
(
hFûe
, "MFT Modifõd:\t%s", 
	`˘ime
(&
c_time
));

4134 
	`tsk_Ârötf
(
hFûe
, "Ac˚s£d:\t%s", 
	`˘ime
(&
a_time
));

4139 
fs_©å
 = 
	`tsk_fs_©åli°_gë
(
fs_fûe
->
mëa
->
©å
, 
NTFS_ATYPE_OBJID
);

4140 i‡(
fs_©å
) {

4141 
¡fs_©å_objid
 *
objid
 = (¡fs_©å_objid *Ë
fs_©å
->
rd
.
buf
;

4142 
uöt64_t
 
id1
, 
id2
;

4143 
	`tsk_Ârötf
(
hFûe
, "\n$OBJECT_ID Attribute Values:\n");

4144 
id1
 = 
	`tsk_gëu64
(
fs
->
ídün
, 
objid
->
objid1
);

4145 
id2
 = 
	`tsk_gëu64
(
fs
->
ídün
, 
objid
->
objid2
);

4146 
	`tsk_Ârötf
(
hFûe
,

4147 "Obje˘ Id: %.8" 
PRIx32
 "-%.4" 
PRIx16


4148 "-%.4" 
PRIx16
 "-%.4" PRIx16 "-%.12"

4149 
PRIx64
 "\n",

4150 (
uöt32_t
Ë(
id2
 >> 32) & 0xffffffff,

4151 (
uöt16_t
Ë(
id2
 >> 16) & 0xffff,

4152 (
uöt16_t
Ë(
id2
 & 0xffff),

4153 (
uöt16_t
Ë(
id1
 >> 48Ë& 0xffff, (
uöt64_t
) (id1 & (uint64_t)

4156 i‡(
fs_©å
->
size
 > 16) {

4157 
id1
 = 
	`tsk_gëu64
(
fs
->
ídün
, 
objid
->
‹ig_vﬁid1
);

4158 
id2
 = 
	`tsk_gëu64
(
fs
->
ídün
, 
objid
->
‹ig_vﬁid2
);

4159 
	`tsk_Ârötf
(
hFûe
,

4160 "Búth VﬁumêId: %.8" 
PRIx32
 "-%.4"

4161 
PRIx16
 "-%.4" PRIx16 "-%.4" PRIx16

4162 "-%.12" 
PRIx64
 "\n",

4163 (
uöt32_t
Ë(
id2
 >> 32) & 0xffffffff,

4164 (
uöt16_t
Ë(
id2
 >> 16) & 0xffff,

4165 (
uöt16_t
Ë(
id2
 & 0xffff),

4166 (
uöt16_t
Ë(
id1
 >> 48) & 0xffff,

4167 (
uöt64_t
Ë(
id1
 & (uint64_t)

4171 i‡(
fs_©å
->
size
 > 32) {

4172 
id1
 = 
	`tsk_gëu64
(
fs
->
ídün
, 
objid
->
‹ig_objid1
);

4173 
id2
 = 
	`tsk_gëu64
(
fs
->
ídün
, 
objid
->
‹ig_objid2
);

4174 
	`tsk_Ârötf
(
hFûe
,

4175 "Búth Obje˘ Id: %.8" 
PRIx32
 "-%.4"

4176 
PRIx16
 "-%.4" PRIx16 "-%.4" PRIx16

4177 "-%.12" 
PRIx64
 "\n",

4178 (
uöt32_t
Ë(
id2
 >> 32) & 0xffffffff,

4179 (
uöt16_t
Ë(
id2
 >> 16) & 0xffff,

4180 (
uöt16_t
Ë(
id2
 & 0xffff),

4181 (
uöt16_t
Ë(
id1
 >> 48) & 0xffff,

4182 (
uöt64_t
Ë(
id1
 & (uint64_t)

4186 i‡(
fs_©å
->
size
 > 48) {

4187 
id1
 = 
	`tsk_gëu64
(
fs
->
ídün
, 
objid
->
‹ig_domid1
);

4188 
id2
 = 
	`tsk_gëu64
(
fs
->
ídün
, 
objid
->
‹ig_domid2
);

4189 
	`tsk_Ârötf
(
hFûe
,

4190 "Búth Domaö Id: %.8" 
PRIx32
 "-%.4"

4191 
PRIx16
 "-%.4" PRIx16 "-%.4" PRIx16

4192 "-%.12" 
PRIx64
 "\n",

4193 (
uöt32_t
Ë(
id2
 >> 32) & 0xffffffff,

4194 (
uöt16_t
Ë(
id2
 >> 16) & 0xffff,

4195 (
uöt16_t
Ë(
id2
 & 0xffff),

4196 (
uöt16_t
Ë(
id1
 >> 48) & 0xffff,

4197 (
uöt64_t
Ë(
id1
 & (uint64_t)

4203 
fs_©å
 =

4204 
	`tsk_fs_©åli°_gë
(
fs_fûe
->
mëa
->
©å
, 
NTFS_ATYPE_ATTRLIST
);

4205 i‡(
fs_©å
) {

4206 *
buf
;

4207 
¡fs_©åli°
 *
li°
;

4208 
uöçå_t
 
ídaddr
;

4209 
TSK_FS_LOAD_FILE
 
lﬂd_fûe
;

4211 
	`tsk_Ârötf
(
hFûe
, "\n$ATTRIBUTE_LIST Attribute Values:\n");

4214 
lﬂd_fûe
.
tŸÆ
 =Üﬂd_fûe.
À·
 = (
size_t
Ë
fs_©å
->
size
;

4215 
lﬂd_fûe
.
cur
 =Üﬂd_fûe.
ba£
 = 
buf
 =

4216 
	`tsk_mÆloc
((
size_t
Ë
fs_©å
->
size
);

4217 i‡(
buf
 =
NULL
) {

4221 
ídaddr
 = (
uöçå_t
Ë
buf
 + (uöçå_tË
fs_©å
->
size
;

4222 i‡(
	`tsk_fs_©å_wÆk
(
fs_©å
,

4223 0, 
tsk_fs_lﬂd_fûe_a˘i⁄
, (*Ë&
lﬂd_fûe
)) {

4224 
	`tsk_Ârötf
(
hFûe
, "errorÑeadingáttributeÜist buffer\n");

4225 
	`tsk_îr‹_ª£t
();

4226 
egªss
;

4232 i‡(
lﬂd_fûe
.
À·
 > 0) {

4233 
	`tsk_Ârötf
(
hFûe
, "errorÑeadingáttributeÜist buffer\n");

4234 
egªss
;

4238 
li°
 = (
¡fs_©åli°
 *Ë
buf
;

4239 (
li°
Ë&& ((
uöçå_t
Ëli° < 
ídaddr
)

4240 && (
	`tsk_gëu16
(
fs
->
ídün
, 
li°
->
Àn
) > 0);

4241 
li°
 =

4242 (
¡fs_©åli°
 *Ë((
uöçå_t
Ë
li°
 + 
	`tsk_gëu16
(
fs
->
ídün
,

4243 
li°
->
Àn
))) {

4244 
	`tsk_Ârötf
(
hFûe
,

4245 "Ty≥: %" 
PRIu32
 "-%" 
PRIu16
 " \tMFT E¡ry: %" 
PRIu64


4246 " \tVCN: %" 
PRIu64
 "\n", 
	`tsk_gëu32
(
fs
->
ídün
,

4247 
li°
->
ty≥
), 
	`tsk_gëu16
(
fs
->
ídün
,Üi°->
id
),

4248 (
uöt64_t
Ë
	`tsk_gëu48
(
fs
->
ídün
, 
li°
->
fûe_ªf
),

4249 
	`tsk_gëu64
(
fs
->
ídün
, 
li°
->
°¨t_v˙
));

4251 
egªss
:

4252 
	`‰ì
(
buf
);

4256 
	`tsk_Ârötf
(
hFûe
, "\nAttributes: \n");

4257 i‡(
fs_fûe
->
mëa
->
©å
) {

4258 
˙t
, 
i
;

4261 
˙t
 = 
	`tsk_fs_fûe_©å_gësize
(
fs_fûe
);

4262 
i
 = 0; i < 
˙t
; i++) {

4263 
ty≥
[512];

4265 c⁄° 
TSK_FS_ATTR
 *
fs_©å
 =

4266 
	`tsk_fs_fûe_©å_gë_idx
(
fs_fûe
, 
i
);

4267 i‡(!
fs_©å
)

4270 i‡(
	`¡fs_©å«me_lookup
(
fs
, 
fs_©å
->
ty≥
,Åype, 512)) {

4271 
	`tsk_Ârötf
(
hFûe
, "errorÜookingáttributeÇame\n");

4276 i‡(
fs_©å
->
Êags
 & 
TSK_FS_ATTR_NONRES
) {

4277 
NTFS_PRINT_ADDR
 
¥öt_addr
;

4279 
	`tsk_Ârötf
(
hFûe
,

4280 "Ty≥: %†(%" 
PRIu32
 "-%" 
PRIu16


4282 
PRIuOFF
 " inô_size: %" PRIuOFF "\n", 
ty≥
,

4283 
fs_©å
->
ty≥
, fs_©å->
id
, fs_©å->
«me
,

4284 (
fs_©å
->
Êags
 & 
TSK_FS_ATTR_ENC
) ? ", Encrypted" :

4286 (
fs_©å
->
Êags
 & 
TSK_FS_ATTR_COMP
) ? ", Compressed" :

4288 (
fs_©å
->
Êags
 & 
TSK_FS_ATTR_SPARSE
) ? ", Sparse" :

4289 "", 
fs_©å
->
size
, fs_©å->
ƒd
.
öôsize
);

4291 
¥öt_addr
.
idx
 = 0;

4292 
¥öt_addr
.
hFûe
 = hFile;

4293 i‡(
	`tsk_fs_fûe_wÆk_ty≥
(
fs_fûe
, 
fs_©å
->
ty≥
,

4294 
fs_©å
->
id
,

4295 (
TSK_FS_FILE_WALK_FLAG_AONLY
 |

4296 
TSK_FS_FILE_WALK_FLAG_SLACK
),

4297 
¥öt_addr_a˘
, (*Ë&
¥öt_addr
)) {

4298 
	`tsk_Ârötf
(
hFûe
, "\nError walking file\n");

4299 
	`tsk_îr‹_¥öt
(
hFûe
);

4300 
	`tsk_îr‹_ª£t
();

4302 i‡(
¥öt_addr
.
idx
 != 0)

4303 
	`tsk_Ârötf
(
hFûe
, "\n");

4306 
	`tsk_Ârötf
(
hFûe
,

4307 "Ty≥: %†(%" 
PRIu32
 "-%" 
PRIu16


4309 
PRIuOFF
 "\n", 
ty≥
, 
fs_©å
->type,

4310 
fs_©å
->
id
, fs_©å->
«me
,

4311 (
fs_©å
->
Êags
 & 
TSK_FS_ATTR_ENC
) ? ", Encrypted"

4313 (
fs_©å
->
Êags
 & 
TSK_FS_ATTR_COMP
) ?

4315 (
fs_©å
->
Êags
 & 
TSK_FS_ATTR_SPARSE
) ? ", Sparse" :

4316 "", 
fs_©å
->
size
);

4322 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

4324 
	}
}

4330 
uöt8_t


4331 
	$¡fs_j›í
(
TSK_FS_INFO
 * 
fs
, 
TSK_INUM_T
 
öum
)

4333 
	`tsk_îr‹_ª£t
();

4334 
tsk_î∫o
 = 
TSK_ERR_FS_UNSUPFUNC
;

4335 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

4338 
	}
}

4340 
uöt8_t


4341 
	$¡fs_jíåy_wÆk
(
TSK_FS_INFO
 * 
fs
, 
Êags
,

4342 
TSK_FS_JENTRY_WALK_CB
 
a_a˘i⁄
, *
±r
)

4344 
	`tsk_îr‹_ª£t
();

4345 
tsk_î∫o
 = 
TSK_ERR_FS_UNSUPFUNC
;

4346 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

4349 
	}
}

4352 
uöt8_t


4353 
	$¡fs_jblk_wÆk
(
TSK_FS_INFO
 * 
fs
, 
TSK_DADDR_T
 
°¨t
,

4354 
TSK_DADDR_T
 
íd
, 
Êags
, 
TSK_FS_JBLK_WALK_CB
 
a_a˘i⁄
, *
±r
)

4356 
	`tsk_îr‹_ª£t
();

4357 
tsk_î∫o
 = 
TSK_ERR_FS_UNSUPFUNC
;

4358 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

4361 
	}
}

4364 
TSK_FS_ATTR_TYPE_ENUM


4365 
	$¡fs_gë_deÁu…_©å_ty≥
(c⁄° 
TSK_FS_FILE
 * 
a_fûe
)

4367 i‡((
a_fûe
 =
NULL
Ë|| (a_fûe->
mëa
 == NULL))

4368  
TSK_FS_ATTR_TYPE_DEFAULT
;

4371 i‡(
a_fûe
->
mëa
->
ty≥
 =
TSK_FS_META_TYPE_DIR
)

4372  
TSK_FS_ATTR_TYPE_NTFS_IDXROOT
;

4374  
TSK_FS_ATTR_TYPE_NTFS_DATA
;

4376 
	}
}

4380 
	$¡fs_˛o£
(
TSK_FS_INFO
 * 
fs
)

4382 
NTFS_INFO
 *
¡fs
 = (NTFS_INFO *Ë
fs
;

4384 i‡(
fs
 =
NULL
)

4387 #i‡
TSK_USE_SID


4388 i‡(
¡fs
->
sii_d©a
.
buf„r
)

4389 
	`‰ì
(
¡fs
->
sii_d©a
.
buf„r
);

4390 
¡fs
->
sii_d©a
.
buf„r
 = 
NULL
;

4392 i‡(
¡fs
->
sds_d©a
.
buf„r
)

4393 
	`‰ì
(
¡fs
->
sds_d©a
.
buf„r
);

4394 
¡fs
->
sds_d©a
.
buf„r
 = 
NULL
;

4398 
fs
->
èg
 = 0;

4399 
	`‰ì
((*Ë
¡fs
->
m·
);

4400 
	`‰ì
((*Ë
¡fs
->
fs
);

4401 
	`tsk_fs_©å_run_‰ì
(
¡fs
->
bm≠
);

4402 
	`‰ì
(
¡fs
->
bm≠_buf
);

4403 
	`tsk_fs_fûe_˛o£
(
¡fs
->
m·_fûe
);

4405 i‡(
fs
->
li°_öum_«med
) {

4406 
	`tsk_li°_‰ì
(
fs
->
li°_öum_«med
);

4407 
fs
->
li°_öum_«med
 = 
NULL
;

4409 i‡(
¡fs
->
‹ph™_m≠
)

4410 
	`¡fs_‹ph™_m≠_‰ì
(
¡fs
);

4412 
	`‰ì
(
fs
);

4413 
	}
}

4425 
TSK_FS_INFO
 *

4426 
	$¡fs_›í
(
TSK_IMG_INFO
 * 
img_öfo
, 
TSK_OFF_T
 
off£t
,

4427 
TSK_FS_TYPE_ENUM
 
·y≥
, 
uöt8_t
 
ã°
)

4429 *
my«me
 = "ntfs_open";

4430 
NTFS_INFO
 *
¡fs
;

4431 
TSK_FS_INFO
 *
fs
;

4432 
Àn
;

4433 
ssize_t
 
˙t
;

4436 
	`tsk_îr‹_ª£t
();

4438 i‡(
	`TSK_FS_TYPE_ISNTFS
(
·y≥
) == 0) {

4439 
	`tsk_îr‹_ª£t
();

4440 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

4441 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
, "Invalid FSÅype inÇtfs_open");

4442  
NULL
;

4445 i‡((
¡fs
 = (
NTFS_INFO
 *Ë
	`tsk_mÆloc
((*¡fs))Ë=
NULL
) {

4446  
NULL
;

4448 
fs
 = &(
¡fs
->
fs_öfo
);

4450 
fs
->
·y≥
 = 
TSK_FS_TYPE_NTFS
;

4451 
fs
->
du«me
 = "Cluster";

4452 
fs
->
Êags
 = 
TSK_FS_INFO_FLAG_HAVE_SEQ
;

4453 
fs
->
èg
 = 
TSK_FS_INFO_TAG
;

4455 
fs
->
img_öfo
 = img_info;

4456 
fs
->
off£t
 = offset;

4458 
¡fs
->
lﬂdög_the_MFT
 = 0;

4459 
¡fs
->
bm≠
 = 
NULL
;

4460 
¡fs
->
bm≠_buf
 = 
NULL
;

4463 
Àn
 = 
	`roundup
((
¡fs_sb
), 
img_öfo
->
£˘‹_size
);

4464 
¡fs
->
fs
 = (
¡fs_sb
 *Ë
	`tsk_mÆloc
(
Àn
);

4465 i‡(
¡fs
->
fs
 =
NULL
) {

4466 
fs
->
èg
 = 0;

4467 
	`‰ì
(
¡fs
);

4468  
NULL
;

4471 
˙t
 = 
	`tsk_fs_ªad
(
fs
, (
TSK_OFF_T
Ë0, (*Ë
¡fs
->fs, 
Àn
);

4472 i‡(
˙t
 !
Àn
) {

4473 i‡(
˙t
 >= 0) {

4474 
	`tsk_îr‹_ª£t
();

4475 
tsk_î∫o
 = 
TSK_ERR_FS_READ
;

4477 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

4478 "%s: Eº‹Ñódög boŸ se˘‹.", 
my«me
);

4479 
fs
->
èg
 = 0;

4480 
	`‰ì
(
¡fs
->
fs
);

4481 
	`‰ì
(
¡fs
);

4482  
NULL
;

4486 i‡(
	`tsk_fs_guessu16
(
fs
, 
¡fs
->fs->
magic
, 
NTFS_FS_MAGIC
)) {

4487 
fs
->
èg
 = 0;

4488 
	`‰ì
(
¡fs
->
fs
);

4489 
	`‰ì
(
¡fs
);

4490 
	`tsk_îr‹_ª£t
();

4491 
tsk_î∫o
 = 
TSK_ERR_FS_MAGIC
;

4492 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

4494  
NULL
;

4503 
¡fs
->
ssize_b
 = 
	`tsk_gëu16
(
fs
->
ídün
,Çtfs->fs->
ssize
);

4504 i‡((
¡fs
->
ssize_b
 == 0) || (ntfs->ssize_b % 512)) {

4505 
fs
->
èg
 = 0;

4506 
	`‰ì
(
¡fs
->
fs
);

4507 
	`‰ì
(
¡fs
);

4508 
	`tsk_îr‹_ª£t
();

4509 
tsk_î∫o
 = 
TSK_ERR_FS_MAGIC
;

4510 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

4512  
NULL
;

4515 i‡((
¡fs
->
fs
->
csize
 != 0x01) &&

4516 (
¡fs
->
fs
->
csize
 != 0x02) &&

4517 (
¡fs
->
fs
->
csize
 != 0x04) &&

4518 (
¡fs
->
fs
->
csize
 != 0x08) &&

4519 (
¡fs
->
fs
->
csize
 != 0x10) &&

4520 (
¡fs
->
fs
->
csize
 != 0x20) && (ntfs->fs->csize != 0x40)

4521 && (
¡fs
->
fs
->
csize
 != 0x80)) {

4522 
fs
->
èg
 = 0;

4523 
	`‰ì
(
¡fs
->
fs
);

4524 
	`‰ì
(
¡fs
);

4525 
	`tsk_îr‹_ª£t
();

4526 
tsk_î∫o
 = 
TSK_ERR_FS_MAGIC
;

4527 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

4529  
NULL
;

4532 
¡fs
->
csize_b
 =Çtfs->
fs
->
csize
 *Çtfs->
ssize_b
;

4533 
fs
->
fú°_block
 = 0;

4537 
fs
->
block_cou¡
 =

4538 (
TSK_DADDR_T
Ë
	`tsk_gëu32
(
fs
->
ídün
,

4539 
¡fs
->
fs
->
vﬁ_size_s
Ë/Çtfs->fs->
csize
;

4540 i‡(
fs
->
block_cou¡
 == 0) {

4541 
fs
->
èg
 = 0;

4542 
	`‰ì
(
¡fs
->
fs
);

4543 
	`‰ì
(
¡fs
);

4544 
	`tsk_îr‹_ª£t
();

4545 
tsk_î∫o
 = 
TSK_ERR_FS_MAGIC
;

4546 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

4548  
NULL
;

4551 
fs
->
œ°_block
 = fs->
œ°_block_a˘
 = fs->
block_cou¡
 - 1;

4552 
fs
->
block_size
 = 
¡fs
->
csize_b
;

4553 
fs
->
dev_bsize
 = 
img_öfo
->
£˘‹_size
;

4556 i‡((
TSK_DADDR_T
Ë((
img_öfo
->
size
 - 
off£t
Ë/ 
fs
->
block_size
) <

4557 
fs
->
block_cou¡
)

4558 
fs
->
œ°_block_a˘
 =

4559 (
img_öfo
->
size
 - 
off£t
Ë/ 
fs
->
block_size
 - 1;

4561 i‡(
¡fs
->
fs
->
m·_rsize_c
 > 0)

4562 
¡fs
->
m·_rsize_b
 =Çtfs->
fs
->
m·_rsize_c
 *Çtfs->
csize_b
;

4565 
¡fs
->
m·_rsize_b
 = 1 << -¡fs->
fs
->
m·_rsize_c
;

4567 i‡((
¡fs
->
m·_rsize_b
 == 0) || (ntfs->mft_rsize_b % 512)) {

4568 
fs
->
èg
 = 0;

4569 
	`‰ì
(
¡fs
->
fs
);

4570 
	`‰ì
(
¡fs
);

4571 
	`tsk_îr‹_ª£t
();

4572 
tsk_î∫o
 = 
TSK_ERR_FS_MAGIC
;

4573 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

4575  
NULL
;

4578 i‡(
¡fs
->
fs
->
idx_rsize_c
 > 0)

4579 
¡fs
->
idx_rsize_b
 =Çtfs->
fs
->
idx_rsize_c
 *Çtfs->
csize_b
;

4582 
¡fs
->
idx_rsize_b
 = 1 << -¡fs->
fs
->
idx_rsize_c
;

4584 i‡((
¡fs
->
idx_rsize_b
 == 0) || (ntfs->idx_rsize_b % 512)) {

4585 
fs
->
èg
 = 0;

4586 
	`‰ì
(
¡fs
->
fs
);

4587 
	`‰ì
(
¡fs
);

4588 
	`tsk_îr‹_ª£t
();

4589 
tsk_î∫o
 = 
TSK_ERR_FS_MAGIC
;

4590 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

4592  
NULL
;

4595 
¡fs
->
roŸ_m·_addr
 =

4596 
	`tsk_gëu64
(
fs
->
ídün
, 
¡fs
->fs->
m·_˛u°
Ë*Çtfs->
csize_b
;

4597 i‡(
	`tsk_gëu64
(
fs
->
ídün
, 
¡fs
->fs->
m·_˛u°
Ë> fs->
œ°_block
) {

4598 
fs
->
èg
 = 0;

4599 
	`‰ì
(
¡fs
->
fs
);

4600 
	`‰ì
(
¡fs
);

4601 
	`tsk_îr‹_ª£t
();

4602 
tsk_î∫o
 = 
TSK_ERR_FS_MAGIC
;

4603 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

4605  
NULL
;

4611 
fs
->
öode_wÆk
 = 
¡fs_öode_wÆk
;

4612 
fs
->
block_wÆk
 = 
¡fs_block_wÆk
;

4613 
fs
->
block_gëÊags
 = 
¡fs_block_gëÊags
;

4615 
fs
->
gë_deÁu…_©å_ty≥
 = 
¡fs_gë_deÁu…_©å_ty≥
;

4616 
fs
->
lﬂd_©ås
 = 
¡fs_lﬂd_©ås
;

4618 
fs
->
fûe_add_mëa
 = 
¡fs_öode_lookup
;

4619 
fs
->
dú_›í_mëa
 = 
¡fs_dú_›í_mëa
;

4620 
fs
->
fs°©
 = 
¡fs_fs°©
;

4621 
fs
->
fscheck
 = 
¡fs_fscheck
;

4622 
fs
->
i°©
 = 
¡fs_i°©
;

4623 
fs
->
˛o£
 = 
¡fs_˛o£
;

4624 
fs
->
«me_cmp
 = 
¡fs_«me_cmp
;

4626 
fs
->
‰ód_ow√r_sid
 = 
¡fs_fûe_gë_sid°r
;

4627 
fs
->
jblk_wÆk
 = 
¡fs_jblk_wÆk
;

4628 
fs
->
jíåy_wÆk
 = 
¡fs_jíåy_wÆk
;

4629 
fs
->
j›í
 = 
¡fs_j›í
;

4630 
fs
->
jou∫_öum
 = 0;

4639 
¡fs
->
m·
 = (
¡fs_m·
 *Ë
	`tsk_mÆloc
“tfs->
m·_rsize_b
);

4640 i‡(
¡fs
->
m·
 =
NULL
) {

4641 
fs
->
èg
 = 0;

4642 
	`‰ì
(
¡fs
->
fs
);

4643 
	`‰ì
(
¡fs
);

4644  
NULL
;

4647 
¡fs
->
mnum
 = 0;

4648 
fs
->
roŸ_öum
 = 
NTFS_ROOTINO
;

4649 
fs
->
fú°_öum
 = 
NTFS_FIRSTINO
;

4650 
fs
->
œ°_öum
 = 
NTFS_LAST_DEFAULT_INO
;

4651 
¡fs
->
m·_d©a
 = 
NULL
;

4654 
¡fs
->
lﬂdög_the_MFT
 = 1;

4655 i‡((
¡fs
->
m·_fûe
 =

4656 
	`tsk_fs_fûe_›í_mëa
(
fs
, 
NULL
, 
NTFS_MFT_MFT
)) == NULL) {

4657 
fs
->
èg
 = 0;

4658 
	`‰ì
(
¡fs
->
m·
);

4659 
	`‰ì
(
¡fs
->
fs
);

4660 
	`‰ì
(
¡fs
);

4661  
NULL
;

4669 
¡fs
->
m·_d©a
 =

4670 
	`tsk_fs_©åli°_gë
(
¡fs
->
m·_fûe
->
mëa
->
©å
, 
NTFS_ATYPE_DATA
);

4671 i‡(!
¡fs
->
m·_d©a
) {

4672 
fs
->
èg
 = 0;

4673 
	`tsk_fs_fûe_˛o£
(
¡fs
->
m·_fûe
);

4674 
	`‰ì
(
¡fs
->
m·
);

4675 
	`‰ì
(
¡fs
->
fs
);

4676 
	`‰ì
(
¡fs
);

4677 
	`°∫ˇt
(
tsk_îr°r2
, " - Data AttributeÇot found in $MFT",

4678 
TSK_ERRSTR_L
 - 
	`°æí
(
tsk_îr°r2
));

4679  
NULL
;

4683 
fs
->
öum_cou¡
 = 
¡fs
->
m·_d©a
->
size
 /Çtfs->
m·_rsize_b
 + 1;

4684 
fs
->
œ°_öum
 = fs->
öum_cou¡
 - 1;

4687 
¡fs
->
lﬂdög_the_MFT
 = 0;

4690 
fs
->
fs_id_u£d
 = 0; fs->fs_id_used < 8; fs->fs_id_used++) {

4691 
fs
->
fs_id
[fs->
fs_id_u£d
] = 
¡fs
->fs->
£rül
[fs->fs_id_used];

4695 i‡(
	`¡fs_lﬂd_vî
(
¡fs
)) {

4696 
fs
->
èg
 = 0;

4697 
	`tsk_fs_fûe_˛o£
(
¡fs
->
m·_fûe
);

4698 
	`‰ì
(
¡fs
->
m·
);

4699 
	`‰ì
(
¡fs
->
fs
);

4700 
	`‰ì
(
¡fs
);

4701  
NULL
;

4705 i‡(
	`¡fs_lﬂd_bm≠
(
¡fs
)) {

4706 
fs
->
èg
 = 0;

4707 
	`tsk_fs_fûe_˛o£
(
¡fs
->
m·_fûe
);

4708 
	`‰ì
(
¡fs
->
m·
);

4709 
	`‰ì
(
¡fs
->
fs
);

4710 
	`‰ì
(
¡fs
);

4711  
NULL
;

4715 #i‡
TSK_USE_SID


4716 i‡(
	`¡fs_lﬂd_£cuª
(
¡fs
)) {

4717 
fs
->
èg
 = 0;

4718 
	`tsk_fs_fûe_˛o£
(
¡fs
->
m·_fûe
);

4719 
	`‰ì
(
¡fs
->
m·
);

4720 
	`‰ì
(
¡fs
->
fs
);

4721 
	`‰ì
(
¡fs
);

4722  
NULL
;

4728 
¡fs
->
©ådef
 = 
NULL
;

4729 
fs
->
li°_öum_«med
 = 
NULL
;

4730 
¡fs
->
‹ph™_m≠
 = 
NULL
;

4733 i‡(
tsk_vîbo£
) {

4734 
	`tsk_Ârötf
(
°dîr
,

4735 "ssize: %" 
PRIu16


4736 " csize: %d sîül: %" 
PRIx64
 "\n",

4737 
	`tsk_gëu16
(
fs
->
ídün
, 
¡fs
->fs->
ssize
),

4738 
¡fs
->
fs
->
csize
, 
	`tsk_gëu64
(fs->
ídün
,Çtfs->fs->
£rül
));

4739 
	`tsk_Ârötf
(
°dîr
,

4741 
PRIu64
 " mft_mir: %" PRIu64 "\n",

4742 
¡fs
->
m·_rsize_b
,Çtfs->
idx_rsize_b
,

4743 (Ë
fs
->
block_cou¡
, 
	`tsk_gëu64
(fs->
ídün
,

4744 
¡fs
->
fs
->
m·_˛u°
), 
	`tsk_gëu64
(fs->
ídün
,

4745 
¡fs
->
fs
->
m·m_˛u°
));

4748  
fs
;

4749 
	}
}

	@tsk3/fs/ntfs_dent.c

20 
	~"tsk_fs_i.h
"

21 
	~"tsk_¡fs.h
"

41 
uöt8_t


42 
	$¡fs_‹ph™_m≠_exãnd
(
NTFS_PAR_MAP
 * 
m≠
)

44 
m≠
->
Æloc_˙t
 += 8;

45 i‡((
m≠
->
addrs
 =

46 (
TSK_INUM_T
 *Ë
	`tsk_ªÆloc
(
m≠
->
addrs
,

47 (
TSK_INUM_T
Ë* 
m≠
->
Æloc_˙t
)Ë=
NULL
)

50 
	}
}

56 
NTFS_PAR_MAP
 *

57 
	$¡fs_‹ph™_m≠_Æloc
()

59 
NTFS_PAR_MAP
 *
m≠
;

61 i‡((
m≠
 =

62 (
NTFS_PAR_MAP
 *Ë
	`tsk_mÆloc
((
size_t
) (NTFS_PAR_MAP))) ==

63 
NULL
) {

64  
NULL
;

67 
m≠
->
Æloc_˙t
 = 8;

68 i‡((
m≠
->
addrs
 =

69 (
TSK_INUM_T
 *Ë
	`tsk_mÆloc
((TSK_INUM_T) *

70 
m≠
->
Æloc_˙t
)Ë=
NULL
) {

71 
	`‰ì
(
m≠
);

72  
NULL
;

74  
m≠
;

75 
	}
}

84 
uöt8_t


85 
	$¡fs_‹ph™_m≠_add
(
NTFS_INFO
 * 
¡fs
, 
TSK_INUM_T
 
∑r
, TSK_INUM_T 
chûd
)

87 
NTFS_PAR_MAP
 *
m≠
 = 
NULL
;

88 
NTFS_PAR_MAP
 *
tmp
 = 
NULL
;

91 
tmp
 = 
¡fs
->
‹ph™_m≠
;Åmp;Åm∞tmp->
√xt
) {

92 i‡(
tmp
->
∑r_addr
 =
∑r
) {

93 
m≠
 = 
tmp
;

96 i‡(
tmp
->
∑r_addr
 > 
∑r
) {

102 i‡(
m≠
 =
NULL
) {

103 i‡((
m≠
 = 
	`¡fs_‹ph™_m≠_Æloc
()Ë=
NULL
) {

107 
m≠
->
∑r_addr
 = 
∑r
;

108 i‡(
¡fs
->
‹ph™_m≠
 =
NULL
) {

109 
¡fs
->
‹ph™_m≠
 = 
m≠
;

112 
NTFS_PAR_MAP
 *
¥ev
 = 
NULL
;

114 
tmp
 = 
¡fs
->
‹ph™_m≠
;Åmp;Åm∞tmp->
√xt
) {

115 i‡(
tmp
->
∑r_addr
 > 
∑r
) {

116 
m≠
->
√xt
 = 
tmp
;

117 i‡(
¥ev
 =
NULL
)

118 
¡fs
->
‹ph™_m≠
 = 
m≠
;

120 
¥ev
->
√xt
 = 
m≠
;

123 
¥ev
 = 
tmp
;

127 i‡(
m≠
->
√xt
 =
NULL
)

128 
¥ev
->
√xt
 = 
m≠
;

133 i‡(
m≠
->
u£d_˙t
 =m≠->
Æloc_˙t
)

134 i‡(
	`¡fs_‹ph™_m≠_exãnd
(
m≠
))

137 
m≠
->
addrs
[m≠->
u£d_˙t
] = 
chûd
;

138 
m≠
->
u£d_˙t
++;

141 
	}
}

149 
NTFS_PAR_MAP
 *

150 
	$¡fs_‹ph™_m≠_gë
(
NTFS_INFO
 * 
¡fs
, 
TSK_INUM_T
 
∑r
)

152 
NTFS_PAR_MAP
 *
tmp
 = 
NULL
;

155 
tmp
 = 
¡fs
->
‹ph™_m≠
;Åmp;Åm∞tmp->
√xt
) {

156 i‡(
tmp
->
∑r_addr
 =
∑r
) {

157  
tmp
;

159 i‡(
tmp
->
∑r_addr
 > 
∑r
) {

160  
NULL
;

163  
NULL
;

164 
	}
}

167 
	$¡fs_‹ph™_m≠_‰ì
(
NTFS_INFO
 * 
a_¡fs
)

169 
NTFS_PAR_MAP
 *
tmp
 = 
NULL
;

171 i‡(
a_¡fs
->
‹ph™_m≠
 =
NULL
)

174 
tmp
 = 
a_¡fs
->
‹ph™_m≠
;

175 
tmp
) {

176 
NTFS_PAR_MAP
 *
tmp2
;

177 
	`‰ì
(
tmp
->
addrs
);

178 
tmp2
 = 
tmp
->
√xt
;

179 
	`‰ì
(
tmp
);

180 
tmp
 = 
tmp2
;

182 
a_¡fs
->
‹ph™_m≠
 = 
NULL
;

183 
	}
}

188 
TSK_WALK_RET_ENUM


189 
	$¡fs_‹ph™_a˘
(
TSK_FS_FILE
 * 
fs_fûe
, *
±r
)

191 
NTFS_INFO
 *
¡fs
 = (NTFS_INFO *Ë
fs_fûe
->
fs_öfo
;

192 
TSK_FS_META_NAME_LIST
 *
fs_«me_li°
;

195 
fs_«me_li°
 = 
fs_fûe
->
mëa
->
«me2
;

196 
fs_«me_li°
) {

197 i‡(
	`¡fs_‹ph™_m≠_add
(
¡fs
, 
fs_«me_li°
->
∑r_öode
,

198 
fs_fûe
->
mëa
->
addr
))

199  
TSK_WALK_ERROR
;

200 
fs_«me_li°
 = fs_«me_li°->
√xt
;

202  
TSK_WALK_CONT
;

203 
	}
}

209 
uöt8_t


210 
	$¡fs_dít_c›y
(
NTFS_INFO
 * 
¡fs
, 
¡fs_idxíåy
 * 
idxe
,

211 
TSK_FS_NAME
 * 
fs_«me
)

213 
¡fs_©å_‚ame
 *
‚ame
 = (¡fs_©å_‚amê*Ë& 
idxe
->
°ªam
;

214 
TSK_FS_INFO
 *
fs
 = (TSK_FS_INFO *Ë& 
¡fs
->
fs_öfo
;

215 
UTF16
 *
«me16
;

216 
UTF8
 *
«me8
;

217 
ªtVÆ
;

218 
i
;

220 
fs_«me
->
mëa_addr
 = 
	`tsk_gëu48
(
fs
->
ídün
, 
idxe
->
fûe_ªf
);

221 
fs_«me
->
mëa_£q
 = 
	`tsk_gëu16
(
fs
->
ídün
, 
idxe
->
£q_num
);

223 
«me16
 = (
UTF16
 *Ë& 
‚ame
->
«me
;

224 
«me8
 = (
UTF8
 *Ë
fs_«me
->
«me
;

226 
ªtVÆ
 = 
	`tsk_UTF16toUTF8
(
fs
->
ídün
, (c⁄° 
UTF16
 **Ë&
«me16
,

227 (
UTF16
 *Ë((
uöçå_t
Ë
«me16
 +

228 
‚ame
->
∆í
 * 2), &
«me8
,

229 (
UTF8
 *Ë((
uöçå_t
Ë
«me8
 +

230 
fs_«me
->
«me_size
), 
TSKÀnõ¡C⁄vîsi⁄
);

232 i‡(
ªtVÆ
 !
TSKc⁄vîsi⁄OK
) {

233 *
«me8
 = '\0';

234 i‡(
tsk_vîbo£
)

235 
	`tsk_Ârötf
(
°dîr
,

236 "Eº‹ c⁄vîtög NTFSÇamêtÿUTF8: %d %" 
PRIuINUM
,

237 
ªtVÆ
, 
fs_«me
->
mëa_addr
);

241 i‡((
uöçå_t
Ë
«me8
 > (uöçå_tË
fs_«me
->
«me
 + fs_«me->
«me_size
)

242 
fs_«me
->
«me
[fs_«me->
«me_size
] = '\0';

244 *
«me8
 = '\0';

247 
i
 = 0;

248 
fs_«me
->
«me
[
i
] != '\0') {

249 i‡(
	`TSK_IS_CNTRL
(
fs_«me
->
«me
[
i
]))

250 
fs_«me
->
«me
[
i
] = '^';

251 
i
++;

254 i‡(
	`tsk_gëu64
(
fs
->
ídün
, 
‚ame
->
Êags
Ë& 
NTFS_FNAME_FLAGS_DIR
)

255 
fs_«me
->
ty≥
 = 
TSK_FS_NAME_TYPE_DIR
;

257 
fs_«me
->
ty≥
 = 
TSK_FS_NAME_TYPE_REG
;

259 
fs_«me
->
Êags
 = 0;

262 
	}
}

271 
uöt8_t


272 
	$is_time
(
uöt64_t
 
t
)

274 
	#SEC_BTWN_1601_1970_DIV100
 ((369*365 + 89Ë* 24 * 36)

	)

275 
	#SEC_BTWN_1601_2010_DIV100
 (
SEC_BTWN_1601_1970_DIV100
 + (40*365 + 6Ë* 24 * 36)

	)

277 
t
 /= 1000000000;

279 i‡(!
t
)

282 i‡(
t
 < 
SEC_BTWN_1601_1970_DIV100
)

285 i‡(
t
 > 
SEC_BTWN_1601_2010_DIV100
)

289 
	}
}

306 
TSK_RETVAL_ENUM


307 
	$¡fs_¥oc_idxíåy
(
NTFS_INFO
 * 
a_¡fs
, 
TSK_FS_DIR
 * 
a_fs_dú
,

308 
uöt8_t
 
a_is_dñ
, 
¡fs_idxíåy
 * 
a_idxe
, 
uöt32_t
 
a_idxe_Àn
,

309 
uöt32_t
 
a_u£d_Àn
)

311 
uöçå_t
 
ídaddr
, 
ídaddr_Æloc
;

312 
TSK_FS_NAME
 *
fs_«me
;

313 
TSK_FS_INFO
 *
fs
 = (TSK_FS_INFO *Ë& 
a_¡fs
->
fs_öfo
;

315 i‡((
fs_«me
 = 
	`tsk_fs_«me_Æloc
(
NTFS_MAXNAMLEN_UTF8
, 0)Ë=
NULL
) {

316  
TSK_ERR
;

319 i‡(
tsk_vîbo£
)

320 
	`tsk_Ârötf
(
°dîr
,

321 "¡fs_¥oc_idxíåy: Pro˚ssög indexÉ¡ry: %" 
PRIu64


322 " Size: %" 
PRIu32
 " Len: %" PRIu32 "\n",

323 (
uöt64_t
Ë((
uöçå_t
Ë
a_idxe
), 
a_idxe_Àn
, 
a_u£d_Àn
);

326 i‡(
a_idxe_Àn
 < 
a_u£d_Àn
) {

327 
	`tsk_îr‹_ª£t
();

328 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

329 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

331  
TSK_ERR
;

335 
ídaddr
 = ((
uöçå_t
Ë
a_idxe
 + 
a_idxe_Àn
);

338 
ídaddr_Æloc
 = ((
uöçå_t
Ë
a_idxe
 + 
a_u£d_Àn
);

341 ((
uöçå_t
Ë& (
a_idxe
->
°ªam
Ë+ (
¡fs_©å_‚ame
)) <

342 
ídaddr
) {

344 
¡fs_©å_‚ame
 *
‚ame
 = (¡fs_©å_‚amê*Ë& 
a_idxe
->
°ªam
;

347 i‡(
tsk_vîbo£
)

348 
	`tsk_Ârötf
(
°dîr
,

349 "¡fs_¥oc_idxíåy: New IdxE¡: %" 
PRIu64


350 " $FILE_NAME E¡ry: %" 
PRIu64
 " File Ref: %" PRIu64

351 " IdxE¡ Lí: %" 
PRIu16
 " StrLen: %" PRIu16 "\n",

352 (
uöt64_t
Ë((
uöçå_t
Ë
a_idxe
),

353 (
uöt64_t
Ë((
uöçå_t
Ë
‚ame
),

354 (
uöt64_t
Ë
	`tsk_gëu48
(
fs
->
ídün
, 
a_idxe
->
fûe_ªf
),

355 
	`tsk_gëu16
(
fs
->
ídün
, 
a_idxe
->
idxÀn
),

356 
	`tsk_gëu16
(
fs
->
ídün
, 
a_idxe
->
°æí
));

361 i‡((
	`tsk_gëu48
(
fs
->
ídün
, 
a_idxe
->
fûe_ªf
Ë> fs->
œ°_öum
) ||

362 (
	`tsk_gëu48
(
fs
->
ídün
, 
a_idxe
->
fûe_ªf
Ë< fs->
fú°_öum
) ||

363 (
	`tsk_gëu16
(
fs
->
ídün
,

364 
a_idxe
->
idxÀn
Ë<
	`tsk_gëu16
(
fs
->
ídün
,

365 
a_idxe
->
°æí
))

366 || (
	`tsk_gëu16
(
fs
->
ídün
, 
a_idxe
->
idxÀn
) % 4)

367 || (
	`tsk_gëu16
(
fs
->
ídün
, 
a_idxe
->
idxÀn
Ë> 
a_idxe_Àn
)) {

368 
a_idxe
 = (
¡fs_idxíåy
 *Ë((
uöçå_t
)á_idxe + 4);

374 i‡((
	`tsk_gëu16
(
fs
->
ídün
, 
a_idxe
->
°æí
) == 0) ||

375 (((
uöçå_t
Ë
a_idxe
 + 
	`tsk_gëu16
(
fs
->
ídün
,

376 
a_idxe
->
idxÀn
)Ë> 
ídaddr_Æloc
)) {

379 i‡((
‚ame
->
n•a˚
 !
NTFS_FNAME_POSIX
) &&

380 (
‚ame
->
n•a˚
 !
NTFS_FNAME_WIN32
) &&

381 (
‚ame
->
n•a˚
 !
NTFS_FNAME_DOS
) &&

382 (
‚ame
->
n•a˚
 !
NTFS_FNAME_WINDOS
)) {

383 
a_idxe
 = (
¡fs_idxíåy
 *Ë((
uöçå_t
)á_idxe + 4);

384 i‡(
tsk_vîbo£
)

385 
	`tsk_Ârötf
(
°dîr
,

390 i‡((
	`tsk_gëu64
(
fs
->
ídün
, 
‚ame
->
Æloc_fsize
) <

391 
	`tsk_gëu64
(
fs
->
ídün
, 
‚ame
->
ªÆ_fsize
))

392 || (
‚ame
->
∆í
 == 0)

393 || (*(
uöt8_t
 *Ë& 
‚ame
->
«me
 == 0)) {

395 
a_idxe
 = (
¡fs_idxíåy
 *Ë((
uöçå_t
)á_idxe + 4);

396 i‡(
tsk_vîbo£
)

397 
	`tsk_Ârötf
(
°dîr
,

402 i‡((
	`is_time
(
	`tsk_gëu64
(
fs
->
ídün
, 
‚ame
->
¸time
)) == 0) ||

403 (
	`is_time
(
	`tsk_gëu64
(
fs
->
ídün
, 
‚ame
->
©ime
)) == 0) ||

404 (
	`is_time
(
	`tsk_gëu64
(
fs
->
ídün
, 
‚ame
->
mtime
)) == 0)) {

406 
a_idxe
 = (
¡fs_idxíåy
 *Ë((
uöçå_t
)á_idxe + 4);

407 i‡(
tsk_vîbo£
)

408 
	`tsk_Ârötf
(
°dîr
,

429 i‡(
‚ame
->
n•a˚
 =
NTFS_FNAME_DOS
) {

430 i‡(
tsk_vîbo£
)

431 
	`tsk_Ârötf
(
°dîr
,

433 
‚ame
->
n•a˚
);

435 
ö¸_íåy
;

439 i‡(
	`¡fs_dít_c›y
(
a_¡fs
, 
a_idxe
, 
fs_«me
)) {

440 i‡(
tsk_vîbo£
)

441 
	`tsk_Ârötf
(
°dîr
,

443 
ö¸_íåy
;

453 i‡((
a_is_dñ
 == 1) ||

454 (
	`tsk_gëu16
(
fs
->
ídün
, 
a_idxe
->
°æí
) == 0) ||

455 (((
uöçå_t
Ë
a_idxe
 + 
	`tsk_gëu16
(
fs
->
ídün
,

456 
a_idxe
->
idxÀn
)Ë> 
ídaddr_Æloc
)) {

457 
fs_«me
->
Êags
 = 
TSK_FS_NAME_FLAG_UNALLOC
;

460 
fs_«me
->
Êags
 = 
TSK_FS_NAME_FLAG_ALLOC
;

463 i‡(
tsk_vîbo£
)

464 
	`tsk_Ârötf
(
°dîr
,

466 
PRIu16
 " LíÅÿídá·î cuºít: %" 
PRIu64


467 " fœgs: %x\n", 
fs_«me
->
«me
, 
	`tsk_gëu16
(
fs
->
ídün
,

468 
a_idxe
->
°æí
),

469 (
uöt64_t
Ë(
ídaddr_Æloc
 - (
uöçå_t
Ë
a_idxe
 -

470 
	`tsk_gëu16
(
fs
->
ídün
, 
a_idxe
->
idxÀn
)),

471 
fs_«me
->
Êags
);

474 i‡(
	`tsk_fs_dú_add
(
a_fs_dú
, 
fs_«me
)) {

475 
	`tsk_fs_«me_‰ì
(
fs_«me
);

476  
TSK_ERR
;

479 
ö¸_íåy
:

492 i‡(
	`tsk_gëu16
(
fs
->
ídün
, 
a_idxe
->
°æí
) == 0) {

493 
a_idxe
 =

494 (
¡fs_idxíåy


495 *Ë((((
uöçå_t
Ë
a_idxe
 + 16 + 66 + 2 * 
‚ame
->
∆í
 +

499 
a_idxe
 =

500 (
¡fs_idxíåy
 *Ë((
uöçå_t
Ë
a_idxe
 +

501 
	`tsk_gëu16
(
fs
->
ídün
, 
a_idxe
->
idxÀn
));

506 
	`tsk_fs_«me_‰ì
(
fs_«me
);

507  
TSK_OK
;

508 
	}
}

519 
uöt8_t


520 
	$¡fs_fix_idxªc
(
NTFS_INFO
 * 
¡fs
, 
¡fs_idxªc
 * 
idxªc
, 
uöt32_t
 
Àn
)

522 
i
;

523 
uöt16_t
 
‹ig_£q
;

524 
TSK_FS_INFO
 *
fs
 = (TSK_FS_INFO *Ë& 
¡fs
->
fs_öfo
;

525 
¡fs_upd
 *
upd
;

527 i‡(
tsk_vîbo£
)

528 
	`tsk_Ârötf
(
°dîr
,

529 "¡fs_fix_idxªc: Fixög idxªc: %" 
PRIu64
 " Len: %"

530 
PRIu32
 "\n", (
uöt64_t
Ë((
uöçå_t
Ë
idxªc
), 
Àn
);

533 i‡((Ë((
	`tsk_gëu16
(
fs
->
ídün
, 
idxªc
->
upd_˙t
) - 1) *

534 
¡fs
->
ssize_b
Ë> 
Àn
) {

535 
	`tsk_îr‹_ª£t
();

536 
tsk_î∫o
 = 
TSK_ERR_FS_INODE_COR
;

537 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

543 
upd
 =

544 (
¡fs_upd
 *Ë((
uöçå_t
Ë
idxªc
 + 
	`tsk_gëu16
(
fs
->
ídün
,

545 
idxªc
->
upd_off
));

548 
‹ig_£q
 = 
	`tsk_gëu16
(
fs
->
ídün
, 
upd
->
upd_vÆ
);

551 
i
 = 1; i < 
	`tsk_gëu16
(
fs
->
ídün
, 
idxªc
->
upd_˙t
); i++) {

554 
off£t
 = 
i
 * 
¡fs
->
ssize_b
 - 2;

555 
uöt8_t
 *
√w_vÆ
, *
ﬁd_vÆ
;

558 
uöt16_t
 
cur_£q
 =

559 
	`tsk_gëu16
(
fs
->
ídün
, (
uöçå_t
Ë
idxªc
 + 
off£t
);

561 i‡(
cur_£q
 !
‹ig_£q
) {

563 
uöt16_t
 
cur_ª∂
 =

564 
	`tsk_gëu16
(
fs
->
ídün
, &
upd
->
upd_£q
 + (
i
 - 1) * 2);

566 
	`tsk_îr‹_ª£t
();

567 
tsk_î∫o
 = 
TSK_ERR_FS_INODE_COR
;

568 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

570 
PRIx16
 " Actual Value: 0x%" PRIx16

571 " Rïœ˚míàVÆue: 0x%" 
PRIx16


573 
‹ig_£q
, 
cur_£q
, 
cur_ª∂
);

577 
√w_vÆ
 = &
upd
->
upd_£q
 + (
i
 - 1) * 2;

578 
ﬁd_vÆ
 = (
uöt8_t
 *Ë((
uöçå_t
Ë
idxªc
 + 
off£t
);

580 i‡(
tsk_vîbo£
)

581 
	`tsk_Ârötf
(
°dîr
,

582 "¡fs_fix_idxªc: upd_£q %ò Rïœcög: %.4" 
PRIx16


583 " Wôh: %.4" 
PRIx16
 "\n", 
i
, 
	`tsk_gëu16
(
fs
->
ídün
,

584 
ﬁd_vÆ
), 
	`tsk_gëu16
(
fs
->
ídün
, 
√w_vÆ
));

586 *
ﬁd_vÆ
++ = *
√w_vÆ
++;

587 *
ﬁd_vÆ
 = *
√w_vÆ
;

591 
	}
}

610 
TSK_RETVAL_ENUM


611 
	$¡fs_dú_›í_mëa
(
TSK_FS_INFO
 * 
a_fs
, 
TSK_FS_DIR
 ** 
a_fs_dú
,

612 
TSK_INUM_T
 
a_addr
)

614 
NTFS_INFO
 *
¡fs
 = (NTFS_INFO *Ë
a_fs
;

615 
TSK_FS_DIR
 *
fs_dú
;

616 c⁄° 
TSK_FS_ATTR
 *
fs_©å_roŸ
 = 
NULL
;

617 c⁄° 
TSK_FS_ATTR
 *
fs_©å_idx
;

618 *
idxÆloc
;

619 
¡fs_idxíåy
 *
idxe
;

620 
¡fs_idxroŸ
 *
idxroŸ
;

621 
¡fs_idxñi°
 *
idxñi°
;

622 
¡fs_idxªc
 *
idxªc_p
, *
idxªc
;

623 
off
;

624 
TSK_OFF_T
 
idxÆloc_Àn
;

625 
TSK_FS_LOAD_FILE
 
lﬂd_fûe
;

626 
NTFS_PAR_MAP
 *
m≠
;

632 
TSK_RETVAL_ENUM
 
ªtvÆ_föÆ
 = 
TSK_OK
;

633 
TSK_RETVAL_ENUM
 
ªtvÆ_tmp
;

636 i‡(
a_addr
 < 
a_fs
->
fú°_öum
 ||á_add∏>á_fs->
œ°_öum
) {

637 
	`tsk_îr‹_ª£t
();

638 
tsk_î∫o
 = 
TSK_ERR_FS_WALK_RNG
;

639 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

640 "¡fs_dú_›í_mëa: inodêvÆue: %" 
PRIuINUM
 "\n", 
a_addr
);

641  
TSK_ERR
;

643 i‡(
a_fs_dú
 =
NULL
) {

644 
	`tsk_îr‹_ª£t
();

645 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

646 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

648  
TSK_ERR
;

651 i‡(
tsk_vîbo£
)

652 
	`tsk_Ârötf
(
°dîr
,

653 "¡fs_›í_dú: Pro˚ssög dúe˘‹y %" 
PRIuINUM
 "\n", 
a_addr
);

656 
fs_dú
 = *
a_fs_dú
;

657 i‡(
fs_dú
) {

658 
	`tsk_fs_dú_ª£t
(
fs_dú
);

661 i‡((*
a_fs_dú
 = 
fs_dú
 = 
	`tsk_fs_dú_Æloc
(
a_fs
, 128)Ë=
NULL
) {

662  
TSK_ERR
;

667 i‡(
a_addr
 =
	`TSK_FS_ORPHANDIR_INUM
(
a_fs
)) {

668  
	`tsk_fs_dú_föd_‹ph™s
(
a_fs
, 
fs_dú
);

672 i‡((
fs_dú
->
fs_fûe
 =

673 
	`tsk_fs_fûe_›í_mëa
(
a_fs
, 
NULL
, 
a_addr
)) == NULL) {

674 
	`°∫ˇt
(
tsk_îr°r2
, " -Çtfs_dir_open_meta",

675 
TSK_ERRSTR_L
 - 
	`°æí
(
tsk_îr°r2
));

676  
TSK_COR
;

679 i‡(!(
fs_dú
->
fs_fûe
->
mëa
->
©å
)) {

680 
	`tsk_îr‹_ª£t
();

681 
tsk_î∫o
 = 
TSK_ERR_FS_INODE_COR
;

682 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

683 "dít_wÆk: Eº‹: Dúe˘‹yáddªs†%" 
PRIuINUM


684 " ha†nÿ©åibuãs", 
a_addr
);

685  
TSK_COR
;

694 
fs_©å_roŸ
 =

695 
	`tsk_fs_©åli°_gë
(
fs_dú
->
fs_fûe
->
mëa
->
©å
,

696 
NTFS_ATYPE_IDXROOT
);

697 i‡(!
fs_©å_roŸ
) {

698 
	`°∫ˇt
(
tsk_îr°r2
, " - dent_walk: $IDX_ROOTÇot found",

699 
TSK_ERRSTR_L
 - 
	`°æí
(
tsk_îr°r2
));

700  
TSK_COR
;

703 i‡(
fs_©å_roŸ
->
Êags
 & 
TSK_FS_ATTR_NONRES
) {

704 
	`tsk_îr‹_ª£t
();

705 
tsk_î∫o
 = 
TSK_ERR_FS_INODE_COR
;

706 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

708  
TSK_COR
;

710 
idxroŸ
 = (
¡fs_idxroŸ
 *Ë
fs_©å_roŸ
->
rd
.
buf
;

713 i‡(
	`tsk_gëu32
(
a_fs
->
ídün
, 
idxroŸ
->
ty≥
) == 0) {

714 
	`tsk_îr‹_ª£t
();

715 
tsk_î∫o
 = 
TSK_ERR_FS_INODE_COR
;

716 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

718  
TSK_COR
;

720 i‡(
	`tsk_gëu32
(
a_fs
->
ídün
, 
idxroŸ
->
ty≥
Ë!
NTFS_ATYPE_FNAME
) {

721 
	`tsk_îr‹_ª£t
();

722 
tsk_î∫o
 = 
TSK_ERR_FS_INODE_COR
;

723 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

724 "ERROR: Dúe˘‹y index i†s‹ãd byÅy≥: %" 
PRIu32


726 
	`tsk_gëu32
(
a_fs
->
ídün
, 
idxroŸ
->
ty≥
));

727  
TSK_COR
;

731 
idxñi°
 = &
idxroŸ
->
li°
;

734 
idxe
 = (
¡fs_idxíåy
 *Ë((
uöçå_t
Ë
idxñi°
 +

735 
	`tsk_gëu32
(
a_fs
->
ídün
, 
idxñi°
->
begö_off
));

744 i‡(
a_addr
 !
a_fs
->
roŸ_öum
) {

745 
TSK_FS_NAME
 *
fs_«me
;

746 
TSK_FS_META_NAME_LIST
 *
fs_«me_li°
;

748 i‡(
tsk_vîbo£
)

749 
	`tsk_Ârötf
(
°dîr
,

752 i‡((
fs_«me
 = 
	`tsk_fs_«me_Æloc
(16, 0)Ë=
NULL
) {

753  
TSK_ERR
;

758 
fs_«me
->
mëa_addr
 = 
a_addr
;

759 
fs_«me
->
mëa_£q
 = 
fs_dú
->
fs_fûe
->
mëa
->
£q
;

760 
fs_«me
->
ty≥
 = 
TSK_FS_NAME_TYPE_DIR
;

761 
	`°r˝y
(
fs_«me
->
«me
, ".");

763 
fs_«me
->
Êags
 = 
TSK_FS_NAME_FLAG_ALLOC
;

764 i‡(
	`tsk_fs_dú_add
(
fs_dú
, 
fs_«me
)) {

765 
	`tsk_fs_«me_‰ì
(
fs_«me
);

766  
TSK_ERR
;

773 
	`°r˝y
(
fs_«me
->
«me
, "..");

774 
fs_«me
->
ty≥
 = 
TSK_FS_NAME_TYPE_DIR
;

779 
fs_«me_li°
 = 
fs_dú
->
fs_fûe
->
mëa
->
«me2
;

780 
fs_«me_li°
 !
NULL
; fs_«me_li° = fs_«me_li°->
√xt
) {

781 
fs_«me
->
mëa_addr
 = 
fs_«me_li°
->
∑r_öode
;

782 
fs_«me
->
mëa_£q
 = 
fs_«me_li°
->
∑r_£q
;

783 i‡(
	`tsk_fs_dú_add
(
fs_dú
, 
fs_«me
)) {

784 
	`tsk_fs_«me_‰ì
(
fs_«me
);

785  
TSK_ERR
;

789 
	`tsk_fs_«me_‰ì
(
fs_«me
);

790 
fs_«me
 = 
NULL
;

794 i‡(
tsk_vîbo£
)

795 
	`tsk_Ârötf
(
°dîr
,

796 "¡fs_dú_›í_mëa: Pro˚ssög $IDX_ROOT o‡öum %" 
PRIuINUM


797 "\n", 
a_addr
);

800 i‡((
	`tsk_gëu32
(
a_fs
->
ídün
, 
idxñi°
->
£qíd_off
) <

801 
	`tsk_gëu32
(
a_fs
->
ídün
, 
idxñi°
->
begö_off
)) ||

802 (
	`tsk_gëu32
(
a_fs
->
ídün
, 
idxñi°
->
bu„nd_off
) <

803 
	`tsk_gëu32
(
a_fs
->
ídün
, 
idxñi°
->
£qíd_off
)) ||

804 (((
uöçå_t
Ë
idxe
 + 
	`tsk_gëu32
(
a_fs
->
ídün
,

805 
idxñi°
->
bu„nd_off
)) >

806 ((
uöçå_t
Ë
fs_©å_roŸ
->
rd
.
buf
 +

807 
fs_©å_roŸ
->
rd
.
buf_size
))) {

808 
	`tsk_îr‹_ª£t
();

809 
tsk_î∫o
 = 
TSK_ERR_FS_INODE_COR
;

810 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

811 "Eº‹: IndexÜi° off£t†¨êövÆid o¿íåy: %" 
PRIuINUM
,

812 
fs_dú
->
fs_fûe
->
mëa
->
addr
);

813  
TSK_COR
;

816 
ªtvÆ_tmp
 = 
	`¡fs_¥oc_idxíåy
(
¡fs
, 
fs_dú
,

817 (
fs_dú
->
fs_fûe
->
mëa
->
Êags
 & 
TSK_FS_META_FLAG_UNALLOC
) ? 1 : 0,

818 
idxe
,

819 
	`tsk_gëu32
(
a_fs
->
ídün
, 
idxñi°
->
bu„nd_off
) -

820 
	`tsk_gëu32
(
a_fs
->
ídün
, 
idxñi°
->
begö_off
),

821 
	`tsk_gëu32
(
a_fs
->
ídün
, 
idxñi°
->
£qíd_off
) -

822 
	`tsk_gëu32
(
a_fs
->
ídün
, 
idxñi°
->
begö_off
));

825 i‡(
ªtvÆ_tmp
 =
TSK_ERR
) {

826  
TSK_ERR
;

828 i‡(
ªtvÆ_tmp
 =
TSK_COR
) {

829 
ªtvÆ_föÆ
 = 
TSK_COR
;

836 
fs_©å_idx
 =

837 
	`tsk_fs_©åli°_gë
(
fs_dú
->
fs_fûe
->
mëa
->
©å
,

838 
NTFS_ATYPE_IDXALLOC
);

844 i‡(!
fs_©å_idx
) {

845 i‡(
	`tsk_gëu32
(
a_fs
->
ídün
,

846 
idxñi°
->
Êags
Ë& 
NTFS_IDXELIST_CHILD
) {

847 
	`tsk_îr‹_ª£t
();

848 
tsk_î∫o
 = 
TSK_ERR_FS_INODE_COR
;

849 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

851  
TSK_COR
;

856 i‡(
fs_©å_idx
->
Êags
 & 
TSK_FS_ATTR_RES
) {

857 
	`tsk_îr‹_ª£t
();

858 
tsk_î∫o
 = 
TSK_ERR_FS_INODE_COR
;

859 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

861  
TSK_COR
;

867 
idxÆloc_Àn
 = 
fs_©å_idx
->
ƒd
.
Ælocsize
;

868 i‡((
idxÆloc
 = 
	`tsk_mÆloc
((
size_t
Ë
idxÆloc_Àn
)Ë=
NULL
) {

869  
TSK_ERR
;

873 
lﬂd_fûe
.
tŸÆ
 =Üﬂd_fûe.
À·
 = (
size_t
Ë
idxÆloc_Àn
;

874 
lﬂd_fûe
.
cur
 =Üﬂd_fûe.
ba£
 = 
idxÆloc
;

876 i‡(
tsk_vîbo£
)

877 
	`tsk_Ârötf
(
°dîr
,

880 i‡(
	`tsk_fs_©å_wÆk
(
fs_©å_idx
,

881 
TSK_FS_FILE_WALK_FLAG_SLACK
, 
tsk_fs_lﬂd_fûe_a˘i⁄
,

882 (*Ë&
lﬂd_fûe
)) {

883 
	`‰ì
(
idxÆloc
);

884 
	`°∫ˇt
(
tsk_îr°r2
, " -Çtfs_dir_open_meta",

885 
TSK_ERRSTR_L
 - 
	`°æí
(
tsk_îr°r2
));

886  
TSK_COR
;

890 i‡(
lﬂd_fûe
.
À·
 > 0) {

891 
	`‰ì
(
idxÆloc
);

893 
	`tsk_îr‹_ª£t
();

894 
tsk_î∫o
 = 
TSK_ERR_FS_FWALK
;

895 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

896 "Eº‹Ñódög dúe˘‹y c⁄ã¡s: %" 
PRIuINUM
 "\n",

897 
a_addr
);

898  
TSK_COR
;

915 
idxªc_p
 = 
idxªc
 = 
NULL
;

918 
off
 = 0; of‡< 
idxÆloc_Àn
; of‡+
¡fs
->
csize_b
) {

919 
uöt32_t
 
li°_Àn
, 
ªc_Àn
;

921 
idxªc
 = (
¡fs_idxªc
 *Ë& 
idxÆloc
[
off
];

923 i‡(
tsk_vîbo£
)

924 
	`tsk_Ârötf
(
°dîr
,

926 
PRIx32
 "\n", 
off
, 
	`tsk_gëu32
(
a_fs
->
ídün
,

927 
idxªc
->
magic
));

930 i‡(
	`tsk_gëu32
(
a_fs
->
ídün
,

931 
idxªc
->
magic
Ë!
NTFS_IDXREC_MAGIC
)

937 i‡(
idxªc_p
 =
NULL
) {

938 
idxªc_p
 = 
idxªc
;

947 
ªc_Àn
 =

948 (
uöt32_t
Ë((
uöçå_t
Ë
idxªc
 - (uöçå_tË
idxªc_p
);

950 i‡(
tsk_vîbo£
)

951 
	`tsk_Ârötf
(
°dîr
,

953 
PRIu32
 ")\n", 
ªc_Àn
);

956 i‡(
	`¡fs_fix_idxªc
(
¡fs
, 
idxªc_p
, 
ªc_Àn
)) {

957 
	`‰ì
(
idxÆloc
);

958  
TSK_COR
;

962 
idxñi°
 = &
idxªc_p
->
li°
;

963 
idxe
 = (
¡fs_idxíåy
 *Ë((
uöçå_t
Ë
idxñi°
 +

964 
	`tsk_gëu32
(
a_fs
->
ídün
, 
idxñi°
->
begö_off
));

971 
li°_Àn
 = (
uöt32_t
Ë((
uöçå_t
Ë
idxªc
 - (uöçå_tË
idxe
);

974 i‡(((
uöçå_t
Ë
idxe
 > (uöçå_tË
idxªc
) ||

975 ((
uöçå_t
Ë
idxñi°
 +

976 
	`tsk_gëu32
(
a_fs
->
ídün
,

977 
idxñi°
->
£qíd_off
Ë> (
uöçå_t
Ë
idxªc
)) {

978 
	`tsk_îr‹_ª£t
();

979 
tsk_î∫o
 = 
TSK_ERR_FS_INODE_COR
;

980 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

982 
PRIuINUM
, 
fs_dú
->
fs_fûe
->
mëa
->
addr
);

983 
	`‰ì
(
idxÆloc
);

984  
TSK_COR
;

989 
ªtvÆ_tmp
 = 
	`¡fs_¥oc_idxíåy
(
¡fs
, 
fs_dú
,

990 (
fs_dú
->
fs_fûe
->

991 
mëa
->
Êags
 & 
TSK_FS_META_FLAG_UNALLOC
Ë? 1 : 0, 
idxe
,

992 
li°_Àn
, 
	`tsk_gëu32
(
a_fs
->
ídün
,

993 
idxñi°
->
£qíd_off
Ë- 
	`tsk_gëu32
(
a_fs
->
ídün
,

994 
idxñi°
->
begö_off
));

996 i‡(
ªtvÆ_tmp
 =
TSK_ERR
) {

997 
	`‰ì
(
idxÆloc
);

998  
TSK_ERR
;

1000 i‡(
ªtvÆ_tmp
 =
TSK_COR
) {

1001 
ªtvÆ_föÆ
 = 
TSK_COR
;

1005 
idxªc_p
 = 
idxªc
;

1011 i‡(
idxªc_p
) {

1012 
uöt32_t
 
li°_Àn
, 
ªc_Àn
;

1015 
ªc_Àn
 =

1016 (
uöt32_t
Ë(
idxÆloc_Àn
 - (
uöçå_t
Ë
idxªc_p
 -

1017 (
uöçå_t
Ë
idxÆloc
);

1019 i‡(
tsk_vîbo£
)

1020 
	`tsk_Ârötf
(
°dîr
,

1022 
PRIu32
 ")\n", 
ªc_Àn
);

1025 i‡(
	`¡fs_fix_idxªc
(
¡fs
, 
idxªc_p
, 
ªc_Àn
)) {

1026 
	`‰ì
(
idxÆloc
);

1027  
TSK_COR
;

1030 
idxñi°
 = &
idxªc_p
->
li°
;

1031 
idxe
 = (
¡fs_idxíåy
 *Ë((
uöçå_t
Ë
idxñi°
 +

1032 
	`tsk_gëu32
(
a_fs
->
ídün
, 
idxñi°
->
begö_off
));

1035 
li°_Àn
 =

1036 (
uöt32_t
Ë((
uöçå_t
Ë
idxÆloc
 + 
idxÆloc_Àn
) -

1037 (
uöçå_t
Ë
idxe
;

1040 i‡((
li°_Àn
 > 
ªc_Àn
) ||

1041 ((
uöçå_t
Ë
idxñi°
 +

1042 
	`tsk_gëu32
(
a_fs
->
ídün
, 
idxñi°
->
£qíd_off
) >

1043 (
uöçå_t
Ë
idxÆloc
 + 
idxÆloc_Àn
)) {

1044 
	`tsk_îr‹_ª£t
();

1045 
tsk_î∫o
 = 
TSK_ERR_FS_INODE_COR
;

1046 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

1048 
PRIuINUM
, 
fs_dú
->
fs_fûe
->
mëa
->
addr
);

1049 
	`‰ì
(
idxÆloc
);

1050  
TSK_COR
;

1054 
ªtvÆ_tmp
 = 
	`¡fs_¥oc_idxíåy
(
¡fs
, 
fs_dú
,

1055 (
fs_dú
->
fs_fûe
->

1056 
mëa
->
Êags
 & 
TSK_FS_META_FLAG_UNALLOC
Ë? 1 : 0, 
idxe
,

1057 
li°_Àn
, 
	`tsk_gëu32
(
a_fs
->
ídün
,

1058 
idxñi°
->
£qíd_off
Ë- 
	`tsk_gëu32
(
a_fs
->
ídün
,

1059 
idxñi°
->
begö_off
));

1061 i‡(
ªtvÆ_tmp
 =
TSK_ERR
) {

1062 
	`‰ì
(
idxÆloc
);

1063  
TSK_ERR
;

1065 i‡(
ªtvÆ_tmp
 =
TSK_COR
) {

1066 
ªtvÆ_föÆ
 = 
TSK_COR
;

1070 
	`‰ì
(
idxÆloc
);

1076 i‡(
¡fs
->
‹ph™_m≠
 =
NULL
) {

1077 i‡(
a_fs
->
	`öode_wÆk
◊_fs,á_fs->
fú°_öum
,á_fs->
œ°_öum
,

1078 
TSK_FS_META_FLAG_UNALLOC
, 
¡fs_‹ph™_a˘
, 
NULL
)) {

1079  
TSK_ERR
;

1084 
m≠
 = 
	`¡fs_‹ph™_m≠_gë
(
¡fs
, 
a_addr
);

1085 i‡(
m≠
 !
NULL
) {

1086 
a
;

1087 
TSK_FS_NAME
 *
fs_«me
;

1088 
TSK_FS_FILE
 *
fs_fûe_‹p
 = 
NULL
;

1090 i‡((
fs_«me
 = 
	`tsk_fs_«me_Æloc
(256, 0)Ë=
NULL
)

1091  
TSK_ERR
;

1093 
fs_«me
->
Êags
 = 
TSK_FS_NAME_FLAG_UNALLOC
;

1094 
fs_«me
->
ty≥
 = 
TSK_FS_NAME_TYPE_UNDEF
;

1096 
a
 = 0;á < 
m≠
->
u£d_˙t
;á++) {

1099 
fs_«me
->
mëa_addr
 = 
m≠
->
addrs
[
a
];

1102 
fs_fûe_‹p
 =

1103 
	`tsk_fs_fûe_›í_mëa
(
a_fs
, 
fs_fûe_‹p
, 
m≠
->
addrs
[
a
]);

1104 i‡((
fs_fûe_‹p
Ë&& (fs_fûe_‹p->
mëa
)

1105 && (
fs_fûe_‹p
->
mëa
->
«me2
)) {

1106 
TSK_FS_META_NAME_LIST
 *
n2
 = 
fs_fûe_‹p
->
mëa
->
«me2
;

1107 
n2
) {

1108 i‡(
n2
->
∑r_öode
 =
a_addr
) {

1109 
	`°∫˝y
(
fs_«me
->
«me
, 
n2
->name,

1110 
fs_«me
->
«me_size
);

1111 
	`tsk_fs_dú_add
(
fs_dú
, 
fs_«me
);

1113 
n2
 =Ç2->
√xt
;

1117 
	`tsk_fs_«me_‰ì
(
fs_«me
);

1121 i‡(
a_addr
 =
a_fs
->
roŸ_öum
) {

1122 
TSK_FS_NAME
 *
fs_«me
;

1124 i‡((
fs_«me
 = 
	`tsk_fs_«me_Æloc
(256, 0)Ë=
NULL
)

1125  
TSK_ERR
;

1127 i‡(
	`tsk_fs_dú_make_‹ph™_dú_«me
(
a_fs
, 
fs_«me
)) {

1128 
	`tsk_fs_«me_‰ì
(
fs_«me
);

1129  
TSK_ERR
;

1132 i‡(
	`tsk_fs_dú_add
(
fs_dú
, 
fs_«me
)) {

1133 
	`tsk_fs_«me_‰ì
(
fs_«me
);

1134  
TSK_ERR
;

1136 
	`tsk_fs_«me_‰ì
(
fs_«me
);

1140  
ªtvÆ_föÆ
;

1141 
	}
}

1150 
	#MAX_DEPTH
 128

	)

1151 
	#DIR_STRSZ
 4096

	)

1157 
	mdïth
;

1160 *
	mdidx
[
MAX_DEPTH
];

1163 
	mdús
[
DIR_STRSZ
];

1165 } 
	tNTFS_DINFO
;

1176 
uöt8_t


1177 
	$¡fs_föd_fûe_ªc
(
TSK_FS_INFO
 * 
fs
, 
NTFS_DINFO
 * 
döfo
,

1178 
TSK_FS_FILE
 * 
fs_fûe
, 
TSK_FS_META_NAME_LIST
 * 
fs_«me_li°
,

1179 
TSK_FS_DIR_WALK_CB
 
a˘i⁄
, *
±r
)

1181 
TSK_FS_FILE
 *
fs_fûe_∑r
;

1182 
TSK_FS_META_NAME_LIST
 *
fs_«me_li°_∑r
;

1183 
uöt8_t
 
de¸em
 = 0;

1184 
size_t
 
Àn
 = 0, 
i
;

1185 *
begö
 = 
NULL
;

1186 
ªtvÆ
;

1189 i‡(
fs_«me_li°
->
∑r_öode
 < 
fs
->
fú°_öum
 ||

1190 
fs_«me_li°
->
∑r_öode
 > 
fs
->
œ°_öum
) {

1191 
	`tsk_îr‹_ª£t
();

1192 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

1193 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

1194 "övÆid inodêvÆue: %" 
PRIuINUM
 "\n",

1195 
fs_«me_li°
->
∑r_öode
);

1199 
fs_fûe_∑r
 = 
	`tsk_fs_fûe_›í_mëa
(
fs
, 
NULL
, 
fs_«me_li°
->
∑r_öode
);

1200 i‡(
fs_fûe_∑r
 =
NULL
) {

1201 
	`°∫ˇt
(
tsk_îr°r2
, " -Çtfs_find_file_rec",

1202 
TSK_ERRSTR_L
 - 
	`°æí
(
tsk_îr°r2
));

1212 i‡((
fs_fûe_∑r
->
mëa
->
ty≥
 !
TSK_FS_META_TYPE_DIR
)

1213 || (
fs_fûe_∑r
->
mëa
->
£q
 !
fs_«me_li°
->
∑r_£q
)) {

1214 *
°r
 = 
TSK_FS_ORPHAN_STR
;

1215 
Àn
 = 
	`°æí
(
°r
);

1220 i‡((((
uöçå_t
Ë
döfo
->
didx
[döfo->
dïth
 - 1] - 
Àn
) >=

1221 (
uöçå_t
Ë& 
döfo
->
dús
[0])

1222 && (
döfo
->
dïth
 < 
MAX_DEPTH
)) {

1223 
begö
 = 
döfo
->
didx
[döfo->
dïth
] =

1224 (*Ë((
uöçå_t
Ë
döfo
->
didx
[döfo->
dïth
 - 1] - 
Àn
);

1226 
döfo
->
dïth
++;

1227 
de¸em
 = 1;

1229 
i
 = 0; i < 
Àn
; i++)

1230 
begö
[
i
] = 
°r
[i];

1233 
ªtvÆ
 = 
	`a˘i⁄
(
fs_fûe
, 
begö
, 
±r
);

1235 i‡(
de¸em
)

1236 
döfo
->
dïth
--;

1238 
	`tsk_fs_fûe_˛o£
(
fs_fûe_∑r
);

1239  (
ªtvÆ
 =
TSK_WALK_ERROR
) ? 1 : 0;

1242 
fs_«me_li°_∑r
 = 
fs_fûe_∑r
->
mëa
->
«me2
;

1243 
fs_«me_li°_∑r
 !
NULL
;

1244 
fs_«me_li°_∑r
 = fs_«me_li°_∑r->
√xt
) {

1246 
Àn
 = 
	`°æí
(
fs_«me_li°_∑r
->
«me
);

1250 i‡((((
uöçå_t
Ë
döfo
->
didx
[döfo->
dïth
 - 1] - 
Àn
 - 1) >=

1251 (
uöçå_t
Ë& 
döfo
->
dús
[0])

1252 && (
döfo
->
dïth
 < 
MAX_DEPTH
)) {

1253 
begö
 = 
döfo
->
didx
[döfo->
dïth
] =

1254 (*Ë((
uöçå_t
Ë
döfo
->
didx
[döfo->
dïth
 - 1] - 
Àn
 -

1257 
döfo
->
dïth
++;

1258 
de¸em
 = 1;

1260 *
begö
 = '/';

1261 
i
 = 0; i < 
Àn
; i++)

1262 
begö
[
i
 + 1] = 
fs_«me_li°_∑r
->
«me
[i];

1265 
begö
 = 
döfo
->
didx
[döfo->
dïth
];

1266 
de¸em
 = 0;

1273 i‡(
fs_«me_li°_∑r
->
∑r_öode
 =
NTFS_ROOTINO
) {

1278 i‡(
TSK_WALK_ERROR
 =
	`a˘i⁄
(
fs_fûe
,

1279 (c⁄° *Ë((
uöçå_t
Ë
begö
 + 1), 
±r
)) {

1280 
	`tsk_fs_fûe_˛o£
(
fs_fûe_∑r
);

1287 i‡(
	`¡fs_föd_fûe_ªc
(
fs
, 
döfo
, 
fs_fûe
, 
fs_«me_li°_∑r
,

1288 
a˘i⁄
, 
±r
)) {

1289 
	`tsk_fs_fûe_˛o£
(
fs_fûe_∑r
);

1295 i‡(
de¸em
)

1296 
döfo
->
dïth
--;

1299 
	`tsk_fs_fûe_˛o£
(
fs_fûe_∑r
);

1302 
	}
}

1314 
uöt8_t


1315 
	$¡fs_föd_fûe
(
TSK_FS_INFO
 * 
fs
, 
TSK_INUM_T
 
öode_toid
, 
uöt32_t
 
ty≥_toid
,

1316 
uöt8_t
 
ty≥_u£d
, 
uöt16_t
 
id_toid
, uöt8_à
id_u£d
,

1317 
TSK_FS_DIR_WALK_FLAG_ENUM
 
dú_wÆk_Êags
, 
TSK_FS_DIR_WALK_CB
 
a˘i⁄
,

1318 *
±r
)

1320 
TSK_FS_META_NAME_LIST
 *
fs_«me_li°
;

1321 
NTFS_INFO
 *
¡fs
 = (NTFS_INFO *Ë
fs
;

1322 *
©å
 = 
NULL
;

1323 
NTFS_DINFO
 
döfo
;

1324 
TSK_FS_FILE
 *
fs_fûe
;

1327 i‡(
öode_toid
 < 
fs
->
fú°_öum
 || inode_toid > fs->
œ°_öum
) {

1328 
	`tsk_îr‹_ª£t
();

1329 
tsk_î∫o
 = 
TSK_ERR_FS_ARG
;

1330 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

1331 "¡fs_föd_fûe: invÆid inodêvÆue: %" 
PRIuINUM
 "\n",

1332 
öode_toid
);

1337 
fs_fûe
 = 
	`tsk_fs_fûe_›í_mëa
(
fs
, 
NULL
, 
öode_toid
);

1338 i‡(
fs_fûe
 =
NULL
) {

1339 
	`°∫ˇt
(
tsk_îr°r2
, " -Çtfs_find_file",

1340 
TSK_ERRSTR_L
 - 
	`°æí
(
tsk_îr°r2
));

1341 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

1346 i‡((
fs_fûe
->
mëa
->
Êags
 & 
TSK_FS_META_FLAG_ALLOC
)

1347 && ((
dú_wÆk_Êags
 & 
TSK_FS_DIR_WALK_FLAG_ALLOC
) == 0)) {

1348 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

1351 i‡((
fs_fûe
->
mëa
->
Êags
 & 
TSK_FS_META_FLAG_UNALLOC
)

1352 && ((
dú_wÆk_Êags
 & 
TSK_FS_DIR_WALK_FLAG_UNALLOC
) == 0)) {

1353 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

1359 i‡((
fs_fûe
->
«me
 =

1360 
	`tsk_fs_«me_Æloc
(
NTFS_MAXNAMLEN_UTF8
, 0)Ë=
NULL
) {

1363 
fs_fûe
->
«me
->
mëa_addr
 = 
öode_toid
;

1364 
fs_fûe
->
«me
->
mëa_£q
 = 0;

1365 
fs_fûe
->
«me
->
Êags
 =

1366 ((
	`tsk_gëu16
(
fs
->
ídün
,

1367 
¡fs
->

1368 
m·
->
Êags
Ë& 
NTFS_MFT_INUSE
Ë? 
TSK_FS_NAME_FLAG_ALLOC
 :

1369 
TSK_FS_NAME_FLAG_UNALLOC
);

1371 
	`mem£t
(&
döfo
, 0, (
NTFS_DINFO
));

1380 
döfo
.
dús
[
DIR_STRSZ
 - 2] = '/';

1381 
döfo
.
dús
[
DIR_STRSZ
 - 1] = '\0';

1382 
döfo
.
didx
[0] = &döfo.
dús
[
DIR_STRSZ
 - 2];

1383 
döfo
.
dïth
 = 1;

1387 i‡(
ty≥_u£d
) {

1388 c⁄° 
TSK_FS_ATTR
 *
fs_©å
;

1390 i‡(
id_u£d
)

1391 
fs_©å
 =

1392 
	`tsk_fs_©åli°_gë_id
(
fs_fûe
->
mëa
->
©å
, 
ty≥_toid
,

1393 
id_toid
);

1395 
fs_©å
 = 
	`tsk_fs_©åli°_gë
(
fs_fûe
->
mëa
->
©å
, 
ty≥_toid
);

1397 i‡(!
fs_©å
) {

1398 
	`tsk_îr‹_ª£t
();

1399 
tsk_î∫o
 = 
TSK_ERR_FS_INODE_COR
;

1400 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

1401 "föd_fûe: Ty≥ %" 
PRIu32
 " Id %" 
PRIu16


1402 "ÇŸ found i¿MFT %" 
PRIuINUM
 "", 
ty≥_toid
, 
id_toid
,

1403 
öode_toid
);

1404 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

1409 i‡(
	`°rcmp
(
fs_©å
->
«me
, "$Data") != 0)

1410 
©å
 = 
fs_©å
->
«me
;

1414 
fs_«me_li°
 = 
fs_fûe
->
mëa
->
«me2
; fs_«me_li° !
NULL
;

1415 
fs_«me_li°
 = fs_«me_li°->
√xt
) {

1416 
ªtvÆ
;

1419 i‡(
©å
 !
NULL
) {

1420 
	`¢¥ötf
(
fs_fûe
->
«me
->«me, fs_fûe->«me->
«me_size
,

1421 "%s:%s", 
fs_«me_li°
->
«me
, 
©å
);

1424 
	`°∫˝y
(
fs_fûe
->
«me
->«me, 
fs_«me_li°
->name,

1425 
fs_fûe
->
«me
->
«me_size
);

1429 i‡(
fs_«me_li°
->
∑r_öode
 =
NTFS_ROOTINO
) {

1431 
ªtvÆ
 = 
	`a˘i⁄
(
fs_fûe
, 
döfo
.
didx
[0], 
±r
);

1432 i‡(
ªtvÆ
 =
TSK_WALK_STOP
) {

1433 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

1436 i‡(
ªtvÆ
 =
TSK_WALK_ERROR
) {

1437 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

1443 i‡(
	`¡fs_föd_fûe_ªc
(
fs
, &
döfo
, 
fs_fûe
, 
fs_«me_li°
,

1444 
a˘i⁄
, 
±r
)) {

1445 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

1451 
	`tsk_fs_fûe_˛o£
(
fs_fûe
);

1453 
	}
}

1457 
	$¡fs_«me_cmp
(
TSK_FS_INFO
 * 
a_fs_öfo
, c⁄° *
s1
, c⁄° *
s2
)

1459  
	`°rˇ£cmp
(
s1
, 
s2
);

1460 
	}
}

	@tsk3/fs/rawfs.c

13 
	~"tsk_fs_i.h
"

35 
TSK_FS_INFO
 *

36 
	$øwfs_›í
(
TSK_IMG_INFO
 * 
img_öfo
, 
TSK_OFF_T
 
off£t
)

38 
TSK_OFF_T
 
Àn
;

39 
TSK_FS_INFO
 *
fs
;

42 
	`tsk_îr‹_ª£t
();

44 
fs
 = (
TSK_FS_INFO
 *Ë
	`tsk_mÆloc
((TSK_FS_INFO));

45 i‡(
fs
 =
NULL
)

46  
NULL
;

50 
fs
->
img_öfo
 = img_info;

51 
fs
->
off£t
 = offset;

53 
fs
->
·y≥
 = 
TSK_FS_TYPE_RAW
;

54 
fs
->
du«me
 = "Sector";

55 
fs
->
Êags
 = 0;

56 
fs
->
èg
 = 
TSK_FS_INFO_TAG
;

58 
fs
->
öum_cou¡
 = 0;

59 
fs
->
roŸ_öum
 = 0;

60 
fs
->
fú°_öum
 = 0;

61 
fs
->
œ°_öum
 = 0;

63 
Àn
 = 
img_öfo
->
size
;

64 
fs
->
block_size
 = 512;

65 
fs
->
block_cou¡
 = 
Àn
 / fs->
block_size
;

66 i‡(
Àn
 % 
fs
->
block_size
)

67 
fs
->
block_cou¡
++;

69 
fs
->
fú°_block
 = 0;

70 
fs
->
œ°_block
 = fs->
œ°_block_a˘
 = fs->
block_cou¡
 - 1;

71 
fs
->
dev_bsize
 = 
img_öfo
->
£˘‹_size
;

74 
fs
->
˛o£
 = 
tsk_fs_nofs_˛o£
;

75 
fs
->
fs°©
 = 
tsk_fs_nofs_fs°©
;

77 
fs
->
block_wÆk
 = 
tsk_fs_nofs_block_wÆk
;

78 
fs
->
block_gëÊags
 = 
tsk_fs_nofs_block_gëÊags
;

80 
fs
->
öode_wÆk
 = 
tsk_fs_nofs_öode_wÆk
;

81 
fs
->
fûe_add_mëa
 = 
tsk_fs_nofs_fûe_add_mëa
;

82 
fs
->
i°©
 = 
tsk_fs_nofs_i°©
;

84 
fs
->
gë_deÁu…_©å_ty≥
 = 
tsk_fs_nofs_gë_deÁu…_©å_ty≥
;

85 
fs
->
lﬂd_©ås
 = 
tsk_fs_nofs_make_d©a_run
;

87 
fs
->
dú_›í_mëa
 = 
tsk_fs_nofs_dú_›í_mëa
;

88 
fs
->
«me_cmp
 = 
tsk_fs_nofs_«me_cmp
;

90 
fs
->
jblk_wÆk
 = 
tsk_fs_nofs_jblk_wÆk
;

91 
fs
->
jíåy_wÆk
 = 
tsk_fs_nofs_jíåy_wÆk
;

92 
fs
->
j›í
 = 
tsk_fs_nofs_j›í
;

93 
fs
->
jou∫_öum
 = 0;

95  (
fs
);

96 
	}
}

	@tsk3/fs/swapfs.c

13 
	~"tsk_fs_i.h
"

34 
TSK_FS_INFO
 *

35 
	$sw≠fs_›í
(
TSK_IMG_INFO
 * 
img_öfo
, 
TSK_OFF_T
 
off£t
)

37 
TSK_OFF_T
 
Àn
;

38 
TSK_FS_INFO
 *
fs
;

41 
	`tsk_îr‹_ª£t
();

43 
fs
 = (
TSK_FS_INFO
 *Ë
	`tsk_mÆloc
((*fs));

44 i‡(
fs
 =
NULL
)

45  
NULL
;

49 
fs
->
img_öfo
 = img_info;

50 
fs
->
off£t
 = offset;

51 
fs
->
·y≥
 = 
TSK_FS_TYPE_SWAP
;

52 
fs
->
du«me
 = "Page";

53 
fs
->
Êags
 = 0;

54 
fs
->
èg
 = 
TSK_FS_INFO_TAG
;

56 
fs
->
öum_cou¡
 = 0;

57 
fs
->
roŸ_öum
 = 0;

58 
fs
->
fú°_öum
 = 0;

59 
fs
->
œ°_öum
 = 0;

61 
Àn
 = 
img_öfo
->
size
;

62 
fs
->
block_cou¡
 = 
Àn
 / 4096;

63 i‡(
Àn
 % 4096)

64 
fs
->
block_cou¡
++;

66 
fs
->
fú°_block
 = 0;

67 
fs
->
œ°_block
 = fs->
œ°_block_a˘
 = fs->
block_cou¡
 - 1;

68 
fs
->
block_size
 = 4096;

69 
fs
->
dev_bsize
 = 
img_öfo
->
£˘‹_size
;

72 
fs
->
˛o£
 = 
tsk_fs_nofs_˛o£
;

73 
fs
->
fs°©
 = 
tsk_fs_nofs_fs°©
;

75 
fs
->
block_wÆk
 = 
tsk_fs_nofs_block_wÆk
;

76 
fs
->
block_gëÊags
 = 
tsk_fs_nofs_block_gëÊags
;

78 
fs
->
öode_wÆk
 = 
tsk_fs_nofs_öode_wÆk
;

79 
fs
->
i°©
 = 
tsk_fs_nofs_i°©
;

80 
fs
->
fûe_add_mëa
 = 
tsk_fs_nofs_fûe_add_mëa
;

82 
fs
->
gë_deÁu…_©å_ty≥
 = 
tsk_fs_nofs_gë_deÁu…_©å_ty≥
;

83 
fs
->
lﬂd_©ås
 = 
tsk_fs_nofs_make_d©a_run
;

85 
fs
->
dú_›í_mëa
 = 
tsk_fs_nofs_dú_›í_mëa
;

86 
fs
->
«me_cmp
 = 
tsk_fs_nofs_«me_cmp
;

88 
fs
->
jblk_wÆk
 = 
tsk_fs_nofs_jblk_wÆk
;

89 
fs
->
jíåy_wÆk
 = 
tsk_fs_nofs_jíåy_wÆk
;

90 
fs
->
j›í
 = 
tsk_fs_nofs_j›í
;

91 
fs
->
jou∫_öum
 = 0;

93  (
fs
);

94 
	}
}

	@tsk3/fs/tsk_ext2fs.h

17 #i‚de‡
_TSK_EXT2FS_H


18 
	#_TSK_EXT2FS_H


	)

20 #ifde‡
__˝lu•lus


24 
uöt32_t
 
	tEXT2_GRPNUM_T
;

25 
	#PRI_EXT2GRP
 
PRIu32


	)

30 
	#EXT2FS_FIRSTINO
 1

	)

31 
	#EXT2FS_ROOTINO
 2

	)

32 
	#EXT2FS_NDADDR
 12

	)

33 
	#EXT2FS_NIADDR
 3

	)

34 
	#EXT2FS_SBOFF
 1024

	)

35 
	#EXT2FS_FS_MAGIC
 0xef53

	)

36 
	#EXT2FS_MAXNAMLEN
 255

	)

37 
	#EXT2FS_MAXPATHLEN
 4096

	)

38 
	#EXT2FS_MIN_BLOCK_SIZE
 1024

	)

39 
	#EXT2FS_MAX_BLOCK_SIZE
 4096

	)

40 
	#EXT2FS_FILE_CONTENT_LEN
 ((
EXT2FS_NDADDR
 + 
EXT2FS_NIADDR
Ë* (
TSK_DADDR_T
))

	)

46 
uöt8_t
 
s_öodes_cou¡
[4];

47 
uöt8_t
 
s_blocks_cou¡
[4];

48 
uöt8_t
 
s_r_blocks_cou¡
[4];

49 
uöt8_t
 
s_‰ì_blocks_cou¡
[4];

50 
uöt8_t
 
s_‰ì_öode_cou¡
[4];

51 
uöt8_t
 
s_fú°_d©a_block
[4];

52 
uöt8_t
 
s_log_block_size
[4];

53 
uöt8_t
 
s_log_‰ag_size
[4];

54 
uöt8_t
 
s_blocks_≥r_group
[4];

55 
uöt8_t
 
s_‰ags_≥r_group
[4];

56 
uöt8_t
 
s_öodes_≥r_group
[4];

57 
uöt8_t
 
s_mtime
[4];

58 
uöt8_t
 
s_wtime
[4];

59 
uöt8_t
 
s_m¡_cou¡
[2];

60 
uöt8_t
 
s_max_m¡_cou¡
[2];

61 
uöt8_t
 
s_magic
[2];

62 
uöt8_t
 
s_°©e
[2];

63 
uöt8_t
 
s_îr‹s
[2];

64 
uöt8_t
 
s_mö‹_ªv_Àvñ
[2];

65 
uöt8_t
 
s_œ°check
[4];

66 
uöt8_t
 
s_checköãrvÆ
[4];

67 
uöt8_t
 
s_¸ót‹_os
[4];

68 
uöt8_t
 
s_ªv_Àvñ
[4];

69 
uöt8_t
 
s_def_ªsuid
[2];

70 
uöt8_t
 
s_def_ªsgid
[2];

71 
uöt8_t
 
s_fú°_öo
[4];

72 
uöt8_t
 
s_öode_size
[2];

73 
uöt8_t
 
s_block_group_ƒ
[2];

74 
uöt8_t
 
s_„©uª_com∑t
[4];

75 
uöt8_t
 
s_„©uª_öcom∑t
[4];

76 
uöt8_t
 
s_„©uª_ro_com∑t
[4];

77 
uöt8_t
 
s_uuid
[16];

78 
s_vﬁume_«me
[16];

79 
s_œ°_mou¡ed
[64];

80 
uöt8_t
 
s_Æg‹ôhm_ußge_bôm≠
[4];

81 
uöt8_t
 
s_¥óŒoc_blocks
;

82 
uöt8_t
 
s_¥óŒoc_dú_blocks
;

83 
uöt8_t
 
s_∑ddög1
[2];

84 
uöt8_t
 
s_jou∫Æ_uuid
[16];

85 
uöt8_t
 
s_jou∫Æ_öum
[4];

86 
uöt8_t
 
s_jou∫Æ_dev
[4];

87 
uöt8_t
 
s_œ°_‹ph™
[4];

88 
uöt8_t
 
s_∑ddög
[788];

89 } 
	text2fs_sb
;

92 
	#EXT2FS_STATE_VALID
 0x0001

	)

93 
	#EXT2FS_STATE_ERROR
 0x0002

	)

96 
	#EXT2FS_OS_LINUX
 0

	)

97 
	#EXT2FS_OS_HURD
 1

	)

98 
	#EXT2FS_OS_MASIX
 2

	)

99 
	#EXT2FS_OS_FREEBSD
 3

	)

100 
	#EXT2FS_OS_LITES
 4

	)

103 
	#EXT2FS_REV_ORIG
 0

	)

104 
	#EXT2FS_REV_DYN
 1

	)

107 
	#EXT2FS_FEATURE_COMPAT_DIR_PREALLOC
 0x0001

	)

108 
	#EXT2FS_FEATURE_COMPAT_IMAGIC_INODES
 0x0002

	)

109 
	#EXT2FS_FEATURE_COMPAT_HAS_JOURNAL
 0x0004

	)

110 
	#EXT2FS_FEATURE_COMPAT_EXT_ATTR
 0x0008

	)

111 
	#EXT2FS_FEATURE_COMPAT_RESIZE_INO
 0x0010

	)

112 
	#EXT2FS_FEATURE_COMPAT_DIR_INDEX
 0x0020

	)

114 
	#EXT2FS_FEATURE_INCOMPAT_COMPRESSION
 0x0001

	)

115 
	#EXT2FS_FEATURE_INCOMPAT_FILETYPE
 0x0002

	)

116 
	#EXT2FS_FEATURE_INCOMPAT_RECOVER
 0x0004

	)

117 
	#EXT2FS_FEATURE_INCOMPAT_JOURNAL_DEV
 0x0008

	)

119 
	#EXT2FS_FEATURE_RO_COMPAT_SPARSE_SUPER
 0x0001

	)

120 
	#EXT2FS_FEATURE_RO_COMPAT_LARGE_FILE
 0x0002

	)

121 
	#EXT2FS_FEATURE_RO_COMPAT_BTREE_DIR
 0x0004

	)

129 
uöt8_t
 
bg_block_bôm≠
[4];

130 
uöt8_t
 
bg_öode_bôm≠
[4];

131 
uöt8_t
 
bg_öode_èbÀ
[4];

132 
uöt8_t
 
bg_‰ì_blocks_cou¡
[2];

133 
uöt8_t
 
bg_‰ì_öodes_cou¡
[2];

134 
uöt8_t
 
bg_u£d_dús_cou¡
[2];

135 
uöt8_t
 
f1
[14];

136 } 
	text2fs_gd
;

140 
	#ext2_dtog_l˛
(
fsi
, 
fs
, 
d
) \

141 (
EXT2_GRPNUM_T
)(((
d
Ë- 
	`tsk_gëu32
(
fsi
->
ídün
, 
fs
->
s_fú°_d©a_block
)) / \

142 
	`tsk_gëu32
(
fsi
->
ídün
, 
fs
->
s_blocks_≥r_group
))

	)

146 
	#ext2_cgba£_l˛
(
fsi
, 
fs
, 
c
) \

147 ((
TSK_DADDR_T
)((
	`tsk_gëu32
(
fsi
->
ídün
, 
fs
->
s_blocks_≥r_group
Ë* (
c
)) + \

148 
	`tsk_gëu32
(
fsi
->
ídün
, 
fs
->
s_fú°_d©a_block
)))

	)

155 
uöt8_t
 
i_mode
[2];

156 
uöt8_t
 
i_uid
[2];

157 
uöt8_t
 
i_size
[4];

158 
uöt8_t
 
i_©ime
[4];

159 
uöt8_t
 
i_˘ime
[4];

160 
uöt8_t
 
i_mtime
[4];

161 
uöt8_t
 
i_dtime
[4];

162 
uöt8_t
 
i_gid
[2];

163 
uöt8_t
 
i_∆ök
[2];

164 
uöt8_t
 
i_nblk
[4];

165 
uöt8_t
 
i_Êags
[4];

166 
uöt8_t
 
i_f5
[4];

167 
uöt8_t
 
i_block
[15][4];

168 
uöt8_t
 
i_gíî©i⁄
[4];

169 
uöt8_t
 
i_fûe_a˛
[4];

170 
uöt8_t
 
i_size_high
[4];

171 
uöt8_t
 
i_Áddr
[4];

172 
uöt8_t
 
i_‰ag
;

173 
uöt8_t
 
i_fsize
;

174 
uöt8_t
 
f1
[2];

175 
uöt8_t
 
i_uid_high
[2];

176 
uöt8_t
 
i_gid_high
[2];

177 
uöt8_t
 
f7
[4];

178 } 
	text2fs_öode
;

181 
	#EXT2_IN_FMT
 0170000

	)

182 
	#EXT2_IN_SOCK
 0140000

	)

183 
	#EXT2_IN_LNK
 0120000

	)

184 
	#EXT2_IN_REG
 0100000

	)

185 
	#EXT2_IN_BLK
 0060000

	)

186 
	#EXT2_IN_DIR
 0040000

	)

187 
	#EXT2_IN_CHR
 0020000

	)

188 
	#EXT2_IN_FIFO
 0010000

	)

190 
	#EXT2_IN_ISUID
 0004000

	)

191 
	#EXT2_IN_ISGID
 0002000

	)

192 
	#EXT2_IN_ISVTX
 0001000

	)

193 
	#EXT2_IN_IRUSR
 0000400

	)

194 
	#EXT2_IN_IWUSR
 0000200

	)

195 
	#EXT2_IN_IXUSR
 0000100

	)

196 
	#EXT2_IN_IRGRP
 0000040

	)

197 
	#EXT2_IN_IWGRP
 0000020

	)

198 
	#EXT2_IN_IXGRP
 0000010

	)

199 
	#EXT2_IN_IROTH
 0000004

	)

200 
	#EXT2_IN_IWOTH
 0000002

	)

201 
	#EXT2_IN_IXOTH
 0000001

	)

204 
	#EXT2_IN_SECDEL
 0x00000001

	)

205 
	#EXT2_IN_UNRM
 0x00000002

	)

206 
	#EXT2_IN_COMP
 0x00000004

	)

207 
	#EXT2_IN_SYNC
 0x00000008

	)

208 
	#EXT2_IN_IMM
 0x00000010

	)

209 
	#EXT2_IN_APPEND
 0x00000020

	)

210 
	#EXT2_IN_NODUMP
 0x00000040

	)

211 
	#EXT2_IN_NOA
 0x00000080

	)

219 
uöt8_t
 
öode
[4];

220 
uöt8_t
 
ªc_Àn
[2];

221 
uöt8_t
 
«me_Àn
[2];

222 
«me
[
EXT2FS_MAXNAMLEN
];

223 } 
	text2fs_díåy1
;

227 
uöt8_t
 
öode
[4];

228 
uöt8_t
 
ªc_Àn
[2];

229 
uöt8_t
 
«me_Àn
;

230 
uöt8_t
 
ty≥
;

231 
«me
[
EXT2FS_MAXNAMLEN
];

232 } 
	text2fs_díåy2
;

234 
	#EXT2FS_DIRSIZ_l˛
(
Àn
) \

235 ((
Àn
 + 8 + 3Ë& ~(3))

	)

239 
	#EXT2_DE_UNKNOWN
 0

	)

240 
	#EXT2_DE_REG
 1

	)

241 
	#EXT2_DE_DIR
 2

	)

242 
	#EXT2_DE_CHR
 3

	)

243 
	#EXT2_DE_BLK
 4

	)

244 
	#EXT2_DE_FIFO
 5

	)

245 
	#EXT2_DE_SOCK
 6

	)

246 
	#EXT2_DE_LNK
 7

	)

247 
	#EXT2_DE_MAX
 8

	)

250 
	#EXT2_DE_V1
 1

	)

251 
	#EXT2_DE_V2
 2

	)

259 
	#EXT2_EA_MAGIC
 0xEA020000

	)

262 
uöt8_t
 
magic
[4];

263 
uöt8_t
 
ªfcou¡
[4];

264 
uöt8_t
 
blocks
[4];

265 
uöt8_t
 
hash
[4];

266 
uöt8_t
 
f1
[16];

267 
uöt8_t
 
íåy
;

268 } 
	text2fs_ó_hódî
;

271 
	#EXT2_EA_IDX_USER
 1

	)

272 
	#EXT2_EA_IDX_POSIX_ACL_ACCESS
 2

	)

273 
	#EXT2_EA_IDX_POSIX_ACL_DEFAULT
 3

	)

274 
	#EXT2_EA_IDX_TRUSTED
 4

	)

275 
	#EXT2_EA_IDX_LUSTRE
 5

	)

276 
	#EXT2_EA_IDX_SECURITY
 6

	)

282 
uöt8_t
 
∆í
;

283 
uöt8_t
 
nidx
;

284 
uöt8_t
 
vÆ_off
[2];

285 
uöt8_t
 
vÆ_blk
[4];

286 
uöt8_t
 
vÆ_size
[4];

287 
uöt8_t
 
hash
[4];

288 
uöt8_t
 
«me
;

289 } 
	text2fs_ó_íåy
;

291 
	#EXT2_EA_LEN
(
∆í
) \

292 ((((
∆í
Ë+ 19 ) / 4Ë* 4)

	)

296 
uöt8_t
 
vî
[4];

297 } 
	text2fs_pos_a˛_hód
;

300 
	#EXT2_PACL_TAG_USERO
 0x01

	)

301 
	#EXT2_PACL_TAG_USER
 0x02

	)

302 
	#EXT2_PACL_TAG_GRPO
 0x04

	)

303 
	#EXT2_PACL_TAG_GRP
 0x08

	)

304 
	#EXT2_PACL_TAG_MASK
 0x10

	)

305 
	#EXT2_PACL_TAG_OTHER
 0x20

	)

308 
	#EXT2_PACL_PERM_EXEC
 0x01

	)

309 
	#EXT2_PACL_PERM_WRITE
 0x02

	)

310 
	#EXT2_PACL_PERM_READ
 0x04

	)

314 
uöt8_t
 
èg
[2];

315 
uöt8_t
 
≥rm
[2];

316 } 
	text2fs_pos_a˛_íåy_sh
;

319 
uöt8_t
 
èg
[2];

320 
uöt8_t
 
≥rm
[2];

321 
uöt8_t
 
id
[4];

322 } 
	text2fs_pos_a˛_íåy_lo
;

331 
	#EXT2_JMAGIC
 0xC03b3998

	)

334 
uöt8_t
 
magic
[4];

335 
uöt8_t
 
íåyty≥
[4];

336 
uöt8_t
 
íåy£q
[4];

337 
uöt8_t
 
bsize
[4];

339 
uöt8_t
 
num_blk
[4];

340 
uöt8_t
 
fú°_blk
[4];

341 
uöt8_t
 
°¨t_£q
[4];

342 
uöt8_t
 
°¨t_blk
[4];

344 
uöt8_t
 
j_î∫o
[4];

347 
uöt8_t
 
„©uª_com∑t
[4];

348 
uöt8_t
 
„©uª_öcom∑t
[4];

349 
uöt8_t
 
„©uª_ro_öcom∑t
[4];

350 
uöt8_t
 
uuid
[16];

351 
uöt8_t
 
num_fs
[4];

352 
uöt8_t
 
dynsu≥r
[4];

353 
uöt8_t
 
max_å™s
[4];

354 
uöt8_t
 
max_å™s_d©a
[4];

355 
uöt8_t
 
ª£rved
[176];

356 
uöt8_t
 
id_fs
[16][48];

357 } 
	text2fs_jou∫_sb
;

360 
	#EXT2_J_ETYPE_DESC
 1

	)

361 
	#EXT2_J_ETYPE_COM
 2

	)

362 
	#EXT2_J_ETYPE_SB1
 3

	)

363 
	#EXT2_J_ETYPE_SB2
 4

	)

364 
	#EXT2_J_ETYPE_REV
 5

	)

369 
uöt8_t
 
magic
[4];

370 
uöt8_t
 
íåy_ty≥
[4];

371 
uöt8_t
 
íåy_£q
[4];

372 } 
	text2fs_jou∫_hód
;

376 
	#EXT2_J_DENTRY_ESC
 1

	)

377 
	#EXT2_J_DENTRY_SAMEID
 2

	)

378 
	#EXT2_J_DENTRY_DEL
 4

	)

379 
	#EXT2_J_DENTRY_LAST
 8

	)

383 
uöt8_t
 
fs_blk
[4];

384 
uöt8_t
 
Êag
[4];

385 } 
	text2fs_jou∫_díåy
;

391 
TSK_FS_FILE
 *
fs_fûe
;

392 
TSK_INUM_T
 
j_öum
;

394 
uöt32_t
 
bsize
;

395 
TSK_DADDR_T
 
fú°_block
;

396 
TSK_DADDR_T
 
œ°_block
;

398 
uöt32_t
 
°¨t_£q
;

399 
TSK_DADDR_T
 
°¨t_blk
;

401 } 
	tEXT2FS_JINFO
;

409 
TSK_FS_INFO
 
fs_öfo
;

410 
ext2fs_sb
 *
fs
;

412 
ext2fs_gd
 *
gΩ_buf
;

413 
EXT2_GRPNUM_T
 
gΩ_num
;

415 
uöt8_t
 *
bm≠_buf
;

416 
EXT2_GRPNUM_T
 
bm≠_gΩ_num
;

418 
uöt8_t
 *
im≠_buf
;

419 
EXT2_GRPNUM_T
 
im≠_gΩ_num
;

421 
ext2fs_öode
 *
döo_buf
;

422 
TSK_INUM_T
 
döo_öum
;

424 
TSK_OFF_T
 
groups_off£t
;

425 
EXT2_GRPNUM_T
 
groups_cou¡
;

426 
uöt8_t
 
dì¡ry_ty≥
;

427 
uöt16_t
 
öode_size
;

428 
TSK_DADDR_T
 
fú°_d©a_block
;

430 
EXT2FS_JINFO
 *
jöfo
;

431 } 
	tEXT2FS_INFO
;

434 
TSK_RETVAL_ENUM


435 
ext2fs_dú_›í_mëa
(
TSK_FS_INFO
 * 
a_fs
, 
TSK_FS_DIR
 ** 
a_fs_dú
,

436 
TSK_INUM_T
 
a_addr
);

437 
uöt8_t
 
ext2fs_jíåy_wÆk
(
TSK_FS_INFO
 *, ,

438 
TSK_FS_JENTRY_WALK_CB
, *);

439 
uöt8_t
 
ext2fs_jblk_wÆk
(
TSK_FS_INFO
 *, 
TSK_DADDR_T
,

440 
TSK_DADDR_T
, , 
TSK_FS_JBLK_WALK_CB
, *);

441 
uöt8_t
 
ext2fs_j›í
(
TSK_FS_INFO
 *, 
TSK_INUM_T
);

443 #ifde‡
__˝lu•lus


	@tsk3/fs/tsk_fatfs.h

19 #i‚de‡
_TSK_FATFS_H


20 
	#_TSK_FATFS_H


	)

22 #ifde‡
__˝lu•lus


29 
	#FATFS_FIRSTINO
 2

	)

30 
	#FATFS_ROOTINO
 2

	)

31 
	#FATFS_FIRST_NORMINO
 3

	)

34 
	#FATFS_NUM_SPECFILE
 4

35 

	)

36 
	#FATFS_MBRINO
(
fs_öfo
) \

37 (
	`TSK_FS_ORPHANDIR_INUM
(
fs_öfo
) - 3)

38 
	#FATFS_MBRNAME
 "$MBR"

	)

40 
	#FATFS_FAT1INO
(
fs_öfo
) \

41 (
	`TSK_FS_ORPHANDIR_INUM
(
fs_öfo
) - 2)

42 
	#FATFS_FAT1NAME
 "$FAT1"

	)

44 
	#FATFS_FAT2INO
(
fs_öfo
) \

45 (
	`TSK_FS_ORPHANDIR_INUM
(
fs_öfo
) - 1)

46 
	#FATFS_FAT2NAME
 "$FAT2"

	)

49 
	#FATFS_SBOFF
 0

	)

50 
	#FATFS_FS_MAGIC
 0xØ55

	)

51 
	#FATFS_MAXNAMLEN
 256

	)

52 
	#FATFS_MAXNAMLEN_UTF8
 1024

	)

53 
	#FATFS_FILE_CONTENT_LEN
 (
TSK_DADDR_T
)

54 

	)

57 
	#FAT_CACHE_N
 4

58 
	#FAT_CACHE_B
 4096

	)

59 
	#FAT_CACHE_S
 8

60 

	)

62 
	#FATFS_12_MASK
 0x00000fff

	)

63 
	#FATFS_16_MASK
 0x0000ffff

	)

64 
	#FATFS_32_MASK
 0x0fffffff

	)

67 
	#FATFS_UNALLOC
 0

	)

68 
	#FATFS_BAD
 0x0ffffff7

	)

69 
	#FATFS_EOFS
 0x0ffffff8

	)

70 
	#FATFS_EOFE
 0x0fffffff

	)

77 
	#FATFS_ISEOF
(
vÆ
, 
mask
) \

78 ((
vÆ
 >(
FATFS_EOFS
 & 
mask
)Ë&& (vÆ <(
FATFS_EOFE
)))

	)

81 
	#FATFS_ISBAD
(
vÆ
, 
mask
) \

82 ((
vÆ
Ë=(
FATFS_BAD
 & 
mask
))

	)

85 
	#FATFS_CLUST_2_SECT
(
Átfs
, 
c
) \

86 (
TSK_DADDR_T
)(
Átfs
->
fú°˛u°£˘
 + ((((
c
Ë& f©fs->
mask
Ë- 2Ë* f©fs->
csize
))

	)

88 
	#FATFS_SECT_2_CLUST
(
Átfs
, 
s
) \

89 (
TSK_DADDR_T
)(2 + ((
s
Ë- 
Átfs
->
fú°˛u°£˘
Ë/ f©fs->
csize
)

	)

96 
	#FATFS_INODE_2_SECT
(
Átfs
, 
i
) \

97 (
TSK_DADDR_T
)((
i
 - 
FATFS_FIRST_NORMINO
)/(
Átfs
->
díåy_˙t_£
Ë+ f©fs->
fú°d©a£˘
)

	)

99 
	#FATFS_INODE_2_OFF
(
Átfs
, 
i
) \

100 (
size_t
)(((
i
 - 
FATFS_FIRST_NORMINO
Ë% 
Átfs
->
díåy_˙t_£
Ë* (
Átfs_díåy
))

	)

105 
	#FATFS_SECT_2_INODE
(
Átfs
, 
s
) \

106 (
TSK_INUM_T
)((
s
 - 
Átfs
->
fú°d©a£˘
Ë* f©fs->
díåy_˙t_£
 + 
FATFS_FIRST_NORMINO
)

	)

114 
uöt8_t
 
f1
[3];

115 
€m«me
[8];

116 
uöt8_t
 
ssize
[2];

117 
uöt8_t
 
csize
;

118 
uöt8_t
 
ª£rved
[2];

119 
uöt8_t
 
numÁt
;

120 
uöt8_t
 
numroŸ
[2];

121 
uöt8_t
 
£˘‹s16
[2];

122 
uöt8_t
 
f2
[1];

123 
uöt8_t
 
£˘≥rÁt16
[2];

124 
uöt8_t
 
f3
[4];

125 
uöt8_t
 
¥ev£˘
[4];

126 
uöt8_t
 
£˘‹s32
[4];

131 
uöt8_t
 
f5
[3];

132 
uöt8_t
 
vﬁ_id
[4];

133 
uöt8_t
 
vﬁ_œb
[11];

134 
uöt8_t
 
fs_ty≥
[8];

135 
uöt8_t
 
f6
[448];

136 } 
f16
;

138 
uöt8_t
 
£˘≥rÁt32
[4];

139 
uöt8_t
 
ext_Êag
[2];

140 
uöt8_t
 
fs_vî
[2];

141 
uöt8_t
 
roŸ˛u°
[4];

142 
uöt8_t
 
fsöfo
[2];

143 
uöt8_t
 
bs_backup
[2];

144 
uöt8_t
 
f5
[12];

145 
uöt8_t
 
drvnum
;

146 
uöt8_t
 
f6
[2];

147 
uöt8_t
 
vﬁ_id
[4];

148 
uöt8_t
 
vﬁ_œb
[11];

149 
uöt8_t
 
fs_ty≥
[8];

150 
uöt8_t
 
f7
[420];

151 } 
f32
;

152 } 
a
;

154 
uöt8_t
 
magic
[2];

156 } 
	tÁtfs_sb
;

159 
uöt8_t
 
magic1
[4];

160 
uöt8_t
 
f1
[480];

161 
uöt8_t
 
magic2
[4];

162 
uöt8_t
 
‰ì˙t
[4];

163 
uöt8_t
 
√xt‰ì
[4];

164 
uöt8_t
 
f2
[12];

165 
uöt8_t
 
magic3
[4];

166 } 
	tÁtfs_fsöfo
;

172 
uöt8_t
 
«me
[8];

173 
uöt8_t
 
ext
[3];

174 
uöt8_t
 
©åib
;

175 
uöt8_t
 
lowîˇ£
;

176 
uöt8_t
 
˘imëí
;

177 
uöt8_t
 
˘ime
[2];

178 
uöt8_t
 
cd©e
[2];

179 
uöt8_t
 
ad©e
[2];

180 
uöt8_t
 
high˛u°
[2];

181 
uöt8_t
 
wtime
[2];

182 
uöt8_t
 
wd©e
[2];

183 
uöt8_t
 
°¨t˛u°
[2];

184 
uöt8_t
 
size
[4];

185 } 
	tÁtfs_díåy
;

191 
	#FATFS_DENTRY_CLUST
(
fsi
, 
de
) \

192 (
TSK_DADDR_T
)((
	`tsk_gëu16
(
fsi
->
ídün
, 
de
->
°¨t˛u°
)Ë| (tsk_gëu16(fsi->ídün, de->
high˛u°
)<<16))

	)

195 
	#FATFS_SLOT_EMPTY
 0x00

	)

196 
	#FATFS_SLOT_E5
 0x05

	)

197 
	#FATFS_SLOT_DELETED
 0xe5

	)

206 
	#FATFS_IS_83_NAME
(
c
) \

207 ((((
c
) < 0x20) || \

208 ((
c
) == 0x22) || \

209 (((
c
) >= 0x2a) && ((c) <= 0x2c)) || \

210 ((
c
) == 0x2e) || \

211 ((
c
) == 0x2f) || \

212 (((
c
) >= 0x3a) && ((c) <= 0x3f)) || \

213 (((
c
) >= 0x5b) && ((c) <= 0x5d)) || \

214 ((
c
Ë=0x7c)Ë=0)

	)

217 
	#FATFS_IS_83_EXT
(
c
) \

218 (
	`FATFS_IS_83_NAME
((
c
)Ë&& ((cË< 0x7f))

	)

223 
	#FATFS_ATTR_NORMAL
 0x00

	)

224 
	#FATFS_ATTR_READONLY
 0x01

	)

225 
	#FATFS_ATTR_HIDDEN
 0x02

	)

226 
	#FATFS_ATTR_SYSTEM
 0x04

	)

227 
	#FATFS_ATTR_VOLUME
 0x08

	)

228 
	#FATFS_ATTR_DIRECTORY
 0x10

	)

229 
	#FATFS_ATTR_ARCHIVE
 0x20

	)

230 
	#FATFS_ATTR_LFN
 0x0‡

	)

231 
	#FATFS_ATTR_ALL
 0x3‡

	)

234 
	#FATFS_CASE_LOWER_BASE
 0x08

	)

235 
	#FATFS_CASE_LOWER_EXT
 0x10

	)

236 
	#FATFS_CASE_LOWER_ALL
 0x18

	)

238 
	#FATFS_SEC_MASK
 0x1‡

	)

239 
	#FATFS_SEC_SHIFT
 0

	)

240 
	#FATFS_SEC_MIN
 0

	)

241 
	#FATFS_SEC_MAX
 30

	)

242 
	#FATFS_MIN_MASK
 0x7e0

	)

243 
	#FATFS_MIN_SHIFT
 5

	)

244 
	#FATFS_MIN_MIN
 0

	)

245 
	#FATFS_MIN_MAX
 59

	)

246 
	#FATFS_HOUR_MASK
 0xf800

	)

247 
	#FATFS_HOUR_SHIFT
 11

	)

248 
	#FATFS_HOUR_MIN
 0

	)

249 
	#FATFS_HOUR_MAX
 23

	)

252 
	#FATFS_ISTIME
(
x
) \

253 (((((
x
 & 
FATFS_SEC_MASK
Ë>> 
FATFS_SEC_SHIFT
Ë> 
FATFS_SEC_MAX
) || \

254 (((
x
 & 
FATFS_MIN_MASK
Ë>> 
FATFS_MIN_SHIFT
Ë> 
FATFS_MIN_MAX
) || \

255 (((
x
 & 
FATFS_HOUR_MASK
Ë>> 
FATFS_HOUR_SHIFT
Ë> 
FATFS_HOUR_MAX
ËË=0)

	)

257 
	#FATFS_DAY_MASK
 0x1‡

	)

258 
	#FATFS_DAY_SHIFT
 0

	)

259 
	#FATFS_DAY_MIN
 1

	)

260 
	#FATFS_DAY_MAX
 31

	)

261 
	#FATFS_MON_MASK
 0x1e0

	)

262 
	#FATFS_MON_SHIFT
 5

	)

263 
	#FATFS_MON_MIN
 1

	)

264 
	#FATFS_MON_MAX
 12

	)

265 
	#FATFS_YEAR_MASK
 0x„00

	)

266 
	#FATFS_YEAR_SHIFT
 9

	)

267 
	#FATFS_YEAR_MIN
 0

	)

268 
	#FATFS_YEAR_MAX
 127

	)

271 
	#FATFS_ISDATE
(
x
) \

272 (((((
x
 & 
FATFS_DAY_MASK
Ë>> 
FATFS_DAY_SHIFT
Ë> 
FATFS_DAY_MAX
) || \

273 (((
x
 & 
FATFS_DAY_MASK
Ë>> 
FATFS_DAY_SHIFT
Ë< 
FATFS_DAY_MIN
) || \

274 (((
x
 & 
FATFS_MON_MASK
Ë>> 
FATFS_MON_SHIFT
Ë> 
FATFS_MON_MAX
) || \

275 (((
x
 & 
FATFS_MON_MASK
Ë>> 
FATFS_MON_SHIFT
Ë< 
FATFS_MON_MIN
) || \

276 (((
x
 & 
FATFS_YEAR_MASK
Ë>> 
FATFS_YEAR_SHIFT
Ë> 
FATFS_YEAR_MAX
ËË=0)

	)

284 
uöt8_t
 
£q
;

285 
uöt8_t
 
∑π1
[10];

286 
uöt8_t
 
©åibuãs
;

287 
uöt8_t
 
ª£rved1
;

288 
uöt8_t
 
chksum
;

289 
uöt8_t
 
∑π2
[12];

290 
uöt8_t
 
ª£rved2
[2];

291 
uöt8_t
 
∑π3
[4];

292 } 
	tÁtfs_díåy_l‚
;

295 
	#FATFS_LFN_SEQ_FIRST
 0x40

	)

296 
	#FATFS_LFN_SEQ_MASK
 0x3‡

	)

301 
TSK_FS_INFO
 
fs_öfo
;

305 
Átc_buf
[
FAT_CACHE_N
][
FAT_CACHE_B
];

306 
TSK_DADDR_T
 
Átc_addr
[
FAT_CACHE_N
];

307 
uöt8_t
 
Átc_âl
[
FAT_CACHE_N
];

310 *
döodes
;

311 
Átfs_sb
 *
sb
;

313 
Átfs_díåy
 *
dï
;

317 
TSK_DADDR_T
 
fú°Át£˘
;

322 
TSK_DADDR_T
 
fú°d©a£˘
;

327 
TSK_DADDR_T
 
fú°˛u°£˘
;

330 
TSK_DADDR_T
 
˛u°˙t
;

332 
TSK_DADDR_T
 
œ°˛u°
;

335 
TSK_DADDR_T
 
roŸ£˘
;

337 
uöt32_t
 
díåy_˙t_£
;

338 
uöt32_t
 
díåy_˙t_˛
;

340 
uöt16_t
 
ssize
;

341 
uöt16_t
 
ssize_sh
;

342 
uöt8_t
 
csize
;

344 
uöt8_t
 
numÁt
;

345 
uöt32_t
 
£˘≥rÁt
;

346 
uöt16_t
 
numroŸ
;

347 
uöt32_t
 
mask
;

349 
TSK_INUM_T
 *
dú_buf
;

350 
TSK_INUM_T
 *
∑r_buf
;

351 
size_t
 
dú_buf_size
;

352 
size_t
 
dú_buf_√xt
;

353 } 
	tFATFS_INFO
;

356 
öt8_t
 
Átfs_is_£˘Æloc
(
FATFS_INFO
 *, 
TSK_DADDR_T
);

357 
öt8_t
 
Átfs_is_˛u°Æloc
(
FATFS_INFO
 * 
Átfs
,

358 
TSK_DADDR_T
 
˛u°
);

360 
uöt8_t
 
Átfs_isdíåy
(
FATFS_INFO
 *, 
Átfs_díåy
 *);

361 
uöt8_t
 
Átfs_make_roŸ
(
FATFS_INFO
 *, 
TSK_FS_META
 *);

362 
TSK_RETVAL_ENUM
 
Átfs_döode_c›y
(
FATFS_INFO
 *, 
TSK_FS_META
 *,

363 
Átfs_díåy
 *, 
TSK_DADDR_T
, 
TSK_INUM_T
);

365 
uöt8_t
 
Átfs_öode_lookup
(
TSK_FS_INFO
 * 
fs
,

366 
TSK_FS_FILE
 * 
a_fs_fûe
, 
TSK_INUM_T
 
öum
);

367 
uöt8_t
 
Átfs_öode_wÆk
(
TSK_FS_INFO
 * 
fs
,

368 
TSK_INUM_T
 
°¨t_öum
, TSK_INUM_T 
íd_öum
,

369 
TSK_FS_META_FLAG_ENUM
 
a_Êags
, 
TSK_FS_META_WALK_CB
 
a_a˘i⁄
,

370 *
a_±r
);

371 
uöt8_t
 
Átfs_make_d©a_run
(
TSK_FS_FILE
 * 
a_fs_fûe
);

373 
uöt8_t
 
Átfs_gëFAT
(
FATFS_INFO
 * 
Átfs
, 
TSK_DADDR_T
 
˛u°
,

374 
TSK_DADDR_T
 * 
vÆue
);

376 
TSK_RETVAL_ENUM


377 
Átfs_dú_›í_mëa
(
TSK_FS_INFO
 * 
a_fs
, 
TSK_FS_DIR
 ** 
a_fs_dú
,

378 
TSK_INUM_T
 
a_addr
);

380 
Átfs_«me_cmp
(
TSK_FS_INFO
 *, const *, const *);

383 #ifde‡
__˝lu•lus


	@tsk3/fs/tsk_ffs.h

18 #i‚de‡
_TSK_FFS_H


19 
	#_TSK_FFS_H


	)

21 #ifde‡
__˝lu•lus


26 
uöt32_t
 
	tFFS_GRPNUM_T
;

27 
	#PRI_FFSGRP
 
PRIu32


	)

32 
	#FFS_FIRSTINO
 0

	)

33 
	#FFS_ROOTINO
 2

	)

34 
	#FFS_NDADDR
 12

	)

35 
	#FFS_NIADDR
 3

	)

37 
	#UFS1_SBOFF
 8192

	)

38 
	#UFS2_SBOFF
 65536

	)

39 
	#UFS2_SBOFF2
 262144

	)

41 
	#UFS1_FS_MAGIC
 0x011954

	)

42 
	#UFS2_FS_MAGIC
 0x19540119

	)

44 
	#FFS_MAXNAMLEN
 255

	)

45 
	#FFS_MAXPATHLEN
 1024

	)

46 
	#FFS_DIRBLKSIZ
 512

	)

48 
	#FFS_FILE_CONTENT_LEN
 ((
FFS_NDADDR
 + 
FFS_NIADDR
Ë* (
TSK_DADDR_T
))

	)

51 
uöt8_t
 
dú_num
[4];

52 
uöt8_t
 
blk_‰ì
[4];

53 
uöt8_t
 
öo_‰ì
[4];

54 
uöt8_t
 
‰ag_‰ì
[4];

55 } 
	tffs_csum1
;

58 
uöt8_t
 
dú_num
[8];

59 
uöt8_t
 
blk_‰ì
[8];

60 
uöt8_t
 
öo_‰ì
[8];

61 
uöt8_t
 
‰ag_‰ì
[8];

62 
uöt8_t
 
˛u°_‰ì
[8];

63 
uöt8_t
 
f1
[24];

64 } 
	tffs_csum2
;

74 
uöt8_t
 
f1
[8];

76 
uöt8_t
 
sb_off
[4];

77 
uöt8_t
 
gd_off
[4];

78 
uöt8_t
 
öo_off
[4];

79 
uöt8_t
 
d©_off
[4];

82 
uöt8_t
 
cg_dñè
[4];

83 
uöt8_t
 
cg_cyc_mask
[4];

85 
uöt8_t
 
wtime
[4];

86 
uöt8_t
 
‰ag_num
[4];

87 
uöt8_t
 
d©a_‰ag_num
[4];

88 
uöt8_t
 
cg_num
[4];

90 
uöt8_t
 
bsize_b
[4];

91 
uöt8_t
 
fsize_b
[4];

92 
uöt8_t
 
bsize_‰ag
[4];

93 
uöt8_t
 
f5
[36];

94 
uöt8_t
 
fs_‰agshi·
[4];

95 
uöt8_t
 
f6
[20];

96 
uöt8_t
 
fs_ö›b
[4];

97 
uöt8_t
 
f7
[20];

98 
uöt8_t
 
fs_id
[8];

99 
uöt8_t
 
cg_ßddr
[4];

100 
uöt8_t
 
cg_ssize_b
[4];

101 
uöt8_t
 
fs_cgsize
[4];

102 
uöt8_t
 
f7c
[12];

103 
uöt8_t
 
fs_ncyl
[4];

104 
uöt8_t
 
fs_˝g
[4];

105 
uöt8_t
 
cg_öode_num
[4];

106 
uöt8_t
 
cg_‰ag_num
[4];

108 
ffs_csum1
 
c°ŸÆ
;

110 
uöt8_t
 
fs_fmod
;

111 
uöt8_t
 
fs_˛ón
;

112 
uöt8_t
 
fs_r⁄ly
;

113 
uöt8_t
 
fs_Êags
;

114 
uöt8_t
 
œ°_m¡
[512];

115 
uöt8_t
 
f8
[648];

116 
uöt8_t
 
magic
[4];

117 
uöt8_t
 
f9
[160];

118 } 
	tffs_sb1
;

123 
uöt8_t
 
f0
[8];

125 
uöt8_t
 
sb_off
[4];

126 
uöt8_t
 
gd_off
[4];

127 
uöt8_t
 
öo_off
[4];

128 
uöt8_t
 
d©_off
[4];

130 
uöt8_t
 
f1
[20];

132 
uöt8_t
 
cg_num
[4];

133 
uöt8_t
 
bsize_b
[4];

134 
uöt8_t
 
fsize_b
[4];

135 
uöt8_t
 
bsize_‰ag
[4];

136 
uöt8_t
 
f2
[36];

137 
uöt8_t
 
fs_‰agshi·
[4];

138 
uöt8_t
 
f3
[20];

139 
uöt8_t
 
fs_ö›b
[4];

140 
uöt8_t
 
f4
[32];

141 
uöt8_t
 
cg_ssize_b
[4];

142 
uöt8_t
 
fs_cgsize
[4];

143 
uöt8_t
 
f5
[20];

144 
uöt8_t
 
cg_öode_num
[4];

145 
uöt8_t
 
cg_‰ag_num
[4];

147 
uöt8_t
 
f6
[16];

148 
uöt8_t
 
fs_fmod
;

149 
uöt8_t
 
fs_˛ón
;

150 
uöt8_t
 
fs_r⁄ly
;

151 
uöt8_t
 
f7
;

152 
uöt8_t
 
œ°_m¡
[468];

153 
uöt8_t
 
vﬁ«me
[32];

154 
uöt8_t
 
swuid
[8];

155 
uöt8_t
 
f8
[288];

157 
ffs_csum2
 
c°ŸÆ
;

159 
uöt8_t
 
wtime
[8];

160 
uöt8_t
 
‰ag_num
[8];

161 
uöt8_t
 
blk_num
[8];

162 
uöt8_t
 
cg_ßddr
[8];

164 
uöt8_t
 
f9
[208];

165 
uöt8_t
 
fs_Êags
[4];

166 
uöt8_t
 
f10
[56];

168 
uöt8_t
 
magic
[4];

169 
uöt8_t
 
f11
[160];

170 } 
	tffs_sb2
;

173 
	#FFS_SB_FLAG_UNCLEAN
 0x01

	)

174 
	#FFS_SB_FLAG_SOFTDEP
 0x02

	)

175 
	#FFS_SB_FLAG_NEEDFSCK
 0x04

	)

176 
	#FFS_SB_FLAG_INDEXDIR
 0x08

	)

177 
	#FFS_SB_FLAG_ACL
 0x10

	)

178 
	#FFS_SB_FLAG_MULTILABEL
 0x20

	)

179 
	#FFS_SB_FLAG_UPDATED
 0x80

	)

183 
	#FFS_SB_OPT_TIME
 0

	)

184 
	#FFS_SB_OPT_SPACE
 1

	)

195 
uöt8_t
 
f1
[4];

196 
uöt8_t
 
magic
[4];

197 
uöt8_t
 
wtime
[4];

198 
uöt8_t
 
cg_cgx
[4];

199 
uöt8_t
 
cyl_num
[2];

200 
uöt8_t
 
öo_num
[2];

201 
uöt8_t
 
‰ag_num
[4];

202 
ffs_csum1
 
cs
;

203 
uöt8_t
 
œ°_Æloc_blk
[4];

204 
uöt8_t
 
œ°_Æloc_‰ag
[4];

205 
uöt8_t
 
œ°_Æloc_öo
[4];

206 
uöt8_t
 
avaû_‰ag
[8][4];

207 
uöt8_t
 
f2b
[8];

208 
uöt8_t
 
cg_iu£doff
[4];

209 
uöt8_t
 
cg_‰ìoff
[4];

210 
uöt8_t
 
f3
[72];

211 } 
	tffs_cgd
;

214 
uöt8_t
 
f1
[4];

215 
uöt8_t
 
magic
[4];

216 
uöt8_t
 
f2
[4];

217 
uöt8_t
 
cg_cgx
[4];

218 
uöt8_t
 
f2a
[4];

219 
uöt8_t
 
‰ag_num
[4];

220 
ffs_csum1
 
cs
;

221 
uöt8_t
 
œ°_Æloc_blk
[4];

222 
uöt8_t
 
œ°_Æloc_‰ag
[4];

223 
uöt8_t
 
œ°_Æloc_öo
[4];

224 
uöt8_t
 
avaû_‰ag
[8][4];

225 
uöt8_t
 
f2b
[8];

226 
uöt8_t
 
cg_iu£doff
[4];

227 
uöt8_t
 
cg_‰ìoff
[4];

229 
uöt8_t
 
cg_√xt‰ìoff
[4];

230 
uöt8_t
 
cg_˛u°îsumoff
[4];

231 
uöt8_t
 
cg_˛u°îoff
[4];

232 
uöt8_t
 
cg_n˛u°îsblks
[4];

233 
uöt8_t
 
cg_niblk
[4];

234 
uöt8_t
 
cg_öôediblk
[4];

235 
uöt8_t
 
f3a
[12];

236 
uöt8_t
 
wtime
[8];

237 
uöt8_t
 
f3
[24];

238 } 
	tffs_cgd2
;

247 
uöt8_t
 
di_mode
[2];

248 
uöt8_t
 
di_∆ök
[2];

249 
uöt8_t
 
f1
[4];

250 
uöt8_t
 
di_size
[8];

251 
uöt8_t
 
di_©ime
[4];

252 
uöt8_t
 
di_©imí£c
[4];

253 
uöt8_t
 
di_mtime
[4];

254 
uöt8_t
 
di_mtimí£c
[4];

255 
uöt8_t
 
di_˘ime
[4];

256 
uöt8_t
 
di_˘imí£c
[4];

257 
uöt8_t
 
di_db
[12][4];

258 
uöt8_t
 
di_ib
[3][4];

259 
uöt8_t
 
f5
[8];

260 
uöt8_t
 
gí
[4];

261 
uöt8_t
 
di_uid
[4];

262 
uöt8_t
 
di_gid
[4];

263 
uöt8_t
 
f6
[8];

264 } 
	tffs_öode1
;

268 
uöt8_t
 
di_mode
[2];

269 
uöt8_t
 
di_∆ök
[2];

270 
uöt8_t
 
f1
[4];

271 
uöt8_t
 
di_size
[8];

272 
uöt8_t
 
di_©ime
[4];

273 
uöt8_t
 
f2
[4];

274 
uöt8_t
 
di_mtime
[4];

275 
uöt8_t
 
f3
[4];

276 
uöt8_t
 
di_˘ime
[4];

277 
uöt8_t
 
f4
[4];

278 
uöt8_t
 
di_db
[12][4];

279 
uöt8_t
 
di_ib
[3][4];

280 
uöt8_t
 
f5
[16];

281 
uöt8_t
 
di_uid
[4];

282 
uöt8_t
 
di_gid
[4];

283 
uöt8_t
 
f6
[4];

284 } 
	tffs_öode1b
;

287 
uöt8_t
 
di_mode
[2];

288 
uöt8_t
 
di_∆ök
[2];

289 
uöt8_t
 
di_uid
[4];

290 
uöt8_t
 
di_gid
[4];

291 
uöt8_t
 
di_blksize
[4];

292 
uöt8_t
 
di_size
[8];

293 
uöt8_t
 
di_blocks
[8];

294 
uöt8_t
 
di_©ime
[8];

295 
uöt8_t
 
di_mtime
[8];

296 
uöt8_t
 
di_˘ime
[8];

297 
uöt8_t
 
di_¸time
[8];

298 
uöt8_t
 
di_mtimí£c
[4];

299 
uöt8_t
 
di_©imí£c
[4];

300 
uöt8_t
 
di_˘imí£c
[4];

301 
uöt8_t
 
di_¸timí£c
[4];

302 
uöt8_t
 
di_gí
[4];

303 
uöt8_t
 
di_kÊags
[4];

304 
uöt8_t
 
di_Êags
[4];

305 
uöt8_t
 
di_extsize
[4];

306 
uöt8_t
 
di_extb
[2][8];

307 
uöt8_t
 
di_db
[12][8];

308 
uöt8_t
 
di_ib
[3][8];

309 
uöt8_t
 
f2
[24];

310 } 
	tffs_öode2
;

312 
	#FFS_IN_FMT
 0170000

	)

313 
	#FFS_IN_FIFO
 0010000

	)

314 
	#FFS_IN_CHR
 0020000

	)

315 
	#FFS_IN_DIR
 0040000

	)

316 
	#FFS_IN_BLK
 0060000

	)

317 
	#FFS_IN_REG
 0100000

	)

318 
	#FFS_IN_LNK
 0120000

	)

319 
	#FFS_IN_SHAD
 0130000

	)

320 
	#FFS_IN_SOCK
 0140000

	)

321 
	#FFS_IN_WHT
 0160000

	)

323 
	#FFS_IN_ISUID
 0004000

	)

324 
	#FFS_IN_ISGID
 0002000

	)

325 
	#FFS_IN_ISVTX
 0001000

	)

326 
	#FFS_IN_IRUSR
 0000400

	)

327 
	#FFS_IN_IWUSR
 0000200

	)

328 
	#FFS_IN_IXUSR
 0000100

	)

329 
	#FFS_IN_IRGRP
 0000040

	)

330 
	#FFS_IN_IWGRP
 0000020

	)

331 
	#FFS_IN_IXGRP
 0000010

	)

332 
	#FFS_IN_IROTH
 0000004

	)

333 
	#FFS_IN_IWOTH
 0000002

	)

334 
	#FFS_IN_IXOTH
 0000001

	)

338 
uöt8_t
 
ª˛í
[4];

339 
uöt8_t
 
n•a˚
;

340 
uöt8_t
 
c⁄çad
;

341 
uöt8_t
 
∆í
;

342 
uöt8_t
 
«me
[1];

344 } 
	tffs_exèâr
;

346 
	#FFS_ATTR_CONT
(
x
) \

347 ((((
x
Ë+ 7 + 7Ë/ 8Ë* 2)

	)

355 
uöt8_t
 
d_öo
[4];

356 
uöt8_t
 
d_ª˛í
[2];

357 
uöt8_t
 
d_ty≥
;

358 
uöt8_t
 
d_«mÀn
;

359 
d_«me
[256];

360 } 
	tffs_díåy1
;

363 
	#FFS_DT_UNKNOWN
 0

	)

364 
	#FFS_DT_FIFO
 1

	)

365 
	#FFS_DT_CHR
 2

	)

366 
	#FFS_DT_DIR
 4

	)

367 
	#FFS_DT_BLK
 6

	)

368 
	#FFS_DT_REG
 8

	)

369 
	#FFS_DT_LNK
 10

	)

370 
	#FFS_DT_SOCK
 12

	)

371 
	#FFS_DT_WHT
 14

	)

375 
uöt8_t
 
d_öo
[4];

376 
uöt8_t
 
d_ª˛í
[2];

377 
uöt8_t
 
d_«mÀn
[2];

378 
d_«me
[256];

379 } 
	tffs_díåy2
;

382 
	#FFS_DIRSIZ_l˛
(
Àn
) \

383 ((
Àn
 + 8 + 3Ë& ~(3))

	)

394 
	#cgba£_l˛
(
fsi
, 
fs
, 
c
) \

395 ((
TSK_DADDR_T
)(
	`tsk_gës32
(
fsi
->
ídün
, (
fs
)->
cg_‰ag_num
Ë* (
c
)))

	)

400 
	#cg°¨t_l˛
(
fsi
, 
fs
, 
c
) \

401 ((
TSK_DADDR_T
)((
	`tsk_gëu32
((
fsi
)->
ídün
, (
fs
)->
magic
Ë=
UFS2_FS_MAGIC
) ? \

402 (
	`cgba£_l˛
(
fsi
, 
fs
, 
c
)) : \

403 (
	`cgba£_l˛
(
fsi
, 
fs
, 
c
Ë+ 
	`tsk_gës32
((fsi)->
ídün
, (fs)->
cg_dñè
) * \

404 ((
c
Ë& ~(
	`tsk_gës32
((
fsi
)->
ídün
, (
fs
)->
cg_cyc_mask
)))Ë))

	)

407 
	#cgtod_l˛
(
fsi
, 
fs
, 
c
) \

408 ((
TSK_DADDR_T
)(
	`cg°¨t_l˛
(
fsi
, 
fs
, 
c
Ë+ 
	`tsk_gës32
(fsi->
ídün
, (fs)->
gd_off
)))

	)

411 
	#cgimö_l˛
(
fsi
, 
fs
, 
c
) \

412 ((
TSK_DADDR_T
)(
	`cg°¨t_l˛
(
fsi
, 
fs
, 
c
Ë+ 
	`tsk_gës32
(fsi->
ídün
, (fs)->
öo_off
)))

	)

415 
	#cgdmö_l˛
(
fsi
, 
fs
, 
c
) \

416 ((
TSK_DADDR_T
)(
	`cg°¨t_l˛
(
fsi
, 
fs
, 
c
Ë+ 
	`tsk_gës32
(fsi->
ídün
, (fs)->
d©_off
)))

	)

419 
	#cgsblock_l˛
(
fsi
, 
fs
, 
c
) \

420 ((
TSK_DADDR_T
)(
	`cg°¨t_l˛
(
fsi
, 
fs
, 
c
Ë+ 
	`tsk_gës32
(fsi->
ídün
, (fs)->
sb_off
)))

	)

426 
	#blk°o‰ags_l˛
(
fsi
, 
fs
, 
blks
) \

427 ((
blks
Ë<< 
	`tsk_gës32
(
fsi
->
ídün
, (
fs
)->
fs_‰agshi·
))

	)

434 
	#ôod_l˛
(
fsi
, 
fs
, 
x
) \

435 ((
TSK_DADDR_T
)(
	`cgimö_l˛
(
fsi
, 
fs
, 
	`ôog_l˛
(fsi, fs, 
x
)) + \

436 (
	`blk°o‰ags_l˛
(
fsi
, (
fs
), (((
x
)%(
TSK_DADDR_T
)
	`tsk_gës32
(fsi->
ídün
, (fs)->
cg_öode_num
))/ \

437 (
TSK_DADDR_T
)
	`tsk_gës32
(
fsi
->
ídün
, (
fs
)->
fs_ö›b
))))))

	)

442 
	#ôoo_l˛
(
fsi
, 
fs
, 
x
) \

443 ((
x
Ë% (
uöt32_t
)
	`tsk_gëu32
(
fsi
->
ídün
, (
fs
)->
fs_ö›b
))

	)

448 
	#ôog_l˛
(
fsi
, 
fs
, 
x
) \

449 (
FFS_GRPNUM_T
)((
x
Ë/ 
	`tsk_gës32
(
fsi
->
ídün
, (
fs
)->
cg_öode_num
))

	)

454 
	#dtog_l˛
(
fsi
, 
fs
, 
d
) \

455 (
FFS_GRPNUM_T
)((
d
Ë/ 
	`tsk_gës32
(
fsi
->
ídün
, (
fs
)->
cg_‰ag_num
))

	)

457 
	#cg_öosu£d_l˛
(
fsi
, 
cgp
) \

458 ((
uöt8_t
 *)((uöt8_à*)(
cgp
Ë+ 
	`tsk_gës32
(
fsi
->
ídün
, (cgp)->
cg_iu£doff
)))

	)

460 
	#cg_blks‰ì_l˛
(
fsi
, 
cgp
) \

461 ((
uöt8_t
 *)((uöt8_à*)(
cgp
Ë+ 
	`tsk_gës32
(
fsi
->
ídün
, (cgp)->
cg_‰ìoff
)))

	)

470 
TSK_FS_INFO
 
fs_öfo
;

472 
ffs_sb1
 *
sb1
;

473 
ffs_sb2
 *
sb2
;

474 } 
fs
;

476 *
döo_buf
;

477 
TSK_INUM_T
 
döo_öum
;

479 *
ôbl_buf
;

480 
TSK_DADDR_T
 
ôbl_addr
;

482 *
gΩ_buf
;

483 
FFS_GRPNUM_T
 
gΩ_num
;

484 
TSK_DADDR_T
 
gΩ_addr
;

486 
FFS_GRPNUM_T
 
groups_cou¡
;

488 
ffsbsize_f
;

489 
ffsbsize_b
;

490 } 
	tFFS_INFO
;

492 
TSK_RETVAL_ENUM
 
ffs_dú_›í_mëa
(
TSK_FS_INFO
 * 
a_fs
,

493 
TSK_FS_DIR
 ** 
a_fs_dú
, 
TSK_INUM_T
 
a_addr
);

495 #ifde‡
__˝lu•lus


	@tsk3/fs/tsk_fs.h

35 #i‚de‡
_TSK_FS_H


36 
	#_TSK_FS_H


	)

38 
	~<sys/ty≥s.h
>

40 #ifde‡
__˝lu•lus


44 
TSK_FS_INFO
 
	tTSK_FS_INFO
;

45 
TSK_FS_FILE
 
	tTSK_FS_FILE
;

61 
	eTSK_FS_BLOCK_FLAG_ENUM
 {

62 
TSK_FS_BLOCK_FLAG_UNUSED
 = 0x0000,

63 
TSK_FS_BLOCK_FLAG_ALLOC
 = 0x0001,

64 
TSK_FS_BLOCK_FLAG_UNALLOC
 = 0x0002,

65 
TSK_FS_BLOCK_FLAG_CONT
 = 0x0004,

66 
TSK_FS_BLOCK_FLAG_META
 = 0x0008,

67 
TSK_FS_BLOCK_FLAG_BAD
 = 0x0010,

68 
TSK_FS_BLOCK_FLAG_RAW
 = 0x0020,

69 
TSK_FS_BLOCK_FLAG_SPARSE
 = 0x0040,

70 
TSK_FS_BLOCK_FLAG_COMP
 = 0x0080,

71 
TSK_FS_BLOCK_FLAG_RES
 = 0x0100

73 
TSK_FS_BLOCK_FLAG_ENUM
 
	tTSK_FS_BLOCK_FLAG_ENUM
;

79 
	eTSK_FS_BLOCK_WALK_FLAG_ENUM
 {

80 
TSK_FS_BLOCK_WALK_FLAG_ALLOC
 = 0x01,

81 
TSK_FS_BLOCK_WALK_FLAG_UNALLOC
 = 0x02,

82 
TSK_FS_BLOCK_WALK_FLAG_CONT
 = 0x04,

83 
TSK_FS_BLOCK_WALK_FLAG_META
 = 0x08,

85 
TSK_FS_BLOCK_WALK_FLAG_ENUM
 
	tTSK_FS_BLOCK_WALK_FLAG_ENUM
;

88 
	#TSK_FS_BLOCK_TAG
 0x1b7c3f4a

	)

93 
èg
;

94 
TSK_FS_INFO
 *
fs_öfo
;

95 *
buf
;

96 
TSK_DADDR_T
 
addr
;

97 
TSK_FS_BLOCK_FLAG_ENUM
 
Êags
;

98 } 
	tTSK_FS_BLOCK
;

108 
TSK_WALK_RET_ENUM
(*
	tTSK_FS_BLOCK_WALK_CB
Ë(c⁄° 
	tTSK_FS_BLOCK
 *

109 
	ta_block
, *
	ta_±r
);

113 
tsk_fs_block_‰ì
(
TSK_FS_BLOCK
 * 
a_fs_block
);

114 
TSK_FS_BLOCK
 *
tsk_fs_block_gë
(
TSK_FS_INFO
 * 
fs
,

115 
TSK_FS_BLOCK
 * 
fs_block
, 
TSK_DADDR_T
 
addr
);

116 
uöt8_t
 
tsk_fs_block_wÆk
(
TSK_FS_INFO
 * 
a_fs
,

117 
TSK_DADDR_T
 
a_°¨t_blk
, TSK_DADDR_T 
a_íd_blk
,

118 
TSK_FS_BLOCK_WALK_FLAG_ENUM
 
a_Êags
, 
TSK_FS_BLOCK_WALK_CB
 
a_a˘i⁄
,

119 *
a_±r
);

136 
	gTSK_FS_ATTR_RUN_FLAG_FILLER
 = 0x01,

137 
	gTSK_FS_ATTR_RUN_FLAG_SPARSE
 = 0x02

138 } 
	tTSK_FS_ATTR_RUN_FLAG_ENUM
;

141 
TSK_FS_ATTR_RUN
 
	tTSK_FS_ATTR_RUN
;

149 
	sTSK_FS_ATTR_RUN
 {

150 
TSK_FS_ATTR_RUN
 *
	g√xt
;

151 
TSK_DADDR_T
 
	goff£t
;

152 
TSK_DADDR_T
 
	gaddr
;

153 
TSK_DADDR_T
 
	gÀn
;

154 
TSK_FS_ATTR_RUN_FLAG_ENUM
 
	gÊags
;

164 
	gTSK_FS_ATTR_INUSE
 = 0x01,

165 
	gTSK_FS_ATTR_NONRES
 = 0x02,

166 
	gTSK_FS_ATTR_RES
 = 0x04,

167 
	gTSK_FS_ATTR_ENC
 = 0x10,

168 
	gTSK_FS_ATTR_COMP
 = 0x20,

169 
	gTSK_FS_ATTR_SPARSE
 = 0x40,

170 
	gTSK_FS_ATTR_RECOVERY
 = 0x80,

171 } 
	tTSK_FS_ATTR_FLAG_ENUM
;

185 
TSK_WALK_RET_ENUM
(*
	tTSK_FS_FILE_WALK_CB
Ë(
	tTSK_FS_FILE
 *

186 
	ta_fs_fûe
, 
	tTSK_OFF_T
 
	ta_off
, 
	tTSK_DADDR_T
 
	ta_addr
, *
	ta_buf
,

187 
	tsize_t
 
	ta_Àn
, 
	tTSK_FS_BLOCK_FLAG_ENUM
 
	ta_Êags
, *
	ta_±r
);

193 
	gTSK_FS_FILE_WALK_FLAG_SLACK
 = 0x01,

194 
	gTSK_FS_FILE_WALK_FLAG_NOID
 = 0x02,

195 
	gTSK_FS_FILE_WALK_FLAG_AONLY
 = 0x04,

196 
	gTSK_FS_FILE_WALK_FLAG_NOSPARSE
 = 0x08,

197 } 
	tTSK_FS_FILE_WALK_FLAG_ENUM
;

204 
	gTSK_FS_ATTR_TYPE_DEFAULT
 = 0x01,

205 
	gTSK_FS_ATTR_TYPE_NTFS_SI
 = 0x10,

206 
	gTSK_FS_ATTR_TYPE_NTFS_ATTRLIST
 = 0x20,

207 
	gTSK_FS_ATTR_TYPE_NTFS_FNAME
 = 0x30,

208 
	gTSK_FS_ATTR_TYPE_NTFS_VVER
 = 0x40,

209 
	gTSK_FS_ATTR_TYPE_NTFS_OBJID
 = 0x40,

210 
	gTSK_FS_ATTR_TYPE_NTFS_SEC
 = 0x50,

211 
	gTSK_FS_ATTR_TYPE_NTFS_VNAME
 = 0x60,

212 
	gTSK_FS_ATTR_TYPE_NTFS_VINFO
 = 0x70,

213 
	gTSK_FS_ATTR_TYPE_NTFS_DATA
 = 0x80,

214 
	gTSK_FS_ATTR_TYPE_NTFS_IDXROOT
 = 0x90,

215 
	gTSK_FS_ATTR_TYPE_NTFS_IDXALLOC
 = 0xA0,

216 
	gTSK_FS_ATTR_TYPE_NTFS_BITMAP
 = 0xB0,

217 
	gTSK_FS_ATTR_TYPE_NTFS_SYMLNK
 = 0xC0,

218 
	gTSK_FS_ATTR_TYPE_NTFS_REPARSE
 = 0xC0,

219 
	gTSK_FS_ATTR_TYPE_NTFS_EAINFO
 = 0xD0,

220 
	gTSK_FS_ATTR_TYPE_NTFS_EA
 = 0xE0,

221 
	gTSK_FS_ATTR_TYPE_NTFS_PROP
 = 0xF0,

222 
	gTSK_FS_ATTR_TYPE_NTFS_LOG
 = 0x100,

223 
	gTSK_FS_ATTR_TYPE_UNIX_INDIR
 = 0x1001

224 } 
	tTSK_FS_ATTR_TYPE_ENUM
;

226 
	#TSK_FS_ATTR_ID_DEFAULT
 0

227 

	)

228 
TSK_FS_ATTR
 
	tTSK_FS_ATTR
;

248 
	sTSK_FS_ATTR
 {

249 
TSK_FS_ATTR
 *
	g√xt
;

250 
TSK_FS_FILE
 *
	gfs_fûe
;

251 
TSK_FS_ATTR_FLAG_ENUM
 
	gÊags
;

252 *
	g«me
;

253 
size_t
 
	g«me_size
;

254 
TSK_FS_ATTR_TYPE_ENUM
 
	gty≥
;

255 
uöt16_t
 
	gid
;

257 
TSK_OFF_T
 
	gsize
;

264 
TSK_FS_ATTR_RUN
 *
	grun
;

265 
TSK_FS_ATTR_RUN
 *
	grun_íd
;

266 
uöt32_t
 
	gskùÀn
;

267 
TSK_OFF_T
 
	gÆlocsize
;

268 
TSK_OFF_T
 
	göôsize
;

269 
uöt32_t
 
	gcompsize
;

270 } 
	gƒd
;

277 
uöt8_t
 *
	gbuf
;

278 
size_t
 
	gbuf_size
;

279 } 
	grd
;

282 
ssize_t
(*
r
Ë(c⁄° 
TSK_FS_ATTR
 * 
	gfs_©å
,

283 
TSK_OFF_T
 
	ga_off£t
, *
	ga_buf
, 
size_t
 
	ga_Àn
);

284 
uöt8_t
(*
w
Ë(c⁄° 
TSK_FS_ATTR
 * 
	gfs_©å
,

285 
	gÊags
, 
	gTSK_FS_FILE_WALK_CB
, *);

293 
TSK_FS_ATTR
 *
	ghód
;

294 } 
	tTSK_FS_ATTRLIST
;

296 
uöt8_t
 
tsk_fs_©å_wÆk
(c⁄° 
TSK_FS_ATTR
 * 
a_fs_©å
,

297 
TSK_FS_FILE_WALK_FLAG_ENUM
 
a_Êags
, 
TSK_FS_FILE_WALK_CB
 
a_a˘i⁄
,

298 *
a_±r
);

311 
	#TSK_FS_META_NAME_LIST_NSIZE
 512

	)

314 
TSK_FS_META_NAME_LIST
 
	tTSK_FS_META_NAME_LIST
;

322 
	sTSK_FS_META_NAME_LIST
 {

323 
TSK_FS_META_NAME_LIST
 *
	g√xt
;

324 
	g«me
[
TSK_FS_META_NAME_LIST_NSIZE
];

325 
TSK_INUM_T
 
	g∑r_öode
;

326 
uöt32_t
 
	g∑r_£q
;

336 
	eTSK_FS_META_FLAG_ENUM
 {

337 
	gTSK_FS_META_FLAG_ALLOC
 = 0x01,

338 
	gTSK_FS_META_FLAG_UNALLOC
 = 0x02,

339 
	gTSK_FS_META_FLAG_USED
 = 0x04,

340 
	gTSK_FS_META_FLAG_UNUSED
 = 0x08,

341 
	gTSK_FS_META_FLAG_COMP
 = 0x10,

342 
	gTSK_FS_META_FLAG_ORPHAN
 = 0x20,

344 
TSK_FS_META_FLAG_ENUM
 
	tTSK_FS_META_FLAG_ENUM
;

346 
	eTSK_FS_META_ATTR_FLAG_ENUM
 {

347 
	gTSK_FS_META_ATTR_EMPTY
,

348 
	gTSK_FS_META_ATTR_STUDIED
,

349 
	gTSK_FS_META_ATTR_ERROR
,

351 
TSK_FS_META_ATTR_FLAG_ENUM
 
	tTSK_FS_META_ATTR_FLAG_ENUM
;

358 
	eTSK_FS_META_TYPE_ENUM
 {

359 
	gTSK_FS_META_TYPE_UNDEF
 = 0x00,

360 
	gTSK_FS_META_TYPE_REG
 = 0x01,

361 
	gTSK_FS_META_TYPE_DIR
 = 0x02,

362 
	gTSK_FS_META_TYPE_FIFO
 = 0x03,

363 
	gTSK_FS_META_TYPE_CHR
 = 0x04,

364 
	gTSK_FS_META_TYPE_BLK
 = 0x05,

365 
	gTSK_FS_META_TYPE_LNK
 = 0x06,

366 
	gTSK_FS_META_TYPE_SHAD
 = 0x07,

367 
	gTSK_FS_META_TYPE_SOCK
 = 0x08,

368 
	gTSK_FS_META_TYPE_WHT
 = 0x09,

369 
	gTSK_FS_META_TYPE_VIRT
 = 0x0a,

371 
TSK_FS_META_TYPE_ENUM
 
	tTSK_FS_META_TYPE_ENUM
;

373 
	#TSK_FS_META_TYPE_STR_MAX
 0x0b

374 
tsk_fs_mëa_ty≥_°r
[
TSK_FS_META_TYPE_STR_MAX
][2];

	)

377 
	eTSK_FS_META_MODE_ENUM
 {

379 
	gTSK_FS_META_MODE_ISUID
 = 0004000,

380 
	gTSK_FS_META_MODE_ISGID
 = 0002000,

381 
	gTSK_FS_META_MODE_ISVTX
 = 0001000,

383 
	gTSK_FS_META_MODE_IRUSR
 = 0000400,

384 
	gTSK_FS_META_MODE_IWUSR
 = 0000200,

385 
	gTSK_FS_META_MODE_IXUSR
 = 0000100,

387 
	gTSK_FS_META_MODE_IRGRP
 = 0000040,

388 
	gTSK_FS_META_MODE_IWGRP
 = 0000020,

389 
	gTSK_FS_META_MODE_IXGRP
 = 0000010,

391 
	gTSK_FS_META_MODE_IROTH
 = 0000004,

392 
	gTSK_FS_META_MODE_IWOTH
 = 0000002,

393 
	gTSK_FS_META_MODE_IXOTH
 = 0000001

395 
TSK_FS_META_MODE_ENUM
 
	tTSK_FS_META_MODE_ENUM
;

398 
	#TSK_FS_META_TAG
 0x13524635

	)

410 
	gèg
;

412 
TSK_FS_META_FLAG_ENUM
 
	gÊags
;

413 
TSK_INUM_T
 
	gaddr
;

415 
TSK_FS_META_TYPE_ENUM
 
	gty≥
;

416 
TSK_FS_META_MODE_ENUM
 
	gmode
;

417 
	g∆ök
;

418 
TSK_OFF_T
 
	gsize
;

419 
TSK_UID_T
 
	guid
;

420 
TSK_GID_T
 
	ggid
;

423 
time_t
 
	gmtime
;

424 
uöt32_t
 
	gmtime_«no
;

425 
time_t
 
	g©ime
;

426 
uöt32_t
 
	g©ime_«no
;

427 
time_t
 
	g˘ime
;

428 
uöt32_t
 
	g˘ime_«no
;

429 
time_t
 
	g¸time
;

430 
uöt32_t
 
	g¸time_«no
;

435 
time_t
 
	gdtime
;

436 
uöt32_t
 
	gdtime_«no
;

437 } 
	gext2
;

439 
time_t
 
	gbkup_time
;

440 
uöt32_t
 
	gbkup_time_«no
;

441 } 
	ghfs
;

442 } 
	gtime2
;

444 *
	gc⁄ã¡_±r
;

445 
size_t
 
	gc⁄ã¡_Àn
;

447 
uöt32_t
 
	g£q
;

453 
TSK_FS_ATTRLIST
 *
	g©å
;

454 
TSK_FS_META_ATTR_FLAG_ENUM
 
	g©å_°©e
;

456 
TSK_FS_META_NAME_LIST
 *
	g«me2
;

457 *
	glök
;

458 } 
	tTSK_FS_META
;

464 
	#TSK_FS_ORPHAN_STR
 "-ORPHAN_FILE-"

	)

474 
TSK_WALK_RET_ENUM
(*
	tTSK_FS_META_WALK_CB
Ë(
	tTSK_FS_FILE
 *

475 
	ta_fs_fûe
, *
	ta_±r
);

478 
uöt8_t
 
tsk_fs_mëa_wÆk
(
TSK_FS_INFO
 * 
a_fs
, 
TSK_INUM_T
 
a_°¨t
,

479 
TSK_INUM_T
 
a_íd
, 
TSK_FS_META_FLAG_ENUM
 
a_Êags
,

480 
TSK_FS_META_WALK_CB
 
a_cb
, *
a_±r
);

482 
uöt8_t
 
tsk_fs_mëa_make_ls
(
TSK_FS_META
 * 
a_fs_mëa
,

483 *
a_buf
, 
size_t
 
a_Àn
);

497 
	gTSK_FS_NAME_FLAG_ALLOC
 = 0x01,

498 
	gTSK_FS_NAME_FLAG_UNALLOC
 = 0x02,

499 } 
	tTSK_FS_NAME_FLAG_ENUM
;

506 
	gTSK_FS_NAME_TYPE_UNDEF
 = 0,

507 
	gTSK_FS_NAME_TYPE_FIFO
 = 1,

508 
	gTSK_FS_NAME_TYPE_CHR
 = 2,

509 
	gTSK_FS_NAME_TYPE_DIR
 = 3,

510 
	gTSK_FS_NAME_TYPE_BLK
 = 4,

511 
	gTSK_FS_NAME_TYPE_REG
 = 5,

512 
	gTSK_FS_NAME_TYPE_LNK
 = 6,

513 
	gTSK_FS_NAME_TYPE_SOCK
 = 7,

514 
	gTSK_FS_NAME_TYPE_SHAD
 = 8,

515 
	gTSK_FS_NAME_TYPE_WHT
 = 9,

516 
	gTSK_FS_NAME_TYPE_VIRT
 = 10,

517 } 
	tTSK_FS_NAME_TYPE_ENUM
;

519 
	#TSK_FS_NAME_TYPE_STR_MAX
 11

520 

	)

522 
tsk_fs_«me_ty≥_°r
[
TSK_FS_NAME_TYPE_STR_MAX
][2];

524 
	#TSK_FS_NAME_TAG
 0x23147869

	)

532 
	gèg
;

534 *
	g«me
;

535 
size_t
 
	g«me_size
;

537 *
	gshπ_«me
;

538 
size_t
 
	gshπ_«me_size
;

540 
TSK_INUM_T
 
	gmëa_addr
;

541 
uöt32_t
 
	gmëa_£q
;

543 
TSK_FS_NAME_TYPE_ENUM
 
	gty≥
;

544 
TSK_FS_NAME_FLAG_ENUM
 
	gÊags
;

545 } 
	tTSK_FS_NAME
;

556 
TSK_WALK_RET_ENUM
(*
	tTSK_FS_DIR_WALK_CB
Ë(
	tTSK_FS_FILE
 *

557 
	ta_fs_fûe
, c⁄° *
	ta_∑th
, *
	ta_±r
);

560 
	#TSK_FS_DIR_TAG
 0x97531246

	)

565 
	gèg
;

567 
TSK_FS_FILE
 *
	gfs_fûe
;

569 
TSK_FS_NAME
 *
	g«mes
;

570 
size_t
 
	g«mes_u£d
;

571 
size_t
 
	g«mes_Æloc
;

573 
TSK_FS_INFO
 *
	gfs_öfo
;

574 } 
	tTSK_FS_DIR
;

581 
	gTSK_FS_DIR_WALK_FLAG_ALLOC
 = 0x01,

582 
	gTSK_FS_DIR_WALK_FLAG_UNALLOC
 = 0x02,

583 
	gTSK_FS_DIR_WALK_FLAG_RECURSE
 = 0x04,

584 
	gTSK_FS_DIR_WALK_FLAG_NOORPHAN
 = 0x08,

585 } 
	tTSK_FS_DIR_WALK_FLAG_ENUM
;

588 
TSK_FS_DIR
 *
tsk_fs_dú_›í_mëa
(
TSK_FS_INFO
 * 
a_fs
,

589 
TSK_INUM_T
 
a_addr
);

590 
TSK_FS_DIR
 *
tsk_fs_dú_›í
(
TSK_FS_INFO
 * 
a_fs
,

591 c⁄° *
a_dú
);

592 
uöt8_t
 
tsk_fs_dú_wÆk
(
TSK_FS_INFO
 * 
a_fs
, 
TSK_INUM_T
 
a_öode
,

593 
TSK_FS_DIR_WALK_FLAG_ENUM
 
a_Êags
, 
TSK_FS_DIR_WALK_CB
 
a_a˘i⁄
,

594 *
a_±r
);

595 
size_t
 
tsk_fs_dú_gësize
(c⁄° 
TSK_FS_DIR
 *);

596 
TSK_FS_FILE
 *
tsk_fs_dú_gë
(c⁄° 
TSK_FS_DIR
 *, 
size_t
);

597 
tsk_fs_dú_˛o£
(
TSK_FS_DIR
 *);

599 
öt8_t
 
tsk_fs_∑th2öum
(
TSK_FS_INFO
 * 
a_fs
, c⁄° *
a_∑th
,

600 
TSK_INUM_T
 * 
a_ªsu…
, 
TSK_FS_NAME
 * 
a_fs_«me
);

609 
	#TSK_FS_FILE_TAG
 0x11212212

	)

617 
	sTSK_FS_FILE
 {

618 
	gèg
;

620 
TSK_FS_NAME
 *
	g«me
;

621 
TSK_FS_META
 *
	gmëa
;

623 
TSK_FS_INFO
 *
	gfs_öfo
;

629 
	gTSK_FS_FILE_READ_FLAG_SLACK
 = 0x01,

630 
	gTSK_FS_FILE_READ_FLAG_NOID
 = 0x02,

631 } 
	tTSK_FS_FILE_READ_FLAG_ENUM
;

633 
tsk_fs_fûe_˛o£
(
TSK_FS_FILE
 * 
a_fs_fûe
);

634 
TSK_FS_FILE
 *
tsk_fs_fûe_›í
(
TSK_FS_INFO
 * 
a_fs
,

635 
TSK_FS_FILE
 * 
a_fs_fûe
, c⁄° *
a_∑th
);

636 
TSK_FS_FILE
 *
tsk_fs_fûe_›í_mëa
(
TSK_FS_INFO
 * 
fs
,

637 
TSK_FS_FILE
 * 
fs_fûe
, 
TSK_INUM_T
 
addr
);

638 
ssize_t


639 
tsk_fs_fûe_ªad
(
TSK_FS_FILE
 *, 
TSK_OFF_T
, *, 
size_t
,

640 
TSK_FS_FILE_READ_FLAG_ENUM
);

641 
ssize_t
 
tsk_fs_fûe_ªad_ty≥
(
TSK_FS_FILE
 *,

642 
TSK_FS_ATTR_TYPE_ENUM
, 
uöt16_t
, 
TSK_OFF_T
, *, 
size_t
,

643 
TSK_FS_FILE_READ_FLAG_ENUM
);

644 c⁄° 
TSK_FS_ATTR
 *
tsk_fs_fûe_©å_gë
(
TSK_FS_FILE
 *

645 
a_fs_fûe
);

646 
tsk_fs_fûe_©å_gësize
(
TSK_FS_FILE
 * 
a_fs_fûe
);

647 c⁄° 
TSK_FS_ATTR
 *
tsk_fs_fûe_©å_gë_idx
(
TSK_FS_FILE
 *

648 
a_fs_fûe
, 
a_idx
);

649 c⁄° 
TSK_FS_ATTR
 *
tsk_fs_fûe_©å_gë_ty≥
(
TSK_FS_FILE
 *

650 
a_fs_fûe
, 
TSK_FS_ATTR_TYPE_ENUM
, 
uöt16_t
, 
uöt8_t
);

652 
uöt8_t
 
tsk_fs_fûe_wÆk
(
TSK_FS_FILE
 * 
a_fs_fûe
,

653 
TSK_FS_FILE_WALK_FLAG_ENUM
 
a_Êags
, 
TSK_FS_FILE_WALK_CB
 
a_a˘i⁄
,

654 *
a_±r
);

655 
uöt8_t
 
tsk_fs_fûe_wÆk_ty≥
(
TSK_FS_FILE
 * 
a_fs_fûe
,

656 
TSK_FS_ATTR_TYPE_ENUM
 
a_ty≥
, 
uöt16_t
 
a_id
,

657 
TSK_FS_FILE_WALK_FLAG_ENUM
 
a_Êags
, 
TSK_FS_FILE_WALK_CB
 
a_a˘i⁄
,

658 *
a_±r
);

660 
ssize_t
 
tsk_fs_©å_ªad
(c⁄° 
TSK_FS_ATTR
 * 
a_fs_©å
,

661 
TSK_OFF_T
 
a_off£t
, *
a_buf
, 
size_t
 
a_Àn
,

662 
TSK_FS_FILE_READ_FLAG_ENUM
 
a_Êags
);

664 
uöt8_t
 
tsk_fs_fûe_gë_ow√r_sid
(
TSK_FS_FILE
 *, **);

675 
TSK_DADDR_T
 
	gjblk
;

676 
TSK_DADDR_T
 
	gfsblk
;

677 } 
	tTSK_FS_JENTRY
;

679 
TSK_WALK_RET_ENUM
(*
	tTSK_FS_JBLK_WALK_CB
Ë(
	tTSK_FS_INFO
 *, *,

681 
TSK_WALK_RET_ENUM
(*
	tTSK_FS_JENTRY_WALK_CB
Ë(
	tTSK_FS_INFO
 *,

682 
	tTSK_FS_JENTRY
 *, , *);

696 
	eTSK_FS_TYPE_ENUM
 {

697 
	gTSK_FS_TYPE_DETECT
 = 0x00000000,

698 
	gTSK_FS_TYPE_NTFS
 = 0x00000001,

699 
	gTSK_FS_TYPE_NTFS_DETECT
 = 0x00000001,

700 
	gTSK_FS_TYPE_FAT12
 = 0x00000002,

701 
	gTSK_FS_TYPE_FAT16
 = 0x00000004,

702 
	gTSK_FS_TYPE_FAT32
 = 0x00000008,

703 
	gTSK_FS_TYPE_FAT_DETECT
 = 0x0000000e,

704 
	gTSK_FS_TYPE_FFS1
 = 0x00000010,

705 
	gTSK_FS_TYPE_FFS1B
 = 0x00000020,

706 
	gTSK_FS_TYPE_FFS2
 = 0x00000040,

707 
	gTSK_FS_TYPE_FFS_DETECT
 = 0x00000070,

708 
	gTSK_FS_TYPE_EXT2
 = 0x00000080,

709 
	gTSK_FS_TYPE_EXT3
 = 0x00000100,

710 
	gTSK_FS_TYPE_EXT_DETECT
 = 0x00000180,

711 
	gTSK_FS_TYPE_SWAP
 = 0x00000200,

712 
	gTSK_FS_TYPE_SWAP_DETECT
 = 0x00000200,

713 
	gTSK_FS_TYPE_RAW
 = 0x00000400,

714 
	gTSK_FS_TYPE_RAW_DETECT
 = 0x00000400,

715 
	gTSK_FS_TYPE_ISO9660
 = 0x00000800,

716 
	gTSK_FS_TYPE_ISO9660_DETECT
 = 0x00000800,

717 
	gTSK_FS_TYPE_HFS
 = 0x00001000,

718 
	gTSK_FS_TYPE_HFS_DETECT
 = 0x00001000,

719 
	gTSK_FS_TYPE_UNSUPP
 = 0xffffffff,

721 
TSK_FS_TYPE_ENUM
 
	tTSK_FS_TYPE_ENUM
;

727 
	#TSK_FS_TYPE_ISNTFS
(
·y≥
) \

728 (((
·y≥
Ë& 
TSK_FS_TYPE_NTFS_DETECT
)?1:0)

	)

734 
	#TSK_FS_TYPE_ISFAT
(
·y≥
) \

735 (((
·y≥
Ë& 
TSK_FS_TYPE_FAT_DETECT
)?1:0)

	)

741 
	#TSK_FS_TYPE_ISFFS
(
·y≥
) \

742 (((
·y≥
Ë& 
TSK_FS_TYPE_FFS_DETECT
)?1:0)

	)

748 
	#TSK_FS_TYPE_ISEXT
(
·y≥
) \

749 (((
·y≥
Ë& 
TSK_FS_TYPE_EXT_DETECT
)?1:0)

	)

755 
	#TSK_FS_TYPE_ISISO9660
(
·y≥
) \

756 (((
·y≥
Ë& 
TSK_FS_TYPE_ISO9660_DETECT
)?1:0)

	)

762 
	#TSK_FS_TYPE_ISHFS
(
·y≥
) \

763 (((
·y≥
Ë& 
TSK_FS_TYPE_HFS_DETECT
)?1:0)

	)

769 
	#TSK_FS_TYPE_ISSWAP
(
·y≥
) \

770 (((
·y≥
Ë& 
TSK_FS_TYPE_SWAP_DETECT
)?1:0)

	)

776 
	#TSK_FS_TYPE_ISRAW
(
·y≥
) \

777 (((
·y≥
Ë& 
TSK_FS_TYPE_RAW_DETECT
)?1:0)

	)

783 
	eTSK_FS_INFO_FLAG_ENUM
 {

784 
	gTSK_FS_INFO_FLAG_HAVE_SEQ
 = 0x01

786 
TSK_FS_INFO_FLAG_ENUM
 
	tTSK_FS_INFO_FLAG_ENUM
;

788 
	#TSK_FS_INFO_TAG
 0x10101010

	)

789 
	#TSK_FS_INFO_FS_ID_LEN
 32

790 

	)

797 
	sTSK_FS_INFO
 {

798 
	gèg
;

799 
TSK_IMG_INFO
 *
	gimg_öfo
;

800 
TSK_OFF_T
 
	goff£t
;

803 
TSK_INUM_T
 
	göum_cou¡
;

804 
TSK_INUM_T
 
	groŸ_öum
;

805 
TSK_INUM_T
 
	gfú°_öum
;

806 
TSK_INUM_T
 
	gœ°_öum
;

809 
TSK_DADDR_T
 
	gblock_cou¡
;

810 
TSK_DADDR_T
 
	gfú°_block
;

811 
TSK_DADDR_T
 
	gœ°_block
;

812 
TSK_DADDR_T
 
	gœ°_block_a˘
;

813 
	gblock_size
;

814 
	gdev_bsize
;

817 
TSK_INUM_T
 
	gjou∫_öum
;

819 
TSK_FS_TYPE_ENUM
 
	g·y≥
;

820 c⁄° *
	gdu«me
;

821 
TSK_FS_INFO_FLAG_ENUM
 
	gÊags
;

822 
uöt8_t
 
	gfs_id
[
TSK_FS_INFO_FS_ID_LEN
];

823 
size_t
 
	gfs_id_u£d
;

825 
TSK_ENDIAN_ENUM
 
	gídün
;

827 
TSK_LIST
 *
	gli°_öum_«med
;

833 
TSK_FS_DIR
 *
	g‹ph™_dú
;

834 
uöt8_t
 
	gisOΩh™Hu¡ög
;

836 
uöt8_t
(*
block_wÆk
Ë(
TSK_FS_INFO
 * 
	gfs
, 
TSK_DADDR_T
 
	g°¨t
, TSK_DADDR_T 
	gíd
, 
TSK_FS_BLOCK_WALK_FLAG_ENUM
 
	gÊags
, 
TSK_FS_BLOCK_WALK_CB
 
	gcb
, *
	g±r
);

838 
TSK_FS_BLOCK_FLAG_ENUM
(*
block_gëÊags
Ë(
TSK_FS_INFO
 * 
	ga_fs
, 
TSK_DADDR_T
 
	ga_addr
);

840 
uöt8_t
(*
öode_wÆk
Ë(
TSK_FS_INFO
 * 
	gfs
, 
TSK_INUM_T
 
	g°¨t
, TSK_INUM_T 
	gíd
, 
TSK_FS_META_FLAG_ENUM
 
	gÊags
, 
TSK_FS_META_WALK_CB
 
	gcb
, *
	g±r
);

842 
uöt8_t
(*
fûe_add_mëa
Ë(
TSK_FS_INFO
 * 
	gfs
, 
TSK_FS_FILE
 * 
	gfs_fûe
, 
TSK_INUM_T
 
	gaddr
);

844 
TSK_FS_ATTR_TYPE_ENUM
(*
gë_deÁu…_©å_ty≥
Ë(c⁄° 
	gTSK_FS_FILE
 *);

846 
uöt8_t
(*
lﬂd_©ås
Ë(
	gTSK_FS_FILE
 *);

860 
uöt8_t
(*
i°©
Ë(
TSK_FS_INFO
 * 
	gfs
, 
FILE
 * 
	ghFûe
, 
TSK_INUM_T
 
	göum
,

861 
TSK_DADDR_T
 
	gnumblock
, 
öt32_t
 
	g£c_skew
);

863 
TSK_RETVAL_ENUM
(*
dú_›í_mëa
Ë(
TSK_FS_INFO
 * 
	gfs
, 
TSK_FS_DIR
 ** 
	ga_fs_dú
, 
TSK_INUM_T
 
	göode
);

865 
uöt8_t
(*
j›í
Ë(
	gTSK_FS_INFO
 *, 
	gTSK_INUM_T
);

867 
uöt8_t
(*
jblk_wÆk
Ë(
	gTSK_FS_INFO
 *, 
	gTSK_DADDR_T
, TSK_DADDR_T, , 
	gTSK_FS_JBLK_WALK_CB
, *);

869 
uöt8_t
(*
jíåy_wÆk
Ë(
	gTSK_FS_INFO
 *, , 
	gTSK_FS_JENTRY_WALK_CB
, *);

871 
uöt8_t
(*
fs°©
Ë(
TSK_FS_INFO
 * 
	gfs
, 
FILE
 * 
	ghFûe
);

873 (*
	g«me_cmp
Ë(
	gTSK_FS_INFO
 *, const *, const *);

875 
uöt8_t
(*
fscheck
Ë(
	gTSK_FS_INFO
 *, 
	gFILE
 *);

877 (*
	g˛o£
Ë(
TSK_FS_INFO
 * 
	gfs
);

879 
uöt8_t
(*
‰ód_ow√r_sid
Ë(
	gTSK_FS_FILE
 *, **);

884 
TSK_FS_INFO
 *
tsk_fs_›í_img
(
TSK_IMG_INFO
 *, 
TSK_OFF_T
,

885 
TSK_FS_TYPE_ENUM
);

886 
TSK_FS_INFO
 *
tsk_fs_›í_vﬁ
(c⁄° 
TSK_VS_PART_INFO
 *,

887 
TSK_FS_TYPE_ENUM
);

888 
tsk_fs_˛o£
(
TSK_FS_INFO
 *);

890 
TSK_FS_TYPE_ENUM
 
tsk_fs_ty≥_toid
(c⁄° 
TSK_TCHAR
 *);

891 
tsk_fs_ty≥_¥öt
(
FILE
 *);

892 c⁄° *
tsk_fs_ty≥_t⁄ame
(
TSK_FS_TYPE_ENUM
);

893 
TSK_FS_TYPE_ENUM
 
tsk_fs_ty≥_suµ‹ãd
();

895 
ssize_t
 
tsk_fs_ªad
(
TSK_FS_INFO
 * 
a_fs
, 
TSK_OFF_T
 
a_off
,

896 *
a_buf
, 
size_t
 
a_Àn
);

897 
ssize_t
 
tsk_fs_ªad_block
(
TSK_FS_INFO
 * 
a_fs
,

898 
TSK_DADDR_T
 
a_addr
, *
a_buf
, 
size_t
 
a_Àn
);

904 
	eTSK_FS_BLKCALC_FLAG_ENUM
 {

905 
	gTSK_FS_BLKCALC_DD
 = 0x01,

906 
	gTSK_FS_BLKCALC_BLKLS
 = 0x02,

907 
	gTSK_FS_BLKCALC_SLACK
 = 0x04

909 
TSK_FS_BLKCALC_FLAG_ENUM
 
	tTSK_FS_BLKCALC_FLAG_ENUM
;

910 
öt8_t
 
tsk_fs_blkˇlc
(
TSK_FS_INFO
 * 
fs
,

911 
TSK_FS_BLKCALC_FLAG_ENUM
 
Êags
, 
TSK_DADDR_T
 
˙t
);

914 
	eTSK_FS_BLKCAT_FLAG_ENUM
 {

915 
	gTSK_FS_BLKCAT_HEX
 = 0x01,

916 
	gTSK_FS_BLKCAT_ASCII
 = 0x02,

917 
	gTSK_FS_BLKCAT_HTML
 = 0x04,

918 
	gTSK_FS_BLKCAT_STAT
 = 0x08

920 
TSK_FS_BLKCAT_FLAG_ENUM
 
	tTSK_FS_BLKCAT_FLAG_ENUM
;

921 
uöt8_t
 
tsk_fs_blkˇt
(
TSK_FS_INFO
 * 
fs
,

922 
TSK_FS_BLKCAT_FLAG_ENUM
 
Êags
, 
TSK_DADDR_T
 
addr
,

923 
TSK_DADDR_T
 
ªad_num_unôs
);

926 
	eTSK_FS_BLKLS_FLAG_ENUM
 {

927 
	gTSK_FS_BLKLS_CAT
 = 0x01,

928 
	gTSK_FS_BLKLS_LIST
 = 0x02,

929 
	gTSK_FS_BLKLS_SLACK
 = 0x04,

931 
TSK_FS_BLKLS_FLAG_ENUM
 
	tTSK_FS_BLKLS_FLAG_ENUM
;

932 
uöt8_t
 
tsk_fs_blkls
(
TSK_FS_INFO
 * 
fs
,

933 
TSK_FS_BLKLS_FLAG_ENUM
 
l˛Êags
, 
TSK_DADDR_T
 
b°¨t
,

934 
TSK_DADDR_T
 
bíd
, 
TSK_FS_BLOCK_FLAG_ENUM
 
Êags
);

936 
uöt8_t
 
tsk_fs_blk°©
(
TSK_FS_INFO
 * 
fs
, 
TSK_DADDR_T
 
addr
,

937 
TSK_FS_BLOCK_FLAG_ENUM
 
Êags
);

939 
	eTSK_FS_FFIND_FLAG_ENUM
 {

940 
	gTSK_FS_FFIND_ALL
 = 0x01,

942 
TSK_FS_FFIND_FLAG_ENUM
 
	tTSK_FS_FFIND_FLAG_ENUM
;

943 
uöt8_t
 
tsk_fs_fföd
(
TSK_FS_INFO
 * 
fs
,

944 
TSK_FS_FFIND_FLAG_ENUM
 
l˛Êags
, 
TSK_INUM_T
 
öode
,

945 
TSK_FS_ATTR_TYPE_ENUM
 
ty≥
, 
uöt8_t
 
ty≥_u£d
,

946 
uöt16_t
 
id
, 
uöt8_t
 
id_u£d
, 
TSK_FS_DIR_WALK_FLAG_ENUM
 
Êags
);

949 
	eTSK_FS_FLS_FLAG_ENUM
 {

950 
	gTSK_FS_FLS_DOT
 = 0x01,

951 
	gTSK_FS_FLS_LONG
 = 0x02,

952 
	gTSK_FS_FLS_FILE
 = 0x04,

953 
	gTSK_FS_FLS_DIR
 = 0x08,

954 
	gTSK_FS_FLS_FULL
 = 0x10,

955 
	gTSK_FS_FLS_MAC
 = 0x20,

957 
TSK_FS_FLS_FLAG_ENUM
 
	tTSK_FS_FLS_FLAG_ENUM
;

958 
uöt8_t
 
tsk_fs_Ês
(
TSK_FS_INFO
 * 
fs
,

959 
TSK_FS_FLS_FLAG_ENUM
 
l˛Êags
, 
TSK_INUM_T
 
öode
,

960 
TSK_FS_NAME_FLAG_ENUM
 
Êags
, 
TSK_TCHAR
 * 
¥e
, 
öt32_t
 
skew
);

962 
uöt8_t
 
tsk_fs_iˇt
(
TSK_FS_INFO
 * 
fs
,

963 
TSK_INUM_T
 
öum
,

964 
TSK_FS_ATTR_TYPE_ENUM
 
ty≥
, 
uöt8_t
 
ty≥_u£d
,

965 
uöt16_t
 
id
, 
uöt8_t
 
id_u£d
, 
TSK_FS_FILE_WALK_FLAG_ENUM
 
Êags
);

968 
	eTSK_FS_IFIND_FLAG_ENUM
 {

969 
	gTSK_FS_IFIND_ALL
 = 0x01,

970 
	gTSK_FS_IFIND_PAR_LONG
 = 0x02,

972 
TSK_FS_IFIND_FLAG_ENUM
 
	tTSK_FS_IFIND_FLAG_ENUM
;

973 
öt8_t
 
tsk_fs_iföd_∑th
(
TSK_FS_INFO
 * 
fs
,

974 
TSK_TCHAR
 * 
∑th
, 
TSK_INUM_T
 * 
ªsu…
);

975 
uöt8_t
 
tsk_fs_iföd_d©a
(
TSK_FS_INFO
 * 
fs
,

976 
TSK_FS_IFIND_FLAG_ENUM
 
Êags
, 
TSK_DADDR_T
 
blk
);

977 
uöt8_t
 
tsk_fs_iföd_∑r
(
TSK_FS_INFO
 * 
fs
,

978 
TSK_FS_IFIND_FLAG_ENUM
 
Êags
, 
TSK_INUM_T
 
∑r
);

981 
	eTSK_FS_ILS_FLAG_ENUM
 {

982 
	gTSK_FS_ILS_OPEN
 = 0x01,

983 
	gTSK_FS_ILS_MAC
 = 0x02,

984 
	gTSK_FS_ILS_LINK
 = 0x04,

985 
	gTSK_FS_ILS_UNLINK
 = 0x08,

987 
TSK_FS_ILS_FLAG_ENUM
 
	tTSK_FS_ILS_FLAG_ENUM
;

988 
uöt8_t
 
tsk_fs_ûs
(
TSK_FS_INFO
 * 
fs
,

989 
TSK_FS_ILS_FLAG_ENUM
 
l˛Êags
, 
TSK_INUM_T
 
i°¨t
, TSK_INUM_T 
ûa°
,

990 
TSK_FS_META_FLAG_ENUM
 
Êags
, 
öt32_t
 
skew
, c⁄° 
TSK_TCHAR
 * 
img
);

995 
	#TSK_FS_ISDOT
(
°r
) ( ((str[0] == '.') && \

996 –((
°r
[1] ='.'Ë&& (°r[2] ='\0')Ë|| (°r[1] ='\0'ËËË? 1 : 0 )

	)

999 
tsk_fs_∑r£_öum
(c⁄° 
TSK_TCHAR
 * 
°r
, 
TSK_INUM_T
 *,

1000 
TSK_FS_ATTR_TYPE_ENUM
 *, 
uöt8_t
 *, 
uöt16_t
 *, uint8_t *);

1002 #ifde‡
__˝lu•lus


	@tsk3/fs/tsk_fs_i.h

31 #i‚de‡
_TSK_FS_I_H


32 
	#_TSK_FS_I_H


	)

34 #ifde‡
__˝lu•lus


39 
	~"tsk3/ba£/tsk_ba£_i.h
"

40 
	~"tsk3/img/tsk_img_i.h
"

41 
	~"tsk3/vs/tsk_vs_i.h
"

44 
	~"tsk_fs.h
"

46 
	~<time.h
>

47 
	~<loˇÀ.h
>

49 #i‡!
deföed
 (
TSK_WIN32
)

50 
	~<sys/f˙é.h
>

51 
	~<sys/time.h
>

55 #i‚de‡
TSK_USE_HFS


56 
	#TSK_USE_HFS
 1

	)

60 #i‚de‡
NBBY


61 
	#NBBY
 8

	)

64 #i‚de‡
is£t


65 
	#is£t
(
a
,
i
Ë(((
uöt8_t
 *)◊))[(i)/
NBBY
] & (1<<((i)%NBBY)))

	)

68 #i‚de‡
£tbô


69 
	#£tbô
(
a
,
i
Ë(((
uöt8_t
 *)◊))[(i)/
NBBY
] |(1<<((i)%NBBY)))

	)

75 *
ba£
;

76 *
cur
;

77 
size_t
 
tŸÆ
;

78 
size_t
 
À·
;

79 } 
	tTSK_FS_LOAD_FILE
;

81 
TSK_WALK_RET_ENUM
 
tsk_fs_lﬂd_fûe_a˘i⁄
(
TSK_FS_FILE
 * 
fs_fûe
,

82 
TSK_OFF_T
, 
TSK_DADDR_T
, *, 
size_t
, 
TSK_FS_BLOCK_FLAG_ENUM
,

87 
TSK_FS_BLOCK
 *
tsk_fs_block_Æloc
(
TSK_FS_INFO
 * 
fs
);

88 
tsk_fs_block_£t
(
TSK_FS_INFO
 * 
fs
, 
TSK_FS_BLOCK
 * 
fs_block
,

89 
TSK_DADDR_T
 
a_addr
, 
TSK_FS_BLOCK_FLAG_ENUM
 
a_Êags
, *
a_buf
);

92 
TSK_FS_ATTR
 *
tsk_fs_©å_Æloc
(
TSK_FS_ATTR_FLAG_ENUM
);

93 
tsk_fs_©å_‰ì
(
TSK_FS_ATTR
 *);

94 
tsk_fs_©å_˛ór
(
TSK_FS_ATTR
 *);

95 
uöt8_t
 
tsk_fs_©å_£t_°r
(
TSK_FS_FILE
 *, 
TSK_FS_ATTR
 *,

96 c⁄° *, 
TSK_FS_ATTR_TYPE_ENUM
, 
uöt16_t
, *, 
size_t
);

97 
uöt8_t
 
tsk_fs_©å_£t_run
(
TSK_FS_FILE
 *,

98 
TSK_FS_ATTR
 * 
a_fs_©å
, 
TSK_FS_ATTR_RUN
 * 
d©a_run_√w
,

99 c⁄° *
«me
, 
TSK_FS_ATTR_TYPE_ENUM
 
ty≥
, 
uöt16_t
 
id
,

100 
TSK_OFF_T
 
size
, TSK_OFF_T 
öôsize
, TSK_OFF_T 
Ælocsize
,

101 
TSK_FS_ATTR_FLAG_ENUM
 
Êags
, 
uöt32_t
 
compsize
);

102 
uöt8_t
 
tsk_fs_©å_add_run
(
TSK_FS_INFO
 * 
fs
,

103 
TSK_FS_ATTR
 * 
a_fs_©å
, 
TSK_FS_ATTR_RUN
 * 
d©a_run_√w
);

104 
tsk_fs_©å_≠≥nd_run
(
TSK_FS_INFO
 * 
fs
,

105 
TSK_FS_ATTR
 * 
a_fs_©å
, 
TSK_FS_ATTR_RUN
 * 
a_d©a_run
);

108 
TSK_FS_ATTRLIST
 *
tsk_fs_©åli°_Æloc
();

109 
tsk_fs_©åli°_‰ì
(
TSK_FS_ATTRLIST
 *);

111 
uöt8_t
 
tsk_fs_©åli°_add
(
TSK_FS_ATTRLIST
 *, 
TSK_FS_ATTR
 *);

112 
TSK_FS_ATTR
 *
tsk_fs_©åli°_gë√w
(
TSK_FS_ATTRLIST
 *,

113 
TSK_FS_ATTR_FLAG_ENUM
 
a_©y≥
);

114 
tsk_fs_©åli°_m¨kunu£d
(
TSK_FS_ATTRLIST
 *);

115 c⁄° 
TSK_FS_ATTR
 *
tsk_fs_©åli°_gë
(c⁄° 
TSK_FS_ATTRLIST
 *,

116 
TSK_FS_ATTR_TYPE_ENUM
);

117 c⁄° 
TSK_FS_ATTR
 *
tsk_fs_©åli°_gë_id
(c⁄° 
TSK_FS_ATTRLIST


118 *, 
TSK_FS_ATTR_TYPE_ENUM
, 
uöt16_t
);

119 c⁄° 
TSK_FS_ATTR
 *
tsk_fs_©åli°_gë_«me_ty≥
(const

120 
TSK_FS_ATTRLIST
 *, 
TSK_FS_ATTR_TYPE_ENUM
, const *);

121 c⁄° 
TSK_FS_ATTR
 *
tsk_fs_©åli°_gë_idx
(c⁄° 
TSK_FS_ATTRLIST


123 
tsk_fs_©åli°_gë_Àn
(c⁄° 
TSK_FS_ATTRLIST
 *

124 
a_fs_©åli°
);

127 
TSK_FS_ATTR_RUN
 *
tsk_fs_©å_run_Æloc
();

128 
tsk_fs_©å_run_‰ì
(
TSK_FS_ATTR_RUN
 *);

131 
TSK_FS_META
 *
tsk_fs_mëa_Æloc
(
size_t
);

132 
TSK_FS_META
 *
tsk_fs_mëa_ªÆloc
(TSK_FS_META *, 
size_t
);

133 
tsk_fs_mëa_ª£t
(
TSK_FS_META
 *);

134 
tsk_fs_mëa_˛o£
(
TSK_FS_META
 * 
fs_mëa
);

137 
TSK_FS_FILE
 *
tsk_fs_fûe_Æloc
(
TSK_FS_INFO
 *);

140 
TSK_FS_DIR
 *
tsk_fs_dú_Æloc
(
TSK_FS_INFO
 * 
a_fs
, 
size_t
 
a_˙t
);

141 
uöt8_t
 
tsk_fs_dú_ªÆloc
(
TSK_FS_DIR
 * 
a_fs_dú
, 
size_t
 
a_˙t
);

142 
uöt8_t
 
tsk_fs_dú_add
(
TSK_FS_DIR
 * 
a_fs_dú
,

143 c⁄° 
TSK_FS_NAME
 * 
a_fs_dít
);

144 
tsk_fs_dú_ª£t
(
TSK_FS_DIR
 * 
a_fs_dú
);

147 
TSK_RETVAL_ENUM
 
tsk_fs_dú_lﬂd_öum_«med
(
TSK_FS_INFO
 * 
a_fs
);

148 
uöt8_t
 
tsk_fs_dú_make_‹ph™_dú_mëa
(
TSK_FS_INFO
 * 
a_fs
,

149 
TSK_FS_META
 * 
a_fs_mëa
);

150 
uöt8_t
 
tsk_fs_dú_make_‹ph™_dú_«me
(
TSK_FS_INFO
 * 
a_fs
,

151 
TSK_FS_NAME
 * 
a_fs_«me
);

152 
TSK_RETVAL_ENUM
 
tsk_fs_dú_föd_‹ph™s
(
TSK_FS_INFO
 * 
a_fs
,

153 
TSK_FS_DIR
 * 
a_fs_dú
);

158 
	#TSK_FS_ORPHANDIR_INUM
(
fs_öfo
) \

159 (
fs_öfo
->
œ°_öum
)

	)

164 
TSK_FS_NAME
 *
tsk_fs_«me_Æloc
(
size_t
, size_t);

165 
uöt8_t
 
tsk_fs_«me_ªÆloc
(
TSK_FS_NAME
 *, 
size_t
);

166 
tsk_fs_«me_‰ì
(
TSK_FS_NAME
 *);

168 
tsk_fs_«me_¥öt
(
FILE
 *, c⁄° 
TSK_FS_FILE
 *,

169 c⁄° *, 
TSK_FS_INFO
 *, c⁄° 
TSK_FS_ATTR
 *, 
uöt8_t
);

170 
tsk_fs_«me_¥öt_l⁄g
(
FILE
 *, c⁄° 
TSK_FS_FILE
 *,

171 c⁄° *, 
TSK_FS_INFO
 *, c⁄° 
TSK_FS_ATTR
 *, 
uöt8_t
);

172 
tsk_fs_«me_¥öt_mac
(
FILE
 *, c⁄° 
TSK_FS_FILE
 *,

173 c⁄° *, 
TSK_FS_INFO
 *, c⁄° 
TSK_FS_ATTR
 * 
fs_©å
,

175 
uöt8_t
 
tsk_fs_«me_c›y
(
TSK_FS_NAME
 * 
a_fs_«me_to
,

176 c⁄° 
TSK_FS_NAME
 * 
a_fs_«me_‰om
);

177 
tsk_fs_«me_ª£t
(
TSK_FS_NAME
 * 
a_fs_«me
);

180 
uöt8_t
 
tsk_fs_unix_make_d©a_run
(
TSK_FS_FILE
 * 
fs_fûe
);

181 
TSK_FS_ATTR_TYPE_ENUM
 
tsk_fs_unix_gë_deÁu…_©å_ty≥
(const

182 
TSK_FS_FILE
 * 
a_fûe
);

183 
tsk_fs_unix_«me_cmp
(
TSK_FS_INFO
 * 
a_fs_öfo
,

184 c⁄° *
s1
, c⁄° *
s2
);

187 
TSK_FS_INFO
 *
ext2fs_›í
(
TSK_IMG_INFO
 *, 
TSK_OFF_T
,

188 
TSK_FS_TYPE_ENUM
, 
uöt8_t
);

189 
TSK_FS_INFO
 *
Átfs_›í
(
TSK_IMG_INFO
 *, 
TSK_OFF_T
,

190 
TSK_FS_TYPE_ENUM
, 
uöt8_t
);

191 
TSK_FS_INFO
 *
ffs_›í
(
TSK_IMG_INFO
 *, 
TSK_OFF_T
,

192 
TSK_FS_TYPE_ENUM
);

193 
TSK_FS_INFO
 *
¡fs_›í
(
TSK_IMG_INFO
 *, 
TSK_OFF_T
,

194 
TSK_FS_TYPE_ENUM
, 
uöt8_t
);

195 
TSK_FS_INFO
 *
øwfs_›í
(
TSK_IMG_INFO
 *, 
TSK_OFF_T
);

196 
TSK_FS_INFO
 *
sw≠fs_›í
(
TSK_IMG_INFO
 *, 
TSK_OFF_T
);

197 
TSK_FS_INFO
 *
iso9660_›í
(
TSK_IMG_INFO
 *, 
TSK_OFF_T
,

198 
TSK_FS_TYPE_ENUM
, 
uöt8_t
);

199 
TSK_FS_INFO
 *
hfs_›í
(
TSK_IMG_INFO
 *, 
TSK_OFF_T
,

200 
TSK_FS_TYPE_ENUM
, 
uöt8_t
);

203 
uöt8_t
 
tsk_fs_nofs_fs°©
(
TSK_FS_INFO
 * 
fs
, 
FILE
 * 
hFûe
);

204 
tsk_fs_nofs_˛o£
(
TSK_FS_INFO
 * 
fs
);

205 
TSK_FS_ATTR_TYPE_ENUM
 
tsk_fs_nofs_gë_deÁu…_©å_ty≥
(const

206 
TSK_FS_FILE
 * 
a_fûe
);

207 
uöt8_t
 
tsk_fs_nofs_make_d©a_run
(
TSK_FS_FILE
 *);

208 
tsk_fs_nofs_«me_cmp
(
TSK_FS_INFO
 *, const *,

211 
TSK_FS_BLOCK_FLAG_ENUM
 
tsk_fs_nofs_block_gëÊags
(
TSK_FS_INFO
 *

212 
a_fs
, 
TSK_DADDR_T
 
a_addr
);

213 
uöt8_t
 
tsk_fs_nofs_block_wÆk
(
TSK_FS_INFO
 * 
fs
,

214 
TSK_DADDR_T
 
a_°¨t_blk
, TSK_DADDR_T 
a_íd_blk
,

215 
TSK_FS_BLOCK_WALK_FLAG_ENUM
 
a_Êags
, 
TSK_FS_BLOCK_WALK_CB
 
a_a˘i⁄
,

216 *
a_±r
);

218 
uöt8_t
 
tsk_fs_nofs_fûe_add_mëa
(
TSK_FS_INFO
 * 
fs
,

219 
TSK_FS_FILE
 * 
a_fs_fûe
, 
TSK_INUM_T
 
öum
);

220 
uöt8_t
 
tsk_fs_nofs_öode_wÆk
(
TSK_FS_INFO
 * 
fs
,

221 
TSK_INUM_T
 
a_°¨t_öum
, TSK_INUM_T 
a_íd_öum
,

222 
TSK_FS_META_FLAG_ENUM
 
a_Êags
, 
TSK_FS_META_WALK_CB
 
a_a˘i⁄
,

223 *
a_±r
);

224 
uöt8_t
 
tsk_fs_nofs_i°©
(
TSK_FS_INFO
 * 
a_fs
, 
FILE
 * 
hFûe
,

225 
TSK_INUM_T
 
öum
, 
TSK_DADDR_T
 
numblock
, 
öt32_t
 
£c_skew
);

227 
TSK_RETVAL_ENUM
 
tsk_fs_nofs_dú_›í_mëa
(
TSK_FS_INFO
 * 
a_fs
,

228 
TSK_FS_DIR
 ** 
a_fs_dú
, 
TSK_INUM_T
 
a_addr
);

230 
uöt8_t
 
tsk_fs_nofs_j›í
(
TSK_FS_INFO
 * 
a_fs
, 
TSK_INUM_T
 
öum
);

231 
uöt8_t
 
tsk_fs_nofs_jíåy_wÆk
(
TSK_FS_INFO
 * 
a_fs
, 
a_Êags
,

232 
TSK_FS_JENTRY_WALK_CB
 
a_a˘i⁄
, *
a_±r
);

233 
uöt8_t
 
tsk_fs_nofs_jblk_wÆk
(
TSK_FS_INFO
 * 
a_fs
,

234 
TSK_INUM_T
 
°¨t
, TSK_INUM_T 
íd
, 
a_Êags
,

235 
TSK_FS_JBLK_WALK_CB
 
a_a˘i⁄
, *
a_±r
);

239 
	#tsk_fs_guessu16
(
fs
, 
x
, 
mag
) \

240 
	`tsk_guess_íd_u16
(&(
fs
->
ídün
), (
x
), (
mag
))

	)

242 
	#tsk_fs_guessu32
(
fs
, 
x
, 
mag
) \

243 
	`tsk_guess_íd_u32
(&(
fs
->
ídün
), (
x
), (
mag
))

	)

245 #ifde‡
__˝lu•lus


	@tsk3/fs/tsk_hfs.h

72 #i‚de‡
_TSK_HFS_H


73 
	#_TSK_HFS_H


	)

85 
	#HFS_FILE_CONTENT_LEN
 160

86 

	)

88 
	#HFS_MAXNAMLEN
 765

	)

97 
	#NSEC_BTWN_1904_1970
 (
uöt32_t
Ë2082844800U

	)

102 
	#HFS_ROOT_PARENT_ID
 1

	)

103 
	#HFS_ROOT_FOLDER_ID
 2

	)

104 
	#HFS_EXTENTS_FILE_ID
 3

105 
	#HFS_EXTENTS_FILE_NAME
 "$Exã¡sFûe"

	)

106 
	#HFS_CATALOG_FILE_ID
 4

107 
	#HFS_CATALOG_FILE_NAME
 "$C©ÆogFûe"

	)

108 
	#HFS_BAD_BLOCK_FILE_ID
 5

	)

109 
	#HFS_BAD_BLOCK_FILE_NAME
 "$BadBlockFûe"

	)

110 
	#HFS_ALLOCATION_FILE_ID
 6

111 
	#HFS_ALLOCATION_FILE_NAME
 "$AŒoˇti⁄Fûe"

	)

112 
	#HFS_STARTUP_FILE_ID
 7

113 
	#HFS_STARTUP_FILE_NAME
 "$SèπupFûe"

	)

114 
	#HFS_ATTRIBUTES_FILE_ID
 8

115 
	#HFS_ATTRIBUTES_FILE_NAME
 "$AâribuãsFûe"

	)

116 
	#HFS_REPAIR_CATALOG_FILE_ID
 14

117 
	#HFS_REPAIR_CATALOG_FILE_NAME
 "$RïaúC©ÆogFûe"

	)

118 
	#HFS_BOGUS_EXTENT_FILE_ID
 15

119 
	#HFS_BOGUS_EXTENT_FILE_NAME
 "$BogusExã¡Fûe"

	)

121 
	#HFS_FIRST_USER_CNID
 16

	)

122 
	#HFS_ROOT_INUM
 
HFS_ROOT_FOLDER_ID


	)

124 
	#HFS_HARDLINK_FILE_TYPE
 0x686C6E6B

	)

125 
	#HFS_HARDLINK_FILE_CREATOR
 0x6866732B

	)

127 
	#HFS_CATALOGNAME
 "$C©ÆogFûe"

	)

128 
	#HFS_EXTENTSNAME
 "$Exã¡sFûe"

	)

129 
	#HFS_ALLOCATIONNAME
 "$BôM≠Fûe"

	)

130 
	#HFS_STARTUPNAME
 "$BoŸFûe"

	)

131 
	#HFS_ATTRIBUTESNAME
 "$AâribuãsFûe"

	)

139 
uöt8_t
 
	mÀngth
[2];

140 
uöt8_t
 
	municode
[510];

141 } 
	thfs_uni_°r
;

146 
	#HFS_PERM_AFLAG_ARCHIVED
 0x01

	)

147 
	#HFS_PERM_AFLAG_IMMUTABLE
 0x02

	)

148 
	#HFS_PERM_AFLAG_APPEND
 0x04

	)

151 
	#HFS_PERM_OFLAG_NODUMP
 0x01

	)

152 
	#HFS_PERM_OFLAG_IMMUTABLE
 0x02

	)

153 
	#HFS_PERM_OFLAG_APPEND
 0x04

	)

154 
	#HFS_PERM_OFLAG_OPAQUE
 0x08

	)

155 
	#HFS_PERM_OFLAG_COMPRESSED
 0x20

	)

158 
	#HFS_IN_ISUID
 0004000

	)

159 
	#HFS_IN_ISGID
 0002000

	)

160 
	#HFS_IN_ISVTX
 0001000

	)

161 
	#HFS_IN_IRUSR
 0000400

	)

162 
	#HFS_IN_IWUSR
 0000200

	)

163 
	#HFS_IN_IXUSR
 0000100

	)

164 
	#HFS_IN_IRGRP
 0000040

	)

165 
	#HFS_IN_IWGRP
 0000020

	)

166 
	#HFS_IN_IXGRP
 0000010

	)

167 
	#HFS_IN_IROTH
 0000004

	)

168 
	#HFS_IN_IWOTH
 0000002

	)

169 
	#HFS_IN_IXOTH
 0000001

	)

171 
	#HFS_IN_IFMT
 0170000

	)

172 
	#HFS_IN_IFIFO
 0010000

	)

173 
	#HFS_IN_IFCHR
 0020000

	)

174 
	#HFS_IN_IFDIR
 0040000

	)

175 
	#HFS_IN_IFBLK
 0060000

	)

176 
	#HFS_IN_IFREG
 0100000

	)

177 
	#HFS_IN_IFLNK
 0120000

	)

178 
	#HFS_IN_IFSOCK
 0140000

	)

179 
	#HFS_IFWHT
 0160000

	)

180 
	#HFS_IFXATTR
 0200000

	)

183 
uöt8_t
 
	mow√r
[4];

184 
uöt8_t
 
	mgroup
[4];

185 
uöt8_t
 
	ma_Êags
;

186 
uöt8_t
 
	mo_Êags
;

187 
uöt8_t
 
	mmode
[2];

189 
uöt8_t
 
	möum
[4];

190 
uöt8_t
 
	m∆ök
[4];

191 
uöt8_t
 
	møw
[4];

192 } 
	m•ecül
;

193 } 
	thfs_ac˚ss_≥rm
;

200 
uöt8_t
 
	m°¨t_blk
[4];

201 
uöt8_t
 
	mblk_˙t
[4];

202 } 
	thfs_ext_desc
;

206 
hfs_ext_desc
 
	mexã¡s
[8];

207 } 
	thfs_exã¡s
;

211 
uöt8_t
 
	mlogic_sz
[8];

212 
uöt8_t
 
	m˛mp_sz
[4];

214 
uöt8_t
 
	mtŸÆ_blk
[4];

215 
hfs_ext_desc
 
	mexã¡s
[8];

216 } 
	thfs_f‹k
;

223 
	#HFS_VH_OFF
 1024

224 

	)

226 
	#HFS_VH_SIG_HFS
 0x4244

	)

227 
	#HFS_VH_SIG_HFSPLUS
 0x482b

	)

228 
	#HFS_VH_SIG_HFSX
 0x4858

	)

231 
	#HFS_VH_VER_HFSPLUS
 0x0004

	)

232 
	#HFS_VH_VER_HFSX
 0x0005

	)

236 
	#HFS_VH_ATTR_UNMOUNTED
 (
uöt32_t
)(1<<8Ë

	)

237 
	#HFS_VH_ATTR_BADBLOCKS
 (
uöt32_t
)(1<<9Ë

	)

238 
	#HFS_VH_ATTR_NOCACHE
 (
uöt32_t
)(1<<10Ë

	)

239 
	#HFS_VH_ATTR_INCONSISTENT
 (
uöt32_t
)(1<<11Ë

	)

240 
	#HFS_VH_ATTR_CNIDS_REUSED
 (
uöt32_t
)(1<<12Ë

	)

241 
	#HFS_VH_ATTR_JOURNALED
 (
uöt32_t
)(1<<13)

	)

243 
	#HFS_VH_ATTR_SOFTWARE_LOCK
 (
uöt32_t
)(1 << 15Ë

	)

248 
	#HFS_VH_MVER_HFSPLUS
 0x31302e30

	)

249 
	#HFS_VH_MVER_HFSJ
 0x4846534®

	)

250 
	#HFS_VH_MVER_FSK
 0x46534b21

	)

251 
	#HFS_VH_MVER_FSCK
 0x6673636b

	)

252 
	#HFS_VH_MVER_OS89
 0x382e3130

	)

255 
	#HFS_VH_FI_BOOT
 0

	)

256 
	#HFS_VH_FI_START
 1

	)

257 
	#HFS_VH_FI_OPEN
 2

	)

258 
	#HFS_VH_FI_BOOT9
 3

	)

259 
	#HFS_VH_FI_RESV1
 4

	)

260 
	#HFS_VH_FI_BOOTX
 5

	)

261 
	#HFS_VH_FI_ID1
 6

	)

262 
	#HFS_VH_FI_ID2
 7

	)

269 
uöt8_t
 
	msig«tuª
[2];

270 
uöt8_t
 
	mvîsi⁄
[2];

271 
uöt8_t
 
	m©å
[4];

272 
uöt8_t
 
	mœ°_m¡_vî
[4];

273 
uöt8_t
 
	mjöfo_blk
[4];

275 
uöt8_t
 
	m¸_d©e
[4];

276 
uöt8_t
 
	mm_d©e
[4];

277 
uöt8_t
 
	mbkup_d©e
[4];

278 
uöt8_t
 
	mchk_d©e
[4];

280 
uöt8_t
 
	mfûe_˙t
[4];

281 
uöt8_t
 
	mÊdr_˙t
[4];

283 
uöt8_t
 
	mblk_sz
[4];

284 
uöt8_t
 
	mblk_˙t
[4];

285 
uöt8_t
 
	m‰ì_blks
[4];

287 
uöt8_t
 
	m√xt_Æloc
[4];

288 
uöt8_t
 
	mr§c_˛mp_sz
[4];

289 
uöt8_t
 
	md©a_˛mp_sz
[4];

290 
uöt8_t
 
	m√xt_ˇt_id
[4];

292 
uöt8_t
 
	mwrôe_˙t
[4];

293 
uöt8_t
 
	míc_bmp
[8];

295 
uöt8_t
 
	mfödî_öfo
[8][4];

297 
hfs_f‹k
 
	mÆloc_fûe
;

298 
hfs_f‹k
 
	mext_fûe
;

299 
hfs_f‹k
 
	mˇt_fûe
;

300 
hfs_f‹k
 
	m©å_fûe
;

301 
hfs_f‹k
 
	m°¨t_fûe
;

302 } 
	thfs_∂us_vh
;

308 
uöt8_t
 
	mdrSigW‹d
[2];

309 
uöt8_t
 
	mdrCrD©e
[4];

310 
uöt8_t
 
	mdrLsMod
[4];

311 
uöt8_t
 
	mdrAåb
[2];

312 
uöt8_t
 
	mdrNmFls
[2];

313 
uöt8_t
 
	mdrVBMSt
[2];

314 
uöt8_t
 
	mdrAŒocPå
[2];

315 
uöt8_t
 
	mdrNmAlBlks
[2];

316 
uöt8_t
 
	mdrAlBlkSiz
[4];

317 
uöt8_t
 
	mdrCÕSiz
[4];

318 
uöt8_t
 
	mdrAlBlSt
[2];

319 
uöt8_t
 
	mdrNxtCNID
[4];

320 
uöt8_t
 
	mdrFªeBlks
[2];

321 
uöt8_t
 
	mdrVN
[28];

322 
uöt8_t
 
	mdrVﬁBkUp
[4];

323 
uöt8_t
 
	mdrVSeqNum
[2];

324 
uöt8_t
 
	mdrWrC¡
[4];

325 
uöt8_t
 
	mdrXTCÕSiz
[4];

326 
uöt8_t
 
	mdrCTCÕSiz
[4];

327 
uöt8_t
 
	mdrNmRtDús
[2];

328 
uöt8_t
 
	mdrFûC¡
[4];

329 
uöt8_t
 
	mdrDúC¡
[4];

330 
uöt8_t
 
	mdrFndrInfo
[32];

331 
uöt8_t
 
	mdrEmbedSigW‹d
[2];

332 
uöt8_t
 
	mdrEmbedExã¡_°¨tBlock
[2];

333 
uöt8_t
 
	mdrEmbedExã¡_blockCou¡
[2];

334 
uöt8_t
 
	mdrXTFlSize
[4];

335 
uöt8_t
 
	mdrXTExtRec
[12];

336 
uöt8_t
 
	mdrCTFlSize
[4];

337 
uöt8_t
 
	mdrCTExtRec
[12];

338 } 
	thfs_mdb
;

346 
	#HFS_BT_NODE_TYPE_LEAF
 -1

	)

347 
	#HFS_BT_NODE_TYPE_IDX
 0

	)

348 
	#HFS_BT_NODE_TYPE_HEAD
 1

	)

349 
	#HFS_BT_NODE_TYPE_MAP
 2

	)

353 
uöt8_t
 
	mÊök
[4];

354 
uöt8_t
 
	mblök
[4];

355 
öt8_t
 
	mty≥
;

356 
uöt8_t
 
	mheight
;

357 
uöt8_t
 
	mnum_ªc
[2];

358 
uöt8_t
 
	mªs
[2];

359 } 
	thfs_båì_node
;

365 
	#HFS_BT_HEAD_TYPE_CNTL
 0

366 
	#HFS_BT_HEAD_TYPE_USER
 128

367 
	#HFS_BT_HEAD_TYPE_RSV
 255

	)

370 
	#HFS_BT_HEAD_COMP_SENS
 0xBC

371 
	#HFS_BT_HEAD_COMP_INSENS
 0xC7

372 

	)

374 
	#HFS_BT_HEAD_ATTR_BIGKEYS
 0x00000002

	)

375 
	#HFS_BT_HEAD_ATTR_VARIDXKEYS
 0x00000004

	)

379 
uöt8_t
 
	mdïth
[2];

380 
uöt8_t
 
	mroŸNode
[4];

381 
uöt8_t
 
	mÀafRec‹ds
[4];

382 
uöt8_t
 
	mfú°LófNode
[4];

383 
uöt8_t
 
	mœ°LófNode
[4];

384 
uöt8_t
 
	mnodesize
[2];

385 
uöt8_t
 
	mmaxKeyLí
[2];

386 
uöt8_t
 
	mtŸÆNodes
[4];

387 
uöt8_t
 
	m‰ìNodes
[4];

388 
uöt8_t
 
	mªs
[2];

389 
uöt8_t
 
	m˛umpSize
[4];

390 
uöt8_t
 
	mty≥
;

391 
uöt8_t
 
	mcompTy≥
;

392 
uöt8_t
 
	m©å
[4];

393 
uöt8_t
 
	mªs2
[64];

394 } 
	thfs_båì_hódî_ªc‹d
;

398 
uöt8_t
 
	mkey_Àn
[2];

399 
uöt8_t
 
	m∑ª¡_˙id
[4];

400 
hfs_uni_°r
 
	m«me
;

401 } 
	thfs_båì_key_ˇt
;

405 
	#HFS_EXT_KEY_TYPE_DATA
 0x00

406 
	#HFS_EXT_KEY_TYPE_RSRC
 0xFF

407 

	)

409 
uöt8_t
 
	mkey_Àn
[2];

410 
uöt8_t
 
	mf‹k_ty≥
;

411 
uöt8_t
 
	m∑d
;

412 
uöt8_t
 
	mfûe_id
[4];

413 
uöt8_t
 
	m°¨t_block
[4];

414 } 
	thfs_båì_key_ext
;

418 
uöt8_t
 
	mchûdNode
[4];

419 } 
	thfs_båì_ödex_ªc‹d
;

425 
öt8_t
 
	mv
[2];

426 
öt8_t
 
	mh
[2];

427 } 
	thfs_poöt
;

429 
	#HFS_FINDER_FLAG_NAME_LOCKED
 0x1000

	)

430 
	#HFS_FINDER_FLAG_HAS_BUNDLE
 0x2000

	)

431 
	#HFS_FINDER_FLAG_IS_INVISIBLE
 0x4000

	)

432 
	#HFS_FINDER_FLAG_IS_ALIAS
 0x8000

	)

436 
uöt8_t
 
	mfûe_ty≥
[4];

437 
uöt8_t
 
	mfûe_¸
[4];

438 
uöt8_t
 
	mÊags
[2];

439 
hfs_poöt
 
	mloc
;

440 
uöt8_t
 
	mªs
[2];

441 } 
	thfs_fûeöfo
;

444 
uöt8_t
 
	mªs1
[8];

445 
uöt8_t
 
	mextÊags
[2];

446 
uöt8_t
 
	mªs2
[2];

447 
uöt8_t
 
	mfﬁdîid
[4];

448 } 
	thfs_exãndedfûeöfo
;

454 
	#HFS_FOLDER_RECORD
 0x0001

	)

455 
	#HFS_FILE_RECORD
 0X0002

	)

456 
	#HFS_FOLDER_THREAD
 0x0003

	)

457 
	#HFS_FILE_THREAD
 0x0004

	)

461 
uöt8_t
 
	mªc_ty≥
[2];

462 
uöt8_t
 
	mÊags
[2];

463 
uöt8_t
 
	mvÆí˚
[4];

464 
uöt8_t
 
	m˙id
[4];

465 
uöt8_t
 
	m¸time
[4];

466 
uöt8_t
 
	mcmtime
[4];

467 
uöt8_t
 
	mamtime
[4];

468 
uöt8_t
 
	m©ime
[4];

469 
uöt8_t
 
	mbkup_d©e
[4];

470 
hfs_ac˚ss_≥rm
 
	m≥rm
;

471 
hfs_fûeöfo
 
	mu_öfo
;

472 
hfs_exãndedfûeöfo
 
	mf_öfo
;

473 
uöt8_t
 
	mãxt_íc
[4];

474 
uöt8_t
 
	mªs2
[4];

475 } 
	thfs_fûe_fﬁd_°d
;

479 
hfs_fûe_fﬁd_°d
 
	m°d
;

480 } 
	thfs_fﬁdî
;

483 
	#HFS_FILE_FLAG_LOCKED
 0x0001

	)

484 
	#HFS_FILE_FLAG_THREAD
 0x0002

	)

487 
	#HFS_FILE_FLAG_ATTR
 0x0004

	)

488 
	#HFS_FILE_FLAG_ACL
 0x0008

	)

492 
hfs_fûe_fﬁd_°d
 
	m°d
;

493 
hfs_f‹k
 
	md©a
;

494 
hfs_f‹k
 
	mªsour˚
;

495 } 
	thfs_fûe
;

499 
uöt8_t
 
	mªc_ty≥
[2];

500 
uöt8_t
 
	mªs
[2];

501 
uöt8_t
 
	m∑ª¡_˙id
[4];

502 
hfs_uni_°r
 
	m«me
;

503 } 
	thfs_thªad
;

508 
hfs_fﬁdî
 
	mfﬁdî
;

509 
hfs_fûe
 
	mfûe
;

510 } 
	thfs_fûe_fﬁdî
;

513 
TSK_FS_INFO
 
	mfs_öfo
;

515 
hfs_∂us_vh
 *
	mfs
;

517 
	mis_ˇ£_£nsôive
;

519 
TSK_FS_FILE
 *
	mblockm≠_fûe
;

520 c⁄° 
TSK_FS_ATTR
 *
	mblockm≠_©å
;

521 
	mblockm≠_ˇche
[4096];

522 
TSK_OFF_T
 
	mblockm≠_ˇche_°¨t
;

523 
size_t
 
	mblockm≠_ˇche_Àn
;

525 
TSK_FS_FILE
 *
	mˇèlog_fûe
;

526 c⁄° 
TSK_FS_ATTR
 *
	mˇèlog_©å
;

527 
hfs_båì_hódî_ªc‹d
 
	mˇèlog_hódî
;

529 
TSK_FS_FILE
 *
	mexã¡s_fûe
;

530 c⁄° 
TSK_FS_ATTR
 *
	mexã¡s_©å
;

531 
hfs_båì_hódî_ªc‹d
 
	mexã¡s_hódî
;

533 
TSK_OFF_T
 
	mhfs_wøµî_off£t
;

534 } 
	tHFS_INFO
;

537 
hfs_fûe
 
	mˇt
;

538 
	mÊags
;

539 
TSK_INUM_T
 
	möum
;

540 
hfs_thªad
 
	mthªad
;

541 } 
	tHFS_ENTRY
;

547 
uöt8_t
 
	mÊags
[4];

548 
uöt8_t
 
	mdev_sig
[32];

549 
uöt8_t
 
	moffs
[8];

550 
uöt8_t
 
	msize
[8];

551 
uöt8_t
 
	mªs
[128];

552 } 
	thfs_jou∫_sb
;

557 
uöt8_t
 
hfs_checked_ªad_øndom
(
TSK_FS_INFO
 *, *, 
size_t
,

558 
TSK_OFF_T
);

559 
uöt8_t
 
hfs_uni2ascii
(
TSK_FS_INFO
 *, uint8_t *, , *, );

560 
hfs_unicode_com∑ª
(
HFS_INFO
 *, c⁄° 
hfs_uni_°r
 *,

561 c⁄° 
hfs_uni_°r
 *);

562 
uöt16_t
 
hfs_gë_idxkeyÀn
(
HFS_INFO
 * 
hfs
, uöt16_à
keyÀn
,

563 c⁄° 
hfs_båì_hódî_ªc‹d
 * 
hódî
);

566 
TSK_RETVAL_ENUM
 
hfs_dú_›í_mëa
(
TSK_FS_INFO
 *, 
TSK_FS_DIR
 **,

567 
TSK_INUM_T
);

568 
hfs_«me_cmp
(
TSK_FS_INFO
 *, const *, const *);

570 
uöt8_t
 
hfs_j›í
(
TSK_FS_INFO
 *, 
TSK_INUM_T
);

571 
uöt8_t
 
hfs_jblk_wÆk
(
TSK_FS_INFO
 *, 
TSK_DADDR_T
, TSK_DADDR_T, ,

572 
TSK_FS_JBLK_WALK_CB
, *);

573 
uöt8_t
 
hfs_jíåy_wÆk
(
TSK_FS_INFO
 *, , 
TSK_FS_JENTRY_WALK_CB
,

577 
	$uöt8_t
(*
	tTSK_HFS_BTREE_CB
Ë(
	tHFS_INFO
 *, 
	töt8_t
 
	tÀvñ_ty≥
,

578 c⁄° *
	tèrg_key
, c⁄° 
	thfs_båì_key_ˇt
 * 
	tcur_key
,

579 
	tTSK_OFF_T
 
	tkey_off
, *);

581 
	#HFS_BTREE_CB_IDX_LT
 1

582 
	#HFS_BTREE_CB_IDX_EQGT
 2

583 
	#HFS_BTREE_CB_LEAF_GO
 3

584 
	#HFS_BTREE_CB_LEAF_STOP
 4

585 
	#HFS_BTREE_CB_ERR
 5

	)

587 
uöt8_t
 
	`hfs_ˇt_åavî£
(
HFS_INFO
 * 
hfs
, c⁄° *
èrg_d©a
,

588 
TSK_HFS_BTREE_CB
 
a_cb
, *
±r
);

	@tsk3/fs/tsk_iso9660.h

71 #i‚de‡
_TSK_ISO9660_H


72 
	#_TSK_ISO9660_H


	)

75 
	#ISODCL
(
‰om
, 
to
Ë—ÿ- from + 1)

	)

80 
	#ISO9660_FIRSTINO
 0

	)

81 
	#ISO9660_ROOTINO
 0

	)

82 
	#ISO9660_FILE_CONTENT_LEN
 (
TSK_DADDR_T
)

	)

83 
	#ISO9660_SBOFF
 32768

	)

84 
	#ISO9660_SSIZE_B
 2048

	)

85 
	#ISO9660_MIN_BLOCK_SIZE
 512

	)

86 
	#ISO9660_MAX_BLOCK_SIZE
 2048

	)

87 
	#ISO9660_MAGIC
 "CD001"

	)

90 
	#ISO9660_BOOT_RECORD
 0

	)

91 
	#ISO9660_PRIM_VOL_DESC
 1

	)

92 
	#ISO9660_SUPP_VOL_DESC
 2

	)

93 
	#ISO9660_VOL_PART_DESC
 3

	)

94 
	#ISO9660_RESERVE_FLOOR
 4

	)

95 
	#ISO9660_RESERVE_CEIL
 254

	)

96 
	#ISO9660_VOL_DESC_SET_TERM
 255

	)

98 
	#ISO9660_MAXNAMLEN_STD
 128

99 
	#ISO9660_MAXNAMLEN_JOL
 128

100 
	#ISO9660_MAXNAMLEN
 (
ISO9660_MAXNAMLEN_JOL
 << 1)

101 

	)

103 
	#ISO9660_BIT_UR
 0x0010

	)

104 
	#ISO9660_BIT_UX
 0x0040

	)

105 
	#ISO9660_BIT_GR
 0x0100

	)

106 
	#ISO9660_BIT_GX
 0x0400

	)

107 
	#ISO9660_BIT_AR
 0x1000

	)

108 
	#ISO9660_BIT_AX
 0x4000

	)

111 
	#ISO9660_FLAG_HIDE
 0x01

	)

112 
	#ISO9660_FLAG_DIR
 0x02

	)

113 
	#ISO9660_FLAG_ASSOC
 0x04

	)

114 
	#ISO9660_FLAG_RECORD
 0X08

	)

115 
	#ISO9660_FLAG_PROT
 0X10

	)

116 
	#ISO9660_FLAG_RES1
 0X20

	)

117 
	#ISO9660_FLAG_RES2
 0x40

	)

118 
	#ISO9660_FLAG_MULT
 0X80

	)

121 
	#MODE_IFSOCK
 0140000

	)

122 
	#MODE_IFLNK
 0120000

	)

123 
	#MODE_IFDIR
 0040000

	)

124 
	#MODE_IFIFO
 0010000

	)

125 
	#MODE_IFBLK
 0060000

	)

126 
	#MODE_IFCHR
 0020000

	)

129 
	#ISO9660_TYPE_PVD
 0

	)

130 
	#ISO9660_TYPE_SVD
 1

	)

132 
	#ISO9660_CTYPE_ASCII
 0

	)

133 
	#ISO9660_CTYPE_UTF16
 1

	)

141 
uöt8_t
 
	myór
;

142 
uöt8_t
 
	mm⁄th
;

143 
uöt8_t
 
	mday
;

144 
uöt8_t
 
	mhour
;

145 
uöt8_t
 
	mmö
;

146 
uöt8_t
 
	m£c
;

147 
öt8_t
 
	mgmt_off
;

148 } 
	tªc‹d_d©a
;

152 
uöt8_t
 
	míåy_Àn
;

153 
uöt8_t
 
	mext_Àn
;

154 
uöt8_t
 
	mext_loc_l
[4];

155 
uöt8_t
 
	mext_loc_m
[4];

156 
uöt8_t
 
	md©a_Àn_l
[4];

157 
uöt8_t
 
	md©a_Àn_m
[4];

158 
ªc‹d_d©a
 
	mªc_time
;

159 
öt8_t
 
	mÊags
;

160 
uöt8_t
 
	munô_sz
;

161 
uöt8_t
 
	mg≠_sz
;

162 
uöt8_t
 
	m£q
[4];

163 
uöt8_t
 
	mfi_Àn
;

164 } 
	tiso9660_díåy
;

171 
uöt8_t
 
	mÀngth
;

172 
uöt8_t
 
	mext_Àn
;

173 
uöt8_t
 
	mext_loc_l
[4];

174 
uöt8_t
 
	mext_loc_m
[4];

175 
uöt8_t
 
	md©a_Àn_l
[4];

176 
uöt8_t
 
	md©a_Àn_m
[4];

177 
ªc‹d_d©a
 
	mªc
;

178 
öt8_t
 
	mÊags
;

179 
uöt8_t
 
	munô_sz
;

180 
uöt8_t
 
	mg≠_sz
;

181 
uöt8_t
 
	m£q
[4];

182 
uöt8_t
 
	mÀn
;

183 
	m«me
;

184 } 
	tiso9660_roŸ_díåy
;

191 
uöt8_t
 
	myór
[4];

192 
uöt8_t
 
	mm⁄th
[2];

193 
uöt8_t
 
	mday
[2];

194 
uöt8_t
 
	mhour
[2];

195 
uöt8_t
 
	mmö
[2];

196 
uöt8_t
 
	m£c
[2];

197 
uöt8_t
 
	mhun
[2];

198 
uöt8_t
 
	mgmt_off
;

199 } 
	td©e_time
;

204 
uöt8_t
 
	mty≥
;

205 
	mmagic
[
ISODCL
(2, 6)];

206 
	mvî
[
ISODCL
(7, 7)];

207 
	mx
[
ISODCL
(8, 2048)];

208 } 
	tiso9660_gvd
;

212 
	munu£d1
[
ISODCL
(1, 8)];

213 
	msys_id
[
ISODCL
(9, 40)];

214 
	mvﬁ_id
[
ISODCL
(41, 72)];

215 
	munu£d2
[
ISODCL
(73, 80)];

216 
uöt8_t
 
	mvs_sz_l
[
ISODCL
(81, 84)];

217 
uöt8_t
 
	mvs_sz_m
[
ISODCL
(85, 88)];

218 
	munu£d3
[
ISODCL
(89, 120)];

219 
uöt8_t
 
	mvﬁ_£t_l
[
ISODCL
(121, 122)];

220 
uöt8_t
 
	mvﬁ_£t_m
[
ISODCL
(123, 124)];

221 
uöt8_t
 
	mvﬁ_£q_l
[
ISODCL
(125, 126)];

222 
uöt8_t
 
	mvﬁ_£q_m
[
ISODCL
(127, 128)];

223 
uöt8_t
 
	mblk_sz_l
[
ISODCL
(129, 130)];

224 
uöt8_t
 
	mblk_sz_m
[
ISODCL
(131, 132)];

225 
uöt8_t
 
	m±_size_l
[
ISODCL
(133, 136)];

226 
uöt8_t
 
	m±_size_m
[
ISODCL
(137, 140)];

227 
uöt8_t
 
	m±_loc_l
[
ISODCL
(141, 144)];

228 
uöt8_t
 
	m±_›t_loc_l
[
ISODCL
(145, 148)];

229 
uöt8_t
 
	m±_loc_m
[
ISODCL
(149, 152)];

230 
uöt8_t
 
	m±_›t_loc_m
[
ISODCL
(153, 156)];

231 
iso9660_roŸ_díåy
 
	mdú_ªc
;

232 
	mvﬁ_£tid
[
ISODCL
(191, 318)];

233 
	mpub_id
[
ISODCL
(319, 446)];

234 
	m¥ï_id
[
ISODCL
(447, 574)];

235 
	m≠p_id
[
ISODCL
(575, 702)];

236 
	mc›y_id
[
ISODCL
(703, 739)];

237 
	mabs_id
[
ISODCL
(740, 776)];

238 
	mbib_id
[
ISODCL
(777, 813)];

239 
d©e_time
 
	mmake_d©e
;

240 
d©e_time
 
	mmod_d©e
;

241 
d©e_time
 
	mexp_d©e
;

242 
d©e_time
 
	mef_d©e
;

243 
uöt8_t
 
	mfs_vî
;

244 
	mªs
[
ISODCL
(883, 883)];

245 
	m≠p_u£
[
ISODCL
(884, 1395)];

246 
	mª£rv
[
ISODCL
(1396, 2048)];

247 } 
	tiso9660_pvd
;

251 
uöt8_t
 
	mÊags
[
ISODCL
(1, 8)];

252 
	msys_id
[
ISODCL
(9, 40)];

253 
	mvﬁ_id
[
ISODCL
(41, 72)];

254 
	munu£d2
[
ISODCL
(73, 80)];

255 
uöt8_t
 
	mvs_sz_l
[
ISODCL
(81, 84)];

256 
uöt8_t
 
	mvs_sz_m
[
ISODCL
(85, 88)];

257 
uöt8_t
 
	mesc_£q
[
ISODCL
(89, 120)];

258 
uöt8_t
 
	mvﬁ_£t_l
[
ISODCL
(121, 122)];

259 
uöt8_t
 
	mvﬁ_£t_m
[
ISODCL
(123, 124)];

260 
uöt8_t
 
	mvﬁ_£q_l
[
ISODCL
(125, 126)];

261 
uöt8_t
 
	mvﬁ_£q_m
[
ISODCL
(127, 128)];

262 
uöt8_t
 
	mblk_sz_l
[
ISODCL
(129, 130)];

263 
uöt8_t
 
	mblk_sz_m
[
ISODCL
(131, 132)];

264 
uöt8_t
 
	m±_size_l
[
ISODCL
(133, 136)];

265 
uöt8_t
 
	m±_size_m
[
ISODCL
(137, 140)];

266 
uöt8_t
 
	m±_loc_l
[
ISODCL
(141, 144)];

267 
uöt8_t
 
	m±_›t_loc_l
[
ISODCL
(145, 148)];

268 
uöt8_t
 
	m±_loc_m
[
ISODCL
(149, 152)];

269 
uöt8_t
 
	m±_›t_loc_m
[
ISODCL
(153, 156)];

270 
iso9660_roŸ_díåy
 
	mdú_ªc
;

271 
	mvﬁ_£tid
[
ISODCL
(191, 318)];

272 
	mpub_id
[
ISODCL
(319, 446)];

273 
	m¥ï_id
[
ISODCL
(447, 574)];

274 
	m≠p_id
[
ISODCL
(575, 702)];

275 
	mc›y_id
[
ISODCL
(703, 739)];

276 
	mabs_id
[
ISODCL
(740, 776)];

277 
	mbib_id
[
ISODCL
(777, 813)];

278 
d©e_time
 
	mmake_d©e
;

279 
d©e_time
 
	mmod_d©e
;

280 
d©e_time
 
	mexp_d©e
;

281 
d©e_time
 
	mef_d©e
;

282 
	mfs_vî
[
ISODCL
(882, 882)];

283 
	mªs
[
ISODCL
(883, 883)];

284 
	m≠p_u£
[
ISODCL
(884, 1395)];

285 
	mª£rv
[
ISODCL
(1396, 2048)];

286 } 
	tiso9660_svd
;

290 
	mboŸ_sys_id
[
ISODCL
(8, 39)];

291 
	mboŸ_id
[
ISODCL
(40, 71)];

292 
	msy°em_u£
[
ISODCL
(72, 2048)];

293 } 
	tiso_boŸªc
;

297 
uöt8_t
 
	mÀn_di
;

298 
uöt8_t
 
	m©å_Àn
;

299 
uöt8_t
 
	mext_loc
[4];

300 
uöt8_t
 
	m∑r_dú
[2];

301 } 
	t∑th_èbÀ_ªc
;

305 
uöt8_t
 
	muid
[
ISODCL
(1, 4)];

306 
uöt8_t
 
	mgid
[
ISODCL
(5, 8)];

307 
uöt8_t
 
	mmode
[
ISODCL
(9, 10)];

308 
uöt8_t
 
	m¸e
[
ISODCL
(11, 27)];

309 
uöt8_t
 
	mmod
[
ISODCL
(28, 44)];

310 
uöt8_t
 
	mexp
[
ISODCL
(45, 61)];

311 
uöt8_t
 
	meff
[
ISODCL
(62, 78)];

312 
uöt8_t
 
	mfmt
[
ISODCL
(79, 79)];

313 
uöt8_t
 
	m©å
[
ISODCL
(80, 80)];

314 
uöt8_t
 
	mÀn
[
ISODCL
(81, 84)];

315 
uöt8_t
 
	msys_id
[
ISODCL
(85, 116)];

316 
uöt8_t
 
	muns
[
ISODCL
(117, 180)];

317 
uöt8_t
 
	me_vî
[
ISODCL
(181, 181)];

318 
uöt8_t
 
	mÀn_esc
[
ISODCL
(182, 182)];

319 } 
	text_©å_ªc
;

322 
	#ISO_EA_IRSYS
 0x0001

	)

323 
	#ISO_EA_IWSYS
 0x0002

	)

324 
	#ISO_EA_IXSYS
 0x0004

	)

325 
	#ISO_EA_IRUSR
 0x0010

	)

326 
	#ISO_EA_IWUSR
 0x0020

	)

327 
	#ISO_EA_IXUSR
 0x0040

	)

328 
	#ISO_EA_IRGRP
 0x0100

	)

329 
	#ISO_EA_IWGRP
 0x0200

	)

330 
	#ISO_EA_IXGRP
 0x0400

	)

331 
	#ISO_EA_IROTH
 0x1000

	)

332 
	#ISO_EA_IWOTH
 0x2000

	)

333 
	#ISO_EA_IXOTH
 0x4000

	)

337 
	siso9660_pvd_node
 {

338 
iso9660_pvd
 
	mpvd
;

339 
iso9660_pvd_node
 *
	m√xt
;

340 } 
	tiso9660_pvd_node
;

343 
	siso9660_svd_node
 {

344 
iso9660_svd
 
	msvd
;

345 
iso9660_svd_node
 *
	m√xt
;

346 } 
	tiso9660_svd_node
;

350 
TSK_UID_T
 
	muid
 ;

351 
TSK_GID_T
 
	mgid
;

352 
uöt16_t
 
	mmode
;

353 
uöt32_t
 
	m∆ök
;

354 
	m‚
[
ISO9660_MAXNAMLEN_STD
];

355 } 
	trockridge_ext
;

361 
iso9660_díåy
 
	mdr
;

362 
ext_©å_ªc
 *
	mó
;

363 
	m‚
[
ISO9660_MAXNAMLEN
 + 1];

364 
rockridge_ext
 *
	mº
;

365 
	mvîsi⁄
;

366 
uöt8_t
 
	mis_‹ph™
;

367 
TSK_OFF_T
 
	msu•_off
;

368 
TSK_OFF_T
 
	msu•_Àn
;

369 } 
	tiso9660_öode
;

372 
	siso9660_öode_node
 {

373 
iso9660_öode
 
	möode
;

374 
TSK_OFF_T
 
	moff£t
;

375 
TSK_OFF_T
 
	mdíåy_off£t
;

376 
TSK_INUM_T
 
	möum
;

377 
	msize
;

378 
	mó_size
;

379 
iso9660_öode_node
 *
	m√xt
;

380 } 
	tiso9660_öode_node
;

384 
TSK_FS_INFO
 
	mfs_öfo
;

385 
TSK_INUM_T
 
	mdöum
;

386 
iso9660_öode
 *
	mdöode
;

387 
uöt32_t
 
	m∑th_èb_addr
;

388 
uöt32_t
 
	mroŸ_addr
;

389 
iso9660_pvd_node
 *
	mpvd
;

390 
iso9660_svd_node
 *
	msvd
;

391 
iso9660_öode_node
 *
	mö_li°
;

392 
uöt8_t
 
	mº_found
;

393 } 
	tISO_INFO
;

395 
TSK_RETVAL_ENUM
 
iso9660_dú_›í_mëa
(
TSK_FS_INFO
 * 
a_fs
,

396 
TSK_FS_DIR
 ** 
a_fs_dú
, 
TSK_INUM_T
 
a_addr
);

398 
uöt8_t
 
iso9660_döode_lﬂd
(
ISO_INFO
 * 
iso
, 
TSK_INUM_T
 
öum
);

400 
iso9660_«me_cmp
(
TSK_FS_INFO
 *, const *, const *);

410 
	msig
[2];

411 
uöt8_t
 
	mÀn
;

412 
	mvî
;

413 } 
	tiso9660_su•_hód
;

420 
	msig
[2];

421 
uöt8_t
 
	mÀn
;

422 
	mvî
;

423 
uöt8_t
 
	mblk_l
[4];

424 
uöt8_t
 
	mblk_m
[4];

425 
uöt8_t
 
	moff£t_l
[4];

426 
uöt8_t
 
	moff£t_m
[4];

427 
uöt8_t
 
	m˚Àn_l
[4];

428 
uöt8_t
 
	m˚Àn_m
[4];

429 } 
	tiso9660_su•_˚
;

435 
	msig
[2];

436 
uöt8_t
 
	mÀn
;

437 
	mvî
;

438 
uöt8_t
 
	mchk
[2];

439 
uöt8_t
 
	mskù
;

440 } 
	tiso9660_su•_•
;

443 
	msig
[2];

444 
uöt8_t
 
	mÀn
;

445 
	mvî
;

446 
uöt8_t
 
	mÀn_id
;

447 
uöt8_t
 
	mÀn_des
;

448 
uöt8_t
 
	mÀn_§c
;

449 
uöt8_t
 
	mext_vî
;

450 
	mext_id
[1];

453 } 
	tiso9660_su•_î
;

458 
	msig
[
ISODCL
(1, 2)];

459 
uöt8_t
 
	mÀn
[
ISODCL
(3, 3)];

460 
uöt8_t
 
	mvî
[
ISODCL
(4, 4)];

461 
uöt8_t
 
	mfoo
[
ISODCL
(5, 5)];

462 } 
	tº_sys_u£
;

466 
	msig
[
ISODCL
(1, 2)];

467 
uöt8_t
 
	mÀn
;

468 
uöt8_t
 
	mvî
;

469 
uöt8_t
 
	mmode_l
[
ISODCL
(5, 8)];

470 
uöt8_t
 
	mmode_m
[
ISODCL
(9, 12)];

471 
uöt8_t
 
	mlöks_l
[
ISODCL
(13, 16)];

472 
uöt8_t
 
	mlöks_m
[
ISODCL
(17, 20)];

473 
uöt8_t
 
	muid_l
[
ISODCL
(21, 24)];

474 
uöt8_t
 
	muid_m
[
ISODCL
(25, 28)];

475 
uöt8_t
 
	mgid_l
[
ISODCL
(29, 32)];

476 
uöt8_t
 
	mgid_m
[
ISODCL
(23, 36)];

479 } 
	tiso9660_º_px_íåy
;

483 
	msig
[
ISODCL
(1, 2)];

484 
uöt8_t
 
	mÀn
;

485 
uöt8_t
 
	mvî
;

486 
uöt8_t
 
	mdev_h_l
[
ISODCL
(5, 8)];

487 
uöt8_t
 
	mdev_h_m
[
ISODCL
(9, 12)];

488 
uöt8_t
 
	mdev_l_l
[
ISODCL
(13, 16)];

489 
uöt8_t
 
	mdev_l_m
[
ISODCL
(17, 20)];

490 } 
	tiso9660_º_≤_íåy
;

494 
	msig
[
ISODCL
(1, 2)];

495 
uöt8_t
 
	mÀn
;

496 
uöt8_t
 
	mvî
;

497 
uöt8_t
 
	mÊags
;

498 } 
	tiso9660_º_¶_íåy
;

502 
	msig
[
ISODCL
(1, 2)];

503 
uöt8_t
 
	mÀn
;

504 
uöt8_t
 
	mvî
[
ISODCL
(4, 4)];

505 
uöt8_t
 
	mÊags
[
ISODCL
(5, 5)];

506 
	m«me
[1];

507 } 
	tiso9660_º_nm_íåy
;

511 
	msig
[
ISODCL
(1, 2)];

512 
uöt8_t
 
	mÀn
[
ISODCL
(3, 3)];

513 
uöt8_t
 
	mvî
[
ISODCL
(4, 4)];

514 
uöt8_t
 
	m∑r_loc
[
ISODCL
(5, 12)];

515 } 
	tiso9660_º_˛_íåy
;

519 
	msig
[
ISODCL
(1, 2)];

520 
uöt8_t
 
	mÀn
[
ISODCL
(3, 3)];

521 
uöt8_t
 
	mvî
[
ISODCL
(4, 4)];

522 } 
	tiso9660_º_ª_íåy
;

526 
	msig
[
ISODCL
(1, 2)];

527 
uöt8_t
 
	mÀn
[
ISODCL
(3, 3)];

528 
uöt8_t
 
	mvî
[
ISODCL
(4, 4)];

529 
uöt8_t
 
	mÊags
[
ISODCL
(5, 5)];

530 } 
	tiso9660_º_tf_íåy
;

534 
	msig
[
ISODCL
(1, 2)];

535 
uöt8_t
 
	mÀn
[
ISODCL
(3, 3)];

536 
uöt8_t
 
	mvî
[
ISODCL
(4, 4)];

537 
uöt8_t
 
	mvfs_h
[
ISODCL
(5, 12)];

538 
uöt8_t
 
	mvfs_l
[
ISODCL
(13, 20)];

539 
uöt8_t
 
	mdïth
[
ISODCL
(21, 21)];

540 } 
	tiso9660_º_sf_íåy
;

	@tsk3/fs/tsk_ntfs.h

18 #i‚de‡
_TSK_NTFS_H


19 
	#_TSK_NTFS_H


	)

21 #ifde‡
__˝lu•lus


28 
	#TSK_USE_SID
 1

	)

31 
	#NTFS_FS_MAGIC
 0xAA55

	)

33 
	#NTFS_MAXNAMLEN
 256

	)

34 
	#NTFS_MAXNAMLEN_UTF8
 4 * 
NTFS_MAXNAMLEN


	)

37 
	#NTFS_ROOTINO
 
NTFS_MFT_ROOT


	)

38 
	#NTFS_FIRSTINO
 0

	)

39 
	#NTFS_LAST_DEFAULT_INO
 16

	)

41 
	#NTFS_FILE_CONTENT_LEN
 0

	)

44 
	#NTFS_TOKEN_MASK
 1

	)

45 
	#NTFS_SYMBOL_TOKEN
 0

	)

46 
	#NTFS_TOKEN_LENGTH
 8

	)

48 
	#NTFS_MAX_UNCOMPRESSION_BUFFER_SIZE
 65536

	)

57 
uöt8_t
 
upd_vÆ
[2];

58 
uöt8_t
 
upd_£q
;

59 } 
	t¡fs_upd
;

68 
uöt8_t
 
f1
[3];

69 
€m«me
[8];

70 
uöt8_t
 
ssize
[2];

71 
uöt8_t
 
csize
;

72 
uöt8_t
 
f2
[26];

73 
uöt8_t
 
vﬁ_size_s
[8];

74 
uöt8_t
 
m·_˛u°
[8];

75 
uöt8_t
 
m·m_˛u°
[8];

76 
öt8_t
 
m·_rsize_c
;

77 
uöt8_t
 
f3
[3];

78 
öt8_t
 
idx_rsize_c
;

79 
uöt8_t
 
f4
[3];

80 
uöt8_t
 
£rül
[8];

81 
uöt8_t
 
f5
[430];

82 
uöt8_t
 
magic
[2];

83 } 
	t¡fs_sb
;

93 
uöt8_t
 
magic
[4];

94 
uöt8_t
 
upd_off
[2];

95 
uöt8_t
 
upd_˙t
[2];

96 
uöt8_t
 
l¢
[8];

97 
uöt8_t
 
£q
[2];

98 
uöt8_t
 
lök
[2];

99 
uöt8_t
 
©å_off
[2];

100 
uöt8_t
 
Êags
[2];

101 
uöt8_t
 
size
[4];

102 
uöt8_t
 
Æloc_size
[4];

103 
uöt8_t
 
ba£_ªf
[6];

104 
uöt8_t
 
ba£_£q
[2];

105 
uöt8_t
 
√xt_©åid
[2];

106 
uöt8_t
 
f1
[2];

107 
uöt8_t
 
íåy
[4];

108 } 
	t¡fs_m·
;

111 
	#NTFS_MFT_MAGIC
 0x454c4946

	)

112 
	#NTFS_MFT_MAGIC_BAAD
 0x44414142

	)

113 
	#NTFS_MFT_MAGIC_ZERO
 0x00000000

	)

116 
	#NTFS_MFT_INUSE
 0x0001

	)

117 
	#NTFS_MFT_DIR
 0x0002

	)

120 
	#NTFS_MFT_BASE
 0

	)

122 
	#NTFS_MFT_FILE_REC
 0x00ffffffffffffff

	)

125 
	#NTFS_MFT_MFT
 0x0

	)

126 
	#NTFS_MFT_MFTMIR
 0x1

	)

127 
	#NTFS_MFT_LOG
 0x2

	)

128 
	#NTFS_MFT_VOL
 0x3

	)

129 
	#NTFS_MFT_ATTR
 0x4

	)

130 
	#NTFS_MFT_ROOT
 0x5

	)

131 
	#NTFS_MFT_BMAP
 0x6

	)

132 
	#NTFS_MFT_BOOT
 0x7

	)

133 
	#NTFS_MFT_BAD
 0x8

	)

135 
	#NTFS_MFT_SECURE
 0x9

	)

136 
	#NTFS_MFT_UPCASE
 0xA

	)

144 
uöt8_t
 
ty≥
[4];

145 
uöt8_t
 
Àn
[4];

146 
uöt8_t
 
ªs
;

147 
uöt8_t
 
∆í
;

148 
uöt8_t
 
«me_off
[2];

149 
uöt8_t
 
Êags
[2];

150 
uöt8_t
 
id
[2];

155 
uöt8_t
 
ssize
[4];

156 
uöt8_t
 
soff
[2];

157 
uöt8_t
 
idxÊag
[2];

158 } 
r
;

161 
uöt8_t
 
°¨t_v˙
[8];

162 
uöt8_t
 
œ°_v˙
[8];

163 
uöt8_t
 
run_off
[2];

164 
uöt8_t
 
compusize
[2];

165 
uöt8_t
 
f1
[4];

166 
uöt8_t
 
Æí
[8];

167 
uöt8_t
 
ssize
[8];

168 
uöt8_t
 
öôsize
[8];

169 } 
ƒ
;

170 } 
c
;

171 } 
	t¡fs_©å
;

174 
	#NTFS_MFT_RES
 0

	)

175 
	#NTFS_MFT_NONRES
 1

	)

180 
	#NTFS_ATTR_FLAG_COMP
 0x0001

	)

181 
	#NTFS_ATTR_FLAG_ENC
 0x4000

	)

182 
	#NTFS_ATTR_FLAG_SPAR
 0x8000

	)

189 
	#NTFS_ATYPE_SI
 0x10

190 
	#NTFS_ATYPE_ATTRLIST
 0x20

191 
	#NTFS_ATYPE_FNAME
 0x30

192 
	#NTFS_ATYPE_VVER
 0x40

193 
	#NTFS_ATYPE_OBJID
 0x40

194 
	#NTFS_ATYPE_SEC
 0x50

195 
	#NTFS_ATYPE_VNAME
 0x60

196 
	#NTFS_ATYPE_VINFO
 0x70

197 
	#NTFS_ATYPE_DATA
 0x80

198 
	#NTFS_ATYPE_IDXROOT
 0x90

199 
	#NTFS_ATYPE_IDXALLOC
 0xA0

200 
	#NTFS_ATYPE_BITMAP
 0xB0

201 
	#NTFS_ATYPE_SYMLNK
 0xC0

202 
	#NTFS_ATYPE_REPARSE
 0xC0

203 
	#NTFS_ATYPE_EAINFO
 0xD0

204 
	#NTFS_ATYPE_EA
 0xE0

205 
	#NTFS_ATYPE_PROP
 0xF0

206 
	#NTFS_ATYPE_LOG
 0x100

207 

	)

215 
uöt8_t
 
∑r_ªf
[6];

216 
uöt8_t
 
∑r_£q
[2];

217 
uöt8_t
 
¸time
[8];

218 
uöt8_t
 
mtime
[8];

219 
uöt8_t
 
˘ime
[8];

220 
uöt8_t
 
©ime
[8];

221 
uöt8_t
 
Æloc_fsize
[8];

222 
uöt8_t
 
ªÆ_fsize
[8];

223 
uöt8_t
 
Êags
[8];

224 
uöt8_t
 
∆í
;

225 
uöt8_t
 
n•a˚
;

226 
uöt8_t
 
«me
;

227 } 
	t¡fs_©å_‚ame
;

230 
	#NTFS_FNAME_FLAGS_RO
 0x0000000000000001

	)

231 
	#NTFS_FNAME_FLAGS_HID
 0x0000000000000002

	)

232 
	#NTFS_FNAME_FLAGS_SYS
 0x0000000000000004

	)

233 
	#NTFS_FNAME_FLAGS_ARCH
 0x0000000000000020

	)

234 
	#NTFS_FNAME_FLAGS_DEV
 0x0000000000000040

	)

235 
	#NTFS_FNAME_FLAGS_NORM
 0x0000000000000080

	)

236 
	#NTFS_FNAME_FLAGS_TEMP
 0x0000000000000100

	)

237 
	#NTFS_FNAME_FLAGS_SPAR
 0x0000000000000200

	)

238 
	#NTFS_FNAME_FLAGS_REP
 0x0000000000000400

	)

239 
	#NTFS_FNAME_FLAGS_COMP
 0x0000000000000800

	)

240 
	#NTFS_FNAME_FLAGS_OFF
 0x0000000000001000

	)

241 
	#NTFS_FNAME_FLAGS_NOIDX
 0x0000000000002000

	)

242 
	#NTFS_FNAME_FLAGS_ENC
 0x0000000000004000

	)

243 
	#NTFS_FNAME_FLAGS_DIR
 0x0000000010000000

	)

244 
	#NTFS_FNAME_FLAGS_IDXVIEW
 0x0000000020000000

	)

248 
	#NTFS_FNAME_POSIX
 0

	)

249 
	#NTFS_FNAME_WIN32
 1

250 
	#NTFS_FNAME_DOS
 2

251 
	#NTFS_FNAME_WINDOS
 3

252 

	)

260 
uöt8_t
 
¸time
[8];

261 
uöt8_t
 
mtime
[8];

262 
uöt8_t
 
˘ime
[8];

263 
uöt8_t
 
©ime
[8];

264 
uöt8_t
 
dos
[4];

265 
uöt8_t
 
maxvî
[4];

266 
uöt8_t
 
vî
[4];

267 
uöt8_t
 
˛ass_id
[4];

268 
uöt8_t
 
own_id
[4];

269 
uöt8_t
 
£c_id
[4];

270 
uöt8_t
 
quŸa
[8];

271 
uöt8_t
 
u¢
[8];

272 } 
	t¡fs_©å_si
;

276 
	#NTFS_SI_RO
 0x0001

	)

277 
	#NTFS_SI_HID
 0x0002

	)

278 
	#NTFS_SI_SYS
 0x0004

	)

279 
	#NTFS_SI_ARCH
 0x0020

	)

280 
	#NTFS_SI_DEV
 0x0040

	)

281 
	#NTFS_SI_NORM
 0x0080

	)

282 
	#NTFS_SI_TEMP
 0x0100

	)

283 
	#NTFS_SI_SPAR
 0x0200

	)

284 
	#NTFS_SI_REP
 0x0400

	)

285 
	#NTFS_SI_COMP
 0x0800

	)

286 
	#NTFS_SI_OFF
 0x1000

	)

287 
	#NTFS_SI_NOIDX
 0x2000

	)

288 
	#NTFS_SI_ENC
 0x4000

	)

296 
uöt8_t
 
f1
[8];

297 
uöt8_t
 
maj_vî
;

298 
uöt8_t
 
mö_vî
;

299 
uöt8_t
 
Êags
[2];

300 
uöt8_t
 
f2
[4];

301 } 
	t¡fs_©å_vöfo
;

303 
	#NTFS_VINFO_DIRTY
 0x0001

304 
	#NTFS_VINFO_RESLOG
 0x0002

305 
	#NTFS_VINFO_UPGRAD
 0x0004

306 
	#NTFS_VINFO_MNTNT4
 0x0008

307 
	#NTFS_VINFO_DELUSN
 0x0010

308 
	#NTFS_VINFO_REPOBJ
 0x0020

309 
	#NTFS_VINFO_MODCHK
 0x8000

310 

	)

317 
	#NTFS_VINFO_NT
 0x21

	)

318 
	#NTFS_VINFO_2K
 0x03

	)

319 
	#NTFS_VINFO_XP
 0x13

	)

328 
uöt8_t
 
ty≥
[4];

329 
uöt8_t
 
Àn
[2];

330 
uöt8_t
 
∆í
;

331 
uöt8_t
 
f1
;

332 
uöt8_t
 
°¨t_v˙
[8];

333 
uöt8_t
 
fûe_ªf
[6];

334 
uöt8_t
 
£q
[2];

335 
uöt8_t
 
id
[2];

336 
uöt8_t
 
«me
;

337 } 
	t¡fs_©åli°
;

339 
	#NTFS_ATTRL_RES
 0

	)

355 
uöt8_t
 
Àn
;

356 
uöt8_t
 
buf
[32];

357 } 
	t¡fs_ru∆i°
;

359 
	#NTFS_RUNL_LENSZ
(
ru∆
) \

360 (
uöt8_t
)(
ru∆
->
Àn
 & 0x0f)

	)

362 
	#NTFS_RUNL_OFFSZ
(
ru∆
) \

363 (
uöt8_t
)((
ru∆
->
Àn
 & 0xf0Ë>> 4)

	)

379 
uöt8_t
 
begö_off
[4];

380 
uöt8_t
 
£qíd_off
[4];

381 
uöt8_t
 
bu„nd_off
[4];

382 
uöt8_t
 
Êags
[4];

383 } 
	t¡fs_idxñi°
;

386 
	#NTFS_IDXELIST_CHILD
 0x1

	)

392 
uöt8_t
 
ty≥
[4];

393 
uöt8_t
 
cﬁœti⁄_ruÀ
[4];

394 
uöt8_t
 
idxÆloc_size_b
[4];

395 
uöt8_t
 
idx_size_c
;

396 
uöt8_t
 
∑d
[3];

397 
¡fs_idxñi°
 
li°
;

398 } 
	t¡fs_idxroŸ
;

413 
uöt8_t
 
magic
[4];

414 
uöt8_t
 
upd_off
[2];

415 
uöt8_t
 
upd_˙t
[2];

416 
uöt8_t
 
l¢
[8];

417 
uöt8_t
 
idx_v˙
[8];

418 
¡fs_idxñi°
 
li°
;

419 } 
	t¡fs_idxªc
;

422 
	#NTFS_IDXREC_MAGIC
 0x58444e49

	)

429 
uöt8_t
 
fûe_ªf
[6];

430 
uöt8_t
 
£q_num
[2];

431 
uöt8_t
 
idxÀn
[2];

432 
uöt8_t
 
°æí
[2];

433 
uöt8_t
 
Êags
;

434 
uöt8_t
 
f1
[3];

435 
uöt8_t
 
°ªam
;

439 } 
	t¡fs_idxíåy
;

441 
	#NTFS_IDX_SUB
 0x01

	)

442 
	#NTFS_IDX_LAST
 0x02

	)

447 
	#GET_IDXENTRY_SUB
(
fs
, 
e
) \

448 (
	`tsk_gëu64
(
fs
->
ídün
, ()
e
 + 
	`tsk_gëu16
(fs->ídün,É->
idxÀn
Ë- 8))

	)

456 
œbñ
[128];

457 
uöt8_t
 
ty≥
[4];

458 
uöt8_t
 
di•
[4];

459 
uöt8_t
 
cﬁl
[4];

460 
uöt8_t
 
Êags
[4];

461 
uöt8_t
 
mösize
[8];

462 
uöt8_t
 
maxsize
[8];

463 } 
	t¡fs_©ådef
;

465 
	#NTFS_ATTRDEF_FLAGS_IDX
 0x02

	)

466 
	#NTFS_ATTRDEF_FLAGS_RES
 0x40

	)

467 
	#NTFS_ATTRDEF_FLAGS_NONRES
 0x80

	)

476 
uöt8_t
 
objid1
[8];

477 
uöt8_t
 
objid2
[8];

478 
uöt8_t
 
‹ig_vﬁid1
[8];

479 
uöt8_t
 
‹ig_vﬁid2
[8];

480 
uöt8_t
 
‹ig_objid1
[8];

481 
uöt8_t
 
‹ig_objid2
[8];

482 
uöt8_t
 
‹ig_domid1
[8];

483 
uöt8_t
 
‹ig_domid2
[8];

484 } 
	t¡fs_©å_objid
;

487 #i‡
TSK_USE_SID


494 
uöt8_t
 
ªvisi⁄
;

495 
uöt8_t
 
∑d
;

496 
uöt8_t
 
c⁄åﬁ
[2];

499 
uöt8_t
 
ow√r
[4];

503 
uöt8_t
 
group
[4];

507 
uöt8_t
 
ß˛
[4];

512 
uöt8_t
 
da˛
[4];

517 } 
	t¡fs_£lf_ªœtive_£curôy_des¸ùt‹
;

526 *
buf„r
;

527 
size_t
 
size
;

528 
size_t
 
u£d
;

529 } 
	tNTFS_SXX_BUFFER
;

538 
uöt8_t
 
ªvisi⁄
;

539 
uöt8_t
 
sub_auth_cou¡
;

540 
uöt8_t
 
idít_auth
[6];

541 
uöt32_t
 
sub_auth
[1];

542 } 
	t¡fs_sid
;

551 
uöt8_t
 
hash_£c_desc
[4];

552 
uöt8_t
 
£c_id
[4];

553 
uöt8_t
 
fûe_off
[8];

554 
uöt8_t
 
ít_size
[4];

555 
¡fs_£lf_ªœtive_£curôy_des¸ùt‹
 
£lf_ªl_£c_desc
;

556 } 
	t¡fs_©å_sds
;

565 
uöt8_t
 
d©a_off
[2];

566 
uöt8_t
 
size
[2];

567 
uöt8_t
 
∑d1
[4];

568 
uöt8_t
 
ít_size
[2];

569 
uöt8_t
 
key_size
[2];

570 
uöt8_t
 
Êags
[2];

571 
uöt8_t
 
∑d2
[2];

572 
uöt8_t
 
key_hash_£c_desc
[4];

573 
uöt8_t
 
key_£c_id
[4];

574 
uöt8_t
 
d©a_hash_£c_desc
[4];

575 
uöt8_t
 
d©a_£c_id
[4];

576 
uöt8_t
 
£c_desc_off
[8];

577 
uöt8_t
 
£c_desc_size
[4];

578 
uöt8_t
 
∑d3
[4];

579 } 
	t¡fs_©å_sdh
;

587 
uöt8_t
 
d©a_off
[2];

588 
uöt8_t
 
size
[2];

589 
uöt8_t
 
∑d1
[4];

590 
uöt8_t
 
ít_size
[2];

591 
uöt8_t
 
key_size
[2];

592 
uöt8_t
 
Êags
[2];

593 
uöt8_t
 
∑d2
[2];

594 
uöt8_t
 
key_£c_id
[4];

595 
uöt8_t
 
d©a_hash_£c_desc
[4];

596 
uöt8_t
 
d©a_£c_id
[4];

597 
uöt8_t
 
£c_desc_off
[8];

598 
uöt8_t
 
£c_desc_size
[4];

600 } 
	t¡fs_©å_sii
;

606 
NTFS_PAR_MAP
 
	tNTFS_PAR_MAP
;

607 
	sNTFS_PAR_MAP
 {

608 
TSK_INUM_T
 
∑r_addr
;

609 
NTFS_PAR_MAP
 *
√xt
;

610 
Æloc_˙t
;

611 
u£d_˙t
;

612 
TSK_INUM_T
 *
addrs
;

619 
TSK_FS_INFO
 
fs_öfo
;

620 
¡fs_sb
 *
fs
;

621 
uöt8_t
 
vî
;

622 
TSK_FS_FILE
 *
m·_fûe
;

623 c⁄° 
TSK_FS_ATTR
 *
m·_d©a
;

624 
¡fs_m·
 *
m·
;

625 
TSK_INUM_T
 
mnum
;

626 
uöt32_t
 
csize_b
;

627 
uöt16_t
 
ssize_b
;

628 
uöt32_t
 
m·_rsize_b
;

629 
uöt32_t
 
idx_rsize_b
;

630 
TSK_DADDR_T
 
roŸ_m·_addr
;

632 
uöt8_t
 
lﬂdög_the_MFT
;

634 
TSK_FS_ATTR_RUN
 *
bm≠
;

635 *
bm≠_buf
;

636 
TSK_DADDR_T
 
bm≠_buf_off
;

637 
¡fs_©ådef
 *
©ådef
;

638 
size_t
 
©ådef_Àn
;

639 
NTFS_PAR_MAP
 *
‹ph™_m≠
;

641 #i‡
TSK_USE_SID


642 
NTFS_SXX_BUFFER
 
sii_d©a
;

643 
NTFS_SXX_BUFFER
 
sds_d©a
;

645 } 
	tNTFS_INFO
;

648 
uöt32_t
 
¡2unixtime
(
uöt64_t
 
¡d©e
);

649 
uöt8_t
 
¡fs_©å«me_lookup
(
TSK_FS_INFO
 *, 
uöt16_t
, *,

651 
TSK_RETVAL_ENUM


652 
¡fs_dú_›í_mëa
(
TSK_FS_INFO
 * 
a_fs
, 
TSK_FS_DIR
 ** 
a_fs_dú
,

653 
TSK_INUM_T
 
a_addr
);

655 
¡fs_‹ph™_m≠_‰ì
(
NTFS_INFO
 * 
a_¡fs
);

657 
¡fs_«me_cmp
(
TSK_FS_INFO
 *, const *, const *);

659 #ifde‡
__˝lu•lus


	@tsk3/fs/unix_misc.c

16 
	~"tsk_fs_i.h
"

17 
	~"tsk_ffs.h
"

18 
	~"tsk_ext2fs.h
"

34 
TSK_OFF_T


35 
	$unix_make_d©a_run_dúe˘
(
TSK_FS_INFO
 * 
fs
, 
TSK_FS_ATTR
 * 
fs_©å
,

36 
TSK_DADDR_T
 * 
addrs
, 
size_t
 
addr_Àn
, 
TSK_OFF_T
 
Àngth
)

38 
TSK_DADDR_T
 
run_°¨t
 = 0;

39 
TSK_DADDR_T
 
run_Àn
 = 0;

40 
TSK_DADDR_T
 
blks_¥o˚s£d
 = 0;

41 
size_t
 
i
;

42 
size_t
 
fs_bÀn
;

44 i‡(
addr_Àn
 == 0) {

49 i‡(
	`TSK_FS_TYPE_ISFFS
(
fs
->
·y≥
)) {

50 
FFS_INFO
 *
ffs
 = (FFS_INFO *Ë
fs
;

51 
fs_bÀn
 = 
ffs
->
ffsbsize_f
;

54 
fs_bÀn
 = 1;

57 
run_°¨t
 = 
addrs
[0];

58 
run_Àn
 = 
fs_bÀn
;

63 
i
 = 0; i < 
addr_Àn
; i++) {

70 i‡((
i
 + 1 =
addr_Àn
) ||

71 ((
run_°¨t
 + 
run_Àn
 !
addrs
[
i
 + 1]) && (run_start != 0)) ||

72 ((
run_°¨t
 =0Ë&& (
addrs
[
i
 + 1] != 0))) {

74 
TSK_FS_ATTR_RUN
 *
d©a_run
;

77 
d©a_run
 = 
	`tsk_fs_©å_run_Æloc
();

78 i‡(
d©a_run
 =
NULL
)

81 
d©a_run
->
addr
 = 
run_°¨t
;

82 
d©a_run
->
Àn
 = 
run_Àn
;

84 i‡(
run_°¨t
 == 0)

85 
d©a_run
->
Êags
 = 
TSK_FS_ATTR_RUN_FLAG_SPARSE
;

88 
	`tsk_fs_©å_≠≥nd_run
(
fs
, 
fs_©å
, 
d©a_run
);

91 i‡(
i
 + 1 !
addr_Àn
)

92 
run_°¨t
 = 
addrs
[
i
 + 1];

93 
run_Àn
 = 0;

96 i‡(
blks_¥o˚s£d
 * 
fs
->
block_size
 > (
TSK_DADDR_T
Ë
Àngth
)

99 
run_Àn
 +
fs_bÀn
;

100 
blks_¥o˚s£d
 +
fs_bÀn
;

103  
blks_¥o˚s£d
 * 
fs
->
block_size
;

104 
	}
}

120 
TSK_OFF_T


121 
	$unix_make_d©a_run_ödúe˘
(
TSK_FS_INFO
 * 
fs
, 
TSK_FS_ATTR
 * 
fs_©å
,

122 
TSK_FS_ATTR
 * 
fs_©å_ödú
, *
buf
[], 
Àvñ
, 
TSK_DADDR_T
 
addr
,

123 
TSK_OFF_T
 
Àngth
)

125 *
my«me
 = "unix_make_data_run_indirect";

126 
size_t
 
addr_˙t
 = 0;

127 
TSK_DADDR_T
 *
myaddrs
 = (TSK_DADDR_T *Ë
buf
[
Àvñ
];

128 
TSK_OFF_T
 
Àngth_ªmaö
 = 
Àngth
;

129 
TSK_OFF_T
 
ªtvÆ
;

130 
size_t
 
fs_bufsize
;

131 
size_t
 
fs_bÀn
;

132 
TSK_FS_ATTR_RUN
 *
d©a_run
;

134 i‡(
tsk_vîbo£
)

135 
	`tsk_Ârötf
(
°dîr
, "%s:Üevñ %d block %" 
PRIuDADDR
 "\n", 
my«me
,

136 
Àvñ
, 
addr
);

139 i‡(
	`TSK_FS_TYPE_ISFFS
(
fs
->
·y≥
)) {

140 
FFS_INFO
 *
ffs
 = (FFS_INFO *Ë
fs
;

141 
fs_bÀn
 = 
ffs
->
ffsbsize_f
;

142 
fs_bufsize
 = 
ffs
->
ffsbsize_b
;

145 
fs_bÀn
 = 1;

146 
fs_bufsize
 = 
fs
->
block_size
;

149 i‡(
addr
 > 
fs
->
œ°_block
) {

150 
	`tsk_îr‹_ª£t
();

151 
tsk_î∫o
 = 
TSK_ERR_FS_INODE_COR
;

152 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

153 "unix: Indúe˘ blockáddªs†toÿœrge: %" 
PRIuDADDR
 "",

154 
addr
);

159 
d©a_run
 = 
	`tsk_fs_©å_run_Æloc
();

160 i‡(
d©a_run
 =
NULL
)

163 
d©a_run
->
addr
 =áddr;

164 
d©a_run
->
Àn
 = 
fs_bÀn
;

170 i‡(
addr
 == 0) {

171 
	`mem£t
(
buf
[0], 0, 
fs_bufsize
);

172 
d©a_run
->
Êags
 = 
TSK_FS_ATTR_RUN_FLAG_SPARSE
;

175 
ssize_t
 
˙t
;

177 
˙t
 = 
	`tsk_fs_ªad_block
(
fs
, 
addr
, 
buf
[0], 
fs_bufsize
);

178 i‡(
˙t
 !
fs_bufsize
) {

179 i‡(
˙t
 >= 0) {

180 
	`tsk_îr‹_ª£t
();

181 
tsk_î∫o
 = 
TSK_ERR_FS_READ
;

183 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

184 "unix_make_d©a_run_ödú: Block %" 
PRIuDADDR
, 
addr
);

190 
	`tsk_fs_©å_≠≥nd_run
(
fs
, 
fs_©å_ödú
, 
d©a_run
);

193 i‡((
fs
->
·y≥
 =
TSK_FS_TYPE_FFS1
)

194 || (
fs
->
·y≥
 =
TSK_FS_TYPE_FFS1B
)

195 || (
	`TSK_FS_TYPE_ISEXT
(
fs
->
·y≥
))) {

196 
size_t
 
n
;

197 
uöt32_t
 *
üddr
 = (uöt32_à*Ë
buf
[0];

198 
addr_˙t
 = 
fs_bufsize
 / (*
üddr
);

199 
n
 = 0;Ç < 
addr_˙t
;Ç++) {

200 
myaddrs
[
n
] = 
	`tsk_gëu32
(
fs
->
ídün
, (
uöt8_t
 *Ë& 
üddr
[n]);

203 i‡(
fs
->
·y≥
 =
TSK_FS_TYPE_FFS2
) {

204 
size_t
 
n
;

205 
uöt64_t
 *
üddr
 = (uöt64_à*Ë
buf
[0];

206 
addr_˙t
 = 
fs_bufsize
 / (*
üddr
);

207 
n
 = 0;Ç < 
addr_˙t
;Ç++) {

208 
myaddrs
[
n
] = 
	`tsk_gëu64
(
fs
->
ídün
, (
uöt8_t
 *Ë& 
üddr
[n]);

213 i‡(
Àvñ
 == 1) {

214 
ªtvÆ
 =

215 
	`unix_make_d©a_run_dúe˘
(
fs
, 
fs_©å
, 
myaddrs
, 
addr_˙t
,

216 
Àngth_ªmaö
);

217 i‡(
ªtvÆ
 != -1) {

218 
Àngth_ªmaö
 -
ªtvÆ
;

222 
size_t
 
i
;

223 
ªtvÆ
 = 0;

224 
i
 = 0; i < 
addr_˙t
 && 
ªtvÆ
 != -1; i++) {

225 
ªtvÆ
 =

226 
	`unix_make_d©a_run_ödúe˘
(
fs
, 
fs_©å
, 
fs_©å_ödú
,

227 
buf
, 
Àvñ
 - 1, 
myaddrs
[
i
], 
Àngth_ªmaö
);

228 i‡(
ªtvÆ
 == -1) {

232 
Àngth_ªmaö
 -
ªtvÆ
;

237 i‡(
ªtvÆ
 == -1)

240  
Àngth
 - 
Àngth_ªmaö
;

241 
	}
}

248 
uöt8_t


249 
	$tsk_fs_unix_make_d©a_run
(
TSK_FS_FILE
 * 
fs_fûe
)

251 
TSK_OFF_T
 
Àngth
 = 0;

252 
TSK_OFF_T
 
ªad_b
 = 0;

253 
TSK_FS_ATTR
 *
fs_©å
;

254 
TSK_FS_ATTR
 *
fs_©å_ödú
;

255 
TSK_FS_META
 *
fs_mëa
 = 
fs_fûe
->
mëa
;

256 
TSK_FS_INFO
 *
fs
 = 
fs_fûe
->
fs_öfo
;

259 
	`tsk_îr‹_ª£t
();

261 i‡(
tsk_vîbo£
)

262 
	`tsk_Ârötf
(
°dîr
,

263 "unix_make_d©a_run: Pro˚ssög fûê%" 
PRIuINUM
 "\n",

264 
fs_mëa
->
addr
);

267 i‡((
fs_mëa
->
©å
 !
NULL
)

268 && (
fs_mëa
->
©å_°©e
 =
TSK_FS_META_ATTR_STUDIED
)) {

271 i‡(
fs_mëa
->
©å_°©e
 =
TSK_FS_META_ATTR_ERROR
) {

275 i‡(
fs_mëa
->
©å
 !
NULL
) {

276 
	`tsk_fs_©åli°_m¨kunu£d
(
fs_mëa
->
©å
);

278 i‡(
fs_mëa
->
©å
 =
NULL
) {

279 
fs_mëa
->
©å
 = 
	`tsk_fs_©åli°_Æloc
();

282 i‡((
	`TSK_FS_TYPE_ISFFS
(
fs
->
·y≥
) == 0)

283 && (
	`TSK_FS_TYPE_ISEXT
(
fs
->
·y≥
) == 0)) {

284 
tsk_î∫o
 = 
TSK_ERR_FS_INODE_COR
;

285 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

287 
fs
->
·y≥
);

291 
Àngth
 = 
	`roundup
(
fs_mëa
->
size
, 
fs
->
block_size
);

293 i‡((
fs_©å
 =

294 
	`tsk_fs_©åli°_gë√w
(
fs_mëa
->
©å
,

295 
TSK_FS_ATTR_NONRES
)Ë=
NULL
) {

300 i‡(
	`tsk_fs_©å_£t_run
(
fs_fûe
, 
fs_©å
, 
NULL
, NULL,

301 
TSK_FS_ATTR_TYPE_DEFAULT
, 
TSK_FS_ATTR_ID_DEFAULT
,

302 
fs_mëa
->
size
, fs_mëa->size, 
	`roundup
(fs_meta->size,

303 
fs
->
block_size
), 0, 0)) {

307 
ªad_b
 =

308 
	`unix_make_d©a_run_dúe˘
(
fs
, 
fs_©å
,

309 (
TSK_DADDR_T
 *Ë
fs_mëa
->
c⁄ã¡_±r
, 12, 
Àngth
);

310 i‡(
ªad_b
 == -1) {

311 
fs_mëa
->
©å_°©e
 = 
TSK_FS_META_ATTR_ERROR
;

312 i‡(
fs_mëa
->
Êags
 & 
TSK_FS_META_FLAG_UNALLOC
)

313 
tsk_î∫o
 = 
TSK_ERR_FS_RECOVER
;

316 
Àngth
 -
ªad_b
;

319 i‡(
Àngth
 > 0) {

320 
Àvñ
;

321 **
buf
;

322 
size_t
 
fs_bufsize0
;

323 
size_t
 
fs_bufsize1
;

324 
size_t
 
±r•îblock
;

325 
numBlocks
 = 0;

326 
numSögIndúe˘
 = 0;

327 
numDblIndúe˘
 = 0;

328 
numTrùIndúe˘
 = 0;

334 i‡(
	`TSK_FS_TYPE_ISFFS
(
fs
->
·y≥
)) {

335 
FFS_INFO
 *
ffs
 = (FFS_INFO *Ë
fs
;

337 
fs_bufsize0
 = 
ffs
->
ffsbsize_b
;

338 i‡((
fs
->
·y≥
 =
TSK_FS_TYPE_FFS1
)

339 || (
fs
->
·y≥
 =
TSK_FS_TYPE_FFS1B
)) {

340 
±r•îblock
 = 
fs_bufsize0
 / 4;

343 
±r•îblock
 = 
fs_bufsize0
 / 8;

347 
fs_bufsize0
 = 
fs
->
block_size
;

348 
±r•îblock
 = 
fs_bufsize0
 / 4;

350 
fs_bufsize1
 = (
TSK_DADDR_T
Ë* 
±r•îblock
;

360 i‡((
buf
 = (**Ë
	`tsk_mÆloc
((*Ë* 4)Ë=
NULL
)

363 i‡((
buf
[0] = (*Ë
	`tsk_mÆloc
(
fs_bufsize0
)Ë=
NULL
) {

364 
	`‰ì
(
buf
);

368 i‡((
fs_©å_ödú
 =

369 
	`tsk_fs_©åli°_gë√w
(
fs_mëa
->
©å
,

370 
TSK_FS_ATTR_NONRES
)Ë=
NULL
) {

371 
	`‰ì
(
buf
);

376 
numBlocks
 =

377 (Ë(((
fs_mëa
->
size
 + 
fs_bufsize0
 - 1) / fs_bufsize0) - 12);

378 
numSögIndúe˘
 =

379 (Ë((
numBlocks
 + 
±r•îblock
 - 1) /Ötrsperblock);

380 
numDblIndúe˘
 = 0;

381 
numTrùIndúe˘
 = 0;

384 i‡(
numSögIndúe˘
 > 1) {

385 
numDblIndúe˘
 = ()

386 ((
numSögIndúe˘
 - 1 + 
±r•îblock
 - 1) /Ötrsperblock);

387 i‡(
numDblIndúe˘
 > 1) {

388 
numTrùIndúe˘
 = ()

389 ((
numDblIndúe˘
 - 1 + 
±r•îblock
 -

390 1Ë/ 
±r•îblock
);

395 i‡(
	`tsk_fs_©å_£t_run
(
fs_fûe
, 
fs_©å_ödú
, 
NULL
, NULL,

396 
TSK_FS_ATTR_TYPE_UNIX_INDIR
, 
TSK_FS_ATTR_ID_DEFAULT
,

397 
fs_bufsize0
 * (
numSögIndúe˘
 + 
numDblIndúe˘
 +

398 
numTrùIndúe˘
),

399 
fs_bufsize0
 * (
numSögIndúe˘
 + 
numDblIndúe˘
 +

400 
numTrùIndúe˘
),

401 
fs_bufsize0
 * (
numSögIndúe˘
 + 
numDblIndúe˘
 +

402 
numTrùIndúe˘
), 0, 0)) {

403 
	`‰ì
(
buf
);

407 
Àvñ
 = 1; 
Àngth
 > 0 &&Üevel < 4;Üevel++) {

408 
TSK_DADDR_T
 *
addr_±r
 = (TSK_DADDR_T *Ë
fs_mëa
->
c⁄ã¡_±r
;

410 i‡((
buf
[
Àvñ
] = (*Ë
	`tsk_mÆloc
(
fs_bufsize1
)Ë=
NULL
) {

411 
f
;

412 
f
 = 0; f < 
Àvñ
; f++)

413 
	`‰ì
(
buf
[
f
]);

414 
	`‰ì
(
buf
);

420 
ªad_b
 =

421 
	`unix_make_d©a_run_ödúe˘
(
fs
, 
fs_©å
, 
fs_©å_ödú
,

422 
buf
, 
Àvñ
, 
addr_±r
[12 +Üevñ - 1], 
Àngth
);

423 i‡(
ªad_b
 == -1)

425 
Àngth
 -
ªad_b
;

431 
Àvñ
 = 0;Üevel < 4;Üevel++) {

432 i‡(
buf
[
Àvñ
])

433 
	`‰ì
(
buf
[
Àvñ
]);

437 i‡(
ªad_b
 == -1) {

438 
fs_mëa
->
©å_°©e
 = 
TSK_FS_META_ATTR_ERROR
;

439 i‡(
fs_mëa
->
Êags
 & 
TSK_FS_META_FLAG_UNALLOC
)

440 
tsk_î∫o
 = 
TSK_ERR_FS_RECOVER
;

444 
fs_mëa
->
©å_°©e
 = 
TSK_FS_META_ATTR_STUDIED
;

447 
	}
}

450 
TSK_FS_ATTR_TYPE_ENUM


451 
	$tsk_fs_unix_gë_deÁu…_©å_ty≥
(c⁄° 
TSK_FS_FILE
 * 
a_fûe
)

453  
TSK_FS_ATTR_TYPE_DEFAULT
;

454 
	}
}

457 
	$tsk_fs_unix_«me_cmp
(
TSK_FS_INFO
 * 
a_fs_öfo
, c⁄° *
s1
,

458 c⁄° *
s2
)

460  
	`°rcmp
(
s1
, 
s2
);

461 
	}
}

	@tsk3/hashdb/hk_index.c

12 
	~"tsk_hashdb_i.h
"

26 
uöt8_t


27 
	$hk_ã°
(
FILE
 * 
hFûe
)

29 
buf
[
TSK_HDB_MAXLEN
];

30 
˙t
 = 0;

31 *
±r
;

33 
	`f£ek
(
hFûe
, 0, 
SEEK_SET
);

34 i‡(
NULL
 =
	`fgës
(
buf
, 
TSK_HDB_MAXLEN
, 
hFûe
))

37 i‡(
	`°æí
(
buf
Ë< 
TSK_HDB_HTYPE_MD5_LEN
)

40 
±r
 = 
buf
;

43 
NULL
 !(
±r
 = 
	`°rchr
(ptr, ','))) {

44 
˙t
++;

47 i‡(
˙t
 == 4) {

50 i‡((
	`°æí
(
±r
Ë< 2 + 
TSK_HDB_HTYPE_MD5_LEN
)

51 || (
±r
[1] != '"')

52 || (
±r
[2 + 
TSK_HDB_HTYPE_MD5_LEN
] != '"')) {

56 i‡((
	`isxdigô
((Ë
±r
[2]) == 0)

57 || (
	`isxdigô
((Ë
±r
[2 + 
TSK_HDB_HTYPE_MD5_LEN
 - 1]) ==

63 i‡(
NULL
 !
	`°rchr
(
±r
, ',')) {

73 i‡(
±r
[1] == '"') {

74 i‡(
NULL
 =(
±r
 = 
	`°rchr
(&ptr[2], '"'))) {

79 
±r
++;

83 
	}
}

100 
	$hk_∑r£_md5
(*
°r
, **
md5
, *
«me
, 
n_Àn
,

101 *
Ÿhî
, 
o_Àn
)

103 *
±r
 = 
°r
;

104 *
fûe
 = 
NULL
, *
dú
 = NULL, *
fûe_id
 = NULL, *
hash_id
 = NULL;

105 
˙t
 = 0;

107 i‡((
°r
 =
NULL
Ë|| (
	`°æí
(°rË< 
TSK_HDB_HTYPE_MD5_LEN
))

110 i‡((
md5
 =
NULL
Ë&& (
«me
 =NULLË&& (
Ÿhî
 == NULL))

129 i‡(
Ÿhî
 !
NULL
) {

130 
fûe_id
 = 
±r
;

133 
NULL
 !(
±r
 = 
	`°rchr
(ptr, ','))) {

134 
˙t
++;

137 i‡((
˙t
 =1Ë&& (
Ÿhî
 !
NULL
)) {

138 *
±r
 = '\0';

139 
±r
++;

140 
hash_id
 = 
±r
;

144 i‡(
˙t
 == 2) {

147 i‡(
Ÿhî
 !
NULL
) {

148 *
±r
 = '\0';

149 
	`¢¥ötf
(
Ÿhî
, 
o_Àn
, "Hash ID: %s File ID: %s",

150 
hash_id
, 
fûe_id
);

154 i‡((
«me
 =
NULL
Ë&& (
md5
 == NULL))

158 i‡(
«me
) {

159 i‡(
±r
[1] != '"')

162 
fûe
 = &
±r
[2];

168 i‡((
˙t
 =3Ë&& (
«me
 !
NULL
)) {

171 i‡(
±r
[-1] != '"')

174 
±r
[-1] = '\0';

177 i‡(
±r
[1] == '"') {

178 
dú
 = &
±r
[2];

181 
dú
 = 
NULL
;

185 i‡(
˙t
 == 4) {

188 i‡(
«me
 !
NULL
) {

189 
«me
[0] = '\0';

190 i‡(
dú
) {

192 i‡(
±r
[-1] != '"')

195 
±r
[-1] = '\0';

197 
	`°∫˝y
(
«me
, 
dú
, 
n_Àn
);

198 
	`°∫ˇt
(
«me
, "\\", 
n_Àn
);

200 i‡(
fûe
) {

201 
	`°∫ˇt
(
«me
, 
fûe
, 
n_Àn
);

208 i‡(
md5
 =
NULL
)

212 i‡((
	`°æí
(
±r
Ë< 2 + 
TSK_HDB_HTYPE_MD5_LEN
)

213 || (
±r
[1] != '"')

214 || (
±r
[2 + 
TSK_HDB_HTYPE_MD5_LEN
] != '"')) {

218 
±r
 = &ptr[2];

219 
±r
[
TSK_HDB_HTYPE_MD5_LEN
] = '\0';

221 *
md5
 = 
±r
;

224 i‡(
NULL
 !
	`°rchr
(
±r
, ',')) {

234 i‡(
±r
[1] == '"') {

235 i‡(
NULL
 =(
±r
 = 
	`°rchr
(&ptr[2], '"'))) {

240 
±r
++;

245 
	}
}

258 
uöt8_t


259 
	$hk_makeödex
(
TSK_HDB_INFO
 * 
hdb_öfo
, 
TSK_TCHAR
 * 
dbty≥
)

261 
i
;

262 
size_t
 
Àn
 = 0;

263 
buf
[
TSK_HDB_MAXLEN
];

264 *
hash
 = 
NULL
, 
phash
[
TSK_HDB_HTYPE_MD5_LEN
 + 1];

265 
TSK_OFF_T
 
off£t
 = 0;

266 
db_˙t
 = 0, 
idx_˙t
 = 0, 
ig_˙t
 = 0;

268 i‡(
	`tsk_hdb_idxöôülize
(
hdb_öfo
, 
dbty≥
)) {

269 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
, "hk_makeindex");

272 
	`f£ek
(
hdb_öfo
->
hDb
, 0, 
SEEK_SET
);

275 i‡(
tsk_vîbo£
)

276 
	`TFPRINTF
(
°dîr
, 
	`_TSK_T
("Extracting Data from Database (%s)\n"),

277 
hdb_öfo
->
db_‚ame
);

280 
	`mem£t
(
phash
, '0', 
TSK_HDB_HTYPE_MD5_LEN
 + 1);

283 
	`f£ek
(
hdb_öfo
->
hDb
, 0, 
SEEK_SET
);

284 
i
 = 0; 
NULL
 !
	`fgës
(
buf
, 
TSK_HDB_MAXLEN
, 
hdb_öfo
->
hDb
);

285 
off£t
 +(
TSK_OFF_T
Ë
Àn
, 
i
++) {

287 
Àn
 = 
	`°æí
(
buf
);

290 i‡(
	`hk_∑r£_md5
(
buf
, &
hash
, 
NULL
, 0, NULL, 0)) {

291 
ig_˙t
++;

294 
db_˙t
++;

298 i‡(
	`memcmp
(
hash
, 
phash
, 
TSK_HDB_HTYPE_MD5_LEN
) == 0) {

303 i‡(
	`tsk_hdb_idxaddíåy
(
hdb_öfo
, 
hash
, 
off£t
)) {

304 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
, "hk_makeindex");

308 
idx_˙t
++;

311 
	`°∫˝y
(
phash
, 
hash
, 
TSK_HDB_HTYPE_MD5_LEN
 + 1);

314 i‡(
idx_˙t
 > 0) {

315 i‡(
tsk_vîbo£
) {

316 
	`Ârötf
(
°dîr
, " VÆid D©aba£ E¡rõs: %d\n", 
db_˙t
);

317 
	`Ârötf
(
°dîr
,

319 
ig_˙t
);

320 
	`Ârötf
(
°dîr
, " Index File Entries %s: %d\n",

321 (
idx_˙t
 =
db_˙t
) ? "" : "(optimized)", idx_cnt);

325 i‡(
	`tsk_hdb_idxföÆize
(
hdb_öfo
)) {

326 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
, "hk_makeindex");

331 
	`tsk_îr‹_ª£t
();

332 
tsk_î∫o
 = 
TSK_ERR_HDB_CORRUPT
;

333 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

339 
	}
}

358 
uöt8_t


359 
	$hk_gëíåy
(
TSK_HDB_INFO
 * 
hdb_öfo
, c⁄° *
hash
, 
TSK_OFF_T
 
off£t
,

360 
TSK_HDB_FLAG_ENUM
 
Êags
,

361 
TSK_HDB_LOOKUP_FN
 
a˘i⁄
, *
cb_±r
)

363 
buf
[
TSK_HDB_MAXLEN
], 
«me
[TSK_HDB_MAXLEN], *
±r
 =

364 
NULL
, 
≤ame
[
TSK_HDB_MAXLEN
], 
Ÿhî
[TSK_HDB_MAXLEN];

365 
found
 = 0;

367 i‡(
tsk_vîbo£
)

368 
	`Ârötf
(
°dîr
,

369 "hk_gëíåy: Looku∞u∞hash %†© off£à%" 
PRIuOFF
 "\n",

370 
hash
, 
off£t
);

372 i‡(
	`°æí
(
hash
Ë!
TSK_HDB_HTYPE_MD5_LEN
) {

373 
	`tsk_îr‹_ª£t
();

374 
tsk_î∫o
 = 
TSK_ERR_HDB_ARG
;

375 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

376 "hk_gëíåy: InvÆid hash vÆue: %s", 
hash
);

380 
	`mem£t
(
≤ame
, '0', 
TSK_HDB_MAXLEN
);

384 
size_t
 
Àn
;

386 i‡(0 !
	`f£eko
(
hdb_öfo
->
hDb
, 
off£t
, 
SEEK_SET
)) {

387 
	`tsk_îr‹_ª£t
();

388 
tsk_î∫o
 = 
TSK_ERR_HDB_READDB
;

389 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

391 (Ë
off£t
);

395 i‡(
NULL
 ==

396 
	`fgës
(
hdb_öfo
->
idx_lbuf
, 
TSK_HDB_MAXLEN
, hdb_öfo->
hDb
)) {

397 i‡(
	`„of
(
hdb_öfo
->
hDb
)) {

400 
	`tsk_îr‹_ª£t
();

401 
tsk_î∫o
 = 
TSK_ERR_HDB_READDB
;

402 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

407 
Àn
 = 
	`°æí
(
buf
);

408 i‡(
Àn
 < 
TSK_HDB_HTYPE_MD5_LEN
) {

409 
	`tsk_îr‹_ª£t
();

410 
tsk_î∫o
 = 
TSK_ERR_HDB_CORRUPT
;

411 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

413 
buf
);

417 i‡(
	`hk_∑r£_md5
(
buf
, &
±r
, 
«me
, 
TSK_HDB_MAXLEN
,

418 ((
Êags
 & 
TSK_HDB_FLAG_EXT
Ë? 
Ÿhî
 : 
NULL
),

419 ((
Êags
 & 
TSK_HDB_FLAG_EXT
Ë? 
TSK_HDB_MAXLEN
 :

421 
	`tsk_îr‹_ª£t
();

422 
tsk_î∫o
 = 
TSK_ERR_HDB_CORRUPT
;

423 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

424 "hk_gëíåy: InvÆidÉ¡ry i¿d©aba£: %s", 
buf
);

429 i‡(0 !
	`°rˇ£cmp
(
±r
, 
hash
)) {

433 i‡(
	`°rcmp
(
«me
, 
≤ame
) != 0) {

434 
ªtvÆ
;

435 
ªtvÆ
 = 
	`a˘i⁄
(
hdb_öfo
, 
hash
, 
«me
, 
cb_±r
);

436 i‡(
ªtvÆ
 =
TSK_WALK_ERROR
) {

439 i‡(
ªtvÆ
 =
TSK_WALK_STOP
) {

447 
found
 = 1;

448 
	`°∫˝y
(
≤ame
, 
«me
, 
TSK_HDB_MAXLEN
);

452 
off£t
 +
Àn
;

455 i‡(
found
 == 0) {

456 
	`tsk_îr‹_ª£t
();

457 
tsk_î∫o
 = 
TSK_ERR_HDB_ARG
;

458 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

460 (Ë
off£t
);

465 
	}
}

	@tsk3/hashdb/idxonly_index.c

16 
	~"tsk_hashdb_i.h
"

18 
	#STR_EMPTY
 ""

	)

32 
uöt8_t


33 
	$idx⁄ly_makeödex
(
TSK_HDB_INFO
 * 
hdb_öfo
, 
TSK_TCHAR
 * 
dbty≥
)

35 
	`tsk_îr‹_ª£t
();

36 
tsk_î∫o
 = 
TSK_ERR_HDB_ARG
;

37 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

40 
	}
}

57 
uöt8_t


58 
	$idx⁄ly_gëíåy
(
TSK_HDB_INFO
 * 
hdb_öfo
, c⁄° *
hash
,

59 
TSK_OFF_T
 
off£t
, 
TSK_HDB_FLAG_ENUM
 
Êags
,

60 
TSK_HDB_LOOKUP_FN
 
a˘i⁄
, *
cb_±r
)

62 
	`tsk_îr‹_ª£t
();

63 
tsk_î∫o
 = 
TSK_ERR_HDB_ARG
;

64 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

67 
	}
}

	@tsk3/hashdb/md5sum_index.c

16 
	~"tsk_hashdb_i.h
"

19 
	#STR_EMPTY
 ""

	)

29 
uöt8_t


30 
	$md5sum_ã°
(
FILE
 * 
hFûe
)

32 
buf
[
TSK_HDB_MAXLEN
];

34 
	`f£eko
(
hFûe
, 0, 
SEEK_SET
);

35 i‡(
NULL
 =
	`fgës
(
buf
, 
TSK_HDB_MAXLEN
, 
hFûe
))

38 i‡(
	`°æí
(
buf
Ë< 
TSK_HDB_HTYPE_MD5_LEN
)

41 i‡((
buf
[0] == 'M') && (buf[1] == 'D') &&

42 (
buf
[2] == '5') && (buf[3] == ' ') && (buf[4] == '(')) {

46 i‡((
	`isxdigô
((Ë
buf
[0]))

47 && (
	`isxdigô
((Ë
buf
[
TSK_HDB_HTYPE_MD5_LEN
 - 1]))

48 && (
	`is•a˚
((Ë
buf
[
TSK_HDB_HTYPE_MD5_LEN
]))) {

53 
	}
}

67 
uöt8_t


68 
	$md5sum_∑r£_md5
(*
°r
, **
md5
, **
«me
)

70 *
±r
;

72 i‡(
	`°æí
(
°r
Ë< 
TSK_HDB_HTYPE_MD5_LEN
 + 1) {

73 
	`tsk_îr‹_ª£t
();

74 
tsk_î∫o
 = 
TSK_ERR_HDB_CORRUPT
;

75 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

76 "md5sum_∑r£_md5: Såög i†toÿsh‹t: %s", 
°r
);

81 i‡((
	`isxdigô
((Ë
°r
[0]))

82 && (
	`isxdigô
((Ë
°r
[
TSK_HDB_HTYPE_MD5_LEN
 - 1]))

83 && (
	`is•a˚
((Ë
°r
[
TSK_HDB_HTYPE_MD5_LEN
]))) {

84 
i
;

85 
size_t
 
Àn
 = 
	`°æí
(
°r
);

87 i‡(
md5
 !
NULL
) {

88 *
md5
 = &
°r
[0];

90 
i
 = 
TSK_HDB_HTYPE_MD5_LEN
;

91 
°r
[
i
++] = '\0';

94 i‡(
i
 >
Àn
) {

95 i‡(
«me
 !
NULL
) {

96 *
«me
 = 
STR_EMPTY
;

101 (
i
 < 
Àn
Ë&& ((
°r
[i] == ' ') || (str[i] == '\t'))) {

102 
i
++;

105 i‡((
Àn
 =
i
Ë|| (
°r
[i] == '\n')) {

109 i‡(
°r
[
i
] == '*') {

110 
i
++;

113 i‡(
«me
 !
NULL
) {

114 *
«me
 = &
°r
[
i
];

116 
±r
 = &
°r
[
i
];

118 i‡(
±r
[
	`°æí
(ptr) - 1] == '\n')

119 
±r
[
	`°æí
(ptr) - 1] = '\0';

123 i‡((
°r
[0] == 'M') && (str[1] == 'D') &&

124 (
°r
[2] == '5') && (str[3] == ' ') && (str[4] == '(')) {

126 
±r
 = &
°r
[5];

128 i‡(
«me
 !
NULL
) {

129 *
«me
 = 
±r
;

132 i‡(
NULL
 =(
±r
 = 
	`°rchr
(ptr, ')'))) {

133 
	`tsk_îr‹_ª£t
();

134 
tsk_î∫o
 = 
TSK_ERR_HDB_CORRUPT
;

135 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

136 "md5sum_∑r£_md5: Missög ) i¿«me: %s", 
°r
);

139 *
±r
 = '\0';

140 
±r
++;

143 i‡(4 + 
TSK_HDB_HTYPE_MD5_LEN
 > 
	`°æí
(
±r
)) {

144 
	`tsk_îr‹_ª£t
();

145 
tsk_î∫o
 = 
TSK_ERR_HDB_CORRUPT
;

146 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

147 "md5sum_∑r£_md5: InvÆid MD5 vÆue: %s", 
±r
);

151 i‡((*(
±r
) != ' ') || (*(++ptr) != '=') ||

152 (*(++
±r
Ë!' 'Ë|| (!
	`isxdigô
(() *(++ptr))) ||

153 (
±r
[
TSK_HDB_HTYPE_MD5_LEN
] != '\n')) {

154 
	`tsk_îr‹_ª£t
();

155 
tsk_î∫o
 = 
TSK_ERR_HDB_CORRUPT
;

156 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

157 "md5sum_∑r£_md5: InvÆid hash vÆuê%s", 
±r
);

161 *
md5
 = 
±r
;

162 
±r
[
TSK_HDB_HTYPE_MD5_LEN
] = '\0';

166 
	`tsk_îr‹_ª£t
();

167 
tsk_î∫o
 = 
TSK_ERR_HDB_CORRUPT
;

168 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

170 
°r
);

175 
	}
}

187 
uöt8_t


188 
	$md5sum_makeödex
(
TSK_HDB_INFO
 * 
hdb_öfo
, 
TSK_TCHAR
 * 
dbty≥
)

190 
i
;

192 
buf
[
TSK_HDB_MAXLEN
];

193 *
hash
 = 
NULL
, 
phash
[
TSK_HDB_HTYPE_MD5_LEN
 + 1];

194 
TSK_OFF_T
 
off£t
 = 0;

195 
db_˙t
 = 0, 
idx_˙t
 = 0, 
ig_˙t
 = 0;

196 
size_t
 
Àn
;

199 i‡(
	`tsk_hdb_idxöôülize
(
hdb_öfo
, 
dbty≥
)) {

200 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
, "md5sum_makeindex");

205 i‡(
tsk_vîbo£
)

206 
	`TFPRINTF
(
°dîr
, 
	`_TSK_T
("Extracting Data from Database (%s)\n"),

207 
hdb_öfo
->
db_‚ame
);

210 
	`mem£t
(
phash
, '0', 
TSK_HDB_HTYPE_MD5_LEN
 + 1);

213 
	`f£ek
(
hdb_öfo
->
hDb
, 0, 
SEEK_SET
);

214 
i
 = 0; 
NULL
 !
	`fgës
(
buf
, 
TSK_HDB_MAXLEN
, 
hdb_öfo
->
hDb
);

215 
off£t
 +(
TSK_OFF_T
Ë
Àn
, 
i
++) {

217 
Àn
 = 
	`°æí
(
buf
);

220 i‡(
	`md5sum_∑r£_md5
(
buf
, &
hash
, 
NULL
)) {

221 
ig_˙t
++;

224 
db_˙t
++;

227 i‡(
	`memcmp
(
hash
, 
phash
, 
TSK_HDB_HTYPE_MD5_LEN
) == 0) {

232 i‡(
	`tsk_hdb_idxaddíåy
(
hdb_öfo
, 
hash
, 
off£t
)) {

233 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
, "md5sum_makeindex");

237 
idx_˙t
++;

240 
	`°∫˝y
(
phash
, 
hash
, 
TSK_HDB_HTYPE_MD5_LEN
 + 1);

243 i‡(
idx_˙t
 > 0) {

245 i‡(
tsk_vîbo£
) {

246 
	`Ârötf
(
°dîr
, " VÆid D©aba£ E¡rõs: %d\n", 
db_˙t
);

247 
	`Ârötf
(
°dîr
,

249 
ig_˙t
);

250 
	`Ârötf
(
°dîr
, " Index File Entries %s: %d\n",

251 (
idx_˙t
 =
db_˙t
) ? "" : "(optimized)", idx_cnt);

255 i‡(
	`tsk_hdb_idxföÆize
(
hdb_öfo
)) {

256 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
, "md5sum_makeindex");

261 
	`tsk_îr‹_ª£t
();

262 
tsk_î∫o
 = 
TSK_ERR_HDB_CORRUPT
;

263 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

269 
	}
}

288 
uöt8_t


289 
	$md5sum_gëíåy
(
TSK_HDB_INFO
 * 
hdb_öfo
, c⁄° *
hash
,

290 
TSK_OFF_T
 
off£t
, 
TSK_HDB_FLAG_ENUM
 
Êags
,

291 
TSK_HDB_LOOKUP_FN
 
a˘i⁄
, *
cb_±r
)

293 
buf
[
TSK_HDB_MAXLEN
], *
«me
, *
±r
 = 
NULL
, 
≤ame
[TSK_HDB_MAXLEN];

294 
found
 = 0;

296 i‡(
tsk_vîbo£
)

297 
	`Ârötf
(
°dîr
,

298 "md5sum_gëíåy: Looku∞u∞hash %†© off£à%" 
PRIuOFF


299 "\n", 
hash
, 
off£t
);

301 i‡(
	`°æí
(
hash
Ë!
TSK_HDB_HTYPE_MD5_LEN
) {

302 
	`tsk_îr‹_ª£t
();

303 
tsk_î∫o
 = 
TSK_ERR_HDB_ARG
;

304 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

305 "md5sum_gëíåy: InvÆid hash vÆue: %s", 
hash
);

309 
	`mem£t
(
≤ame
, '0', 
TSK_HDB_MAXLEN
);

313 
size_t
 
Àn
;

315 i‡(0 !
	`f£eko
(
hdb_öfo
->
hDb
, 
off£t
, 
SEEK_SET
)) {

316 
	`tsk_îr‹_ª£t
();

317 
tsk_î∫o
 = 
TSK_ERR_HDB_READDB
;

318 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

320 (Ë
off£t
);

324 i‡(
NULL
 =
	`fgës
(
buf
, 
TSK_HDB_MAXLEN
, 
hdb_öfo
->
hDb
)) {

325 i‡(
	`„of
(
hdb_öfo
->
hDb
)) {

328 
	`tsk_îr‹_ª£t
();

329 
tsk_î∫o
 = 
TSK_ERR_HDB_READDB
;

330 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

335 
Àn
 = 
	`°æí
(
buf
);

336 i‡(
Àn
 < 
TSK_HDB_HTYPE_MD5_LEN
) {

337 
	`tsk_îr‹_ª£t
();

338 
tsk_î∫o
 = 
TSK_ERR_HDB_CORRUPT
;

339 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

341 
buf
);

345 i‡(
	`md5sum_∑r£_md5
(
buf
, &
±r
, &
«me
)) {

346 
	`tsk_îr‹_ª£t
();

347 
tsk_î∫o
 = 
TSK_ERR_HDB_CORRUPT
;

348 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

350 
buf
);

355 i‡(0 !
	`°rˇ£cmp
(
±r
, 
hash
)) {

359 i‡(
	`°rcmp
(
«me
, 
≤ame
) != 0) {

360 
ªtvÆ
;

361 
ªtvÆ
 = 
	`a˘i⁄
(
hdb_öfo
, 
hash
, 
«me
, 
cb_±r
);

362 i‡(
ªtvÆ
 =
TSK_WALK_ERROR
) {

365 i‡(
ªtvÆ
 =
TSK_WALK_STOP
) {

368 
found
 = 1;

369 
	`°∫˝y
(
≤ame
, 
«me
, 
TSK_HDB_MAXLEN
);

373 
off£t
 +
Àn
;

376 i‡(
found
 == 0) {

377 
	`tsk_îr‹_ª£t
();

378 
tsk_î∫o
 = 
TSK_ERR_HDB_ARG
;

379 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

381 (Ë
off£t
);

386 
	}
}

	@tsk3/hashdb/nsrl_index.c

11 
	~"tsk_hashdb_i.h
"

21 
	eTSK_HDB_NSRL_FORM_ENUM
 {

22 
	mTSK_HDB_NSRL_FORM1
 = (1 << 0),

23 
	mTSK_HDB_NSRL_FORM2
 = (1 << 1)

25 
TSK_HDB_NSRL_FORM_ENUM
 
	tTSK_HDB_NSRL_FORM_ENUM
;

36 
	$gë_f‹m©_vî
(*
°r
)

42 i‡((
°r
[9] == 'F') && (str[20] == 'F') && (str[24] == 'S') &&

43 (
°r
[31] == 'P') && (str[45] == 'O'))

44  
TSK_HDB_NSRL_FORM1
;

50 i‡((
°r
[9] == 'M') && (str[15] == 'C') && (str[23] == 'F') &&

51 (
°r
[34] == 'F') && (str[45] == 'P'))

52  
TSK_HDB_NSRL_FORM2
;

54 
	`tsk_îr‹_ª£t
();

55 
tsk_î∫o
 = 
TSK_ERR_HDB_CORRUPT
;

56 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

57 "n§l: Unknow¿hódî f‹m©: %s\n", 
°r
);

59 
	}
}

68 
uöt8_t


69 
	$n§l_ã°
(
FILE
 * 
hFûe
)

71 
buf
[
TSK_HDB_MAXLEN
];

73 
	`f£eko
(
hFûe
, 0, 
SEEK_SET
);

74 i‡(
NULL
 =
	`fgës
(
buf
, 
TSK_HDB_MAXLEN
, 
hFûe
))

77 i‡(
	`°æí
(
buf
) < 45)

81 i‡((
buf
[0] != '"') || (buf[1] != 'S') || (buf[2] != 'H') ||

82 (
buf
[3] != 'A') || (buf[4] != '-') || (buf[5] != '1') ||

83 (
buf
[6] != '"'))

86 i‡(-1 =
	`gë_f‹m©_vî
(
buf
))

90 
	}
}

99 
	#is_vÆid_n§l
(
x
) \

100 –(
	`°æí
((
x
)Ë> 
TSK_HDB_HTYPE_SHA1_LEN
 + 4) && \

101 ((
x
)[0] ='"'Ë&& ((x)[
TSK_HDB_HTYPE_SHA1_LEN
 + 1] == '"') && \

102 ((
x
)[
TSK_HDB_HTYPE_SHA1_LEN
 + 2] =','Ë&& ((x)[TSK_HDB_HTYPE_SHA1_LEN + 3] ='"'Ë)

	)

116 
uöt8_t


117 
	$n§l_∑r£_sha1
(*
°r
, **
sha1
, **
«me
, 
vî
)

119 *
±r
 = 
NULL
;

122 i‡(
	`is_vÆid_n§l
(
°r
) == 0) {

123 
	`tsk_îr‹_ª£t
();

124 
tsk_î∫o
 = 
TSK_ERR_HDB_CORRUPT
;

125 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

126 "n§l_∑r£_sha1: InvÆid såögÅÿ∑r£: %s", 
°r
);

131 i‡(
sha1
 !
NULL
) {

133 
±r
 = &
°r
[1];

134 
±r
[
TSK_HDB_HTYPE_SHA1_LEN
] = '\0';

137 i‡(
NULL
 !
	`°rchr
(
±r
, ',')) {

138 
	`tsk_îr‹_ª£t
();

139 
tsk_î∫o
 = 
TSK_ERR_HDB_CORRUPT
;

140 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

142 
±r
);

147 *
sha1
 = 
±r
;

151 i‡(
«me
 !
NULL
) {

152 i‡(
vî
 =
TSK_HDB_NSRL_FORM1
) {

154 
±r
 = &
°r
[
TSK_HDB_HTYPE_SHA1_LEN
 + 4];

155 *
«me
 = 
±r
;

157 i‡(
NULL
 =(
±r
 = 
	`°rchr
(ptr, ','))) {

158 
	`tsk_îr‹_ª£t
();

159 
tsk_î∫o
 = 
TSK_ERR_HDB_CORRUPT
;

160 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

162 
±r
);

167 
±r
[-1] = '\0';

169 i‡(
vî
 =
TSK_HDB_NSRL_FORM2
) {

171 
±r
 =

172 &
°r
[1 + 
TSK_HDB_HTYPE_SHA1_LEN
 + 3 +

173 
TSK_HDB_HTYPE_MD5_LEN
 + 3 + 
TSK_HDB_HTYPE_CRC32_LEN
 +

175 *
«me
 = 
±r
;

177 i‡(
NULL
 =(
±r
 = 
	`°rchr
(ptr, ','))) {

178 
	`tsk_îr‹_ª£t
();

179 
tsk_î∫o
 = 
TSK_ERR_HDB_CORRUPT
;

180 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

182 
±r
);

187 
±r
[-1] = '\0';

192 
	}
}

205 
uöt8_t


206 
	$n§l_∑r£_md5
(*
°r
, **
md5
, **
«me
, 
vî
)

208 *
±r
 = 
NULL
;

209 
˙t
 = 0;

212 i‡(
	`is_vÆid_n§l
(
°r
) == 0) {

213 
	`tsk_îr‹_ª£t
();

214 
tsk_î∫o
 = 
TSK_ERR_HDB_CORRUPT
;

215 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

216 "n§l_∑r£_md5: InvÆid såögÅÿ∑r£: %s", 
°r
);

220 i‡((
md5
 =
NULL
Ë&& (
«me
 == NULL))

223 i‡(
vî
 =
TSK_HDB_NSRL_FORM1
) {

224 
±r
 = 
°r
;

235 
˙t
 = 0;

236 
NULL
 !(
±r
 = 
	`°rchr
(ptr, ','))) {

237 
˙t
++;

240 i‡((
˙t
 =1Ë&& (
«me
 !
NULL
)) {

241 *
«me
 = &
±r
[2];

246 i‡((
˙t
 =2Ë&& (
«me
 !
NULL
)) {

247 i‡(
±r
[-1] != '"') {

248 
	`tsk_îr‹_ª£t
();

249 
tsk_î∫o
 = 
TSK_ERR_HDB_CORRUPT
;

250 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

252 (*Ë
«me
);

256 
±r
[-1] = '\0';

258 i‡(
md5
 =
NULL
)

262 i‡((
˙t
 =6Ë&& (
md5
 !
NULL
)) {

264 i‡((
	`°æí
(
±r
Ë< 2 + 
TSK_HDB_HTYPE_MD5_LEN
)

265 || (
±r
[1] != '"')

266 || (
±r
[2 + 
TSK_HDB_HTYPE_MD5_LEN
] != '"')) {

267 
	`tsk_îr‹_ª£t
();

268 
tsk_î∫o
 = 
TSK_ERR_HDB_CORRUPT
;

269 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

270 "n§l_∑r£_md5: InvÆid MD5 vÆue: %s", 
±r
);

274 
±r
 = &ptr[2];

275 
±r
[
TSK_HDB_HTYPE_MD5_LEN
] = '\0';

277 *
md5
 = 
±r
;

280 i‡(
NULL
 !
	`°rchr
(
±r
, ',')) {

281 
	`tsk_îr‹_ª£t
();

282 
tsk_î∫o
 = 
TSK_ERR_HDB_CORRUPT
;

283 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

285 (*Ë
md5
);

295 i‡(
±r
[1] == '"') {

296 i‡(
NULL
 =(
±r
 = 
	`°rchr
(&ptr[2], '"'))) {

297 
	`tsk_îr‹_ª£t
();

298 
tsk_î∫o
 = 
TSK_ERR_HDB_CORRUPT
;

299 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

305 
±r
++;

309 i‡(
vî
 =
TSK_HDB_NSRL_FORM2
) {

311 i‡(
md5
 !
NULL
) {

313 
±r
 = &
°r
[1 + 
TSK_HDB_HTYPE_SHA1_LEN
 + 3];

314 
±r
[
TSK_HDB_HTYPE_MD5_LEN
] = '\0';

317 i‡(
NULL
 !
	`°rchr
(
±r
, ',')) {

318 
	`tsk_îr‹_ª£t
();

319 
tsk_î∫o
 = 
TSK_ERR_HDB_CORRUPT
;

320 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

321 "n§l_∑r£_md5: Comm®ö MD5 vÆue: %s", 
±r
);

324 *
md5
 = 
±r
;

328 i‡(
«me
 !
NULL
) {

330 
±r
 =

331 &
°r
[1 + 
TSK_HDB_HTYPE_SHA1_LEN
 + 3 +

332 
TSK_HDB_HTYPE_MD5_LEN
 + 3 + 
TSK_HDB_HTYPE_CRC32_LEN
 +

334 *
«me
 = 
±r
;

336 i‡(
NULL
 =(
±r
 = 
	`°rchr
(ptr, ','))) {

337 
	`tsk_îr‹_ª£t
();

338 
tsk_î∫o
 = 
TSK_ERR_HDB_CORRUPT
;

339 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

341 (*Ë
«me
);

346 
±r
 -= 1;

347 *
±r
 = '\0';

351 
	`tsk_îr‹_ª£t
();

352 
tsk_î∫o
 = 
TSK_ERR_HDB_ARG
;

353 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

354 "n§l_∑r£_md5: InvÆid vîsi⁄: %d\n", 
vî
);

356 
	}
}

371 
uöt8_t


372 
	$n§l_makeödex
(
TSK_HDB_INFO
 * 
hdb_öfo
, 
TSK_TCHAR
 * 
dbty≥
)

374 
size_t
 
i
, 
Àn
;

375 
buf
[
TSK_HDB_MAXLEN
];

376 *
hash
 = 
NULL
, 
phash
[
TSK_HDB_HTYPE_SHA1_LEN
 + 1];

377 
TSK_OFF_T
 
off£t
 = 0;

378 
vî
 = 0;

379 
db_˙t
 = 0, 
idx_˙t
 = 0, 
ig_˙t
 = 0;

381 i‡(
	`tsk_hdb_idxöôülize
(
hdb_öfo
, 
dbty≥
)) {

382 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
, "nsrl_makeindex");

387 i‡(
tsk_vîbo£
)

388 
	`TFPRINTF
(
°dîr
, 
	`_TSK_T
("Extracting Data from Database (%s)\n"),

389 
hdb_öfo
->
db_‚ame
);

392 
	`mem£t
(
phash
, '0', 
TSK_HDB_HTYPE_SHA1_LEN
 + 1);

395 
	`f£ek
(
hdb_öfo
->
hDb
, 0, 
SEEK_SET
);

396 
i
 = 0; 
NULL
 !
	`fgës
(
buf
, 
TSK_HDB_MAXLEN
, 
hdb_öfo
->
hDb
);

397 
off£t
 +
Àn
, 
i
++) {

399 
Àn
 = 
	`°æí
(
buf
);

402 i‡(
i
 == 0) {

403 i‡((
vî
 = 
	`gë_f‹m©_vî
(
buf
)) == -1) {

406 
ig_˙t
++;

411 i‡(
hdb_öfo
->
hash_ty≥
 & 
TSK_HDB_HTYPE_SHA1_ID
) {

412 i‡(
	`n§l_∑r£_sha1
(
buf
, &
hash
, 
NULL
, 
vî
)) {

413 
ig_˙t
++;

417 i‡(
hdb_öfo
->
hash_ty≥
 & 
TSK_HDB_HTYPE_MD5_ID
) {

418 i‡(
	`n§l_∑r£_md5
(
buf
, &
hash
, 
NULL
, 
vî
)) {

419 
ig_˙t
++;

424 
db_˙t
++;

427 i‡(
	`memcmp
(
hash
, 
phash
, 
hdb_öfo
->
hash_Àn
) == 0) {

432 i‡(
	`tsk_hdb_idxaddíåy
(
hdb_öfo
, 
hash
, 
off£t
)) {

433 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
, "nsrl_makeindex");

437 
idx_˙t
++;

440 
	`°∫˝y
(
phash
, 
hash
, 
hdb_öfo
->
hash_Àn
 + 1);

443 i‡(
idx_˙t
 > 0) {

444 i‡(
tsk_vîbo£
) {

445 
	`Ârötf
(
°dîr
, " VÆid D©aba£ E¡rõs: %d\n", 
db_˙t
);

446 
	`Ârötf
(
°dîr
,

448 
ig_˙t
);

449 
	`Ârötf
(
°dîr
, " Index File Entries %s: %d\n",

450 (
idx_˙t
 =
db_˙t
) ? "" : "(optimized)", idx_cnt);

454 i‡(
	`tsk_hdb_idxföÆize
(
hdb_öfo
)) {

455 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
, "nsrl_makeindex");

460 
	`tsk_îr‹_ª£t
();

461 
tsk_î∫o
 = 
TSK_ERR_HDB_CORRUPT
;

462 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

468 
	}
}

488 
uöt8_t


489 
	$n§l_gëíåy
(
TSK_HDB_INFO
 * 
hdb_öfo
, c⁄° *
hash
, 
TSK_OFF_T
 
off£t
,

490 
TSK_HDB_FLAG_ENUM
 
Êags
,

491 
TSK_HDB_LOOKUP_FN
 
a˘i⁄
, *
cb_±r
)

493 
buf
[
TSK_HDB_MAXLEN
], *
«me
, *
cur_hash
, 
≤ame
[TSK_HDB_MAXLEN];

494 
found
 = 0;

495 
vî
;

497 i‡(
tsk_vîbo£
)

498 
	`Ârötf
(
°dîr
,

499 "n§l_gëíåy: Looku∞u∞hash %†© off£à%" 
PRIuOFF


500 "\n", 
hash
, 
off£t
);

502 i‡((
hdb_öfo
->
hash_ty≥
 =
TSK_HDB_HTYPE_MD5_ID
)

503 && (
	`°æí
(
hash
Ë!
TSK_HDB_HTYPE_MD5_LEN
)) {

504 
	`tsk_îr‹_ª£t
();

505 
tsk_î∫o
 = 
TSK_ERR_HDB_ARG
;

506 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

508 
hash
);

511 i‡((
hdb_öfo
->
hash_ty≥
 =
TSK_HDB_HTYPE_SHA1_ID
)

512 && (
	`°æí
(
hash
Ë!
TSK_HDB_HTYPE_SHA1_LEN
)) {

513 
	`tsk_îr‹_ª£t
();

514 
tsk_î∫o
 = 
TSK_ERR_HDB_ARG
;

515 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

517 
hash
);

522 
	`f£eko
(
hdb_öfo
->
hDb
, 0, 
SEEK_SET
);

523 i‡(
NULL
 =
	`fgës
(
buf
, 
TSK_HDB_MAXLEN
, 
hdb_öfo
->
hDb
)) {

524 
	`tsk_îr‹_ª£t
();

525 
tsk_î∫o
 = 
TSK_ERR_HDB_READDB
;

526 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

531 i‡((
vî
 = 
	`gë_f‹m©_vî
(
buf
)) == -1) {

532 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
, "nsrl_getentry");

536 
	`mem£t
(
≤ame
, '0', 
TSK_HDB_MAXLEN
);

540 
size_t
 
Àn
;

542 i‡(0 !
	`f£eko
(
hdb_öfo
->
hDb
, 
off£t
, 
SEEK_SET
)) {

543 
	`tsk_îr‹_ª£t
();

544 
tsk_î∫o
 = 
TSK_ERR_HDB_READDB
;

545 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

547 (Ë
off£t
);

551 i‡(
NULL
 =
	`fgës
(
buf
, 
TSK_HDB_MAXLEN
, 
hdb_öfo
->
hDb
)) {

552 i‡(
	`„of
(
hdb_öfo
->
hDb
))

555 
	`tsk_îr‹_ª£t
();

556 
tsk_î∫o
 = 
TSK_ERR_HDB_READDB
;

557 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

562 
Àn
 = 
	`°æí
(
buf
);

563 i‡(
Àn
 < 
TSK_HDB_HTYPE_SHA1_LEN
 + 5) {

564 
	`tsk_îr‹_ª£t
();

565 
tsk_î∫o
 = 
TSK_ERR_HDB_CORRUPT
;

566 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

568 
buf
);

573 i‡(
hdb_öfo
->
hash_ty≥
 =
TSK_HDB_HTYPE_SHA1_ID
) {

574 i‡(
	`n§l_∑r£_sha1
(
buf
, &
cur_hash
, &
«me
, 
vî
)) {

575 
	`tsk_îr‹_ª£t
();

576 
tsk_î∫o
 = 
TSK_ERR_HDB_CORRUPT
;

577 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

579 
buf
);

583 i‡(
hdb_öfo
->
hash_ty≥
 =
TSK_HDB_HTYPE_MD5_ID
) {

584 i‡(
	`n§l_∑r£_md5
(
buf
, &
cur_hash
, &
«me
, 
vî
)) {

585 
	`tsk_îr‹_ª£t
();

586 
tsk_î∫o
 = 
TSK_ERR_HDB_CORRUPT
;

587 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

589 
buf
);

595 i‡(0 !
	`°rˇ£cmp
(
cur_hash
, 
hash
)) {

600 i‡(
	`°rcmp
(
«me
, 
≤ame
) != 0) {

601 
ªtvÆ
;

602 
ªtvÆ
 = 
	`a˘i⁄
(
hdb_öfo
, 
hash
, 
«me
, 
cb_±r
);

603 i‡(
ªtvÆ
 =
TSK_WALK_STOP
)

605 i‡(
ªtvÆ
 =
TSK_WALK_ERROR
)

608 
found
 = 1;

609 
	`°∫˝y
(
≤ame
, 
«me
, 
TSK_HDB_MAXLEN
);

613 
off£t
 +
Àn
;

616 i‡(
found
 == 0) {

617 
	`tsk_îr‹_ª£t
();

618 
tsk_î∫o
 = 
TSK_ERR_HDB_ARG
;

619 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

621 (Ë
off£t
);

626 
	}
}

	@tsk3/hashdb/tm_lookup.c

11 
	~"tsk_hashdb_i.h
"

28 
uöt8_t


29 
	$hdb_£tuphash
(
TSK_HDB_INFO
 * 
hdb_öfo
, 
uöt8_t
 
hty≥
)

31 
size_t
 
Êí
;

33 i‡(
hdb_öfo
->
hash_ty≥
 != 0) {

38 
Êí
 = 
	`TSTRLEN
(
hdb_öfo
->
db_‚ame
) + 32;

39 
hdb_öfo
->
idx_‚ame
 =

40 (
TSK_TCHAR
 *Ë
	`tsk_mÆloc
(
Êí
 * (TSK_TCHAR));

41 i‡(
hdb_öfo
->
idx_‚ame
 =
NULL
) {

46 
hty≥
) {

47 
TSK_HDB_HTYPE_MD5_ID
:

48 
hdb_öfo
->
hash_ty≥
 = 
hty≥
;

49 
hdb_öfo
->
hash_Àn
 = 
TSK_HDB_HTYPE_MD5_LEN
;

50 
hdb_öfo
->
idx_Œí
 = 
	`TSK_HDB_IDX_LEN
(
hty≥
);

51 
	`TSNPRINTF
(
hdb_öfo
->
idx_‚ame
, 
Êí
,

52 
	`_TSK_T
("%s-%"Ë
PRIcTSK
 _TSK_T(".idx"),

53 
hdb_öfo
->
db_‚ame
, 
TSK_HDB_HTYPE_MD5_STR
);

55 
TSK_HDB_HTYPE_SHA1_ID
:

56 
hdb_öfo
->
hash_ty≥
 = 
hty≥
;

57 
hdb_öfo
->
hash_Àn
 = 
TSK_HDB_HTYPE_SHA1_LEN
;

58 
hdb_öfo
->
idx_Œí
 = 
	`TSK_HDB_IDX_LEN
(
hty≥
);

59 
	`TSNPRINTF
(
hdb_öfo
->
idx_‚ame
, 
Êí
,

60 
	`_TSK_T
("%s-%"Ë
PRIcTSK
 _TSK_T(".idx"),

61 
hdb_öfo
->
db_‚ame
, 
TSK_HDB_HTYPE_SHA1_STR
);

65 
	`tsk_îr‹_ª£t
();

66 
tsk_î∫o
 = 
TSK_ERR_HDB_ARG
;

67 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

68 "hdb_£tuphash: InvÆid hashÅy≥á†¨gumít: %d", 
hty≥
);

70 
	}
}

83 
uöt8_t


84 
	$tsk_hdb_idxöôülize
(
TSK_HDB_INFO
 * 
hdb_öfo
, 
TSK_TCHAR
 * 
hty≥
)

86 
size_t
 
Êí
;

87 
dbtmp
[32];

88 
i
;

95 
i
 = 0; i < 31 && 
hty≥
[i] != '\0'; i++) {

96 
dbtmp
[
i
] = (Ë
hty≥
[i];

98 
dbtmp
[
i
] = '\0';

100 i‡(
	`°rcmp
(
dbtmp
, 
TSK_HDB_DBTYPE_NSRL_MD5_STR
) == 0) {

102 i‡(
hdb_öfo
->
db_ty≥
 !
TSK_HDB_DBTYPE_NSRL_ID
) {

103 
	`tsk_îr‹_ª£t
();

104 
tsk_î∫o
 = 
TSK_ERR_HDB_ARG
;

105 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

107 
hdb_öfo
->
db_ty≥
, 
TSK_HDB_DBTYPE_NSRL_ID
);

110 
	`hdb_£tuphash
(
hdb_öfo
, 
TSK_HDB_HTYPE_MD5_ID
);

112 i‡(
	`°rcmp
(
dbtmp
, 
TSK_HDB_DBTYPE_NSRL_SHA1_STR
) == 0) {

113 i‡(
hdb_öfo
->
db_ty≥
 !
TSK_HDB_DBTYPE_NSRL_ID
) {

114 
	`tsk_îr‹_ª£t
();

115 
tsk_î∫o
 = 
TSK_ERR_HDB_ARG
;

116 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

118 
hdb_öfo
->
db_ty≥
, 
TSK_HDB_DBTYPE_NSRL_ID
);

121 
	`hdb_£tuphash
(
hdb_öfo
, 
TSK_HDB_HTYPE_SHA1_ID
);

123 i‡(
	`°rcmp
(
dbtmp
, 
TSK_HDB_DBTYPE_MD5SUM_STR
) == 0) {

124 i‡(
hdb_öfo
->
db_ty≥
 !
TSK_HDB_DBTYPE_MD5SUM_ID
) {

125 
	`tsk_îr‹_ª£t
();

126 
tsk_î∫o
 = 
TSK_ERR_HDB_ARG
;

127 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

129 
hdb_öfo
->
db_ty≥
, 
TSK_HDB_DBTYPE_MD5SUM_ID
);

132 
	`hdb_£tuphash
(
hdb_öfo
, 
TSK_HDB_HTYPE_MD5_ID
);

134 i‡(
	`°rcmp
(
dbtmp
, 
TSK_HDB_DBTYPE_HK_STR
) == 0) {

135 i‡(
hdb_öfo
->
db_ty≥
 !
TSK_HDB_DBTYPE_HK_ID
) {

136 
	`tsk_îr‹_ª£t
();

137 
tsk_î∫o
 = 
TSK_ERR_HDB_ARG
;

138 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

140 
hdb_öfo
->
db_ty≥
, 
TSK_HDB_DBTYPE_HK_ID
);

143 
	`hdb_£tuphash
(
hdb_öfo
, 
TSK_HDB_HTYPE_MD5_ID
);

146 
	`tsk_îr‹_ª£t
();

147 
tsk_î∫o
 = 
TSK_ERR_HDB_ARG
;

148 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

150 
dbtmp
);

155 i‡(
	`hdb_£tuphash
(
hdb_öfo
, hdb_öfo->
hash_ty≥
)) {

160 
Êí
 = 
	`TSTRLEN
(
hdb_öfo
->
db_‚ame
) + 32;

161 
hdb_öfo
->
uns_‚ame
 =

162 (
TSK_TCHAR
 *Ë
	`tsk_mÆloc
(
Êí
 * (TSK_TCHAR));

163 i‡(
hdb_öfo
->
uns_‚ame
 =
NULL
) {

166 
	`TSNPRINTF
(
hdb_öfo
->
uns_‚ame
, 
Êí
,

167 
	`_TSK_T
("%s-%"Ë
PRIcTSK
 _TSK_T("-ns.idx"), 
hdb_öfo
->
db_‚ame
,

168 
	`TSK_HDB_HTYPE_STR
(
hdb_öfo
->
hash_ty≥
));

172 #ifde‡
TSK_WIN32


174 
HANDLE
 
hWö
;

176 i‡((
hWö
 = 
	`Cª©eFûe
(
hdb_öfo
->
uns_‚ame
, 
GENERIC_WRITE
,

177 0, 0, 
CREATE_ALWAYS
, 0, 0)) ==

178 
INVALID_HANDLE_VALUE
) {

179 
	`tsk_îr‹_ª£t
();

180 
tsk_î∫o
 = 
TSK_ERR_HDB_CREATE
;

181 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

182 "hdb_idxöôülize: %"
PRIâocTSK
" GetFileSize: %d",

183 
hdb_öfo
->
uns_‚ame
, ()
	`GëLa°Eº‹
());

187 
hdb_öfo
->
hIdxTmp
 =

188 
	`_fd›í
(
	`_›í_osfh™dÀ
((
öçå_t
Ë
hWö
, 
_O_WRONLY
), "wb");

189 i‡(
hdb_öfo
->
hIdxTmp
 =
NULL
) {

190 
	`tsk_îr‹_ª£t
();

191 
tsk_î∫o
 = 
TSK_ERR_HDB_OPEN
;

192 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

194 
	`‰ì
(
hdb_öfo
);

199 i‡(
NULL
 =(
hdb_öfo
->
hIdxTmp
 = 
	`f›í
(hdb_öfo->
uns_‚ame
, "w"))) {

200 
	`tsk_îr‹_ª£t
();

201 
tsk_î∫o
 = 
TSK_ERR_HDB_CREATE
;

202 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

204 
hdb_öfo
->
uns_‚ame
);

210 
hdb_öfo
->
db_ty≥
) {

211 
TSK_HDB_DBTYPE_NSRL_ID
:

212 
	`Ârötf
(
hdb_öfo
->
hIdxTmp
, "%s|%s\n", 
TSK_HDB_IDX_HEAD_STR
,

213 
TSK_HDB_DBTYPE_NSRL_STR
);

215 
TSK_HDB_DBTYPE_MD5SUM_ID
:

216 
	`Ârötf
(
hdb_öfo
->
hIdxTmp
, "%s|%s\n", 
TSK_HDB_IDX_HEAD_STR
,

217 
TSK_HDB_DBTYPE_MD5SUM_STR
);

219 
TSK_HDB_DBTYPE_HK_ID
:

220 
	`Ârötf
(
hdb_öfo
->
hIdxTmp
, "%s|%s\n", 
TSK_HDB_IDX_HEAD_STR
,

221 
TSK_HDB_DBTYPE_HK_STR
);

224 
TSK_HDB_DBTYPE_IDXONLY_ID
:

226 
	`tsk_îr‹_ª£t
();

227 
tsk_î∫o
 = 
TSK_ERR_HDB_CREATE
;

228 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
, "idxinit: Invalid dbÅype\n");

233 
	}
}

243 
uöt8_t


244 
	$tsk_hdb_idxaddíåy
(
TSK_HDB_INFO
 * 
hdb_öfo
, *
hvÆue
,

245 
TSK_OFF_T
 
off£t
)

247 
i
;

249 
i
 = 0; 
hvÆue
[i] != '\0'; i++) {

250 i‡(
	`i¶owî
((Ë
hvÆue
[
i
]))

251 
	`Ârötf
(
hdb_öfo
->
hIdxTmp
, "%c", 
	`touµî
((Ë
hvÆue
[
i
]));

253 
	`Ârötf
(
hdb_öfo
->
hIdxTmp
, "%c", 
hvÆue
[
i
]);

257 
	`Ârötf
(
hdb_öfo
->
hIdxTmp
, "|%.16Œu\n", (Ë
off£t
);

260 
	}
}

269 
uöt8_t


270 
	$tsk_hdb_idxföÆize
(
TSK_HDB_INFO
 * 
hdb_öfo
)

272 #ifde‡
TSK_WIN32


273 
wch¨_t
 
buf
[
TSK_HDB_MAXLEN
];

275 
wch¨_t
 *
sys32
 = 
	`_TSK_T
("C:\\WINDOWS\\System32\\sort.exe");

276 
DWORD
 
°©
;

277 
STARTUPINFO
 
mySèπInfo
;

278 
PROCESS_INFORMATION
 
pöfo
;

281 
	`f˛o£
(
hdb_öfo
->
hIdxTmp
);

282 
hdb_öfo
->
hIdxTmp
 = 
NULL
;

285 i‡(
hdb_öfo
->
hIdx
) {

286 
	`f˛o£
(
hdb_öfo
->
hIdx
);

287 
hdb_öfo
->
hIdx
 = 
NULL
;

290 i‡(
tsk_vîbo£
)

291 
	`tsk_Ârötf
(
°dîr
, "hdb_idxfinalize: Sorting index\n");

293 
°©
 = 
	`GëFûeAâribuãs
(
sys32
);

294 i‡((
°©
 !-1Ë&& ((°© & 
FILE_ATTRIBUTE_DIRECTORY
) == 0)) {

295 
	`TSNPRINTF
(
buf
, 
TSK_HDB_MAXLEN
, 
	`_TSK_T
("%s /o \"%s\" \"%s\""),

296 
sys32
, 
hdb_öfo
->
idx_‚ame
, hdb_öfo->
uns_‚ame
);

299 
	`tsk_îr‹_ª£t
();

300 
tsk_î∫o
 = 
TSK_ERR_HDB_MISSING
;

301 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
, "Cannot find sortÉxecutable");

305 
	`GëSèπupInfo
(&
mySèπInfo
);

307 i‡(
FALSE
 ==

308 
	`Cª©ePro˚ss
(
NULL
, 
buf
, NULL, NULL, 
FALSE
, 0, NULL, NULL,

309 &
mySèπInfo
, &
pöfo
)) {

310 
	`tsk_îr‹_ª£t
();

311 
tsk_î∫o
 = 
TSK_ERR_HDB_PROC
;

312 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

313 "Eº‹ sèπög s‹tög index fûêusög %S", 
buf
);

317 i‡(
WAIT_FAILED
 =
	`WaôF‹SögÀObje˘
(
pöfo
.
hPro˚ss
, 
INFINITE
)) {

318 
	`tsk_îr‹_ª£t
();

319 
tsk_î∫o
 = 
TSK_ERR_HDB_PROC
;

320 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

321 "Eº‹ (waôögËs‹tög index fûêusög %S", 
buf
);

325 i‡(
FALSE
 =
	`DñëeFûe
(
hdb_öfo
->
uns_‚ame
)) {

326 
	`tsk_îr‹_ª£t
();

327 
tsk_î∫o
 = 
TSK_ERR_HDB_DELETE
;

328 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

329 "Eº‹ dñëögÅem∞fûe: %d", ()
	`GëLa°Eº‹
());

333 
buf
[
TSK_HDB_MAXLEN
];

334 *
roŸ
 = "/bin/sort";

335 *
u§
 = "/usr/bin/sort";

336 *
loˇl
 = "/usr/local/bin/sort";

337 
°©
 
°©s
;

339 i‡(
tsk_vîbo£
)

340 
	`tsk_Ârötf
(
°dîr
, "hdb_idxfinalize: Sorting index\n");

343 
	`f˛o£
(
hdb_öfo
->
hIdxTmp
);

344 
hdb_öfo
->
hIdxTmp
 = 
NULL
;

347 i‡(
hdb_öfo
->
hIdx
) {

348 
	`f˛o£
(
hdb_öfo
->
hIdx
);

349 
hdb_öfo
->
hIdx
 = 
NULL
;

352 i‡(0 =
	`°©
(
loˇl
, &
°©s
)) {

353 
	`¢¥ötf
(
buf
, 
TSK_HDB_MAXLEN
, "%†-ÿ%†%s", 
loˇl
,

354 
hdb_öfo
->
idx_‚ame
, hdb_öfo->
uns_‚ame
);

356 i‡(0 =
	`°©
(
u§
, &
°©s
)) {

357 
	`¢¥ötf
(
buf
, 
TSK_HDB_MAXLEN
, "%s -o \"%s\" \"%s\"",

358 
u§
, 
hdb_öfo
->
idx_‚ame
, hdb_öfo->
uns_‚ame
);

360 i‡(0 =
	`°©
(
roŸ
, &
°©s
)) {

361 
	`¢¥ötf
(
buf
, 
TSK_HDB_MAXLEN
, "%s -o \"%s\" \"%s\"",

362 
roŸ
, 
hdb_öfo
->
idx_‚ame
, hdb_öfo->
uns_‚ame
);

365 
	`tsk_îr‹_ª£t
();

366 
tsk_î∫o
 = 
TSK_ERR_HDB_MISSING
;

367 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
, "Cannot find sortÉxecutable");

371 i‡(0 !
	`sy°em
(
buf
)) {

372 
	`tsk_îr‹_ª£t
();

373 
tsk_î∫o
 = 
TSK_ERR_HDB_PROC
;

374 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

375 "Eº‹ s‹tög index fûêusög %s", 
buf
);

379 
	`u∆ök
(
hdb_öfo
->
uns_‚ame
);

383 
	}
}

395 
uöt8_t


396 
	$hdb_£tupödex
(
TSK_HDB_INFO
 * 
hdb_öfo
, 
uöt8_t
 
hty≥
)

398 
hód
[
TSK_HDB_MAXLEN
];

399 *
±r
;

402 i‡((
hty≥
 !
TSK_HDB_HTYPE_MD5_ID
)

403 && (
hty≥
 !
TSK_HDB_HTYPE_SHA1_ID
)) {

404 
	`tsk_îr‹_ª£t
();

405 
tsk_î∫o
 = 
TSK_ERR_HDB_ARG
;

406 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

407 "hdb_£tupödex: InvÆid hashÅy≥ : %d", 
hty≥
);

411 i‡(
	`hdb_£tuphash
(
hdb_öfo
, 
hty≥
)) {

416 #ifde‡
TSK_WIN32


418 
HANDLE
 
hWö
;

419 
DWORD
 
szLow
, 
szHi
;

421 i‡(-1 =
	`GëFûeAâribuãs
(
hdb_öfo
->
idx_‚ame
)) {

422 
	`tsk_îr‹_ª£t
();

423 
tsk_î∫o
 = 
TSK_ERR_HDB_MISSING
;

424 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

425 "hdb_£tupödex: Eº‹ födög index fûe: %"
PRIâocTSK
,

426 
hdb_öfo
->
idx_‚ame
);

430 i‡((
hWö
 = 
	`Cª©eFûe
(
hdb_öfo
->
idx_‚ame
, 
GENERIC_READ
,

431 
FILE_SHARE_READ
, 0, 
OPEN_EXISTING
, 0, 0)) ==

432 
INVALID_HANDLE_VALUE
) {

433 
	`tsk_îr‹_ª£t
();

434 
tsk_î∫o
 = 
TSK_ERR_HDB_OPEN
;

435 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

436 "hdb_£tupödex: Eº‹ o≥nög index fûe: %"
PRIâocTSK
,

437 
hdb_öfo
->
idx_‚ame
);

440 
hdb_öfo
->
hIdx
 =

441 
	`_fd›í
(
	`_›í_osfh™dÀ
((
öçå_t
Ë
hWö
, 
_O_RDONLY
), "r");

442 i‡(
hdb_öfo
->
hIdx
 =
NULL
) {

443 
	`tsk_îr‹_ª£t
();

444 
tsk_î∫o
 = 
TSK_ERR_HDB_OPEN
;

445 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

450 
szLow
 = 
	`GëFûeSize
(
hWö
, &
szHi
);

451 i‡(
szLow
 == 0xffffffff) {

452 
	`tsk_îr‹_ª£t
();

453 
tsk_î∫o
 = 
TSK_ERR_HDB_OPEN
;

454 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

455 "hdb_£tupödex: Eº‹ gëtög sizêo‡ödex fûe: %"
PRIâocTSK
" - %d",

456 
hdb_öfo
->
idx_‚ame
, ()
	`GëLa°Eº‹
());

459 
hdb_öfo
->
idx_size
 = 
szLow
 | ((
uöt64_t
Ë
szHi
 << 32);

464 
°©
 
sb
;

465 i‡(
	`°©
(
hdb_öfo
->
idx_‚ame
, &
sb
) < 0) {

466 
	`tsk_îr‹_ª£t
();

467 
tsk_î∫o
 = 
TSK_ERR_HDB_MISSING
;

468 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

470 
hdb_öfo
->
idx_‚ame
);

473 
hdb_öfo
->
idx_size
 = 
sb
.
°_size
;

475 i‡(
NULL
 =(
hdb_öfo
->
hIdx
 = 
	`f›í
(hdb_öfo->
idx_‚ame
, "r"))) {

476 
	`tsk_îr‹_ª£t
();

477 
tsk_î∫o
 = 
TSK_ERR_HDB_OPEN
;

478 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

480 
hdb_öfo
->
idx_‚ame
);

487 i‡(
NULL
 =
	`fgës
(
hód
, 
TSK_HDB_MAXLEN
, 
hdb_öfo
->
hIdx
)) {

488 
	`tsk_îr‹_ª£t
();

489 
tsk_î∫o
 = 
TSK_ERR_HDB_READIDX
;

490 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

495 i‡(
	`°∫cmp
(
hód
, 
TSK_HDB_IDX_HEAD_STR
, 
	`°æí
(TSK_HDB_IDX_HEAD_STR))

497 
	`tsk_îr‹_ª£t
();

498 
tsk_î∫o
 = 
TSK_ERR_HDB_UNKTYPE
;

499 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

505 
hdb_öfo
->
idx_off
 = (
uöt16_t
Ë
	`°æí
(
hód
);

508 
±r
 = &
hód
[
	`°æí
(
TSK_HDB_IDX_HEAD_STR
) + 1];

510 
±r
[
	`°æí
(ptr) - 1] = '\0';

511 i‡((
±r
[
	`°æí
(ptr) - 1] == 10) || (ptr[strlen(ptr) - 1] == 13)) {

512 
±r
[
	`°æí
(ptr) - 1] = '\0';

513 
hdb_öfo
->
idx_Œí
++;

517 i‡(
	`°rcmp
(
±r
, 
TSK_HDB_DBTYPE_NSRL_STR
) == 0) {

518 i‡((
hdb_öfo
->
db_ty≥
 !
TSK_HDB_DBTYPE_NSRL_ID
) &&

519 (
hdb_öfo
->
db_ty≥
 !
TSK_HDB_DBTYPE_IDXONLY_ID
)) {

520 
	`tsk_îr‹_ª£t
();

521 
tsk_î∫o
 = 
TSK_ERR_HDB_UNKTYPE
;

522 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

524 
±r
);

528 i‡(
	`°rcmp
(
±r
, 
TSK_HDB_DBTYPE_MD5SUM_STR
) == 0) {

529 i‡((
hdb_öfo
->
db_ty≥
 !
TSK_HDB_DBTYPE_MD5SUM_ID
) &&

530 (
hdb_öfo
->
db_ty≥
 !
TSK_HDB_DBTYPE_IDXONLY_ID
)) {

531 
	`tsk_îr‹_ª£t
();

532 
tsk_î∫o
 = 
TSK_ERR_HDB_UNKTYPE
;

533 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

535 
±r
);

539 i‡(
	`°rcmp
(
±r
, 
TSK_HDB_DBTYPE_HK_STR
) == 0) {

540 i‡((
hdb_öfo
->
db_ty≥
 !
TSK_HDB_DBTYPE_HK_ID
) &&

541 (
hdb_öfo
->
db_ty≥
 !
TSK_HDB_DBTYPE_IDXONLY_ID
)) {

542 
	`tsk_îr‹_ª£t
();

543 
tsk_î∫o
 = 
TSK_ERR_HDB_UNKTYPE
;

544 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

546 
±r
);

550 i‡(
hdb_öfo
->
db_ty≥
 !
TSK_HDB_DBTYPE_IDXONLY_ID
) {

551 
	`tsk_îr‹_ª£t
();

552 
tsk_î∫o
 = 
TSK_ERR_HDB_UNKTYPE
;

553 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

555 
±r
);

560 i‡(((
hdb_öfo
->
idx_size
 - hdb_öfo->
idx_off
Ë% hdb_öfo->
idx_Œí
) !=

562 
	`tsk_îr‹_ª£t
();

563 
tsk_î∫o
 = 
TSK_ERR_HDB_CORRUPT
;

564 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

570 i‡((
hdb_öfo
->
idx_lbuf
 = 
	`tsk_mÆloc
(hdb_öfo->
idx_Œí
 + 1)Ë=
NULL
)

574 
	}
}

596 
öt8_t


597 
	$tsk_hdb_lookup_°r
(
TSK_HDB_INFO
 * 
hdb_öfo
, c⁄° *
hash
,

598 
TSK_HDB_FLAG_ENUM
 
Êags
, 
TSK_HDB_LOOKUP_FN
 
a˘i⁄
,

599 *
±r
)

601 
TSK_OFF_T
 
poff£t
;

602 
TSK_OFF_T
 
up
;

603 
TSK_OFF_T
 
low
;

604 
cmp
;

605 
uöt8_t
 
wasFound
 = 0;

606 
size_t
 
i
;

607 
uöt8_t
 
hty≥
;

611 i‡(
	`°æí
(
hash
Ë=
TSK_HDB_HTYPE_MD5_LEN
) {

612 
hty≥
 = 
TSK_HDB_HTYPE_MD5_ID
;

614 i‡(
	`°æí
(
hash
Ë=
TSK_HDB_HTYPE_SHA1_LEN
) {

615 
hty≥
 = 
TSK_HDB_HTYPE_SHA1_ID
;

618 
	`tsk_îr‹_ª£t
();

619 
tsk_î∫o
 = 
TSK_ERR_HDB_ARG
;

620 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

621 "hdb_lookup: InvÆid hashÜígth: %s", 
hash
);

625 
i
 = 0; i < 
	`°æí
(
hash
); i++) {

626 i‡(
	`isxdigô
((Ë
hash
[
i
]) == 0) {

627 
	`tsk_îr‹_ª£t
();

628 
tsk_î∫o
 = 
TSK_ERR_HDB_ARG
;

629 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

631 
hash
);

638 i‡(
hdb_öfo
->
hIdx
 =
NULL
) {

639 i‡(
	`hdb_£tupödex
(
hdb_öfo
, 
hty≥
))

644 i‡(
hdb_öfo
->
hash_Àn
 !
	`°æí
(
hash
)) {

645 
	`tsk_îr‹_ª£t
();

646 
tsk_î∫o
 = 
TSK_ERR_HDB_ARG
;

647 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

649 
hdb_öfo
->
hash_Àn
, 
	`°æí
(
hash
));

654 
low
 = 
hdb_öfo
->
idx_off
;

655 
up
 = 
hdb_öfo
->
idx_size
;

657 
poff£t
 = 0;

659 
TSK_OFF_T
 
off£t
;

662 i‡(
up
 =
low
) {

667 
off£t
 = 
	`rounddown
(((
up
 - 
low
Ë/ 2), 
hdb_öfo
->
idx_Œí
);

670 i‡((
off£t
 % 
hdb_öfo
->
idx_Œí
) != 0) {

671 
	`tsk_îr‹_ª£t
();

672 
tsk_î∫o
 = 
TSK_ERR_HDB_CORRUPT
;

673 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

679 
off£t
 +
low
;

682 i‡(
poff£t
 =
off£t
) {

687 i‡(0 !
	`f£eko
(
hdb_öfo
->
hIdx
, 
off£t
, 
SEEK_SET
)) {

688 
	`tsk_îr‹_ª£t
();

689 
tsk_î∫o
 = 
TSK_ERR_HDB_READIDX
;

690 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

691 "hdb_lookup: Eº‹ sìkög i¿£¨ch: %" 
PRIuOFF
,

692 
off£t
);

696 i‡(
NULL
 ==

697 
	`fgës
(
hdb_öfo
->
idx_lbuf
, (Ëhdb_öfo->
idx_Œí
 + 1,

698 
hdb_öfo
->
hIdx
)) {

699 i‡(
	`„of
(
hdb_öfo
->
hIdx
)) {

702 
	`tsk_îr‹_ª£t
();

703 
tsk_î∫o
 = 
TSK_ERR_HDB_READIDX
;

704 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

706 (Ë
off£t
);

711 i‡((
	`°æí
(
hdb_öfo
->
idx_lbuf
Ë< hdb_öfo->
idx_Œí
) ||

712 (
hdb_öfo
->
idx_lbuf
[hdb_öfo->
hash_Àn
] != '|')) {

713 
	`tsk_îr‹_ª£t
();

714 
tsk_î∫o
 = 
TSK_ERR_HDB_CORRUPT
;

715 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

717 (Ë(
off£t
 / 
hdb_öfo
->
idx_Œí
),

718 
hdb_öfo
->
idx_lbuf
);

723 
hdb_öfo
->
idx_lbuf
[hdb_öfo->
hash_Àn
] = '\0';

724 
cmp
 = 
	`°rˇ£cmp
(
hdb_öfo
->
idx_lbuf
, 
hash
);

728 i‡(
cmp
 < 0) {

729 
low
 = 
off£t
 + 
hdb_öfo
->
idx_Œí
;

734 i‡(
cmp
 > 0) {

735 
up
 = 
off£t
;

740 
wasFound
 = 1;

742 i‡((
Êags
 & 
TSK_HDB_FLAG_QUICK
)

743 || (
hdb_öfo
->
db_ty≥
 =
TSK_HDB_DBTYPE_IDXONLY_ID
)) {

747 
TSK_OFF_T
 
tmpoff
, 
db_off
;

749 #ifde‡
TSK_WIN32


750 
db_off
 =

751 
	`_©oi64
(&
hdb_öfo
->
idx_lbuf
[hdb_öfo->
hash_Àn
 + 1]);

753 
db_off
 =

754 
	`°πouŒ
(&
hdb_öfo
->
idx_lbuf
[hdb_öfo->
hash_Àn
 + 1],

755 
NULL
, 10);

759 i‡(
hdb_öfo
->

760 
	`gëíåy
(
hdb_öfo
, 
hash
, 
db_off
, 
Êags
, 
a˘i⁄
, 
±r
)) {

761 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
, "hdb_lookup");

771 
tmpoff
 = 
off£t
 - 
hdb_öfo
->
idx_Œí
;

772 
tmpoff
 >
low
) {

775 i‡(
tmpoff
 <= 0)

778 i‡(0 !
	`f£eko
(
hdb_öfo
->
hIdx
, 
tmpoff
, 
SEEK_SET
)) {

779 
	`tsk_îr‹_ª£t
();

780 
tsk_î∫o
 = 
TSK_ERR_HDB_READIDX
;

781 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

783 
PRIuOFF
, 
tmpoff
);

787 i‡(
NULL
 ==

788 
	`fgës
(
hdb_öfo
->
idx_lbuf
,

789 (Ë
hdb_öfo
->
idx_Œí
 + 1,

790 
hdb_öfo
->
hIdx
)) {

791 
	`tsk_îr‹_ª£t
();

792 
tsk_î∫o
 = 
TSK_ERR_HDB_READIDX
;

793 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

795 (Ë
tmpoff
);

798 i‡(
	`°æí
(
hdb_öfo
->
idx_lbuf
) <

799 
hdb_öfo
->
idx_Œí
) {

800 
	`tsk_îr‹_ª£t
();

801 
tsk_î∫o
 = 
TSK_ERR_HDB_CORRUPT
;

802 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

804 (Ë
tmpoff
);

808 
hdb_öfo
->
idx_lbuf
[hdb_öfo->
hash_Àn
] = '\0';

809 i‡(
	`°rˇ£cmp
(
hdb_öfo
->
idx_lbuf
, 
hash
) != 0) {

813 #ifde‡
TSK_WIN32


814 
db_off
 =

815 
	`_©oi64
(&
hdb_öfo
->

816 
idx_lbuf
[
hdb_öfo
->
hash_Àn
 + 1]);

819 
db_off
 =

820 
	`°πouŒ
(&
hdb_öfo
->

821 
idx_lbuf
[
hdb_öfo
->
hash_Àn
 + 1], 
NULL
,

824 i‡(
hdb_öfo
->

825 
	`gëíåy
(
hdb_öfo
, 
hash
, 
db_off
, 
Êags
, 
a˘i⁄
,

826 
±r
)) {

829 
tmpoff
 -
hdb_öfo
->
idx_Œí
;

833 
tmpoff
 = 
off£t
 + 
hdb_öfo
->
idx_Œí
;

834 
tmpoff
 < 
up
) {

836 i‡(0 !
	`f£eko
(
hdb_öfo
->
hIdx
, 
tmpoff
, 
SEEK_SET
)) {

837 
	`tsk_îr‹_ª£t
();

838 
tsk_î∫o
 = 
TSK_ERR_HDB_READIDX
;

839 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

841 
PRIuOFF
, 
tmpoff
);

845 i‡(
NULL
 ==

846 
	`fgës
(
hdb_öfo
->
idx_lbuf
,

847 (Ë
hdb_öfo
->
idx_Œí
 + 1,

848 
hdb_öfo
->
hIdx
)) {

849 i‡(
	`„of
(
hdb_öfo
->
hIdx
))

851 
	`tsk_îr‹_ª£t
();

852 
tsk_î∫o
 = 
TSK_ERR_HDB_READIDX
;

853 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

855 (Ë
tmpoff
);

858 i‡(
	`°æí
(
hdb_öfo
->
idx_lbuf
) <

859 
hdb_öfo
->
idx_Œí
) {

860 
	`tsk_îr‹_ª£t
();

861 
tsk_î∫o
 = 
TSK_ERR_HDB_CORRUPT
;

862 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

864 (Ë
tmpoff
);

868 
hdb_öfo
->
idx_lbuf
[hdb_öfo->
hash_Àn
] = '\0';

869 i‡(
	`°rˇ£cmp
(
hdb_öfo
->
idx_lbuf
, 
hash
) != 0) {

872 #ifde‡
TSK_WIN32


873 
db_off
 =

874 
	`_©oi64
(&
hdb_öfo
->

875 
idx_lbuf
[
hdb_öfo
->
hash_Àn
 + 1]);

877 
db_off
 =

878 
	`°πouŒ
(&
hdb_öfo
->

879 
idx_lbuf
[
hdb_öfo
->
hash_Àn
 + 1], 
NULL
,

882 i‡(
hdb_öfo
->

883 
	`gëíåy
(
hdb_öfo
, 
hash
, 
db_off
, 
Êags
, 
a˘i⁄
,

884 
±r
)) {

888 
tmpoff
 +
hdb_öfo
->
idx_Œí
;

893 
poff£t
 = 
off£t
;

896  
wasFound
;

897 
	}
}

913 
öt8_t


914 
	$tsk_hdb_lookup_øw
(
TSK_HDB_INFO
 * 
hdb_öfo
, 
uöt8_t
 * 
hash
, uöt8_à
Àn
,

915 
TSK_HDB_FLAG_ENUM
 
Êags
,

916 
TSK_HDB_LOOKUP_FN
 
a˘i⁄
, *
±r
)

918 
hashbuf
[
TSK_HDB_HTYPE_SHA1_LEN
 + 1];

919 
i
;

920 
hex
[] = "0123456789abcdef";

922 i‡(2 * 
Àn
 > 
TSK_HDB_HTYPE_SHA1_LEN
) {

923 
	`tsk_îr‹_ª£t
();

924 
tsk_î∫o
 = 
TSK_ERR_HDB_ARG
;

925 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

930 
i
 = 0; i < 
Àn
; i++) {

931 
hashbuf
[2 * 
i
] = 
hex
[(
hash
[i] >> 4) & 0xf];

932 
hashbuf
[2 * 
i
 + 1] = 
hex
[
hash
[i] & 0xf];

934 
hashbuf
[2 * 
Àn
] = '\0';

936  
	`tsk_hdb_lookup_°r
(
hdb_öfo
, 
hashbuf
, 
Êags
, 
a˘i⁄
, 
±r
);

937 
	}
}

948 
uöt8_t


949 
	$tsk_hdb_hasödex
(
TSK_HDB_INFO
 * 
hdb_öfo
, 
uöt8_t
 
hty≥
)

953 i‡(
hdb_öfo
->
idx_size
 == 0) {

954 i‡(
	`hdb_£tupödex
(
hdb_öfo
, 
hty≥
))

960 
	}
}

973 
TSK_HDB_INFO
 *

974 
	$tsk_hdb_›í
(
TSK_TCHAR
 * 
db_fûe
, 
TSK_HDB_OPEN_ENUM
 
Êags
)

976 
TSK_HDB_INFO
 *
hdb_öfo
;

977 
size_t
 
Êí
;

978 
FILE
 *
hDb
;

979 
uöt8_t
 
dbty≥
 = 0;

981 i‡((
Êags
 & 
TSK_HDB_OPEN_IDXONLY
) == 0) {

983 #ifde‡
TSK_WIN32


985 
HANDLE
 
hWö
;

987 i‡((
hWö
 = 
	`Cª©eFûe
(
db_fûe
, 
GENERIC_READ
,

988 
FILE_SHARE_READ
, 0, 
OPEN_EXISTING
, 0,

989 0)Ë=
INVALID_HANDLE_VALUE
) {

990 
	`tsk_îr‹_ª£t
();

991 
tsk_î∫o
 = 
TSK_ERR_HDB_OPEN
;

992 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

994 
db_fûe
);

995  
NULL
;

997 
hDb
 =

998 
	`_fd›í
(
	`_›í_osfh™dÀ
((
öçå_t
Ë
hWö
, 
_O_RDONLY
), "r");

999 i‡(
hDb
 =
NULL
) {

1000 
	`tsk_îr‹_ª£t
();

1001 
tsk_î∫o
 = 
TSK_ERR_HDB_OPEN
;

1002 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

1004  
NULL
;

1008 i‡(
NULL
 =(
hDb
 = 
	`f›í
(
db_fûe
, "r"))) {

1009 
	`tsk_îr‹_ª£t
();

1010 
tsk_î∫o
 = 
TSK_ERR_HDB_OPEN
;

1011 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

1012 "hdb_›í: Eº‹ o≥nög d©aba£ fûe: %s", 
db_fûe
);

1013  
NULL
;

1018 i‡(
	`n§l_ã°
(
hDb
)) {

1019 
dbty≥
 = 
TSK_HDB_DBTYPE_NSRL_ID
;

1021 i‡(
	`md5sum_ã°
(
hDb
)) {

1022 i‡(
dbty≥
 != 0) {

1023 
	`tsk_îr‹_ª£t
();

1024 
tsk_î∫o
 = 
TSK_ERR_HDB_UNKTYPE
;

1025 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

1027  
NULL
;

1029 
dbty≥
 = 
TSK_HDB_DBTYPE_MD5SUM_ID
;

1031 i‡(
	`hk_ã°
(
hDb
)) {

1032 i‡(
dbty≥
 != 0) {

1033 
	`tsk_îr‹_ª£t
();

1034 
tsk_î∫o
 = 
TSK_ERR_HDB_UNKTYPE
;

1035 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

1037  
NULL
;

1039 
dbty≥
 = 
TSK_HDB_DBTYPE_HK_ID
;

1041 i‡(
dbty≥
 == 0) {

1042 
	`tsk_îr‹_ª£t
();

1043 
tsk_î∫o
 = 
TSK_ERR_HDB_UNKTYPE
;

1044 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

1046  
NULL
;

1048 
	`f£eko
(
hDb
, 0, 
SEEK_SET
);

1051 
dbty≥
 = 
TSK_HDB_DBTYPE_IDXONLY_ID
;

1052 
hDb
 = 
NULL
;

1055 i‡((
hdb_öfo
 =

1056 (
TSK_HDB_INFO
 *Ë
	`tsk_mÆloc
((TSK_HDB_INFO))Ë=
NULL
)

1057  
NULL
;

1059 
hdb_öfo
->
hDb
 = hDb;

1062 
hdb_öfo
->
db_ty≥
 = 
dbty≥
;

1063 
dbty≥
) {

1064 
TSK_HDB_DBTYPE_NSRL_ID
:

1065 
hdb_öfo
->
gëíåy
 = 
n§l_gëíåy
;

1066 
hdb_öfo
->
makeödex
 = 
n§l_makeödex
;

1069 
TSK_HDB_DBTYPE_MD5SUM_ID
:

1070 
hdb_öfo
->
gëíåy
 = 
md5sum_gëíåy
;

1071 
hdb_öfo
->
makeödex
 = 
md5sum_makeödex
;

1074 
TSK_HDB_DBTYPE_HK_ID
:

1075 
hdb_öfo
->
gëíåy
 = 
hk_gëíåy
;

1076 
hdb_öfo
->
makeödex
 = 
hk_makeödex
;

1079 
TSK_HDB_DBTYPE_IDXONLY_ID
:

1080 
hdb_öfo
->
gëíåy
 = 
idx⁄ly_gëíåy
;

1081 
hdb_öfo
->
makeödex
 = 
idx⁄ly_makeödex
;

1085  
NULL
;

1088 
hdb_öfo
->
hash_ty≥
 = 0;

1089 
hdb_öfo
->
hash_Àn
 = 0;

1090 
hdb_öfo
->
idx_‚ame
 = 
NULL
;

1092 
hdb_öfo
->
uns_‚ame
 = 
NULL
;

1093 
hdb_öfo
->
hIdxTmp
 = 
NULL
;

1094 
hdb_öfo
->
hIdx
 = 
NULL
;

1096 
hdb_öfo
->
idx_size
 = 0;

1097 
hdb_öfo
->
idx_off
 = 0;

1099 
hdb_öfo
->
idx_lbuf
 = 
NULL
;

1103 
Êí
 = 
	`TSTRLEN
(
db_fûe
) + 8;

1105 
hdb_öfo
->
db_‚ame
 =

1106 (
TSK_TCHAR
 *Ë
	`tsk_mÆloc
(
Êí
 * (TSK_TCHAR));

1107 i‡(
hdb_öfo
->
db_‚ame
 =
NULL
) {

1108 
	`‰ì
(
hdb_öfo
);

1109  
NULL
;

1111 
	`TSTRNCPY
(
hdb_öfo
->
db_‚ame
, 
db_fûe
, 
Êí
);

1113  
hdb_öfo
;

1114 
	}
}

1123 
	$tsk_hdb_˛o£
(
TSK_HDB_INFO
 * 
hdb_öfo
)

1125 i‡(
hdb_öfo
->
hIdx
)

1126 
	`f˛o£
(
hdb_öfo
->
hIdx
);

1128 i‡(
hdb_öfo
->
hIdxTmp
)

1129 
	`f˛o£
(
hdb_öfo
->
hIdxTmp
);

1132 i‡(
hdb_öfo
->
idx_lbuf
 !
NULL
)

1133 
	`‰ì
(
hdb_öfo
->
idx_lbuf
);

1135 i‡(
hdb_öfo
->
db_‚ame
)

1136 
	`‰ì
(
hdb_öfo
->
db_‚ame
);

1138 i‡(
hdb_öfo
->
uns_‚ame
)

1139 
	`‰ì
(
hdb_öfo
->
uns_‚ame
);

1141 i‡(
hdb_öfo
->
idx_‚ame
)

1142 
	`‰ì
(
hdb_öfo
->
idx_‚ame
);

1144 i‡(
hdb_öfo
->
hDb
)

1145 
	`f˛o£
(
hdb_öfo
->
hDb
);

1147 
	`‰ì
(
hdb_öfo
);

1148 
	}
}

1157 
uöt8_t


1158 
	$tsk_hdb_makeödex
(
TSK_HDB_INFO
 * 
a_hdb_öfo
, 
TSK_TCHAR
 * 
a_ty≥
)

1160  
a_hdb_öfo
->
	`makeödex
◊_hdb_öfo, 
a_ty≥
);

1161 
	}
}

	@tsk3/hashdb/tsk_hashdb.h

19 #i‚de‡
_TSK_HDB_H


20 
	#_TSK_HDB_H


	)

23 #ifde‡
__˝lu•lus


31 
	eTSK_HDB_FLAG_ENUM
 {

32 
TSK_HDB_FLAG_QUICK
 = 0x01,

33 
TSK_HDB_FLAG_EXT
 = 0x02

35 
TSK_HDB_FLAG_ENUM
 
	tTSK_HDB_FLAG_ENUM
;

41 
	eTSK_HDB_HTYPE_ENUM
 {

42 
TSK_HDB_HTYPE_MD5_ID
 = 1,

43 
TSK_HDB_HTYPE_SHA1_ID
 = 2,

45 
TSK_HDB_HTYPE_ENUM
 
	tTSK_HDB_HTYPE_ENUM
;

47 
	#TSK_HDB_HTYPE_MD5_STR
 "md5"

48 
	#TSK_HDB_HTYPE_SHA1_STR
 "sha1"

49 

	)

50 
	#TSK_HDB_HTYPE_SHA1_LEN
 40

51 
	#TSK_HDB_HTYPE_MD5_LEN
 32

52 
	#TSK_HDB_HTYPE_CRC32_LEN
 8

53 

	)

58 
	#TSK_HDB_HTYPE_STR
(
x
) \

59 –((
x
Ë& 
TSK_HDB_HTYPE_MD5_ID
Ë? (
TSK_HDB_HTYPE_MD5_STR
) : ( \

60 –((
x
Ë& 
TSK_HDB_HTYPE_SHA1_ID
Ë? 
TSK_HDB_HTYPE_SHA1_STR
 : ""ËË)

	)

65 
	#TSK_HDB_HTYPE_LEN
(
x
) \

66 –((
x
Ë& 
TSK_HDB_HTYPE_MD5_ID
Ë? (
TSK_HDB_HTYPE_MD5_LEN
) : ( \

67 –((
x
Ë& 
TSK_HDB_HTYPE_SHA1_ID
Ë? 
TSK_HDB_HTYPE_SHA1_LEN
 : 0ËË)

	)

74 
	eTSK_HDB_DBTYPE_ENUM
 {

75 
TSK_HDB_DBTYPE_NSRL_ID
 = 1,

76 
TSK_HDB_DBTYPE_MD5SUM_ID
 = 2,

77 
TSK_HDB_DBTYPE_HK_ID
 = 3,

78 
TSK_HDB_DBTYPE_IDXONLY_ID
 = 4

80 
TSK_HDB_DBTYPE_ENUM
 
	tTSK_HDB_DBTYPE_ENUM
;

84 
	#TSK_HDB_DBTYPE_NSRL_STR
 "nsrl"

85 
	#TSK_HDB_DBTYPE_NSRL_MD5_STR
 "nsrl-md5"

86 
	#TSK_HDB_DBTYPE_NSRL_SHA1_STR
 "nsrl-sha1"

87 
	#TSK_HDB_DBTYPE_MD5SUM_STR
 "md5sum"

88 
	#TSK_HDB_DBTYPE_HK_STR
 "hk"

90 
	#TSK_HDB_DBTYPE_SUPPORT_STR
 "n§l-md5,Ç§l-sha1, md5sum, hk"

	)

93 
TSK_HDB_INFO
 
	tTSK_HDB_INFO
;

95 
TSK_WALK_RET_ENUM
(*
	tTSK_HDB_LOOKUP_FN
Ë(
	tTSK_HDB_INFO
 *,

96 c⁄° *
	thash
,

97 c⁄° *
	t«me
,

104 
	sTSK_HDB_INFO
 {

106 
TSK_TCHAR
 *
db_‚ame
;

108 
TSK_TCHAR
 *
uns_‚ame
;

110 
FILE
 *
hDb
;

111 
FILE
 *
hIdxTmp
;

112 
FILE
 *
hIdx
;

114 
TSK_OFF_T
 
idx_size
;

115 
uöt16_t
 
idx_off
;

116 
size_t
 
idx_Œí
;

117 *
idx_lbuf
;

118 
TSK_TCHAR
 *
idx_‚ame
;

120 
TSK_HDB_HTYPE_ENUM
 
hash_ty≥
;

121 
uöt16_t
 
hash_Àn
;

123 
TSK_HDB_DBTYPE_ENUM
 
db_ty≥
;

125 
uöt8_t
(*
gëíåy
Ë(
TSK_HDB_INFO
 *, c⁄° *, 
TSK_OFF_T
, 
TSK_HDB_FLAG_ENUM
, 
TSK_HDB_LOOKUP_FN
, *);

126 
uöt8_t
(*
makeödex
Ë(
TSK_HDB_INFO
 *, 
TSK_TCHAR
 *);

132 
	eTSK_HDB_OPEN_ENUM
 {

133 
TSK_HDB_OPEN_NONE
 = 0,

134 
TSK_HDB_OPEN_IDXONLY
 = (0x1 << 0)

136 
TSK_HDB_OPEN_ENUM
 
	tTSK_HDB_OPEN_ENUM
;

139 
TSK_HDB_INFO
 *
tsk_hdb_›í
(
TSK_TCHAR
 * 
db_fûe
,

140 
TSK_HDB_OPEN_ENUM
 
Êags
);

141 
tsk_hdb_˛o£
(
TSK_HDB_INFO
 * 
hdb
);

143 
uöt8_t
 
tsk_hdb_hasödex
(
TSK_HDB_INFO
 *, uöt8_à
hty≥
);

144 
uöt8_t
 
tsk_hdb_makeödex
(
TSK_HDB_INFO
 *, 
TSK_TCHAR
 *);

148 
öt8_t
 
tsk_hdb_lookup_°r
(
TSK_HDB_INFO
 *, const *,

149 
TSK_HDB_FLAG_ENUM
, 
TSK_HDB_LOOKUP_FN
,

152 
öt8_t
 
tsk_hdb_lookup_øw
(
TSK_HDB_INFO
 *, 
uöt8_t
 * 
hash
,

153 
uöt8_t
 
Àn
, 
TSK_HDB_FLAG_ENUM
,

154 
TSK_HDB_LOOKUP_FN
, *);

156 #ifde‡
__˝lu•lus


	@tsk3/hashdb/tsk_hashdb_i.h

14 #i‚de‡
_TSK_HASHDB_I_H


15 
	#_TSK_HASHDB_I_H


	)

19 
	~"tsk3/ba£/tsk_ba£_i.h
"

22 
	~"tsk_hashdb.h
"

24 
	~<°rög.h
>

25 
	~<˘y≥.h
>

27 
	~<sys/ty≥s.h
>

28 
	~<sys/°©.h
>

30 
	~<loˇÀ.h
>

32 #ifde‡
TSK_WIN32


33 
	~<io.h
>

34 
	~<f˙é.h
>

37 #ifde‡
__˝lu•lus


42 
	#TSK_HDB_MAXLEN
 512

43 

	)

44 
	#TSK_HDB_OFF_LEN
 16

45 

	)

50 
	#TSK_HDB_IDX_LEN
(
x
) \

51 –
	`TSK_HDB_HTYPE_LEN
(
x
Ë+ 
TSK_HDB_OFF_LEN
 + 2)

	)

56 
	#TSK_HDB_IDX_HEAD_STR
 "00000000000000000000000000000000000000000"

	)

60 
uöt8_t
 
tsk_hdb_idxöôülize
(
TSK_HDB_INFO
 *,

61 
TSK_TCHAR
 * 
db«me
);

62 
uöt8_t
 
tsk_hdb_idxaddíåy
(
TSK_HDB_INFO
 *, *
hvÆue
,

63 
TSK_OFF_T
 
off£t
);

64 
uöt8_t
 
tsk_hdb_idxföÆize
(
TSK_HDB_INFO
 *);

68 
uöt8_t
 
n§l_ã°
(
FILE
 *);

69 
uöt8_t
 
n§l_makeödex
(
TSK_HDB_INFO
 *, 
TSK_TCHAR
 * 
hty≥
);

70 
uöt8_t
 
n§l_gëíåy
(
TSK_HDB_INFO
 *, c⁄° *, 
TSK_OFF_T
,

71 
TSK_HDB_FLAG_ENUM
, 
TSK_HDB_LOOKUP_FN
,

74 
uöt8_t
 
md5sum_ã°
(
FILE
 *);

75 
uöt8_t
 
md5sum_makeödex
(
TSK_HDB_INFO
 *, 
TSK_TCHAR
 * 
hty≥
);

76 
uöt8_t
 
md5sum_gëíåy
(
TSK_HDB_INFO
 *, c⁄° *, 
TSK_OFF_T
,

77 
TSK_HDB_FLAG_ENUM
, 
TSK_HDB_LOOKUP_FN
,

80 
uöt8_t
 
hk_ã°
(
FILE
 *);

81 
uöt8_t
 
hk_makeödex
(
TSK_HDB_INFO
 *, 
TSK_TCHAR
 * 
hty≥
);

82 
uöt8_t
 
hk_gëíåy
(
TSK_HDB_INFO
 *, c⁄° *, 
TSK_OFF_T
,

83 
TSK_HDB_FLAG_ENUM
, 
TSK_HDB_LOOKUP_FN
,

86 
uöt8_t
 
idx⁄ly_makeödex
(
TSK_HDB_INFO
 *, 
TSK_TCHAR
 * 
hty≥
);

87 
uöt8_t
 
idx⁄ly_gëíåy
(
TSK_HDB_INFO
 *, const *,

88 
TSK_OFF_T
, 
TSK_HDB_FLAG_ENUM
,

89 
TSK_HDB_LOOKUP_FN
, *);

90 #ifde‡
__˝lu•lus


	@tsk3/img/aff.c

13 
	~"tsk_img_i.h
"

15 #i‡
HAVE_LIBAFFLIB


17 
	tboﬁ
;

19 
	~"aff.h
"

21 
ssize_t


22 
	$aff_ªad
(
TSK_IMG_INFO
 * 
img_öfo
, 
TSK_OFF_T
 
off£t
, *
buf
, 
size_t
 
Àn
)

24 
ssize_t
 
˙t
;

25 
IMG_AFF_INFO
 *
aff_öfo
 = (IMG_AFF_INFO *Ë
img_öfo
;

27 i‡(
tsk_vîbo£
)

28 
	`tsk_Ârötf
(
°dîr
,

29 "aff_ªad: byã off£t: %" 
PRIuOFF
 "Üen: %" PRIuOFF

30 "\n", 
off£t
, 
Àn
);

32 i‡(
off£t
 > 
img_öfo
->
size
) {

33 
	`tsk_îr‹_ª£t
();

34 
tsk_î∫o
 = 
TSK_ERR_IMG_READ_OFF
;

35 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
, "aff_ªad - %" 
PRIuOFF
, 
off£t
);

39 i‡(
aff_öfo
->
£ek_pos
 !
off£t
) {

40 i‡(
	`af_£ek
(
aff_öfo
->
af_fûe
, 
off£t
, 
SEEK_SET
) != offset) {

41 
	`tsk_îr‹_ª£t
();

43 
tsk_î∫o
 = 
TSK_ERR_IMG_SEEK
;

44 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

45 "aff_ªad - %" 
PRIuOFF
 " - %s", 
off£t
, 
	`°ªº‹
(
î∫o
));

49 
aff_öfo
->
£ek_pos
 = 
off£t
;

52 
˙t
 = 
	`af_ªad
(
aff_öfo
->
af_fûe
, (*Ë
buf
, 
Àn
);

53 i‡(
˙t
 < 0) {

55 
	`tsk_îr‹_ª£t
();

56 
tsk_î∫o
 = 
TSK_ERR_IMG_READ
;

57 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

58 "aff_ªad - off£t: %" 
PRIuOFF
 " -Üí: %" 
PRIuSIZE
 " - %s",

59 
off£t
, 
Àn
, 
	`°ªº‹
(
î∫o
));

65 i‡(
˙t
 == 0) {

68 i‡((
	`af_eof
(
aff_öfo
->
af_fûe
) == 0) &&

69 (
off£t
 + 
Àn
 < 
img_öfo
->
size
)) {

70 
	`mem£t
(
buf
, 0, 
Àn
);

71 
˙t
 = 
Àn
;

75 
aff_öfo
->
£ek_pos
 +
˙t
;

76  
˙t
;

77 
	}
}

80 
	$aff_img°©
(
TSK_IMG_INFO
 * 
img_öfo
, 
FILE
 * 
hFûe
)

82 
IMG_AFF_INFO
 *
aff_öfo
 = (IMG_AFF_INFO *Ë
img_öfo
;

83 
buf
[512];

84 
size_t
 
buf_Àn
 = 512;

87 
	`tsk_Ârötf
(
hFûe
, "IMAGE FILE INFORMATION\n");

88 
	`tsk_Ârötf
(
hFûe
, "--------------------------------------------\n");

89 
	`tsk_Ârötf
(
hFûe
, "Image Type: ");

90 
aff_öfo
->
ty≥
) {

91 
AF_IDENTIFY_AFF
:

92 
	`tsk_Ârötf
(
hFûe
, "AFF\n");

94 
AF_IDENTIFY_AFD
:

95 
	`tsk_Ârötf
(
hFûe
, "AFD\n");

97 
AF_IDENTIFY_AFM
:

98 
	`tsk_Ârötf
(
hFûe
, "AFM\n");

101 
	`tsk_Ârötf
(
hFûe
, "AFFLIB (%d)\n", 
aff_öfo
->
ty≥
);

105 
	`tsk_Ârötf
(
hFûe
, "\nSizêö byãs: %" 
PRIuOFF
 "\n", 
img_öfo
->
size
);

108 i‡(
img_öfo
->
ôy≥
 =
TSK_IMG_TYPE_AFF_ANY
)

111 
	`tsk_Ârötf
(
hFûe
, "\nMD5: ");

112 i‡(
	`af_gë_£g
(
aff_öfo
->
af_fûe
, 
AF_MD5
, 
NULL
, 
buf
, &
buf_Àn
) == 0) {

113 
i
;

114 
i
 = 0; i < 16; i++) {

115 
	`tsk_Ârötf
(
hFûe
, "%x", 
buf
[
i
]);

117 
	`tsk_Ârötf
(
hFûe
, "\n");

120 
	`tsk_Ârötf
(
hFûe
, "SegmentÇot found\n");

123 
buf_Àn
 = 512;

124 
	`tsk_Ârötf
(
hFûe
, "SHA1: ");

125 i‡(
	`af_gë_£g
(
aff_öfo
->
af_fûe
, 
AF_SHA1
, 
NULL
, 
buf
, &
buf_Àn
) == 0) {

126 
i
;

127 
i
 = 0; i < 20; i++) {

128 
	`tsk_Ârötf
(
hFûe
, "%x", 
buf
[
i
]);

130 
	`tsk_Ârötf
(
hFûe
, "\n");

133 
	`tsk_Ârötf
(
hFûe
, "SegmentÇot found\n");

137 
buf_Àn
 = 512;

138 i‡(
	`af_gë_£g
(
aff_öfo
->
af_fûe
, 
AF_CREATOR
, 
NULL
, 
buf
,

139 &
buf_Àn
) == 0) {

140 
buf
[
buf_Àn
] = '\0';

141 
	`tsk_Ârötf
(
hFûe
, "Cª©‹: %s\n", 
buf
);

144 
buf_Àn
 = 512;

145 i‡(
	`af_gë_£g
(
aff_öfo
->
af_fûe
, 
AF_CASE_NUM
, 
NULL
, 
buf
,

146 &
buf_Àn
) == 0) {

147 
buf
[
buf_Àn
] = '\0';

148 
	`tsk_Ârötf
(
hFûe
, "Ca£ Numbî: %s\n", 
buf
);

151 
buf_Àn
 = 512;

152 i‡(
	`af_gë_£g
(
aff_öfo
->
af_fûe
, 
AF_IMAGE_GID
, 
NULL
, 
buf
,

153 &
buf_Àn
) == 0) {

154 
i
;

155 
	`tsk_Ârötf
(
hFûe
, "Image GID: ");

156 
i
 = 0; i < 
buf_Àn
; i++) {

157 
	`tsk_Ârötf
(
hFûe
, "%X", 
buf
[
i
]);

159 
	`tsk_Ârötf
(
hFûe
, "\n");

162 
buf_Àn
 = 512;

163 i‡(
	`af_gë_£g
(
aff_öfo
->
af_fûe
, 
AF_ACQUISITION_DATE
, 
NULL
, 
buf
,

164 &
buf_Àn
) == 0) {

165 
buf
[
buf_Àn
] = '\0';

166 
	`tsk_Ârötf
(
hFûe
, "Acquisôi⁄ D©e: %s\n", 
buf
);

169 
buf_Àn
 = 512;

170 i‡(
	`af_gë_£g
(
aff_öfo
->
af_fûe
, 
AF_ACQUISITION_NOTES
, 
NULL
, 
buf
,

171 &
buf_Àn
) == 0) {

172 
buf
[
buf_Àn
] = '\0';

173 
	`tsk_Ârötf
(
hFûe
, "Acquisôi⁄ NŸes: %s\n", 
buf
);

176 
buf_Àn
 = 512;

177 i‡(
	`af_gë_£g
(
aff_öfo
->
af_fûe
, 
AF_ACQUISITION_DEVICE
, 
NULL
, 
buf
,

178 &
buf_Àn
) == 0) {

179 
buf
[
buf_Àn
] = '\0';

180 
	`tsk_Ârötf
(
hFûe
, "Acquisôi⁄ Devi˚: %s\n", 
buf
);

183 
buf_Àn
 = 512;

184 i‡(
	`af_gë_£g
(
aff_öfo
->
af_fûe
, 
AF_AFFLIB_VERSION
, 
NULL
, 
buf
,

185 &
buf_Àn
) == 0) {

186 
buf
[
buf_Àn
] = '\0';

187 
	`tsk_Ârötf
(
hFûe
, "AFFLib Vîsi⁄: %s\n", 
buf
);

190 
buf_Àn
 = 512;

191 i‡(
	`af_gë_£g
(
aff_öfo
->
af_fûe
, 
AF_DEVICE_MANUFACTURER
, 
NULL
, 
buf
,

192 &
buf_Àn
) == 0) {

193 
buf
[
buf_Àn
] = '\0';

194 
	`tsk_Ârötf
(
hFûe
, "Devi˚ M™uÁ˘uªr: %s\n", 
buf
);

197 
buf_Àn
 = 512;

198 i‡(
	`af_gë_£g
(
aff_öfo
->
af_fûe
, 
AF_DEVICE_MODEL
, 
NULL
, 
buf
,

199 &
buf_Àn
) == 0) {

200 
buf
[
buf_Àn
] = '\0';

201 
	`tsk_Ârötf
(
hFûe
, "Devi˚ Modñ: %s\n", 
buf
);

204 
buf_Àn
 = 512;

205 i‡(
	`af_gë_£g
(
aff_öfo
->
af_fûe
, 
AF_DEVICE_SN
, 
NULL
, 
buf
,

206 &
buf_Àn
) == 0) {

207 
buf
[
buf_Àn
] = '\0';

208 
	`tsk_Ârötf
(
hFûe
, "Devi˚ SN: %s\n", 
buf
);

212 
	}
}

215 
	$aff_˛o£
(
TSK_IMG_INFO
 * 
img_öfo
)

217 
IMG_AFF_INFO
 *
aff_öfo
 = (IMG_AFF_INFO *Ë
img_öfo
;

218 
	`af_˛o£
(
aff_öfo
->
af_fûe
);

219 
	`‰ì
(
aff_öfo
);

220 
	}
}

223 
TSK_IMG_INFO
 *

224 
	$aff_›í
(c⁄° *c⁄° 
images
[], 
a_ssize
)

226 
IMG_AFF_INFO
 *
aff_öfo
;

227 
TSK_IMG_INFO
 *
img_öfo
;

228 
ty≥
;

230 i‡((
aff_öfo
 =

231 (
IMG_AFF_INFO
 *Ë
	`tsk_mÆloc
((IMG_AFF_INFO))Ë=
NULL
) {

232  
NULL
;

235 
img_öfo
 = (
TSK_IMG_INFO
 *Ë
aff_öfo
;

237 
img_öfo
->
ªad
 = 
aff_ªad
;

238 
img_öfo
->
˛o£
 = 
aff_˛o£
;

239 
img_öfo
->
img°©
 = 
aff_img°©
;

241 
img_öfo
->
£˘‹_size
 = 512;

242 i‡(
a_ssize
)

243 
img_öfo
->
£˘‹_size
 = 
a_ssize
;

245 
ty≥
 = 
	`af_idítify_fûe_ty≥
(
images
[0], 1);

246 i‡((
ty≥
 =
AF_IDENTIFY_ERR
Ë|| (ty≥ =
AF_IDENTIFY_NOEXIST
)) {

247 i‡(
tsk_vîbo£
) {

248 
	`tsk_Ârötf
(
°dîr
,

249 "aff_›í: Eº‹ dëîmöögÅy≥ o‡fûe: %" 
PRIâocTSK


250 "\n", 
images
[0]);

251 
	`≥º‹
("aff_open");

253 
	`tsk_îr‹_ª£t
();

254 
tsk_î∫o
 = 
TSK_ERR_IMG_OPEN
;

255 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

256 "aff_›í fûe: %" 
PRIâocTSK
 ": Error checkingÅype",

257 
images
[0]);

258 
tsk_îr°r2
[0] = '\0';

259 
	`‰ì
(
aff_öfo
);

260  
NULL
;

262 i‡(
ty≥
 =
AF_IDENTIFY_AFF
) {

263 
img_öfo
->
ôy≥
 = 
TSK_IMG_TYPE_AFF_AFF
;

265 i‡(
ty≥
 =
AF_IDENTIFY_AFD
) {

266 
img_öfo
->
ôy≥
 = 
TSK_IMG_TYPE_AFF_AFD
;

268 i‡(
ty≥
 =
AF_IDENTIFY_AFM
) {

269 
img_öfo
->
ôy≥
 = 
TSK_IMG_TYPE_AFF_AFM
;

272 
img_öfo
->
ôy≥
 = 
TSK_IMG_TYPE_AFF_ANY
;

275 
aff_öfo
->
af_fûe
 = 
	`af_›í
(
images
[0], 
O_RDONLY
 | 
O_BINARY
, 0);

276 i‡(!
aff_öfo
->
af_fûe
) {

278 
	`tsk_îr‹_ª£t
();

279 
tsk_î∫o
 = 
TSK_ERR_IMG_OPEN
;

280 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

281 "aff_›í fûe: %" 
PRIâocTSK
 ": Error opening - %s",

282 
images
[0], 
	`°ªº‹
(
î∫o
));

283 
	`‰ì
(
aff_öfo
);

284 i‡(
tsk_vîbo£
) {

285 
	`tsk_Ârötf
(
°dîr
, "Error opening AFF/AFD/AFM file\n");

286 
	`≥º‹
("aff_open");

288  
NULL
;

291 i‡(
	`af_ˇ¬Ÿ_de¸y±
(
aff_öfo
->
af_fûe
)) {

292 
	`tsk_îr‹_ª£t
();

293 
tsk_î∫o
 = 
TSK_ERR_IMG_PASSWD
;

294 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

295 "aff_›í fûe: %" 
PRIâocTSK
, 
images
[0]);

296 
	`‰ì
(
aff_öfo
);

297 i‡(
tsk_vîbo£
) {

298 
	`tsk_Ârötf
(
°dîr
, "Error opening AFF/AFD/AFM file (incorrectÖassword)\n");

300  
NULL
;

303 
aff_öfo
->
ty≥
 =Åype;

305 
img_öfo
->
size
 = 
	`af_imagesize
(
aff_öfo
->
af_fûe
);

307 
	`af_£ek
(
aff_öfo
->
af_fûe
, 0, 
SEEK_SET
);

308 
aff_öfo
->
£ek_pos
 = 0;

310  
img_öfo
;

311 
	}
}

	@tsk3/img/aff.h

14 #i‚de‡
_AFF_H


15 
	#_AFF_H


	)

17 #i‡
HAVE_LIBAFFLIB


19 
	~<afÊib/afÊib.h
>

20 
	~<afÊib/afÊib_i.h
>

22 
TSK_IMG_INFO
 *
aff_›í
(c⁄° *c⁄° 
images
[],

23 
a_ssize
);

29 
TSK_IMG_INFO
 
	mimg_öfo
;

30 
AFFILE
 *
	maf_fûe
;

31 
TSK_OFF_T
 
	m£ek_pos
;

32 
uöt16_t
 
	mty≥
;

33 } 
	tIMG_AFF_INFO
;

	@tsk3/img/ewf.c

14 
	~"tsk_img_i.h
"

16 #i‡
HAVE_LIBEWF


17 
	~"ewf.h
"

19 
ssize_t


20 
	$ewf_image_ªad
(
TSK_IMG_INFO
 * 
img_öfo
, 
TSK_OFF_T
 
off£t
, *
buf
,

21 
size_t
 
Àn
)

23 
ssize_t
 
˙t
;

24 
IMG_EWF_INFO
 *
ewf_öfo
 = (IMG_EWF_INFO *Ë
img_öfo
;

26 i‡(
tsk_vîbo£
)

27 
	`tsk_Ârötf
(
°dîr
,

28 "ewf_ªad: byã off£t: %" 
PRIuOFF
 "Üí: %" 
PRIuSIZE
 "\n",

29 
off£t
, 
Àn
);

31 i‡(
off£t
 > 
img_öfo
->
size
) {

32 
	`tsk_îr‹_ª£t
();

33 
tsk_î∫o
 = 
TSK_ERR_IMG_READ_OFF
;

34 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

35 "•lô_ªad - %" 
PRIuOFF
, 
off£t
);

39 
˙t
 = 
	`libewf_ªad_øndom
(
ewf_öfo
->
h™dÀ
, 
buf
, 
Àn
, 
off£t
);

40 i‡(
˙t
 < 0) {

41 
	`tsk_îr‹_ª£t
();

43 
	`tsk_îr‹_ª£t
();

44 
tsk_î∫o
 = 
TSK_ERR_IMG_READ
;

45 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

46 "ewf_ªad - off£t: %" 
PRIuOFF
 " -Üí: %" 
PRIuSIZE
 " - %s",

47 
off£t
, 
Àn
, 
	`°ªº‹
(
î∫o
));

51  
˙t
;

52 
	}
}

55 
	$ewf_image_img°©
(
TSK_IMG_INFO
 * 
img_öfo
, 
FILE
 * 
hFûe
)

57 
IMG_EWF_INFO
 *
ewf_öfo
 = (IMG_EWF_INFO *Ë
img_öfo
;

59 
	`tsk_Ârötf
(
hFûe
, "IMAGE FILE INFORMATION\n");

60 
	`tsk_Ârötf
(
hFûe
, "--------------------------------------------\n");

61 
	`tsk_Ârötf
(
hFûe
, "Image Type:\t\tewf\n");

62 
	`tsk_Ârötf
(
hFûe
, "\nSizêo‡d©®ö byãs:\t%" 
PRIuOFF
 "\n",

63 
img_öfo
->
size
);

65 i‡(
ewf_öfo
->
md5hash_is£t
 == 1) {

66 
	`tsk_Ârötf
(
hFûe
, "MD5 hash o‡d©a:\t%s\n", 
ewf_öfo
->
md5hash
);

69 
	}
}

72 
	$ewf_image_˛o£
(
TSK_IMG_INFO
 * 
img_öfo
)

74 
IMG_EWF_INFO
 *
ewf_öfo
 = (IMG_EWF_INFO *Ë
img_öfo
;

76 
	`libewf_˛o£
(
ewf_öfo
->
h™dÀ
);

77 
	`‰ì
(
img_öfo
);

78 
	}
}

86 
	$img_fûe_hódî_sig«tuª_ncmp
(c⁄° *
fûíame
,

87 c⁄° *
fûe_hódî_sig«tuª
, 
size_of_sig«tuª
)

89 
m©ch
;

90 
ssize_t
 
ªad_cou¡
 = 0;

91 
hódî
[512];

92 
fd
;

94 i‡((
fûíame
 =
NULL
Ë|| (
fûe_hódî_sig«tuª
 == NULL)) {

97 i‡(
size_of_sig«tuª
 <= 0) {

101 i‡((
fd
 = 
	`›í
(
fûíame
, 
O_RDONLY
 | 
O_BINARY
)) < 0) {

102 
	`tsk_îr‹_ª£t
();

103 
tsk_î∫o
 = 
TSK_ERR_IMG_OPEN
;

104 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
, "ewf magicÅesting: %s",

105 
fûíame
);

108 
ªad_cou¡
 = 
	`ªad
(
fd
, 
hódî
, 512);

110 i‡(
ªad_cou¡
 != 512) {

111 
	`tsk_îr‹_ª£t
();

112 
tsk_î∫o
 = 
TSK_ERR_IMG_READ
;

113 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
, "ewf magicÅesting: %s",

114 
fûíame
);

117 
	`˛o£
(
fd
);

119 
m©ch
 = 
	`°∫cmp
(
fûe_hódî_sig«tuª
, 
hódî
, 
size_of_sig«tuª
) == 0;

121  (
m©ch
);

122 
	}
}

126 
TSK_IMG_INFO
 *

127 
	$ewf_›í
(
num_img
, c⁄° 
TSK_TCHAR
 * c⁄° 
images
[],

128 
a_ssize
)

130 
IMG_EWF_INFO
 *
ewf_öfo
;

131 
TSK_IMG_INFO
 *
img_öfo
;

132 #i‡!
	`deföed
–
LIBEWF_STRING_DIGEST_HASH_LENGTH_MD5
 )

133 
uöt8_t
 
md5_hash
[16];

136 i‡((
ewf_öfo
 =

137 (
IMG_EWF_INFO
 *Ë
	`tsk_mÆloc
((IMG_EWF_INFO))Ë=
NULL
) {

138  
NULL
;

141 
img_öfo
 = (
TSK_IMG_INFO
 *Ë
ewf_öfo
;

146 #i‡
	`deföed
 (
TSK_WIN32
)

147 i‡(
	`libewf_check_fûe_sig«tuª_wide
(
images
[0]) == 0) {

149 i‡(
	`libewf_check_fûe_sig«tuª
(
images
[0]) == 0) {

151 
	`tsk_îr‹_ª£t
();

152 
tsk_î∫o
 = 
TSK_ERR_IMG_MAGIC
;

153 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
, "ewf_open: Notán EWF file");

154 
	`‰ì
(
ewf_öfo
);

155 i‡(
tsk_vîbo£
)

156 
	`tsk_Ârötf
(
°dîr
, "Notán EWF file\n");

158  
NULL
;

161 #i‡
	`deföed
 (
TSK_WIN32
)

162 
ewf_öfo
->
h™dÀ
 =

163 
	`libewf_›í_wide
((
wch¨_t
 * c⁄° *Ë
images
, 
num_img
, 
LIBEWF_OPEN_READ
);

165 
ewf_öfo
->
h™dÀ
 =

166 
	`libewf_›í
((*c⁄° *Ë
images
, 
num_img
, 
LIBEWF_OPEN_READ
);

168 i‡(
ewf_öfo
->
h™dÀ
 =
NULL
) {

169 
	`tsk_îr‹_ª£t
();

170 
tsk_î∫o
 = 
TSK_ERR_IMG_OPEN
;

171 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

172 "ewf_›í fûe: %" 
PRIâocTSK
 ": Eº‹ o≥nög", 
images
[0]);

173 
	`‰ì
(
ewf_öfo
);

174 i‡(
tsk_vîbo£
) {

175 
	`tsk_Ârötf
(
°dîr
, "Error opening EWF file\n");

177  
NULL
;

181 #i‡
	`deföed
–
LIBEWF_STRING_DIGEST_HASH_LENGTH_MD5
 )

182 
img_öfo
->
size
 = 
	`libewf_gë_medü_size
(
ewf_öfo
->
h™dÀ
);

183 
ewf_öfo
->
md5hash_is£t
 = 
	`libewf_gë_°‹ed_md5_hash
”wf_öfo->
h™dÀ
,

184 
ewf_öfo
->
md5hash
, 
LIBEWF_STRING_DIGEST_HASH_LENGTH_MD5
);

187 i‡(
	`libewf_gë_medü_size
(
ewf_öfo
->
h™dÀ
,

188 (
size64_t
 *Ë& (
img_öfo
->
size
))

190 
	`tsk_îr‹_ª£t
();

191 
tsk_î∫o
 = 
TSK_ERR_IMG_OPEN
;

192 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

193 "ewf_›í fûe: %" 
PRIâocTSK
 ": Error getting size of image",

194 
images
[0]);

195 
	`‰ì
(
ewf_öfo
);

196 i‡(
tsk_vîbo£
) {

197 
	`tsk_Ârötf
(
°dîr
, "Error getting size of EWF file\n");

199  
NULL
;

202 i‡(
	`libewf_gë_md5_hash
(
ewf_öfo
->
h™dÀ
, 
md5_hash
, 16) == 1) {

203 
md5_°rög_ôî©‹
 = 0;

204 
md5_hash_ôî©‹
;

205 
md5_hash_ôî©‹
 = 0; md5_hash_iterator < 16;

206 
md5_hash_ôî©‹
++) {

207 
digô
 = 
md5_hash
[
md5_hash_ôî©‹
] / 16;

208 i‡(
digô
 <= 9)

209 
ewf_öfo
->
md5hash
[
md5_°rög_ôî©‹
++] = ()

210 ('0' + 
digô
);

212 
ewf_öfo
->
md5hash
[
md5_°rög_ôî©‹
++] = () ('a' +

213 (
digô
 - 10));

214 
digô
 = 
md5_hash
[
md5_hash_ôî©‹
] % 16;

215 i‡(
digô
 <= 9)

216 
ewf_öfo
->
md5hash
[
md5_°rög_ôî©‹
++] =

217 (Ë('0' + 
digô
);

219 
ewf_öfo
->
md5hash
[
md5_°rög_ôî©‹
++] = () ('a' +

220 (
digô
 - 10));

222 
ewf_öfo
->
md5hash_is£t
 = 1;

225 
img_öfo
->
£˘‹_size
 = 512;

226 i‡(
a_ssize
)

227 
img_öfo
->
£˘‹_size
 = 
a_ssize
;

230 
img_öfo
->
ôy≥
 = 
TSK_IMG_TYPE_EWF_EWF
;

231 
img_öfo
->
ªad
 = 
ewf_image_ªad
;

232 
img_öfo
->
˛o£
 = 
ewf_image_˛o£
;

233 
img_öfo
->
img°©
 = 
ewf_image_img°©
;

235  
img_öfo
;

236 
	}
}

	@tsk3/img/ewf.h

16 #i‚de‡
_EWF_H


17 
	#_EWF_H


	)

19 #i‡
HAVE_LIBEWF


21 #i‡
deföed
(
TSK_WIN32
)

22 
	~<c⁄fig_msc.h
>

25 
	~<libewf.h
>

27 #ifde‡
__˝lu•lus


31 
TSK_IMG_INFO
 *
ewf_›í
(, c⁄° 
TSK_TCHAR
 * c⁄° 
images
[],

32 
a_ssize
);

35 
TSK_IMG_INFO
 
	gimg_öfo
;

36 
LIBEWF_HANDLE
 *
	gh™dÀ
;

37 
	gmd5hash
[33];

38 
	gmd5hash_is£t
;

39 } 
	tIMG_EWF_INFO
;

41 #ifde‡
__˝lu•lus


	@tsk3/img/img_io.c

13 
	~"tsk_img_i.h
"

24 
ssize_t


25 
	$tsk_img_ªad
(
TSK_IMG_INFO
 * 
a_img_öfo
, 
TSK_OFF_T
 
a_off
,

26 *
a_buf
, 
size_t
 
a_Àn
)

28 
	#CACHE_AGE
 1000

	)

29 
ssize_t
 
ªtvÆ
 = 0;

30 
i
;

31 
ˇche_√xt
 = 0;

32 
size_t
 
Àn2
;

34 i‡(
a_img_öfo
 =
NULL
) {

35 
	`tsk_îr‹_ª£t
();

36 
tsk_î∫o
 = 
TSK_ERR_IMG_ARG
;

37 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

43 i‡(
a_Àn
 > 
TSK_IMG_INFO_CACHE_LEN
) {

44  
a_img_öfo
->
	`ªad
◊_img_öfo, 
a_off
, 
a_buf
, 
a_Àn
);

47 i‡(
a_off
 >
a_img_öfo
->
size
) {

48 
	`tsk_îr‹_ª£t
();

49 
tsk_î∫o
 = 
TSK_ERR_IMG_READ_OFF
;

50 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
, "tsk_img_ªad - %" 
PRIuOFF
,

51 
a_off
);

57 
Àn2
 = 
a_Àn
;

58 i‡(
a_off
 + 
Àn2
 > 
a_img_öfo
->
size
)

59 
Àn2
 = (
size_t
Ë(
a_img_öfo
->
size
 - 
a_off
);

62 
i
 = 0; i < 
TSK_IMG_INFO_CACHE_NUM
; i++) {

65 i‡(
a_img_öfo
->
ˇche_Àn
[
i
] > 0) {

68 i‡((
ªtvÆ
 =0Ë&& (
a_img_öfo
->
ˇche_off
[
i
] <
a_off
) &&

69 (
a_img_öfo
->
ˇche_off
[
i
] +á_img_öfo->
ˇche_Àn
[i] >=

70 
a_off
 + 
Àn2
)) {

79 
	`mem˝y
(
a_buf
,

80 &
a_img_öfo
->
ˇche
[
i
][
a_off
 -

81 
a_img_öfo
->
ˇche_off
[
i
]], 
Àn2
);

82 
ªtvÆ
 = (
ssize_t
Ë
Àn2
;

85 
a_img_öfo
->
ˇche_age
[
i
] = 
CACHE_AGE
;

93 
a_img_öfo
->
ˇche_age
[
i
]--;

96 i‡((
a_img_öfo
->
ˇche_Àn
[
ˇche_√xt
] > 0)

97 && (
a_img_öfo
->
ˇche_age
[
i
] <

98 
a_img_öfo
->
ˇche_age
[
ˇche_√xt
]))

99 
ˇche_√xt
 = 
i
;

103 
ˇche_√xt
 = 
i
;

108 i‡(
ªtvÆ
 == 0) {

109 
size_t
 
æí
;

112 
a_img_öfo
->
ˇche_off
[
ˇche_√xt
] = (
a_off
 / 512) * 512;

122 
æí
 = 
TSK_IMG_INFO_CACHE_LEN
;

123 i‡(
a_img_öfo
->
ˇche_off
[
ˇche_√xt
] + 
æí
 >á_img_öfo->
size
) {

124 
æí
 =

125 (
size_t
Ë(
a_img_öfo
->
size
 -

126 
a_img_öfo
->
ˇche_off
[
ˇche_√xt
]);

129 
ªtvÆ
 =

130 
a_img_öfo
->
	`ªad
◊_img_öfo,á_img_öfo->
ˇche_off
[
ˇche_√xt
],

131 
a_img_öfo
->
ˇche
[
ˇche_√xt
], 
æí
);

134 i‡(
ªtvÆ
 != -1) {

135 
a_img_öfo
->
ˇche_age
[
ˇche_√xt
] = 
CACHE_AGE
;

136 
a_img_öfo
->
ˇche_Àn
[
ˇche_√xt
] = 
ªtvÆ
;

139 i‡(
a_off
 + 
Àn2
 > 
a_img_öfo
->
ˇche_off
[
ˇche_√xt
] + 
ªtvÆ
)

140 
Àn2
 =

141 (
size_t
Ë(
a_img_öfo
->
ˇche_off
[
ˇche_√xt
] + 
ªtvÆ
 -

142 
a_off
);

144 
	`mem˝y
(
a_buf
,

145 &
a_img_öfo
->
ˇche
[
ˇche_√xt
][
a_off
 -

146 
a_img_öfo
->
ˇche_off
[
ˇche_√xt
]], 
Àn2
);

147 
ªtvÆ
 = (
ssize_t
Ë
Àn2
;

150 
a_img_öfo
->
ˇche_Àn
[
ˇche_√xt
] = 0;

151 
a_img_öfo
->
ˇche_age
[
ˇche_√xt
] = 0;

152 
a_img_öfo
->
ˇche_off
[
ˇche_√xt
] = 0;

156  
ªtvÆ
;

157 
	}
}

	@tsk3/img/img_open.c

17 
	~"tsk_img_i.h
"

19 
	~"øw.h
"

20 
	~"•lô.h
"

21 
	~"qemu_img.h
"

23 #i‡
HAVE_LIBAFFLIB


24 
	tboﬁ
;

25 
	~"aff.h
"

28 #i‡
HAVE_LIBEWF


29 
	~"ewf.h
"

47 
TSK_IMG_INFO
 *

48 
	$tsk_img_›í_sög
(c⁄° 
TSK_TCHAR
 * 
a_image
, 
TSK_IMG_TYPE_ENUM
 
ty≥
,

49 
a_ssize
)

51 c⁄° 
TSK_TCHAR
 *c⁄° 
a
 = 
a_image
;

52  
	`tsk_img_›í
(1, &
a
, 
ty≥
, 
a_ssize
);

53 
	}
}

74 
TSK_IMG_INFO
 *

75 
	$tsk_img_›í
(
num_img
,

76 c⁄° 
TSK_TCHAR
 * c⁄° 
images
[], 
TSK_IMG_TYPE_ENUM
 
ty≥
,

77 
a_ssize
)

79 
TSK_IMG_INFO
 *
img_öfo
 = 
NULL
;

82 
	`tsk_îr‹_ª£t
();

84 i‡((
num_img
 =0Ë|| (
images
[0] =
NULL
)) {

85 
	`tsk_îr‹_ª£t
();

86 
tsk_î∫o
 = 
TSK_ERR_IMG_NOFILE
;

87 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
, "tsk_img_open");

88  
NULL
;

91 i‡((
a_ssize
 > 0) && (a_ssize < 512)) {

92 
	`tsk_îr‹_ª£t
();

93 
tsk_î∫o
 = 
TSK_ERR_IMG_ARG
;

94 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
, "£˘‹ sizêi†Às†th™ 512 byã†(%d)", 
a_ssize
);

95  
NULL
;

98 i‡((
a_ssize
 % 512) != 0) {

99 
	`tsk_îr‹_ª£t
();

100 
tsk_î∫o
 = 
TSK_ERR_IMG_ARG
;

101 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
, "£˘‹ sizêi†nŸá mu…ùÀ o‡512 (%d)", 
a_ssize
);

102  
NULL
;

106 i‡(
tsk_vîbo£
)

107 
	`TFPRINTF
(
°dîr
,

108 
	`_TSK_T
("tsk_img_open: Type: %d NumImg: %d Img1: %s\n"),

109 
ty≥
, 
num_img
, 
images
[0]);

115 i‡(
ty≥
 =
TSK_IMG_TYPE_DETECT
) {

116 
TSK_IMG_INFO
 *
img_£t
 = 
NULL
;

117 #i‡
HAVE_LIBAFFLIB
 || 
HAVE_LIBEWF


118 *
£t
 = 
NULL
;

120 
STAT_STR
 
°©_buf
;

123 
	`tsk_îr‹_ª£t
();

126 #i‡
HAVE_LIBAFFLIB


127 i‡((
img_öfo
 = 
	`aff_›í
(
images
, 
a_ssize
)Ë!
NULL
) {

130 i‡(
img_öfo
->
ôy≥
 =
TSK_IMG_TYPE_AFF_ANY
) {

131 
img_öfo
->
	`˛o£
(img_info);

134 
£t
 = "AFF";

135 
img_£t
 = 
img_öfo
;

140 i‡(
tsk_î∫o
 =
TSK_ERR_IMG_PASSWD
) {

141  
NULL
;

143 
	`tsk_îr‹_ª£t
();

147 #i‡
HAVE_LIBEWF


148 i‡((
img_öfo
 = 
	`ewf_›í
(
num_img
, 
images
, 
a_ssize
)Ë!
NULL
) {

149 i‡(
£t
 =
NULL
) {

150 
£t
 = "EWF";

151 
img_£t
 = 
img_öfo
;

154 
img_£t
->
	`˛o£
(img_set);

155 
img_öfo
->
	`˛o£
(img_info);

156 
	`tsk_îr‹_ª£t
();

157 
tsk_î∫o
 = 
TSK_ERR_IMG_UNKTYPE
;

158 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
, "EWF o∏%s", 
£t
);

159  
NULL
;

163 
	`tsk_îr‹_ª£t
();

167 i‡(
img_£t
 !
NULL
)

168  
img_£t
;

171 i‡(
num_img
 == 1) {

172 i‡((
img_öfo
 = 
	`øw_›í
(
images
[0], 
a_ssize
)Ë!
NULL
) {

173  
img_öfo
;

175 i‡(
tsk_î∫o
) {

176  
NULL
;

180 i‡((
img_öfo
 = 
	`•lô_›í
(
num_img
, 
images
, 
a_ssize
)Ë!
NULL
) {

181  
img_öfo
;

183 i‡(
tsk_î∫o
) {

184  
NULL
;

189 i‡(
	`TSTAT
(
images
[0], &
°©_buf
) < 0) {

191 #i‡
	`deföed
(
TSK_WIN32
Ë|| deföed(
__CYGWIN__
)

192 i‡(
	`TSTRNCMP
(
	`_TSK_T
("\\\\.\\"), 
images
[0], 4) == 0) {

193 i‡(
tsk_vîbo£
)

194 
	`TFPRINTF
(
°dîr
,

195 
_TSK_T


197 
images
[0]);

201 
	`tsk_îr‹_ª£t
();

202 
tsk_î∫o
 = 
TSK_ERR_IMG_STAT
;

203 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
, "%" 
PRIâocTSK
 " : %s",

204 
images
[0], 
	`°ªº‹
(
î∫o
));

205  
NULL
;

206 #i‡
	`deföed
(
TSK_WIN32
Ë|| deföed(
__CYGWIN__
)

211 
tsk_î∫o
 = 
TSK_ERR_IMG_UNKTYPE
;

212 
tsk_îr°r
[0] = '\0';

213 
tsk_îr°r2
[0] = '\0';

214  
NULL
;

222 
ty≥
) {

223 
TSK_IMG_TYPE_RAW_SING
:

227 i‡(
num_img
 > 1)

228 
img_öfo
 = 
	`•lô_›í
(
num_img
, 
images
, 
a_ssize
);

230 
img_öfo
 = 
	`øw_›í
(
images
[0], 
a_ssize
);

233 
TSK_IMG_TYPE_RAW_SPLIT
:

237 i‡(
num_img
 == 1)

238 
img_öfo
 = 
	`øw_›í
(
images
[0], 
a_ssize
);

240 
img_öfo
 = 
	`•lô_›í
(
num_img
, 
images
, 
a_ssize
);

243 #i‡
HAVE_LIBAFFLIB


244 
TSK_IMG_TYPE_AFF_AFF
:

245 
TSK_IMG_TYPE_AFF_AFD
:

246 
TSK_IMG_TYPE_AFF_AFM
:

247 
TSK_IMG_TYPE_AFF_ANY
:

248 
img_öfo
 = 
	`aff_›í
(
images
, 
a_ssize
);

252 #i‡
HAVE_LIBEWF


253 
TSK_IMG_TYPE_EWF_EWF
:

254 
img_öfo
 = 
	`ewf_›í
(
num_img
, 
images
, 
a_ssize
);

257 
TSK_IMG_TYPE_QEMU
:

258 
img_öfo
 = 
	`qemu_›í
(
images
[0], 
a_ssize
);

262 
	`tsk_îr‹_ª£t
();

263 
tsk_î∫o
 = 
TSK_ERR_IMG_UNSUPTYPE
;

264 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
, "%d", 
ty≥
);

265  
NULL
;

268  
img_öfo
;

269 
	}
}

285 
TSK_IMG_INFO
 *

286 
	$tsk_img_›í_utf8_sög
(c⁄° *
a_image
, 
TSK_IMG_TYPE_ENUM
 
ty≥
,

287 
a_ssize
)

289 c⁄° *c⁄° 
a
 = 
a_image
;

290  
	`tsk_img_›í_utf8
(1, &
a
, 
ty≥
, 
a_ssize
);

291 
	}
}

308 
TSK_IMG_INFO
 *

309 
	$tsk_img_›í_utf8
(
num_img
, c⁄° *c⁄° 
images
[],

310 
TSK_IMG_TYPE_ENUM
 
ty≥
, 
a_ssize
)

312 #ifde‡
TSK_WIN32


317 
TSK_IMG_INFO
 *
ªtvÆ
 = 
NULL
;

318 
wch¨_t
 **
images16
;

319 
i
;

322 i‡((
images16
 =

323 (
wch¨_t
 **Ë
	`tsk_mÆloc
((wch¨_à*Ë* 
num_img
)) ==

324 
NULL
) {

325  
NULL
;

328 
i
 = 0; i < 
num_img
; i++) {

329 
size_t
 
ûí
;

330 
UTF16
 *
utf16
;

331 
UTF8
 *
utf8
;

332 
TSKC⁄vîsi⁄Resu…
 
ªtvÆ2
;

335 
ûí
 = 
	`°æí
(
images
[
i
]);

336 i‡((
images16
[
i
] =

337 (
wch¨_t
 *Ë
	`tsk_mÆloc
((
ûí
 +

338 1Ë* (
wch¨_t
))Ë=
NULL
) {

339 
tsk_utf8_˛ónup
;

342 
utf8
 = (
UTF8
 *Ë
images
[
i
];

343 
utf16
 = (
UTF16
 *Ë
images16
[
i
];

345 
ªtvÆ2
 =

346 
	`tsk_UTF8toUTF16
((c⁄° 
UTF8
 **Ë&
utf8
, &utf8[
ûí
],

347 &
utf16
, &utf16[
ûí
], 
TSKÀnõ¡C⁄vîsi⁄
);

348 i‡(
ªtvÆ2
 !
TSKc⁄vîsi⁄OK
) {

349 
tsk_î∫o
 = 
TSK_ERR_IMG_CONVERT
;

350 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

352 
images
[
i
], 
ªtvÆ2
);

353 
tsk_utf8_˛ónup
;

355 *
utf16
 = '\0';

358 
ªtvÆ
 = 
	`tsk_img_›í
(
num_img
, 
images16
, 
ty≥
, 
a_ssize
);

361 
tsk_utf8_˛ónup
:

362 
i
 = 0; i < 
num_img
; i++) {

363 i‡(
images16
[
i
])

364 
	`‰ì
(
images16
[
i
]);

366 
	`‰ì
(
images16
);

368  
ªtvÆ
;

371  
	`tsk_img_›í
(
num_img
, 
images
, 
ty≥
, 
a_ssize
);

373 
	}
}

382 
TSK_IMG_INFO
 *

383 
	$tsk_img_›í_utf16
(
num_img
,

384 
wch¨_t
 * c⁄° 
images
[], 
TSK_IMG_TYPE_ENUM
 
ty≥
)

386 #i‡
TSK_WIN32


387  
	`tsk_img_›í
(
num_img
, 
images
, 
ty≥
);

390 
TSK_IMG_INFO
 *
ªtvÆ
;

391 
i
;

392 **
images8
;

393 
TSK_ENDIAN_ENUM
 
ídün
;

394 
uöt16_t
 
tmp1
;

400 
tmp1
 = 1;

401 i‡(
	`tsk_guess_íd_u16
(&
ídün
, (
uöt8_t
 *Ë& 
tmp1
, 1)) {

403  
NULL
;

408 i‡((
images8
 =

409 (**Ë
	`tsk_mÆloc
((*Ë* 
num_img
)Ë=
NULL
) {

410  
NULL
;

413 
i
 = 0; i < 
num_img
; i++) {

414 
size_t
 
ûí
;

415 
UTF16
 *
utf16
;

416 
UTF8
 *
utf8
;

417 
TSKC⁄vîsi⁄Resu…
 
ªtvÆ2
;

421 
ûí
 = 
	`wc¶í
(
images
[
i
]);

422 
ûí
 <<= 2;

424 i‡((
images8
[
i
] = (*Ë
	`tsk_mÆloc
(
ûí
)Ë=
NULL
) {

425  
NULL
;

428 
utf16
 = (
UTF16
 *Ë
images
[
i
];

429 
utf8
 = (
UTF8
 *Ë
images8
[
i
];

431 
ªtvÆ2
 =

432 
	`tsk_UTF16toUTF8_l˛‹dî
((c⁄° 
UTF16
 **Ë&
utf16
,

433 &
utf16
[
	`wc¶í
(
images
[
i
]Ë+ 1], &
utf8
,

434 &
utf8
[
ûí
 + 1], 
TSKÀnõ¡C⁄vîsi⁄
);

435 i‡(
ªtvÆ2
 !
TSKc⁄vîsi⁄OK
) {

436 
tsk_î∫o
 = 
TSK_ERR_IMG_CONVERT
;

437 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

438 "tsk_img_›í_utf16: Eº‹ c⁄vîtög imagê%d %d", 
i
,

439 
ªtvÆ2
);

440  
NULL
;

442 *
utf8
 = '\0';

445 
ªtvÆ
 = 
	`tsk_img_›í
(
num_img
, (c⁄° 
TSK_TCHAR
 **Ë
images8
, 
ty≥
);

447 
i
 = 0; i < 
num_img
; i++) {

448 
	`‰ì
(
images8
[
i
]);

450 
	`‰ì
(
images8
);

452  
ªtvÆ
;

455 
	}
}

467 
	$tsk_img_˛o£
(
TSK_IMG_INFO
 * 
a_img_öfo
)

469 i‡(
a_img_öfo
 =
NULL
) {

472 
a_img_öfo
->
	`˛o£
(a_img_info);

473 
	}
}

	@tsk3/img/img_types.c

16 
	~"tsk_img_i.h
"

22 *
	m«me
;

23 
uöt8_t
 
	mcode
;

24 *
	mcommít
;

25 } 
	tIMG_TYPES
;

31 
IMG_TYPES
 
	gimg_›í_èbÀ
[] = {

32 {"øw", 
TSK_IMG_TYPE_RAW_SING
, "SingleÑaw file (dd)"},

33 #i‡
HAVE_LIBAFFLIB


34 {"aff", 
TSK_IMG_TYPE_AFF_AFF
, "Advanced Forensic Format"},

35 {"afd", 
TSK_IMG_TYPE_AFF_AFD
, "AFF Multiple File"},

36 {"afm", 
TSK_IMG_TYPE_AFF_AFM
, "AFF withÉxternal metadata"},

37 {"afÊib", 
TSK_IMG_TYPE_AFF_ANY
,

40 #i‡
HAVE_LIBEWF


41 {"ewf", 
TSK_IMG_TYPE_EWF_EWF
, "Expert Witness format (encase)"},

43 {"•lô", 
TSK_IMG_TYPE_RAW_SPLIT
, "SplitÑaw files"},

44 {"QEMU", 
TSK_IMG_TYPE_QEMU
, "QEmu image handler"},

58 
TSK_IMG_TYPE_ENUM


59 
	$tsk_img_ty≥_toid
(c⁄° 
TSK_TCHAR
 * 
°r
)

61 
tmp
[16];

62 
IMG_TYPES
 *
•
;

63 
i
;

65 
i
 = 0; i < 15 && 
°r
[i] != '\0'; i++) {

66 
tmp
[
i
] = (Ë
°r
[i];

68 
tmp
[
i
] = '\0';

70 
•
 = 
img_›í_èbÀ
; sp->
«me
; sp++) {

71 i‡(
	`°rcmp
(
tmp
, 
•
->
«me
) == 0) {

72  
•
->
code
;

75  
TSK_IMG_TYPE_UNSUPP
;

76 
	}
}

87 
	$tsk_img_ty≥_¥öt
(
FILE
 * 
hFûe
)

89 
IMG_TYPES
 *
•
;

90 
	`tsk_Ârötf
(
hFûe
, "Supported image formatÅypes:\n");

91 
•
 = 
img_›í_èbÀ
; sp->
«me
; sp++)

92 
	`tsk_Ârötf
(
hFûe
, "\t%†(%s)\n", 
•
->
«me
, sp->
commít
);

93 
	}
}

102 
	$tsk_img_ty≥_t⁄ame
(
TSK_IMG_TYPE_ENUM
 
ty≥
)

104 
IMG_TYPES
 *
•
;

105 
•
 = 
img_›í_èbÀ
; sp->
«me
; sp++)

106 i‡(
•
->
code
 =
ty≥
)

107  
•
->
«me
;

109  
NULL
;

110 
	}
}

119 
	$tsk_img_ty≥_todesc
(
TSK_IMG_TYPE_ENUM
 
ty≥
)

121 
IMG_TYPES
 *
•
;

122 
•
 = 
img_›í_èbÀ
; sp->
«me
; sp++)

123 i‡(
•
->
code
 =
ty≥
)

124  
•
->
commít
;

126  
NULL
;

127 
	}
}

134 
TSK_IMG_TYPE_ENUM


135 
	$tsk_img_ty≥_suµ‹ãd
()

137 
TSK_IMG_TYPE_ENUM
 
sup_ty≥s
 = 0;

138 
IMG_TYPES
 *
•
;

139 
•
 = 
img_›í_èbÀ
; sp->
«me
; sp++) {

140 
sup_ty≥s
 |
•
->
code
;

142  
sup_ty≥s
;

143 
	}
}

	@tsk3/img/raw.c

18 
	~"tsk_img_i.h
"

19 
	~"øw.h
"

21 #i‡
deföed
(
__APPLE__
)

22 
	~<sys/disk.h
>

25 #ifde‡
TSK_WIN32


26 
	~"wöio˘l.h
"

42 
ssize_t


43 
	$øw_ªad
(
TSK_IMG_INFO
 * 
img_öfo
, 
TSK_OFF_T
 
off£t
, *
buf
, 
size_t
 
Àn
)

45 
ssize_t
 
˙t
;

46 
IMG_RAW_INFO
 *
øw_öfo
 = (IMG_RAW_INFO *Ë
img_öfo
;

48 i‡(
tsk_vîbo£
)

49 
	`tsk_Ârötf
(
°dîr
,

50 "øw_ªad: byã off£t: %" 
PRIuOFF
 "Üí: %" 
PRIuSIZE
 "\n",

51 
off£t
, 
Àn
);

53 i‡(
off£t
 > 
img_öfo
->
size
) {

54 
	`tsk_îr‹_ª£t
();

55 
tsk_î∫o
 = 
TSK_ERR_IMG_READ_OFF
;

56 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
, "øw_ªad - %" 
PRIuOFF
, 
off£t
);

60 #ifde‡
TSK_WIN32


62 
DWORD
 
ƒód
;

64 i‡(
øw_öfo
->
£ek_pos
 !
off£t
) {

65 
LARGE_INTEGER
 
li
;

66 
li
.
QuadP¨t
 = 
off£t
;

68 
li
.
LowP¨t
 = 
	`SëFûePoöãr
(
øw_öfo
->
fd
,Üi.LowPart,

69 &
li
.
HighP¨t
, 
FILE_BEGIN
);

71 i‡((
li
.
LowP¨t
 =
INVALID_SET_FILE_POINTER
Ë&& (
	`GëLa°Eº‹
()

72 !
NO_ERROR
)) {

73 
	`tsk_îr‹_ª£t
();

74 
tsk_î∫o
 = 
TSK_ERR_IMG_SEEK
;

75 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

76 "øw_ªad - %" 
PRIuOFF
, 
off£t
);

79 
øw_öfo
->
£ek_pos
 = 
off£t
;

82 i‡(
FALSE
 =
	`RódFûe
(
øw_öfo
->
fd
, 
buf
, (
DWORD
Ë
Àn
,

83 &
ƒód
, 
NULL
)) {

84 
	`tsk_îr‹_ª£t
();

85 
tsk_î∫o
 = 
TSK_ERR_IMG_READ
;

86 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

87 "øw_ªad - off£t: %" 
PRIuOFF
 " -Üí: %zu", 
off£t
, 
Àn
);

90 
˙t
 = (
ssize_t
Ë
ƒód
;

93 i‡(
øw_öfo
->
£ek_pos
 !
off£t
) {

94 i‡(
	`l£ek
(
øw_öfo
->
fd
, 
off£t
, 
SEEK_SET
) != offset) {

95 
	`tsk_îr‹_ª£t
();

96 
tsk_î∫o
 = 
TSK_ERR_IMG_SEEK
;

97 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

98 "øw_ªad - %" 
PRIuOFF
 " - %s", 
off£t
, 
	`°ªº‹
(
î∫o
));

101 
øw_öfo
->
£ek_pos
 = 
off£t
;

104 
˙t
 = 
	`ªad
(
øw_öfo
->
fd
, 
buf
, 
Àn
);

105 i‡(
˙t
 < 0) {

106 
	`tsk_îr‹_ª£t
();

107 
tsk_î∫o
 = 
TSK_ERR_IMG_READ
;

108 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

109 "øw_ªad - off£t: %" 
PRIuOFF
 " -Üí: %" 
PRIuSIZE
 " - %s",

110 
off£t
, 
Àn
, 
	`°ªº‹
(
î∫o
));

114 
øw_öfo
->
£ek_pos
 +
˙t
;

115  
˙t
;

116 
	}
}

119 
	$øw_img°©
(
TSK_IMG_INFO
 * 
img_öfo
, 
FILE
 * 
hFûe
)

121 
	`tsk_Ârötf
(
hFûe
, "IMAGE FILE INFORMATION\n");

122 
	`tsk_Ârötf
(
hFûe
, "--------------------------------------------\n");

123 
	`tsk_Ârötf
(
hFûe
, "Image Type:Ñaw\n");

124 
	`tsk_Ârötf
(
hFûe
, "\nSizêö byãs: %" 
PRIuOFF
 "\n", 
img_öfo
->
size
);

126 
	}
}

129 
	$øw_˛o£
(
TSK_IMG_INFO
 * 
img_öfo
)

131 
IMG_RAW_INFO
 *
øw_öfo
 = (IMG_RAW_INFO *Ë
img_öfo
;

132 #ifde‡
TSK_WIN32


133 
	`Clo£H™dÀ
(
øw_öfo
->
fd
);

135 
	`˛o£
(
øw_öfo
->
fd
);

137 
	`‰ì
(
øw_öfo
);

138 
	}
}

148 
TSK_IMG_INFO
 *

149 
	$øw_›í
(c⁄° 
TSK_TCHAR
 * 
image
, 
a_ssize
)

151 
IMG_RAW_INFO
 *
øw_öfo
;

152 
TSK_IMG_INFO
 *
img_öfo
;

153 
STAT_STR
 
°©_buf
;

154 
is_wöobj
 = 0;

156 i‡((
øw_öfo
 =

157 (
IMG_RAW_INFO
 *Ë
	`tsk_mÆloc
((IMG_RAW_INFO))Ë=
NULL
)

158  
NULL
;

160 
img_öfo
 = (
TSK_IMG_INFO
 *Ë
øw_öfo
;

162 
img_öfo
->
ôy≥
 = 
TSK_IMG_TYPE_RAW_SING
;

163 
img_öfo
->
ªad
 = 
øw_ªad
;

164 
img_öfo
->
˛o£
 = 
øw_˛o£
;

165 
img_öfo
->
img°©
 = 
øw_img°©
;

167 
img_öfo
->
£˘‹_size
 = 512;

168 i‡(
a_ssize
)

169 
img_öfo
->
£˘‹_size
 = 
a_ssize
;

172 #i‡
	`deföed
(
TSK_WIN32
Ë|| deföed(
__CYGWIN__
)

173 i‡((
image
[0] =
	`_TSK_T
('\\'))

174 && (
image
[1] =
	`_TSK_T
('\\'))

175 && (
image
[2] =
	`_TSK_T
('.'))

176 && (
image
[3] =
	`_TSK_T
('\\'))) {

177 
is_wöobj
 = 1;

180 i‡(
is_wöobj
 == 0) {

182 i‡(
	`TSTAT
(
image
, &
°©_buf
) < 0) {

183 
	`tsk_îr‹_ª£t
();

184 
tsk_î∫o
 = 
TSK_ERR_IMG_STAT
;

185 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

186 "øw_›í: %s", 
	`°ªº‹
(
î∫o
));

187  
NULL
;

189 i‡((
°©_buf
.
°_mode
 & 
S_IFMT
Ë=
S_IFDIR
) {

190 i‡(
tsk_vîbo£
)

191 
	`TFPRINTF
(
°dîr
,

192 
	`_TSK_T
("øw_›í: imagê%†i†®dúe˘‹y\n"), 
image
);

194 
	`tsk_îr‹_ª£t
();

195 
tsk_î∫o
 = 
TSK_ERR_IMG_MAGIC
;

196 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

198  
NULL
;

202 #ifde‡
TSK_WIN32


204 
DWORD
 
dwHi
, 
dwLo
;

206 i‡((
øw_öfo
->
fd
 = 
	`Cª©eFûe
(
image
, 
FILE_READ_DATA
,

207 
FILE_SHARE_READ
, 
NULL
, 
OPEN_EXISTING
, 0, NULL)) ==

208 
INVALID_HANDLE_VALUE
) {

211 i‡((
image
[0] =
	`_TSK_T
('\\')) && (image[1] == _TSK_T('\\')) &&

212 (
image
[2] =
	`_TSK_T
('.')) && (image[3] == _TSK_T('\\'))) {

213 i‡(
tsk_vîbo£
)

214 
	`tsk_Ârötf
(
°dîr
,

217 
øw_öfo
->
fd
 = 
	`Cª©eFûe
(
image
, 
FILE_READ_DATA
,

218 
FILE_SHARE_READ
 | 
FILE_SHARE_WRITE
, 
NULL
,

219 
OPEN_EXISTING
, 0, 
NULL
);

222 i‡(
øw_öfo
->
fd
 =
INVALID_HANDLE_VALUE
) {

223 
	`tsk_îr‹_ª£t
();

224 
tsk_î∫o
 = 
TSK_ERR_IMG_OPEN
;

226 i‡(
	`GëLa°Eº‹
(Ë=
ERROR_ACCESS_DENIED
) {

227 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

228 "øw_›í fûe: %" 
PRIâocTSK
 " (Access Denied)",

229 
image
);

231 i‡(
	`GëLa°Eº‹
(Ë=
ERROR_SHARING_VIOLATION
) {

232 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

233 "øw_›í fûe: %" 
PRIâocTSK


234 " (Sh¨ög Viﬁ©i⁄)", 
image
);

236 i‡(
	`GëLa°Eº‹
(Ë=
ERROR_FILE_NOT_FOUND
) {

237 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

238 "øw_›í fûe: %" 
PRIâocTSK
 " (FileÇot found)",

239 
image
);

242 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

243 "øw_›í fûe: %" 
PRIâocTSK
 " (%d)", 
image
,

244 (Ë
	`GëLa°Eº‹
());

246  
NULL
;

253 i‡(
is_wöobj
 == 0) {

254 
dwLo
 = 
	`GëFûeSize
(
øw_öfo
->
fd
, &
dwHi
);

255 i‡(
dwLo
 == 0xffffffff) {

256 
	`tsk_îr‹_ª£t
();

257 
tsk_î∫o
 = 
TSK_ERR_IMG_OPEN
;

258 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

259 "øw_›í fûe: %" 
PRIâocTSK
 " GetFileSize: %d",

260 
image
, (Ë
	`GëLa°Eº‹
());

261  
NULL
;

263 
img_öfo
->
size
 = 
dwLo
 | ((
TSK_OFF_T
Ë
dwHi
 << 32);

266 
DISK_GEOMETRY
 
pdg
;

267 
DWORD
 
junk
;

269 i‡(
FALSE
 =
	`Devi˚IoC⁄åﬁ
(
øw_öfo
->
fd
,

270 
IOCTL_DISK_GET_DRIVE_GEOMETRY
,

271 
NULL
, 0, &
pdg
, ’dg), &
junk
,

272 (
LPOVERLAPPED
Ë
NULL
)) {

273 
	`tsk_îr‹_ª£t
();

274 
tsk_î∫o
 = 
TSK_ERR_IMG_OPEN
;

275 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

276 "øw_›í fûe: %" 
PRIâocTSK


277 " Devi˚IoC⁄åﬁ: %d", 
image
, (Ë
	`GëLa°Eº‹
());

278  
NULL
;

281 
img_öfo
->
size
 =

282 
pdg
.
Cylödîs
.
QuadP¨t
 *

283 (
TSK_OFF_T
Ë
pdg
.
TøcksPîCylödî
 *

284 (
TSK_OFF_T
Ë
pdg
.
Se˘‹sPîTøck
 *

285 (
TSK_OFF_T
Ë
pdg
.
ByãsPîSe˘‹
;

289 i‡((
øw_öfo
->
fd
 = 
	`›í
(
image
, 
O_RDONLY
 | 
O_BINARY
)) < 0) {

290 
	`tsk_îr‹_ª£t
();

291 
tsk_î∫o
 = 
TSK_ERR_IMG_OPEN
;

292 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

293 "øw_›í fûe: %" 
PRIâocTSK
 " msg: %s", 
image
,

294 
	`°ªº‹
(
î∫o
));

295  
NULL
;

298 #i‡
	`deföed
(
__APPLE__
)

300 i‡((
°©_buf
.
°_mode
 & 
S_IFMT
Ë!
S_IFCHR
) {

301 
img_öfo
->
size
 = 
	`l£ek
(
øw_öfo
->
fd
, 0, 
SEEK_END
);

302 
	`l£ek
(
øw_öfo
->
fd
, 0, 
SEEK_SET
);

305 i‡(
img_öfo
->
size
 == 0) {

306 
blkSize
;

307 
blkC¡
;

309 i‡(
	`io˘l
(
øw_öfo
->
fd
, 
DKIOCGETBLOCKSIZE
, &
blkSize
) >= 0) {

310 i‡(
	`io˘l
(
øw_öfo
->
fd
, 
DKIOCGETBLOCKCOUNT
, &
blkC¡
) >= 0) {

311 
img_öfo
->
size
 = 
blkC¡
 * (Ë
blkSize
;

318 
img_öfo
->
size
 = 
	`l£ek
(
øw_öfo
->
fd
, 0, 
SEEK_END
);

319 
	`l£ek
(
øw_öfo
->
fd
, 0, 
SEEK_SET
);

323 
øw_öfo
->
£ek_pos
 = 0;

325  
img_öfo
;

326 
	}
}

	@tsk3/img/raw.h

14 #i‚de‡
_RAW_H


15 
	#_RAW_H


	)

17 #ifde‡
__˝lu•lus


21 
TSK_IMG_INFO
 *
øw_›í
(c⁄° 
TSK_TCHAR
 *, 
a_ssize
);

24 
TSK_IMG_INFO
 
	gimg_öfo
;

25 #ifde‡
TSK_WIN32


26 
HANDLE
 
	gfd
;

28 
	gfd
;

30 
TSK_OFF_T
 
	g£ek_pos
;

31 } 
	tIMG_RAW_INFO
;

33 #ifde‡
__˝lu•lus


	@tsk3/img/split.c

15 
	~"tsk_img_i.h
"

16 
	~"•lô.h
"

30 
ssize_t


31 
	$•lô_ªad_£gmít
(
IMG_SPLIT_INFO
 * 
•lô_öfo
, 
idx
, *
buf
,

32 
size_t
 
Àn
, 
TSK_OFF_T
 
ªl_off£t
)

34 
IMG_SPLIT_CACHE
 *
cimg
;

35 
ssize_t
 
˙t
;

38 i‡(
•lô_öfo
->
˝å
[
idx
] == -1) {

39 i‡(
tsk_vîbo£
)

40 
	`tsk_Ârötf
(
°dîr
,

41 "•lô_ªad_ønd: o≥nög fûêötÿ¶Ÿ %d %" 
PRIâocTSK


42 "\n", 
•lô_öfo
->
√xt_¶Ÿ
, s∂ô_öfo->
images
[
idx
]);

45 
cimg
 = &
•lô_öfo
->
ˇche
[•lô_öfo->
√xt_¶Ÿ
];

48 i‡(
cimg
->
fd
 != 0) {

49 i‡(
tsk_vîbo£
)

50 
	`tsk_Ârötf
(
°dîr
,

51 "•lô_ªad_ønd: closög fûê%" 
PRIâocTSK
 "\n",

52 
•lô_öfo
->
images
[
cimg
->
image
]);

53 #ifde‡
TSK_WIN32


54 
	`Clo£H™dÀ
(
cimg
->
fd
);

56 
	`˛o£
(
cimg
->
fd
);

58 
•lô_öfo
->
˝å
[
cimg
->
image
] = -1;

61 #ifde‡
TSK_WIN32


62 i‡((
cimg
->
fd
 = 
	`Cª©eFûe
(
•lô_öfo
->
images
[
idx
], 
FILE_READ_DATA
,

63 
FILE_SHARE_READ
, 
NULL
, 
OPEN_EXISTING
, 0,

64 
NULL
)Ë=
INVALID_HANDLE_VALUE
) {

65 
	`tsk_îr‹_ª£t
();

66 
tsk_î∫o
 = 
TSK_ERR_IMG_OPEN
;

67 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

68 "•lô_ªad fûe: %" 
PRIâocTSK
 " msg: %d",

69 
•lô_öfo
->
images
[
idx
], (Ë
	`GëLa°Eº‹
());

73 i‡((
cimg
->
fd
 =

74 
	`›í
(
•lô_öfo
->
images
[
idx
], 
O_RDONLY
 | 
O_BINARY
)) < 0) {

75 
	`tsk_îr‹_ª£t
();

76 
tsk_î∫o
 = 
TSK_ERR_IMG_OPEN
;

77 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

78 "•lô_ªad fûe: %" 
PRIâocTSK
 " msg: %s",

79 
•lô_öfo
->
images
[
idx
], 
	`°ªº‹
(
î∫o
));

83 
cimg
->
image
 = 
idx
;

84 
cimg
->
£ek_pos
 = 0;

85 
•lô_öfo
->
˝å
[
idx
] = s∂ô_öfo->
√xt_¶Ÿ
;

86 i‡(++
•lô_öfo
->
√xt_¶Ÿ
 =
SPLIT_CACHE
) {

87 
•lô_öfo
->
√xt_¶Ÿ
 = 0;

91 
cimg
 = &
•lô_öfo
->
ˇche
[•lô_öfo->
˝å
[
idx
]];

94 #ifde‡
TSK_WIN32


96 
DWORD
 
ƒód
;

97 i‡(
cimg
->
£ek_pos
 !
ªl_off£t
) {

98 
LARGE_INTEGER
 
li
;

99 
li
.
QuadP¨t
 = 
ªl_off£t
;

101 
li
.
LowP¨t
 = 
	`SëFûePoöãr
(
cimg
->
fd
,Üi.LowPart,

102 &
li
.
HighP¨t
, 
FILE_BEGIN
);

104 i‡((
li
.
LowP¨t
 =
INVALID_SET_FILE_POINTER
) &&

105 (
	`GëLa°Eº‹
(Ë!
NO_ERROR
)) {

106 
	`tsk_îr‹_ª£t
();

107 
tsk_î∫o
 = 
TSK_ERR_IMG_SEEK
;

108 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

109 "•lô_ªad - %" 
PRIuOFF
, 
ªl_off£t
);

112 
cimg
->
£ek_pos
 = 
ªl_off£t
;

115 i‡(
FALSE
 =
	`RódFûe
(
cimg
->
fd
, 
buf
, (
DWORD
Ë
Àn
, &
ƒód
, 
NULL
)) {

116 
	`tsk_îr‹_ª£t
();

117 
tsk_î∫o
 = 
TSK_ERR_IMG_READ
;

118 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

119 "•lô_ªad - off£t: %" 
PRIuOFF
 " -Üí: %" 
PRIuSIZE
 "",

120 
ªl_off£t
, 
Àn
);

123 
˙t
 = (
ssize_t
Ë
ƒód
;

126 i‡(
cimg
->
£ek_pos
 !
ªl_off£t
) {

127 i‡(
	`l£ek
(
cimg
->
fd
, 
ªl_off£t
, 
SEEK_SET
) !=Ñel_offset) {

128 
	`tsk_îr‹_ª£t
();

129 
tsk_î∫o
 = 
TSK_ERR_IMG_SEEK
;

130 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

131 "•lô_ªad - %†- %" 
PRIuOFF
 " - %s",

132 
•lô_öfo
->
images
[
idx
], 
ªl_off£t
, 
	`°ªº‹
(
î∫o
));

135 
cimg
->
£ek_pos
 = 
ªl_off£t
;

138 
˙t
 = 
	`ªad
(
cimg
->
fd
, 
buf
, 
Àn
);

139 i‡(
˙t
 < 0) {

140 
	`tsk_îr‹_ª£t
();

141 
tsk_î∫o
 = 
TSK_ERR_IMG_READ
;

142 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

143 "•lô_ªad - off£t: %" 
PRIuOFF


144 " -Üí: %" 
PRIuSIZE
 " - %s", 
ªl_off£t
, 
Àn
,

145 
	`°ªº‹
(
î∫o
));

149 
cimg
->
£ek_pos
 +
˙t
;

151  
˙t
;

152 
	}
}

165 
ssize_t


166 
	$•lô_ªad
(
TSK_IMG_INFO
 * 
img_öfo
, 
TSK_OFF_T
 
off£t
, *
buf
,

167 
size_t
 
Àn
)

169 
IMG_SPLIT_INFO
 *
•lô_öfo
 = (IMG_SPLIT_INFO *Ë
img_öfo
;

170 
i
;

172 i‡(
tsk_vîbo£
)

173 
	`tsk_Ârötf
(
°dîr
,

174 "•lô_ªad: byã off£t: %" 
PRIuOFF
 "Üen: %"

175 
PRIuOFF
 "\n", 
off£t
, 
Àn
);

177 i‡(
off£t
 > 
img_öfo
->
size
) {

178 
	`tsk_îr‹_ª£t
();

179 
tsk_î∫o
 = 
TSK_ERR_IMG_READ_OFF
;

180 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

181 "•lô_ªad - %" 
PRIuOFF
, 
off£t
);

186 
i
 = 0; i < 
•lô_öfo
->
num_img
; i++) {

189 i‡(
off£t
 < 
•lô_öfo
->
max_off
[
i
]) {

190 
TSK_OFF_T
 
ªl_off£t
;

191 
size_t
 
ªad_Àn
;

192 
ssize_t
 
˙t
;

195 i‡(
i
 > 0) {

196 
ªl_off£t
 = 
off£t
 - 
•lô_öfo
->
max_off
[
i
 - 1];

199 
ªl_off£t
 = 
off£t
;

203 i‡((
•lô_öfo
->
max_off
[
i
] - 
off£t
Ë>
Àn
)

204 
ªad_Àn
 = 
Àn
;

206 
ªad_Àn
 = (
size_t
Ë(
•lô_öfo
->
max_off
[
i
] - 
off£t
);

209 i‡(
tsk_vîbo£
)

210 
	`tsk_Ârötf
(
°dîr
,

212 
PRIuOFF
 "Üí: %" PRIuOFF "\n", 
i
, 
ªl_off£t
,

213 
ªad_Àn
);

215 
˙t
 =

216 
	`•lô_ªad_£gmít
(
•lô_öfo
, 
i
, 
buf
, 
ªad_Àn
,

217 
ªl_off£t
);

218 i‡(
˙t
 < 0)

221 i‡((
TSK_OFF_T
Ë
˙t
 !
ªad_Àn
)

222  
˙t
;

225 i‡(((
TSK_OFF_T
Ë
˙t
 =
ªad_Àn
Ë&& (ªad_À¿!
Àn
)) {

226 
ssize_t
 
˙t2
;

228 
Àn
 -
ªad_Àn
;

230 
Àn
 > 0) {

232 
i
++;

234 i‡(
•lô_öfo
->
max_off
[
i
] -

235 
•lô_öfo
->
max_off
[
i
 - 1] >
Àn
)

236 
ªad_Àn
 = 
Àn
;

238 
ªad_Àn
 = (
size_t
)

239 (
•lô_öfo
->
max_off
[
i
] -

240 
•lô_öfo
->
max_off
[
i
 - 1]);

242 i‡(
tsk_vîbo£
)

243 
	`tsk_Ârötf
(
°dîr
,

245 
PRIuOFF
 "\n", 
i
, 
ªad_Àn
);

248 
˙t2
 =

249 
	`•lô_ªad_£gmít
(
•lô_öfo
, 
i
, &
buf
[
˙t
],

250 
ªad_Àn
, 0);

251 i‡(
˙t2
 < 0)

253 
˙t
 +
˙t2
;

255 i‡((
TSK_OFF_T
Ë
˙t2
 !
ªad_Àn
)

256  
˙t
;

258 
Àn
 -
˙t2
;

262  
˙t
;

266 
	`tsk_îr‹_ª£t
();

267 
tsk_î∫o
 = 
TSK_ERR_IMG_READ_OFF
;

268 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

269 "•lô_ªad - %" 
PRIuOFF
 " - %s", 
off£t
, 
	`°ªº‹
(
î∫o
));

271 
	}
}

281 
	$•lô_img°©
(
TSK_IMG_INFO
 * 
img_öfo
, 
FILE
 * 
hFûe
)

283 
IMG_SPLIT_INFO
 *
•lô_öfo
 = (IMG_SPLIT_INFO *Ë
img_öfo
;

284 
i
;

286 
	`tsk_Ârötf
(
hFûe
, "IMAGE FILE INFORMATION\n");

287 
	`tsk_Ârötf
(
hFûe
, "--------------------------------------------\n");

288 
	`tsk_Ârötf
(
hFûe
, "Image Type: split\n");

289 
	`tsk_Ârötf
(
hFûe
, "\nSizêö byãs: %" 
PRIuOFF
 "\n", 
img_öfo
->
size
);

291 
	`tsk_Ârötf
(
hFûe
, "\n--------------------------------------------\n");

292 
	`tsk_Ârötf
(
hFûe
, "Split Information:\n");

294 
i
 = 0; i < 
•lô_öfo
->
num_img
; i++) {

295 
	`tsk_Ârötf
(
hFûe
, "%† (%" 
PRIuOFF
 "Åo %" PRIuOFF ")\n",

296 
•lô_öfo
->
images
[
i
],

297 (
TSK_OFF_T
Ë(
i
 =0Ë? 0 : 
•lô_öfo
->
max_off
[i - 1],

298 (
TSK_OFF_T
Ë(
•lô_öfo
->
max_off
[
i
] - 1));

300 
	}
}

311 
	$•lô_˛o£
(
TSK_IMG_INFO
 * 
img_öfo
)

313 
i
;

314 
IMG_SPLIT_INFO
 *
•lô_öfo
 = (IMG_SPLIT_INFO *Ë
img_öfo
;

315 
i
 = 0; i < 
SPLIT_CACHE
; i++) {

316 i‡(
•lô_öfo
->
ˇche
[
i
].
fd
 != 0)

317 #ifde‡
TSK_WIN32


318 
	`Clo£H™dÀ
(
•lô_öfo
->
ˇche
[
i
].
fd
);

320 
	`˛o£
(
•lô_öfo
->
ˇche
[
i
].
fd
);

323 
	`‰ì
(
•lô_öfo
->
˝å
);

324 
	`‰ì
(
•lô_öfo
);

325 
	}
}

338 
TSK_IMG_INFO
 *

339 
	$•lô_›í
(
num_img
, c⁄° 
TSK_TCHAR
 * c⁄° 
images
[],

340 
a_ssize
)

342 
IMG_SPLIT_INFO
 *
•lô_öfo
;

343 
TSK_IMG_INFO
 *
img_öfo
;

344 
i
;

346 i‡((
•lô_öfo
 =

347 (
IMG_SPLIT_INFO
 *Ë
	`tsk_mÆloc
((IMG_SPLIT_INFO))Ë=
NULL
)

348  
NULL
;

350 
img_öfo
 = (
TSK_IMG_INFO
 *Ë
•lô_öfo
;

352 
img_öfo
->
ôy≥
 = 
TSK_IMG_TYPE_RAW_SPLIT
;

353 
img_öfo
->
ªad
 = 
•lô_ªad
;

354 
img_öfo
->
˛o£
 = 
•lô_˛o£
;

355 
img_öfo
->
img°©
 = 
•lô_img°©
;

357 
img_öfo
->
£˘‹_size
 = 512;

358 i‡(
a_ssize
)

359 
img_öfo
->
£˘‹_size
 = 
a_ssize
;

362 i‡((
•lô_öfo
->
˝å
 =

363 (*Ë
	`tsk_mÆloc
(
num_img
 * ())Ë=
NULL
) {

364 
	`‰ì
(
•lô_öfo
);

365  
NULL
;

368 
	`mem£t
((*Ë&
•lô_öfo
->
ˇche
, 0,

369 
SPLIT_CACHE
 * (
IMG_SPLIT_CACHE
));

370 
•lô_öfo
->
√xt_¶Ÿ
 = 0;

372 
•lô_öfo
->
max_off
 =

373 (
TSK_OFF_T
 *Ë
	`tsk_mÆloc
(
num_img
 * (TSK_OFF_T));

374 i‡(
•lô_öfo
->
max_off
 =
NULL
) {

375 
	`‰ì
(
•lô_öfo
->
˝å
);

376 
	`‰ì
(
•lô_öfo
);

377  
NULL
;

379 
img_öfo
->
size
 = 0;

381 
•lô_öfo
->
num_img
 =Çum_img;

382 
•lô_öfo
->
images
 = images;

388 
i
 = 0; i < 
num_img
; i++) {

389 
STAT_STR
 
sb
;

391 
•lô_öfo
->
˝å
[
i
] = -1;

392 i‡(
	`TSTAT
(
images
[
i
], &
sb
) < 0) {

393 
	`tsk_îr‹_ª£t
();

394 
tsk_î∫o
 = 
TSK_ERR_IMG_STAT
;

395 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

396 "•lô_›í - %" 
PRIâocTSK
 " - %s", 
images
[
i
],

397 
	`°ªº‹
(
î∫o
));

398 
	`‰ì
(
•lô_öfo
->
max_off
);

399 
	`‰ì
(
•lô_öfo
->
˝å
);

400 
	`‰ì
(
•lô_öfo
);

401  
NULL
;

403 i‡((
sb
.
°_mode
 & 
S_IFMT
Ë=
S_IFDIR
) {

404 i‡(
tsk_vîbo£
)

405 
	`tsk_Ârötf
(
°dîr
,

406 "•lô_›í: imagê%" 
PRIâocTSK
 " isá directory\n",

407 
images
[
i
]);

409 
	`tsk_îr‹_ª£t
();

410 
tsk_î∫o
 = 
TSK_ERR_IMG_MAGIC
;

411 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

413  
NULL
;

417 
img_öfo
->
size
 +
sb
.
°_size
;

418 
•lô_öfo
->
max_off
[
i
] = 
img_öfo
->
size
;

420 i‡(
tsk_vîbo£
)

421 
	`tsk_Ârötf
(
°dîr
,

422 "•lô_›í: %d size: %" 
PRIuOFF
 " max offset: %"

423 
PRIuOFF
 " Name: %" 
PRIâocTSK
 "\n", 
i
, 
sb
.
°_size
,

424 
•lô_öfo
->
max_off
[
i
], 
images
[i]);

427  
img_öfo
;

428 
	}
}

	@tsk3/img/split.h

14 #i‚de‡
_SPLIT_H


15 
	#_SPLIT_H


	)

17 #ifde‡
__˝lu•lus


21 
TSK_IMG_INFO
 *
•lô_›í
(, c⁄° 
TSK_TCHAR
 * c⁄° 
images
[],

22 
a_ssize
);

24 
	#SPLIT_CACHE
 15

	)

27 #ifde‡
TSK_WIN32


28 
HANDLE
 
	gfd
;

30 
	gfd
;

32 
	gimage
;

33 
TSK_OFF_T
 
	g£ek_pos
;

34 } 
	tIMG_SPLIT_CACHE
;

37 
TSK_IMG_INFO
 
	gimg_öfo
;

38 
	gnum_img
;

39 c⁄° 
TSK_TCHAR
 *c⁄° *
	gimages
;

40 
TSK_OFF_T
 *
	gmax_off
;

41 *
	g˝å
;

42 
IMG_SPLIT_CACHE
 
	gˇche
[
SPLIT_CACHE
];

43 
	g√xt_¶Ÿ
;

44 } 
	tIMG_SPLIT_INFO
;

46 #ifde‡
__˝lu•lus


	@tsk3/img/tsk_img.h

9 #i‚de‡
_TSK_IMG_H


10 
	#_TSK_IMG_H


	)

24 #ifde‡
__˝lu•lus


32 
	#TSK_IMG_TYPE_ISRAW
(
t
) \

33 ((((
t
Ë& 
TSK_IMG_TYPE_RAW_SING
Ë|| (—Ë& 
TSK_IMG_TYPE_RAW_SPLIT
))?1:0)

	)

39 
	#TSK_IMG_TYPE_ISAFF
(
t
) \

40 ((((
t
Ë& 
TSK_IMG_TYPE_AFF_AFF
Ë|| (—Ë& 
TSK_IMG_TYPE_AFF_AFD
Ë|| (—Ë& 
TSK_IMG_TYPE_AFF_AFM
) || \

41 ((
t
Ë& 
TSK_IMG_TYPE_AFF_ANY
))?1:0)

	)

47 
	#TSK_IMG_TYPE_ISEWF
(
t
) \

48 ((((
t
Ë& 
TSK_IMG_TYPE_EWF_EWF
))?1:0)

	)

57 
TSK_IMG_TYPE_DETECT
 = 0x0000,

59 
TSK_IMG_TYPE_RAW_SING
 = 0x0001,

60 
TSK_IMG_TYPE_RAW_SPLIT
 = 0x0002,

62 
TSK_IMG_TYPE_AFF_AFF
 = 0x0004,

63 
TSK_IMG_TYPE_AFF_AFD
 = 0x0008,

64 
TSK_IMG_TYPE_AFF_AFM
 = 0x0010,

65 
TSK_IMG_TYPE_AFF_ANY
 = 0x0020,

67 
TSK_IMG_TYPE_EWF_EWF
 = 0x0040,

68 
TSK_IMG_TYPE_QEMU
 = 0x0080,

70 
TSK_IMG_TYPE_UNSUPP
 = 0xffff,

71 } 
	tTSK_IMG_TYPE_ENUM
;

73 
	#TSK_IMG_INFO_CACHE_NUM
 4

	)

74 
	#TSK_IMG_INFO_CACHE_LEN
 65536

	)

76 
TSK_IMG_INFO
 
	tTSK_IMG_INFO
;

81 
	sTSK_IMG_INFO
 {

83 
TSK_IMG_TYPE_ENUM
 
ôy≥
;

84 
TSK_OFF_T
 
size
;

85 
£˘‹_size
;

87 
ˇche
[
TSK_IMG_INFO_CACHE_NUM
][
TSK_IMG_INFO_CACHE_LEN
];

88 
TSK_OFF_T
 
ˇche_off
[
TSK_IMG_INFO_CACHE_NUM
];

89 
ˇche_age
[
TSK_IMG_INFO_CACHE_NUM
];

90 
size_t
 
ˇche_Àn
[
TSK_IMG_INFO_CACHE_NUM
];

92 
ssize_t
(*
ªad
Ë(
TSK_IMG_INFO
 * 
img
, 
TSK_OFF_T
 
off
, *
buf
, 
size_t
 
Àn
);

93 (*
˛o£
Ë(
TSK_IMG_INFO
 *);

94 (*
img°©
Ë(
TSK_IMG_INFO
 *, 
FILE
 *);

98 
TSK_IMG_INFO
 *
tsk_img_›í_sög
(c⁄° 
TSK_TCHAR
 * 
a_image
,

99 
TSK_IMG_TYPE_ENUM
 
ty≥
, 
a_ssize
);

100 
TSK_IMG_INFO
 *
tsk_img_›í
(,

101 c⁄° 
TSK_TCHAR
 * c⁄° 
images
[], 
TSK_IMG_TYPE_ENUM
,

102 
a_ssize
);

103 
TSK_IMG_INFO
 *
tsk_img_›í_utf8_sög
(c⁄° *
a_image
,

104 
TSK_IMG_TYPE_ENUM
 
ty≥
, 
a_ssize
);

105 
TSK_IMG_INFO
 *
tsk_img_›í_utf8
(
num_img
,

106 c⁄° *c⁄° 
images
[], 
TSK_IMG_TYPE_ENUM
 
ty≥
,

107 
a_ssize
);

109 
tsk_img_˛o£
(
TSK_IMG_INFO
 *);

112 
ssize_t
 
tsk_img_ªad
(
TSK_IMG_INFO
 * 
img
, 
TSK_OFF_T
 
off
,

113 *
buf
, 
size_t
 
Àn
);

116 
TSK_IMG_TYPE_ENUM
 
tsk_img_ty≥_toid
(c⁄° 
TSK_TCHAR
 *);

117 c⁄° *
tsk_img_ty≥_t⁄ame
(
TSK_IMG_TYPE_ENUM
);

118 c⁄° *
tsk_img_ty≥_todesc
(
TSK_IMG_TYPE_ENUM
);

119 
TSK_IMG_TYPE_ENUM
 
tsk_img_ty≥_suµ‹ãd
();

120 
tsk_img_ty≥_¥öt
(
FILE
 *);

122 #ifde‡
__˝lu•lus


	@tsk3/img/tsk_img_i.h

9 #i‚de‡
_TSK_IMG_I_H


10 
	#_TSK_IMG_I_H


	)

18 
	~"tsk3/ba£/tsk_ba£_i.h
"

21 
	~"tsk_img.h
"

24 
	~<sys/ty≥s.h
>

25 
	~<sys/°©.h
>

26 
	~<°rög.h
>

27 
	~<f˙é.h
>

28 
	~<î∫o.h
>

31 #i‚de‡
O_BINARY


32 
	#O_BINARY
 0

	)

	@tsk3/libtsk.h

1 #i‚de‡
_TSK_LIBTSK_H


2 
	#_TSK_LIBTSK_H


	)

4 
	~"tsk3/ba£/tsk_ba£.h
"

5 
	~"tsk3/img/tsk_img.h
"

6 
	~"tsk3/vs/tsk_vs.h
"

7 
	~"tsk3/fs/tsk_fs.h
"

8 
	~"tsk3/hashdb/tsk_hashdb.h
"

	@tsk3/tsk_incs.h

1 #i‚de‡
_TSK_INCS_H


2 
	#_TSK_INCS_H


	)

6 
	~<uni°d.h
>

7 
	#__STDC_FORMAT_MACROS


	)

8 
	~<öây≥s.h
>

9 
	~<sys/∑øm.h
>

	@tsk3/tsk_tools_i.h

1 #i‚de‡
_TSK_TOOLS_I_H


2 
	#_TSK_TOOLS_I_H


	)

8 
	~"tsk3/ba£/tsk_ba£_i.h
"

9 
	~"tsk3/img/tsk_img.h
"

10 
	~"tsk3/vs/tsk_vs.h
"

11 
	~"tsk3/fs/tsk_fs.h
"

12 
	~"tsk3/hashdb/tsk_hashdb.h
"

	@tsk3/vs/bsd.c

14 
	~"tsk_vs_i.h
"

15 
	~"tsk_bsd.h
"

23 
	$bsd_gë_desc
(
uöt8_t
 
f°y≥
)

25 *
°r
 = 
	`tsk_mÆloc
(64);

26 i‡(
°r
 =
NULL
)

29 
f°y≥
) {

32 
	`°∫˝y
(
°r
, "Unused (0x00)", 64);

35 
	`°∫˝y
(
°r
, "Swap (0x01)", 64);

38 
	`°∫˝y
(
°r
, "Version 6 (0x02)", 64);

41 
	`°∫˝y
(
°r
, "Version 7 (0x03)", 64);

44 
	`°∫˝y
(
°r
, "System V (0x04)", 64);

47 
	`°∫˝y
(
°r
, "4.1BSD (0x05)", 64);

50 
	`°∫˝y
(
°r
, "Eighth Edition (0x06)", 64);

53 
	`°∫˝y
(
°r
, "4.2BSD (0x07)", 64);

56 
	`°∫˝y
(
°r
, "MSDOS (0x08)", 64);

59 
	`°∫˝y
(
°r
, "4.4LFS (0x09)", 64);

62 
	`°∫˝y
(
°r
, "Unknown (0x0A)", 64);

65 
	`°∫˝y
(
°r
, "HPFS (0x0B)", 64);

68 
	`°∫˝y
(
°r
, "ISO9660 (0x0C)", 64);

71 
	`°∫˝y
(
°r
, "Boot (0x0D)", 64);

74 
	`°∫˝y
(
°r
, "Vinum (0x0E)", 64);

77 
	`¢¥ötf
(
°r
, 64, "Unknow¿Ty≥ (0x%.2x)", 
f°y≥
);

81  
°r
;

82 
	}
}

89 
uöt8_t


90 
	$bsd_lﬂd_èbÀ
(
TSK_VS_INFO
 * 
a_vs
)

92 *
£˘_buf
;

93 
bsd_diskœbñ
 *
dœbñ
;

94 
uöt32_t
 
idx
 = 0;

95 
ssize_t
 
˙t
;

96 *
èbÀ_°r
;

97 
TSK_DADDR_T
 
œddr
 = 
a_vs
->
off£t
 /á_vs->
block_size
 + 
BSD_PART_SOFFSET
;

98 
TSK_DADDR_T
 
max_addr
 = (
a_vs
->
img_öfo
->
size
 -á_vs->
off£t
Ë/á_vs->
block_size
;

100 i‡(
tsk_vîbo£
)

101 
	`tsk_Ârötf
(
°dîr
,

102 "bsd_lﬂd_èbÀ: TabÀ Se˘‹: %" 
PRIuDADDR
 "\n", 
œddr
);

104 i‡((
£˘_buf
 = 
	`tsk_mÆloc
(
a_vs
->
block_size
)Ë=
NULL
)

106 
dœbñ
 = (
bsd_diskœbñ
 *Ë
£˘_buf
;

109 
˙t
 = 
tsk_vs_ªad_block


110 (
a_vs
, 
BSD_PART_SOFFSET
, 
£˘_buf
,á_vs->
block_size
);

111 i‡(
˙t
 !
a_vs
->
block_size
) {

112 i‡(
˙t
 >= 0) {

113 
	`tsk_îr‹_ª£t
();

114 
tsk_î∫o
 = 
TSK_ERR_VS_READ
;

116 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

117 "BSD Disk Labñ i¿Se˘‹: %" 
PRIuDADDR
, 
œddr
);

118 
	`‰ì
(
£˘_buf
);

123 i‡(
	`tsk_vs_guessu32
(
a_vs
, 
dœbñ
->
magic
, 
BSD_MAGIC
)) {

124 
	`tsk_îr‹_ª£t
();

125 
tsk_î∫o
 = 
TSK_ERR_VS_MAGIC
;

126 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

128 
PRIuDADDR
 "Ë%" 
PRIx32
, 
œddr
, 
	`tsk_gëu32
(
a_vs
->
ídün
,

129 
dœbñ
->
magic
));

130 
	`‰ì
(
£˘_buf
);

135 i‡(
	`tsk_gëu32
(
a_vs
->
ídün
, 
dœbñ
->
magic2
Ë!
BSD_MAGIC
) {

136 
	`tsk_îr‹_ª£t
();

137 
tsk_î∫o
 = 
TSK_ERR_VS_MAGIC
;

138 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

140 
PRIuDADDR
 "Ë %" 
PRIx32
, 
œddr
, 
	`tsk_gëu32
(
a_vs
->
ídün
,

141 
dœbñ
->
magic2
));

142 
	`‰ì
(
£˘_buf
);

147 i‡((
èbÀ_°r
 = 
	`tsk_mÆloc
(32)Ë=
NULL
) {

148 
	`‰ì
(
£˘_buf
);

152 
	`¢¥ötf
(
èbÀ_°r
, 32, "Partition Table");

153 i‡(
NULL
 =
	`tsk_vs_∑π_add
(
a_vs
, 
BSD_PART_SOFFSET
,

154 (
TSK_DADDR_T
Ë1, 
TSK_VS_PART_FLAG_META
, 
èbÀ_°r
, -1, -1)) {

155 
	`‰ì
(
£˘_buf
);

160 
idx
 = 0; idx < 
	`tsk_gëu16
(
a_vs
->
ídün
, 
dœbñ
->
num_∑πs
); idx++) {

162 
uöt32_t
 
∑π_°¨t
;

163 
uöt32_t
 
∑π_size
;

165 
∑π_°¨t
 = 
	`tsk_gëu32
(
a_vs
->
ídün
, 
dœbñ
->
∑π
[
idx
].
°¨t_£c
);

166 
∑π_size
 = 
	`tsk_gëu32
(
a_vs
->
ídün
, 
dœbñ
->
∑π
[
idx
].
size_£c
);

168 i‡(
tsk_vîbo£
)

169 
	`tsk_Ârötf
(
°dîr
,

170 "lﬂd_èbÀ: %" 
PRIu32
 " Starting Sector: %" PRIu32

171 " Size: %" 
PRIu32
 " Ty≥: %d\n", 
idx
, 
∑π_°¨t
,

172 
∑π_size
, 
dœbñ
->
∑π
[
idx
].
f°y≥
);

174 i‡(
∑π_size
 == 0)

178 i‡((
idx
 < 2Ë&& (
∑π_°¨t
 > 
max_addr
)) {

179 
	`tsk_îr‹_ª£t
();

180 
tsk_î∫o
 = 
TSK_ERR_VS_BLK_NUM
;

181 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

183 
	`‰ì
(
£˘_buf
);

189 i‡(
NULL
 =
	`tsk_vs_∑π_add
(
a_vs
, (
TSK_DADDR_T
Ë
∑π_°¨t
,

190 (
TSK_DADDR_T
Ë
∑π_size
, 
TSK_VS_PART_FLAG_ALLOC
,

191 
	`bsd_gë_desc
(
dœbñ
->
∑π
[
idx
].
f°y≥
), -1, idx)) {

192 
	`‰ì
(
£˘_buf
);

197 
	`‰ì
(
£˘_buf
);

199 
	}
}

203 
	$bsd_˛o£
(
TSK_VS_INFO
 * 
a_vs
)

205 
	`tsk_vs_∑π_‰ì
(
a_vs
);

206 
	`‰ì
(
a_vs
);

207 
	}
}

215 
TSK_VS_INFO
 *

216 
	$tsk_vs_bsd_›í
(
TSK_IMG_INFO
 * 
img_öfo
, 
TSK_DADDR_T
 
off£t
)

218 
TSK_VS_INFO
 *
vs
;

221 
	`tsk_îr‹_ª£t
();

223 
vs
 = (
TSK_VS_INFO
 *Ë
	`tsk_mÆloc
((*vs));

224 i‡(
vs
 =
NULL
)

225  
NULL
;

227 
vs
->
img_öfo
 = img_info;

228 
vs
->
v°y≥
 = 
TSK_VS_TYPE_BSD
;

231 
vs
->
off£t
 = offset;

234 
vs
->
∑π_li°
 = 
NULL
;

235 
vs
->
∑π_cou¡
 = 0;

236 
vs
->
ídün
 = 0;

237 
vs
->
block_size
 = 
img_öfo
->
£˘‹_size
;

240 
vs
->
˛o£
 = 
bsd_˛o£
;

243 i‡(
	`bsd_lﬂd_èbÀ
(
vs
)) {

244 
	`bsd_˛o£
(
vs
);

245  
NULL
;

249 i‡(
	`tsk_vs_∑π_unu£d
(
vs
)) {

250 
	`bsd_˛o£
(
vs
);

251  
NULL
;

254  
vs
;

255 
	}
}

	@tsk3/vs/dos.c

15 
	~"tsk_vs_i.h
"

16 
	~"tsk_dos.h
"

20 
	#dos_is_ext
(
x
) \

21 ((((
x
Ë=0x05Ë|| ((xË=0x0FË|| ((xË=0x85)Ë? 1 : 0)

	)

31 
	$dos_gë_desc
(
uöt8_t
 
±y≥
)

33 
	#DESC_LEN
 64

	)

34 *
°r
 = 
	`tsk_mÆloc
(
DESC_LEN
);

35 i‡(
°r
 =
NULL
)

38 
±y≥
) {

40 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "Empty (0x00)");

43 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "DOS FAT12 (0x01)");

47 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "DOS FAT16 (0x%.2X)", 
±y≥
);

50 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "DOS Extended (0x05)");

53 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "NTFS (0x07)");

56 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "AIX Boot (0x08)");

59 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "AIX Data (0x09)");

63 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "Wö95 FAT32 (0x%.2X)", 
±y≥
);

66 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "Win95 FAT16 (0x0E)");

69 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "Win95 Extended (0x0F)");

72 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "DOS FAT12 Hidden (0x11)");

75 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "Hibernation (0x12)");

79 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "DOS FAT16 Hiddí (0x%.2X)", 
±y≥
);

83 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "Wö95 FAT32 Hiddí (0x%.2X)", 
±y≥
);

86 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "Win95 FAT16 Hidden (0x1E)");

89 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "Win LVM / Secure FS (0x42)");

92 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "GoBack (0x44)");

98 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "OnTøck Disk M™agî (0x%.2X)", 
±y≥
);

101 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "EZ-Drive (0x55)");

105 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "DrivePro (0x57)");

108 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "SpeedStor (0x61)");

111 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "UNIX System V (0x63)");

119 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "Novñ»Nëw¨ê(0x%.2X)", 
±y≥
);

122 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "Linux Swap / Solaris x86 (0x82)");

125 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "Linux (0x83)");

128 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "Hibernation (0x84)");

131 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "Linux Extended (0x85)");

134 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "NTFS Volume Set (0x86)");

137 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "Linux Logical Volume Manager (0x8e)");

140 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "Linux Hidden (0x93)");

143 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "BSD/OS (0x9F)");

147 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "Hibî«ti⁄ (0x%.2X)", 
±y≥
);

150 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "FreeBSD (0xA5)");

153 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "OpenBSD (0xA6)");

156 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "NextSTEP (0xA7)");

159 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "Mac OS X (0xA8)");

162 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "NetBSD (0xA9)");

165 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "Mac OS X (0xAB)");

168 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "BSDI (0xB7)");

171 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "BSDI Swap (0xB8)");

174 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "Solaris 8 Boot (0xBE)");

177 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "Hidden Linux (0xC2)");

180 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "Hidden Linux Swap (0xC3)");

184 
	`¢¥ötf
(
°r
, 
DESC_LEN
,

185 "C‹ru±ed Wödow†NT Vﬁumê/ SåùêSë (0x%.2X)", 
±y≥
);

188 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "GPT Safety Partition (0xEE)");

191 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "VMWare File System (0xFB)");

194 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "VMWare Swap (0xFC)");

198 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "Linux RAID (0xFD)");

201 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "XENIXÑoot (0x02)");

204 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "XENIX /usr (0x03)");

207 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "OS/2 Boot Manager (0x0a)");

218 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "OPUS (0x10)");

221 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "Hidden IFS/HPFS (0x17)");

224 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "AST SmartSleep (0x18)");

233 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "Unu£d (0x%.2X)", 
±y≥
);

246 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "Re£rved (0x%.2X)", 
±y≥
);

249 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "NEC DOS 3.x (0x24)");

252 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "NOS (0x32)");

255 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "JFS on OS/2 orÉCS (0x35)");

258 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "THEOS v3.2 2gb (0x38)");

266 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "THEOS v4 Spanned (0x39)");

269 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "THEOS v4 4gb (0x3a)");

272 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "THEOS v4 Extended (0x3b)");

275 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "PartitionMagic Recovery (0x3c)");

278 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "Hidden NetWare (0x3d)");

281 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "Venix 80286 (0x40)");

284 
	`¢¥ötf
(
°r
, 
DESC_LEN
,

296 
	`¢¥ötf
(
°r
, 
DESC_LEN
,

300 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "Boot-US Boot Manager (0x45)");

311 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "EUMEL/Elan (0x46)");

314 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "EUMEL/Elan (0x47)");

317 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "EUMEL/Elan (0x48)");

320 
	`¢¥ötf
(
°r
, 
DESC_LEN
,

327 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "Oberon (0x4c)");

332 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "QNX 4.x (0x%.2X)", 
±y≥
);

341 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "Microport SysV/AT (0x52)");

350 
	`¢¥ötf
(
°r
, 
DESC_LEN
,

354 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "Priam EDisk (0x5c)");

357 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "DiskSecure Multi-Boot (0x70)");

360 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "Scramdisk (0x74)");

363 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "IBM PC/IX (0x75)");

369 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "VNDI (0x77)");

372 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "XOSL FS (0x78)");

375 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "MINIX <=v1.4a (0x80)");

378 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "MINIX >=v1.4b, Early Linux (0x81)");

384 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "NTFS Volume Set (0x87)");

387 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "Linux Kernel (0x8a)");

390 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "Legacy Fault Tolerant FAT32 (0x8b)");

393 
	`¢¥ötf
(
°r
, 
DESC_LEN
,

397 
	`¢¥ötf
(
°r
, 
DESC_LEN
,

401 
	`¢¥ötf
(
°r
, 
DESC_LEN
,

405 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "Free FDISK Hidden DOS Extended (0x91)");

408 
	`¢¥ötf
(
°r
, 
DESC_LEN
,

412 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "Amoeba Bad Block Table (0x94)");

415 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "MIT EXOPC (0x95)");

418 
	`¢¥ötf
(
°r
, 
DESC_LEN
,

422 
	`¢¥ötf
(
°r
, 
DESC_LEN
,

429 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "DCE376 Logical Drive (0x99)");

432 
	`¢¥ötf
(
°r
, 
DESC_LEN
,

436 
	`¢¥ötf
(
°r
, 
DESC_LEN
,

440 
	`¢¥ötf
(
°r
, 
DESC_LEN
,

444 
	`¢¥ötf
(
°r
, 
DESC_LEN
,

448 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "Olivetti Fat 12 1.44MB Service (0xaa)");

451 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "ShagOS Filesystem (0xae)");

454 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "ShagOS swap (0xaf)");

457 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "BootStar Dummy (0xb0)");

460 
	`¢¥ötf
(
°r
, 
DESC_LEN
,

464 
	`¢¥ötf
(
°r
, 
DESC_LEN
,

468 
	`¢¥ötf
(
°r
, 
DESC_LEN
,

475 
	`¢¥ötf
(
°r
, 
DESC_LEN
,

479 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "Boot Wizard Hidden (0xbb)");

491 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "DR-DOS Secured (0xc0)");

494 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "DR-DOS Secured FAT12 (0xc1)");

497 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "DR-DOS Secured FAT16 <32M (0xc4)");

500 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "DR-DOS Secured Extended (0xc5)");

503 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "Reserved for DR-DOS 8.0+ (0xc8)");

506 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "Reserved for DR-DOS 8.0+ (0xc9)");

509 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "Reserved for DR-DOS 8.0+ (0xca)");

512 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "DR-DOS 7.04+ Secured FAT32 CHS (0xcb)");

515 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "DR-DOS 7.04+ Secured FAT32 LBA (0xcc)");

518 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "CTOS Memdump? (0xcd)");

521 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "DR-DOS 7.04+ FAT16X LBA (0xce)");

524 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "DR-DOS 7.04+ Secured EXT DOS LBA (0xcf)");

530 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "Multiuser DOS Secured (0xd0)");

533 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "Old Multiuser DOS Secured FAT12 (0xd1)");

536 
	`¢¥ötf
(
°r
, 
DESC_LEN
,

540 
	`¢¥ötf
(
°r
, 
DESC_LEN
,

544 
	`¢¥ötf
(
°r
, 
DESC_LEN
,

548 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "CP/M-86 (0xd8)");

551 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "Non-FS Data (0xda)");

554 
	`¢¥ötf
(
°r
, 
DESC_LEN
,

564 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "Hidden CTOS Memdump? (0xdd)");

567 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "Dell Utilities FAT (0xde)");

576 
	`¢¥ötf
(
°r
, 
DESC_LEN
,

580 
	`¢¥ötf
(
°r
, 
DESC_LEN
,

584 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "DOS R/O or SpeedStor (0xe3)");

587 
	`¢¥ötf
(
°r
, 
DESC_LEN
,

591 
	`¢¥ötf
(
°r
, 
DESC_LEN
,

595 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "Storage Dimensions SpeedStor (0xe6)");

598 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "BeOS BFS (0xeb)");

601 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "EFI File System (0xef)");

604 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "Linux/PA-RISC Boot Loader (0xf0)");

607 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "Storage Dimensions SpeedStor (0xf1)");

610 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "DOS 3.3+ Secondary (0xf2)");

613 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "SpeedStor Large (0xf4)");

619 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "Prologue Multi-Volume (0xf5)");

622 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "Storage Dimensions SpeedStor (0xf6)");

625 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "pCache (0xf9)");

628 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "Bochs (0xfa)");

640 
	`¢¥ötf
(
°r
, 
DESC_LEN
,

647 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "Xenix Bad Block Table (0xff)");

650 
	`¢¥ötf
(
°r
, 
DESC_LEN
, "Unknow¿Ty≥ (0x%.2X)", 
±y≥
);

654  
°r
;

655 
	}
}

671 
uöt8_t


672 
	$dos_lﬂd_ext_èbÀ
(
TSK_VS_INFO
 * 
vs
, 
TSK_DADDR_T
 
£˘_cur
,

673 
TSK_DADDR_T
 
£˘_ext_ba£
, 
èbÀ
)

675 
dos_£˘
 *
£˘
;

676 *
£˘_buf
;

677 
i
;

678 *
èbÀ_°r
;

679 
ssize_t
 
˙t
;

680 
TSK_DADDR_T
 
max_addr
 = (
vs
->
img_öfo
->
size
 - vs->
off£t
Ë/ vs->
block_size
;

682 i‡(
tsk_vîbo£
)

683 
	`tsk_Ârötf
(
°dîr
,

684 "dos_lﬂd_ext: TabÀ Se˘‹: %" 
PRIuDADDR


685 ", Prim¨y Ba£ Se˘‹: %" 
PRIuDADDR
 "\n", 
£˘_cur
,

686 
£˘_ext_ba£
);

688 i‡((
£˘_buf
 = 
	`tsk_mÆloc
(
vs
->
block_size
)Ë=
NULL
)

690 
£˘
 = (
dos_£˘
 *Ë
£˘_buf
;

693 
˙t
 = 
	`tsk_vs_ªad_block
(
vs
, 
£˘_cur
, 
£˘_buf
, vs->
block_size
);

694 i‡(
˙t
 !
vs
->
block_size
) {

695 i‡(
˙t
 >= 0) {

696 
	`tsk_îr‹_ª£t
();

697 
tsk_î∫o
 = 
TSK_ERR_VS_READ
;

699 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

700 "Exãnded DOSÅabÀ se˘‹ %" 
PRIuDADDR
, 
£˘_cur
);

701 
	`‰ì
(
£˘_buf
);

706 i‡(
	`tsk_gëu16
(
vs
->
ídün
, 
£˘
->
magic
Ë!
DOS_MAGIC
) {

707 
	`tsk_îr‹_ª£t
();

708 
tsk_î∫o
 = 
TSK_ERR_VS_MAGIC
;

709 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

711 
PRIuDADDR
, 
£˘_cur
);

712 
	`‰ì
(
£˘_buf
);

717 i‡((
èbÀ_°r
 = 
	`tsk_mÆloc
(32)Ë=
NULL
) {

718 
	`‰ì
(
£˘_buf
);

722 
	`¢¥ötf
(
èbÀ_°r
, 32, "Exãnded TabÀ (#%d)", 
èbÀ
);

723 i‡(
NULL
 =
	`tsk_vs_∑π_add
(
vs
, (
TSK_DADDR_T
Ë
£˘_cur
,

724 (
TSK_DADDR_T
Ë1, 
TSK_VS_PART_FLAG_META
, 
èbÀ_°r
, 
èbÀ
,

726 
	`‰ì
(
£˘_buf
);

735 
i
 = 0; i < 4; i++) {

736 
dos_∑π
 *
∑π
 = &
£˘
->
±abÀ
[
i
];

740 
uöt32_t
 
∑π_°¨t
 = 
	`tsk_gëu32
(
vs
->
ídün
, 
∑π
->
°¨t_£c
);

741 
uöt32_t
 
∑π_size
 = 
	`tsk_gëu32
(
vs
->
ídün
, 
∑π
->
size_£c
);

743 i‡(
tsk_vîbo£
)

744 
	`tsk_Ârötf
(
°dîr
,

745 "lﬂd_ext: %d:%d Sèπ: %" 
PRIu32
 " Size: %"

746 
PRIu32
 " Ty≥: %d\n", 
èbÀ
, 
i
, 
∑π_°¨t
, 
∑π_size
,

747 
∑π
->
±y≥
);

749 i‡(
∑π_size
 == 0)

754 i‡(
	`dos_is_ext
(
∑π
->
±y≥
)) {

760 i‡(
NULL
 =
	`tsk_vs_∑π_add
(
vs
,

761 (
TSK_DADDR_T
Ë(
£˘_ext_ba£
 + 
∑π_°¨t
),

762 (
TSK_DADDR_T
Ë
∑π_size
, 
TSK_VS_PART_FLAG_META
,

763 
	`dos_gë_desc
(
∑π
->
±y≥
), 
èbÀ
, 
i
)) {

764 
	`‰ì
(
£˘_buf
);

768 i‡(
£˘_ext_ba£
 + 
∑π_°¨t
 > 
max_addr
) {

769 i‡(
tsk_vîbo£
)

770 
	`tsk_Ârötf
(
°dîr
,

771 "Sèπög se˘‹ %" 
PRIuDADDR


773 
£˘_ext_ba£
 + 
∑π_°¨t
);

776 i‡(
	`dos_lﬂd_ext_èbÀ
(
vs
, 
£˘_ext_ba£
 + 
∑π_°¨t
,

777 
£˘_ext_ba£
, 
èbÀ
 + 1)) {

778 
	`‰ì
(
£˘_buf
);

790 i‡(
NULL
 =
	`tsk_vs_∑π_add
(
vs
,

791 (
TSK_DADDR_T
Ë(
£˘_cur
 + 
∑π_°¨t
),

792 (
TSK_DADDR_T
Ë
∑π_size
, 
TSK_VS_PART_FLAG_ALLOC
,

793 
	`dos_gë_desc
(
∑π
->
±y≥
), 
èbÀ
, 
i
)) {

794 
	`‰ì
(
£˘_buf
);

800 
	`‰ì
(
£˘_buf
);

802 
	}
}

816 
uöt8_t


817 
	$dos_lﬂd_¥im_èbÀ
(
TSK_VS_INFO
 * 
vs
, 
uöt8_t
 
ã°
)

819 
dos_£˘
 *
£˘
;

820 *
£˘_buf
;

821 
i
, 
added
 = 0;

822 *
èbÀ_°r
;

823 
ssize_t
 
˙t
;

824 
TSK_DADDR_T
 
èddr
 = 
vs
->
off£t
 / vs->
block_size
 + 
DOS_PART_SOFFSET
;

825 
TSK_DADDR_T
 
max_addr
 = (
vs
->
img_öfo
->
size
 - vs->
off£t
Ë/ vs->
block_size
;

827 i‡(
tsk_vîbo£
)

828 
	`tsk_Ârötf
(
°dîr
,

829 "dos_lﬂd_¥im: TabÀ Se˘‹: %" 
PRIuDADDR
 "\n", 
èddr
);

831 i‡((
£˘_buf
 = 
	`tsk_mÆloc
(
vs
->
block_size
)Ë=
NULL
)

833 
£˘
 = (
dos_£˘
 *Ë
£˘_buf
;

836 
˙t
 = 
tsk_vs_ªad_block


837 (
vs
, 
DOS_PART_SOFFSET
, 
£˘_buf
, vs->
block_size
);

839 i‡(
˙t
 !
vs
->
block_size
) {

840 i‡(
˙t
 >= 0) {

841 
	`tsk_îr‹_ª£t
();

842 
tsk_î∫o
 = 
TSK_ERR_VS_READ
;

844 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

845 "Prim¨y DOSÅabÀ se˘‹ %" 
PRIuDADDR
, 
èddr
);

846 
	`‰ì
(
£˘_buf
);

852 i‡(
	`tsk_vs_guessu16
(
vs
, 
£˘
->
magic
, 
DOS_MAGIC
)) {

853 
	`tsk_îr‹_ª£t
();

854 
tsk_î∫o
 = 
TSK_ERR_VS_MAGIC
;

855 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

857 
PRIuDADDR
 ")", 
èddr
);

858 
	`‰ì
(
£˘_buf
);

866 i‡(
ã°
) {

867 i‡(
tsk_vîbo£
)

868 
	`tsk_Ârötf
(
°dîr
,

871 i‡(
	`°∫cmp
("MSDOS", 
£˘
->
€m«me
, 5) == 0) {

872 
	`tsk_îr‹_ª£t
();

873 
tsk_î∫o
 = 
TSK_ERR_VS_MAGIC
;

874 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

876 i‡(
tsk_vîbo£
)

877 
	`tsk_Ârötf
(
°dîr
,

879 
	`‰ì
(
£˘_buf
);

882 i‡(
	`°∫cmp
("MSWIN", 
£˘
->
€m«me
, 5) == 0) {

883 
	`tsk_îr‹_ª£t
();

884 
tsk_î∫o
 = 
TSK_ERR_VS_MAGIC
;

885 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

887 i‡(
tsk_vîbo£
)

888 
	`tsk_Ârötf
(
°dîr
,

890 
	`‰ì
(
£˘_buf
);

893 i‡(
	`°∫cmp
("NTFS", 
£˘
->
€m«me
, 4) == 0) {

894 
	`tsk_îr‹_ª£t
();

895 
tsk_î∫o
 = 
TSK_ERR_VS_MAGIC
;

896 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

898 i‡(
tsk_vîbo£
)

899 
	`tsk_Ârötf
(
°dîr
,

901 
	`‰ì
(
£˘_buf
);

904 i‡(
	`°∫cmp
("FAT", 
£˘
->
€m«me
, 4) == 0) {

905 
	`tsk_îr‹_ª£t
();

906 
tsk_î∫o
 = 
TSK_ERR_VS_MAGIC
;

907 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

909 i‡(
tsk_vîbo£
)

910 
	`tsk_Ârötf
(
°dîr
,

912 
	`‰ì
(
£˘_buf
);

918 i‡((
èbÀ_°r
 = 
	`tsk_mÆloc
(32)Ë=
NULL
) {

919 
	`‰ì
(
£˘_buf
);

923 
	`¢¥ötf
(
èbÀ_°r
, 32, "Primary Table (#0)");

924 i‡(
NULL
 =
	`tsk_vs_∑π_add
(
vs
, 
DOS_PART_SOFFSET
, (
TSK_DADDR_T
) 1,

925 
TSK_VS_PART_FLAG_META
, 
èbÀ_°r
, -1, -1)) {

926 
	`‰ì
(
£˘_buf
);

931 
i
 = 0; i < 4; i++) {

932 
dos_∑π
 *
∑π
 = &
£˘
->
±abÀ
[
i
];

935 
uöt32_t
 
∑π_°¨t
 = 
	`tsk_gëu32
(
vs
->
ídün
, 
∑π
->
°¨t_£c
);

936 
uöt32_t
 
∑π_size
 = 
	`tsk_gëu32
(
vs
->
ídün
, 
∑π
->
size_£c
);

938 i‡(
tsk_vîbo£
)

939 
	`tsk_Ârötf
(
°dîr
,

940 "lﬂd_¥i:0:%d Sèπ: %" 
PRIu32
 " Size: %" PRIu32

941 " Ty≥: %d\n", 
i
, 
∑π_°¨t
, 
∑π_size
, 
∑π
->
±y≥
);

943 i‡(
∑π_size
 == 0)

947 i‡((
i
 < 2Ë&& (
∑π_°¨t
 > 
max_addr
)) {

948 
	`tsk_îr‹_ª£t
();

949 
tsk_î∫o
 = 
TSK_ERR_VS_BLK_NUM
;

950 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

952 i‡(
tsk_vîbo£
)

953 
	`tsk_Ârötf
(
°dîr
,

954 "Sèπög se˘‹ %" 
PRIu32
 "ÅooÜarge for image\n",

955 
∑π_°¨t
);

956 
	`‰ì
(
£˘_buf
);

961 i‡((
∑π_°¨t
 + 
∑π_size
Ë> 
max_addr
) {

962 
	`tsk_îr‹_ª£t
();

963 
tsk_î∫o
 = 
TSK_ERR_VS_BLK_NUM


964 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

970 
added
 = 1;

974 i‡(
	`dos_is_ext
(
∑π
->
±y≥
)) {

975 i‡(
NULL
 =
	`tsk_vs_∑π_add
(
vs
, (
TSK_DADDR_T
Ë
∑π_°¨t
,

976 (
TSK_DADDR_T
Ë
∑π_size
, 
TSK_VS_PART_FLAG_META
,

977 
	`dos_gë_desc
(
∑π
->
±y≥
), 0, 
i
)) {

978 
	`‰ì
(
£˘_buf
);

982 i‡(
	`dos_lﬂd_ext_èbÀ
(
vs
, 
∑π_°¨t
,Öart_start, 1)) {

983 
	`‰ì
(
£˘_buf
);

988 i‡(
NULL
 =
	`tsk_vs_∑π_add
(
vs
, (
TSK_DADDR_T
Ë
∑π_°¨t
,

989 (
TSK_DADDR_T
Ë
∑π_size
, 
TSK_VS_PART_FLAG_ALLOC
,

990 
	`dos_gë_desc
(
∑π
->
±y≥
), 0, 
i
)) {

991 
	`‰ì
(
£˘_buf
);

996 
	`‰ì
(
£˘_buf
);

998 i‡(
added
 == 0) {

999 i‡(
tsk_vîbo£
)

1000 
	`tsk_Ârötf
(
°dîr
, "dos_load_prim: No validÉntries\n");

1002 
	`tsk_îr‹_ª£t
();

1003 
tsk_î∫o
 = 
TSK_ERR_VS_MAGIC
;

1004 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

1009 
	}
}

1013 
	$dos_˛o£
(
TSK_VS_INFO
 * 
vs
)

1015 
	`tsk_vs_∑π_‰ì
(
vs
);

1016 
	`‰ì
(
vs
);

1017 
	}
}

1030 
TSK_VS_INFO
 *

1031 
	$tsk_vs_dos_›í
(
TSK_IMG_INFO
 * 
img_öfo
, 
TSK_DADDR_T
 
off£t
, 
uöt8_t
 
ã°
)

1033 
TSK_VS_INFO
 *
vs
;

1036 
	`tsk_îr‹_ª£t
();

1038 
vs
 = (
TSK_VS_INFO
 *Ë
	`tsk_mÆloc
((*vs));

1039 i‡(
vs
 =
NULL
)

1040  
NULL
;

1042 
vs
->
v°y≥
 = 
TSK_VS_TYPE_DOS
;

1043 
vs
->
img_öfo
 = img_info;

1045 
vs
->
off£t
 = offset;

1048 
vs
->
∑π_li°
 = 
NULL
;

1049 
vs
->
∑π_cou¡
 = 0;

1050 
vs
->
ídün
 = 0;

1051 
vs
->
block_size
 = 
img_öfo
->
£˘‹_size
;

1054 
vs
->
˛o£
 = 
dos_˛o£
;

1057 i‡(
	`dos_lﬂd_¥im_èbÀ
(
vs
, 
ã°
)) {

1058 
	`dos_˛o£
(
vs
);

1059  
NULL
;

1063 i‡(
	`tsk_vs_∑π_unu£d
(
vs
)) {

1064 
	`dos_˛o£
(
vs
);

1065  
NULL
;

1068  
vs
;

1069 
	}
}

	@tsk3/vs/gpt.c

14 
	~"tsk_vs_i.h
"

15 
	~"tsk_g±.h
"

16 
	~"tsk_dos.h
"

24 
uöt8_t


25 
	$g±_lﬂd_èbÀ
(
TSK_VS_INFO
 * 
vs
)

27 
g±_hód
 *
hód
;

28 
g±_íåy
 *
ít
;

29 
dos_£˘
 *
dos_∑π
;

30 
i
, 
a
;

31 
uöt32_t
 
ít_size
;

32 *
ß„_°r
, *
hód_°r
, *
èb_°r
, *
ít_buf
;

33 
ssize_t
 
˙t
;

34 *
£˘_buf
;

35 
TSK_DADDR_T
 
èddr
 = 
vs
->
off£t
 / vs->
block_size
 + 
GPT_PART_SOFFSET
;

36 
TSK_DADDR_T
 
max_addr
 = (
vs
->
img_öfo
->
size
 - vs->
off£t
Ë/ vs->
block_size
;

38 i‡(
tsk_vîbo£
)

39 
	`tsk_Ârötf
(
°dîr
, "g±_lﬂd_èbÀ: Se˘‹: %" 
PRIuDADDR
 "\n",

40 
èddr
);

42 i‡((
£˘_buf
 = 
	`tsk_mÆloc
(
vs
->
block_size
)Ë=
NULL
)

44 
dos_∑π
 = (
dos_£˘
 *Ë
£˘_buf
;

46 
˙t
 = 
tsk_vs_ªad_block


47 (
vs
, 
GPT_PART_SOFFSET
, 
£˘_buf
, vs->
block_size
);

49 i‡(
˙t
 !
vs
->
block_size
) {

50 i‡(
˙t
 >= 0) {

51 
	`tsk_îr‹_ª£t
();

52 
tsk_î∫o
 = 
TSK_ERR_VS_READ
;

54 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

56 
PRIuDADDR
, 
èddr
);

57 
	`‰ì
(
£˘_buf
);

62 i‡(
	`tsk_vs_guessu16
(
vs
, 
dos_∑π
->
magic
, 
DOS_MAGIC
)) {

63 
	`tsk_îr‹_ª£t
();

64 
tsk_î∫o
 = 
TSK_ERR_VS_MAGIC
;

65 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

67 
PRIuDADDR
 ")", 
èddr
);

68 
	`‰ì
(
£˘_buf
);

72 i‡(
dos_∑π
->
±abÀ
[0].
±y≥
 !
GPT_DOS_TYPE
) {

73 
	`tsk_îr‹_ª£t
();

74 
tsk_î∫o
 = 
TSK_ERR_VS_MAGIC
;

75 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

77 
dos_∑π
->
±abÀ
[0].
±y≥
);

78 
	`‰ì
(
£˘_buf
);

82 i‡((
ß„_°r
 = 
	`tsk_mÆloc
(16)Ë=
NULL
) {

83 
	`‰ì
(
£˘_buf
);

87 
	`¢¥ötf
(
ß„_°r
, 16, "Safety Table");

88 i‡(
NULL
 =
	`tsk_vs_∑π_add
(
vs
, (
TSK_DADDR_T
) 0, (TSK_DADDR_T) 1,

89 
TSK_VS_PART_FLAG_META
, 
ß„_°r
, -1, -1)) {

90 
	`‰ì
(
£˘_buf
);

96 
hód
 = (
g±_hód
 *Ë
£˘_buf
;

97 
˙t
 = 
tsk_vs_ªad_block


98 (
vs
, 
GPT_PART_SOFFSET
 + 1, 
£˘_buf
, vs->
block_size
);

99 i‡(
˙t
 !
vs
->
block_size
) {

100 i‡(
˙t
 >= 0) {

101 
	`tsk_îr‹_ª£t
();

102 
tsk_î∫o
 = 
TSK_ERR_VS_READ
;

104 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

105 "GPT Hódî såu˘uª i¿Se˘‹: %" 
PRIuDADDR
, 
èddr
 + 1);

106 
	`‰ì
(
£˘_buf
);

111 i‡(
	`tsk_gëu64
(
vs
->
ídün
, &
hód
->
sig«tuª
Ë!
GPT_HEAD_SIG
) {

112 
	`tsk_îr‹_ª£t
();

113 
tsk_î∫o
 = 
TSK_ERR_VS_MAGIC
;

114 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

115 "GPT Hódî: %" 
PRIx64
, 
	`tsk_gëu64
(
vs
->
ídün
,

116 &
hód
->
sig«tuª
));

117 
	`‰ì
(
£˘_buf
);

121 i‡((
hód_°r
 = 
	`tsk_mÆloc
(16)Ë=
NULL
) {

122 
	`‰ì
(
£˘_buf
);

126 
	`¢¥ötf
(
hód_°r
, 16, "GPT Header");

127 i‡(
NULL
 =
	`tsk_vs_∑π_add
(
vs
, (
TSK_DADDR_T
) 1,

128 (
TSK_DADDR_T
Ë((
	`tsk_gëu32
(
vs
->
ídün
,

129 &
hód
->
hód_size_b
) + 511) / 512),

130 
TSK_VS_PART_FLAG_META
, 
hód_°r
, -1, -1)) {

131 
	`‰ì
(
£˘_buf
);

136 
ít_size
 = 
	`tsk_gëu32
(
vs
->
ídün
, &
hód
->
èb_size_b
);

137 i‡(
ít_size
 < (
g±_íåy
)) {

138 
	`tsk_îr‹_ª£t
();

139 
tsk_î∫o
 = 
TSK_ERR_VS_MAGIC
;

140 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

141 "HódîÑï‹t†∑πôi⁄É¡ry sizêo‡%" 
PRIu32


142 "ándÇŸ %" 
PRIuSIZE
 "", 
ít_size
, (
g±_íåy
));

143 
	`‰ì
(
£˘_buf
);

147 i‡((
èb_°r
 = 
	`tsk_mÆloc
(20)Ë=
NULL
) {

148 
	`‰ì
(
£˘_buf
);

152 
	`¢¥ötf
(
èb_°r
, 20, "Partition Table");

153 i‡(
NULL
 =
	`tsk_vs_∑π_add
(
vs
, (
TSK_DADDR_T
Ë
	`tsk_gëu64
(vs->
ídün
,

154 &
hód
->
èb_°¨t_lba
),

155 (
TSK_DADDR_T
Ë((
ít_size
 * 
	`tsk_gëu32
(
vs
->
ídün
,

156 &
hód
->
èb_num_ít
) + 511) / 512),

157 
TSK_VS_PART_FLAG_META
, 
èb_°r
, -1, -1)) {

158 
	`‰ì
(
£˘_buf
);

164 i‡((
ít_buf
 = 
	`tsk_mÆloc
(
vs
->
block_size
)Ë=
NULL
) {

165 
	`‰ì
(
£˘_buf
);

169 
i
 = 0;

170 
a
 = 0; 
i
 < 
	`tsk_gëu32
(
vs
->
ídün
, &
hód
->
èb_num_ít
);á++) {

171 *
«me
;

174 
˙t
 = 
	`tsk_vs_ªad_block
(
vs
,

175 
	`tsk_gëu64
(
vs
->
ídün
, &
hód
->
èb_°¨t_lba
Ë+ 
a
,

176 
ít_buf
, 
vs
->
block_size
);

177 i‡(
˙t
 !
vs
->
block_size
) {

178 i‡(
˙t
 >= 0) {

179 
	`tsk_îr‹_ª£t
();

180 
tsk_î∫o
 = 
TSK_ERR_VS_READ
;

182 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

184 
PRIuDADDR
, 
	`tsk_gëu64
(
vs
->
ídün
,

185 &
hód
->
èb_°¨t_lba
Ë+ 
a
);

186 
	`‰ì
(
ít_buf
);

187 
	`‰ì
(
£˘_buf
);

192 
ít
 = (
g±_íåy
 *Ë
ít_buf
;

193 ; (
uöçå_t
Ë
ít
 < (uöçå_tË
ít_buf
 + 
vs
->
block_size
 &&

194 
i
 < 
	`tsk_gëu32
(
vs
->
ídün
, &
hód
->
èb_num_ít
); i++) {

196 
UTF16
 *
«me16
;

197 
UTF8
 *
«me8
;

198 
ªtVÆ
;

200 i‡(
tsk_vîbo£
)

201 
	`tsk_Ârötf
(
°dîr
,

202 "g±_lﬂd: %d Sèπög Se˘‹: %" 
PRIu64


203 " End: %" 
PRIu64
 " Fœg: %" 
PRIx64
 "\n", 
i
,

204 
	`tsk_gëu64
(
vs
->
ídün
, 
ít
->
°¨t_lba
),

205 
	`tsk_gëu64
(
vs
->
ídün
, 
ít
->
íd_lba
),

206 
	`tsk_gëu64
(
vs
->
ídün
, 
ít
->
Êags
));

209 i‡(
	`tsk_gëu64
(
vs
->
ídün
, 
ít
->
°¨t_lba
) == 0) {

210 
ít
++;

215 i‡((
i
 < 2)

216 && (
	`tsk_gëu64
(
vs
->
ídün
, 
ít
->
°¨t_lba
Ë> 
max_addr
)) {

217 
	`tsk_îr‹_ª£t
();

218 
tsk_î∫o
 = 
TSK_ERR_VS_BLK_NUM
;

219 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

221 
	`‰ì
(
£˘_buf
);

222 
	`‰ì
(
ít_buf
);

227 i‡((
«me
 = 
	`tsk_mÆloc
(256)Ë=
NULL
) {

228 
	`‰ì
(
£˘_buf
);

229 
	`‰ì
(
ít_buf
);

233 
«me16
 = (
UTF16
 *Ë((
uöçå_t
Ë
ít
->
«me
);

234 
«me8
 = (
UTF8
 *Ë
«me
;

236 
ªtVÆ
 =

237 
	`tsk_UTF16toUTF8
(
vs
->
ídün
, (c⁄° 
UTF16
 **Ë&
«me16
,

238 (
UTF16
 *Ë((
uöçå_t
Ë
«me16
 + (
ít
->
«me
)),

239 &
«me8
,

240 (
UTF8
 *Ë((
uöçå_t
Ë
«me8
 + 256), 
TSKÀnõ¡C⁄vîsi⁄
);

242 i‡(
ªtVÆ
 !
TSKc⁄vîsi⁄OK
) {

243 i‡(
tsk_vîbo£
)

244 
	`tsk_Ârötf
(
°dîr
,

246 
ªtVÆ
);

247 *
«me
 = '\0';

250 i‡(
NULL
 =
	`tsk_vs_∑π_add
(
vs
,

251 (
TSK_DADDR_T
Ë
	`tsk_gëu64
(
vs
->
ídün
, 
ít
->
°¨t_lba
),

252 (
TSK_DADDR_T
Ë(
	`tsk_gëu64
(
vs
->
ídün
,

253 
ít
->
íd_lba
Ë- 
	`tsk_gëu64
(
vs
->
ídün
,

254 
ít
->
°¨t_lba
Ë+ 1), 
TSK_VS_PART_FLAG_ALLOC
,

255 
«me
, -1, 
i
)) {

256 
	`‰ì
(
£˘_buf
);

257 
	`‰ì
(
ít_buf
);

261 
ít
++;

265 
	`‰ì
(
£˘_buf
);

266 
	`‰ì
(
ít_buf
);

268 
	}
}

271 
	$g±_˛o£
(
TSK_VS_INFO
 * 
vs
)

273 
	`tsk_vs_∑π_‰ì
(
vs
);

274 
	`‰ì
(
vs
);

275 
	}
}

277 
TSK_VS_INFO
 *

278 
	$tsk_vs_g±_›í
(
TSK_IMG_INFO
 * 
img_öfo
, 
TSK_DADDR_T
 
off£t
)

280 
TSK_VS_INFO
 *
vs
;

283 
	`tsk_îr‹_ª£t
();

285 
vs
 = (
TSK_VS_INFO
 *Ë
	`tsk_mÆloc
((*vs));

286 i‡(
vs
 =
NULL
)

287  
NULL
;

289 
vs
->
img_öfo
 = img_info;

290 
vs
->
v°y≥
 = 
TSK_VS_TYPE_GPT
;

293 
vs
->
off£t
 = offset;

296 
vs
->
∑π_li°
 = 
NULL
;

297 
vs
->
∑π_cou¡
 = 0;

298 
vs
->
ídün
 = 0;

299 
vs
->
block_size
 = 
img_öfo
->
£˘‹_size
;

302 
vs
->
˛o£
 = 
g±_˛o£
;

305 i‡(
	`g±_lﬂd_èbÀ
(
vs
)) {

306 
	`g±_˛o£
(
vs
);

307  
NULL
;

311 i‡(
	`tsk_vs_∑π_unu£d
(
vs
)) {

312 
	`g±_˛o£
(
vs
);

313  
NULL
;

316  
vs
;

317 
	}
}

	@tsk3/vs/mac.c

14 
	~"tsk_vs_i.h
"

15 
	~"tsk_mac.h
"

25 
uöt8_t


26 
	$mac_lﬂd_èbÀ
(
TSK_VS_INFO
 * 
vs
)

28 *
∑π_buf
;

29 
mac_∑π
 *
∑π
;

30 *
èbÀ_°r
;

31 
uöt32_t
 
idx
, 
max_∑π
;

32 
TSK_DADDR_T
 
èddr
 = 
vs
->
off£t
 / vs->
block_size
 + 
MAC_PART_SOFFSET
;

33 
TSK_DADDR_T
 
max_addr
 = (
vs
->
img_öfo
->
size
 - vs->
off£t
Ë/ vs->
block_size
;

35 i‡(
tsk_vîbo£
)

36 
	`tsk_Ârötf
(
°dîr
, "mac_lﬂd_èbÀ: Se˘‹: %" 
PRIuDADDR
 "\n",

37 
èddr
);

43 i‡((
∑π_buf
 = 
	`tsk_mÆloc
(
vs
->
block_size
)Ë=
NULL
)

45 
∑π
 = (
mac_∑π
 *Ë
∑π_buf
;

47 
max_∑π
 = 1;

48 
idx
 = 0; idx < 
max_∑π
; idx++) {

49 
uöt32_t
 
∑π_°¨t
;

50 
uöt32_t
 
∑π_size
;

51 *
°r
;

52 
ssize_t
 
˙t
;

56 
˙t
 = 
tsk_vs_ªad_block


57 (
vs
, 
MAC_PART_SOFFSET
 + 
idx
, 
∑π_buf
, vs->
block_size
);

60 i‡(
˙t
 !
vs
->
block_size
) {

61 i‡(
˙t
 >= 0) {

62 
	`tsk_îr‹_ª£t
();

63 
tsk_î∫o
 = 
TSK_ERR_VS_READ
;

65 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

66 "MAC P¨tôi⁄É¡ry %" 
PRIuDADDR
, 
èddr
 + 
idx
);

67 
	`‰ì
(
∑π_buf
);

73 i‡(
idx
 == 0) {

75 i‡(
	`tsk_vs_guessu16
(
vs
, 
∑π
->
magic
, 
MAC_MAGIC
)) {

76 
	`tsk_îr‹_ª£t
();

77 
tsk_î∫o
 = 
TSK_ERR_VS_MAGIC
;

78 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

80 
PRIuDADDR
 "Ë%" 
PRIx16
,

81 (
èddr
 + 
idx
), 
	`tsk_gëu16
(
vs
->
ídün
, 
∑π
->
magic
));

82 i‡(
tsk_vîbo£
)

83 
	`tsk_Ârötf
(
°dîr
,

85 
	`‰ì
(
∑π_buf
);

90 
max_∑π
 = 
	`tsk_gëu32
(
vs
->
ídün
, 
∑π
->
pm≠_size
);

92 i‡(
	`tsk_gëu16
(
vs
->
ídün
, 
∑π
->
magic
Ë!
MAC_MAGIC
) {

93 
	`tsk_îr‹_ª£t
();

94 
tsk_î∫o
 = 
TSK_ERR_VS_MAGIC
;

95 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

97 
PRIuDADDR
 "Ë%" 
PRIx16
, (
èddr
 + 
idx
),

98 
	`tsk_gëu16
(
vs
->
ídün
, 
∑π
->
magic
));

99 i‡(
tsk_vîbo£
)

100 
	`tsk_Ârötf
(
°dîr
,

101 "mac_lﬂd: Missög magi¯vÆuêöÉ¡ry %" 
PRIu32
 "\n",

102 
idx
);

103 
	`‰ì
(
∑π_buf
);

108 
∑π_°¨t
 = 
	`tsk_gëu32
(
vs
->
ídün
, 
∑π
->
°¨t_£c
);

109 
∑π_size
 = 
	`tsk_gëu32
(
vs
->
ídün
, 
∑π
->
size_£c
);

111 i‡(
tsk_vîbo£
)

112 
	`tsk_Ârötf
(
°dîr
,

113 "mac_lﬂd: %" 
PRIu32
 " Starting Sector: %" PRIu32

114 " Size: %" 
PRIu32
 " Ty≥: %s\n", 
idx
, 
∑π_°¨t
,

115 
∑π_size
, 
∑π
->
ty≥
);

117 i‡(
∑π_size
 == 0)

121 i‡((
idx
 < 2Ë&& (
∑π_°¨t
 > 
max_addr
)) {

122 
	`tsk_îr‹_ª£t
();

123 
tsk_î∫o
 = 
TSK_ERR_VS_BLK_NUM
;

124 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

126 i‡(
tsk_vîbo£
)

127 
	`tsk_Ârötf
(
°dîr
,

129 
PRIu32
 " v†%" PRIu32 ")\n", 
∑π_°¨t
, 
max_addr
);

130 
	`‰ì
(
∑π_buf
);

135 i‡((
°r
 = 
	`tsk_mÆloc
((
∑π
->
«me
))Ë=
NULL
) {

136 
	`‰ì
(
∑π_buf
);

140 
	`°∫˝y
(
°r
, (*Ë
∑π
->
ty≥
, ’¨t->
«me
));

142 i‡(
NULL
 =
	`tsk_vs_∑π_add
(
vs
, (
TSK_DADDR_T
Ë
∑π_°¨t
,

143 (
TSK_DADDR_T
Ë
∑π_size
, 
TSK_VS_PART_FLAG_ALLOC
, 
°r
, -1,

144 
idx
))

147 
	`‰ì
(
∑π_buf
);

148 
∑π_buf
 = 
NULL
;

151 i‡((
èbÀ_°r
 = 
	`tsk_mÆloc
(16)Ë=
NULL
) {

155 
	`¢¥ötf
(
èbÀ_°r
, 16, "Table");

156 i‡(
NULL
 =
	`tsk_vs_∑π_add
(
vs
, 
èddr
, 
max_∑π
, 
TSK_VS_PART_FLAG_META
,

157 
èbÀ_°r
, -1, -1)) {

162 
	}
}

166 
	$mac_˛o£
(
TSK_VS_INFO
 * 
vs
)

168 
	`tsk_vs_∑π_‰ì
(
vs
);

169 
	`‰ì
(
vs
);

170 
	}
}

176 
TSK_VS_INFO
 *

177 
	$tsk_vs_mac_›í
(
TSK_IMG_INFO
 * 
img_öfo
, 
TSK_DADDR_T
 
off£t
)

179 
TSK_VS_INFO
 *
vs
;

182 
	`tsk_îr‹_ª£t
();

184 
vs
 = (
TSK_VS_INFO
 *Ë
	`tsk_mÆloc
((*vs));

185 i‡(
vs
 =
NULL
)

186  
NULL
;

188 
vs
->
img_öfo
 = img_info;

189 
vs
->
v°y≥
 = 
TSK_VS_TYPE_MAC
;

192 
vs
->
off£t
 = offset;

197 
vs
->
∑π_li°
 = 
NULL
;

198 
vs
->
∑π_cou¡
 = 0;

199 
vs
->
ídün
 = 0;

200 
vs
->
block_size
 = 
img_öfo
->
£˘‹_size
;

203 
vs
->
˛o£
 = 
mac_˛o£
;

206 i‡(
	`mac_lﬂd_èbÀ
(
vs
)) {

209 
uöt8_t
 
ªtu∫NuŒ
 = 1;

210 i‡(
vs
->
block_size
 == 512) {

211 i‡(
tsk_vîbo£
)

212 
	`tsk_Ârötf
(
°dîr
,

214 
vs
->
block_size
 = 4096;

215 
ªtu∫NuŒ
 = 
	`mac_lﬂd_èbÀ
(
vs
);

217 i‡(
vs
->
block_size
 == 4096) {

218 i‡(
tsk_vîbo£
)

219 
	`tsk_Ârötf
(
°dîr
,

221 
vs
->
block_size
 = 512;

222 
ªtu∫NuŒ
 = 
	`mac_lﬂd_èbÀ
(
vs
);

225 i‡(
ªtu∫NuŒ
) {

226 
	`mac_˛o£
(
vs
);

227  
NULL
;

232 i‡(
	`tsk_vs_∑π_unu£d
(
vs
)) {

233 
	`mac_˛o£
(
vs
);

234  
NULL
;

237  
vs
;

238 
	}
}

	@tsk3/vs/mm_io.c

16 
	~<î∫o.h
>

17 
	~"tsk_vs_i.h
"

30 
ssize_t


31 
	$tsk_vs_ªad_block
(
TSK_VS_INFO
 * 
a_vs
, 
TSK_DADDR_T
 
a_addr
, *
a_buf
,

32 
size_t
 
a_Àn
)

34 i‡(
a_Àn
 % 
a_vs
->
block_size
) {

35 
	`tsk_îr‹_ª£t
();

36 
tsk_î∫o
 = 
TSK_ERR_VS_READ
;

37 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

38 "tsk_vs_ªad_block:Üígth %" 
PRIuSIZE
 ""

39 "ÇŸá mu…ùÀ o‡%d", 
a_Àn
, 
a_vs
->
block_size
);

43  
	`tsk_img_ªad
(
a_vs
->
img_öfo
,

44 
a_vs
->
off£t
 + (
TSK_OFF_T
Ë(
a_addr
 *á_vs->
block_size
),

45 
a_buf
, 
a_Àn
);

46 
	}
}

59 
ssize_t


60 
	$tsk_vs_∑π_ªad
(c⁄° 
TSK_VS_PART_INFO
 * 
a_vs_∑π
, 
TSK_OFF_T
 
a_off
,

61 *
a_buf
, 
size_t
 
a_Àn
)

63 
TSK_VS_INFO
 *
vs
 = 
a_vs_∑π
->vs;

65  
	`tsk_img_ªad
(
vs
->
img_öfo
,

66 
vs
->
off£t
 + (
TSK_OFF_T
Ë
a_vs_∑π
->
°¨t
 * vs->
block_size
 +

67 
a_off
, 
a_buf
, 
a_Àn
);

68 
	}
}

80 
ssize_t


81 
	$tsk_vs_∑π_ªad_block
(c⁄° 
TSK_VS_PART_INFO
 * 
a_vs_∑π
,

82 
TSK_DADDR_T
 
a_addr
, *
a_buf
, 
size_t
 
a_Àn
)

84 
TSK_VS_INFO
 *
vs
 = 
a_vs_∑π
->vs;

86 i‡(
a_Àn
 % 
vs
->
block_size
) {

87 
	`tsk_îr‹_ª£t
();

88 
tsk_î∫o
 = 
TSK_ERR_VS_READ
;

89 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

90 "tsk_vs_∑π_ªad_block:Üígth %" 
PRIuSIZE
 ""

91 "ÇŸá mu…ùÀ o‡%d", 
a_Àn
, 
vs
->
block_size
);

95  
	`tsk_img_ªad
(
vs
->
img_öfo
,

96 
vs
->
off£t
 + (
TSK_OFF_T
Ë(
a_vs_∑π
->
°¨t
 +

97 
a_addr
Ë* 
vs
->
block_size
, 
a_buf
, 
a_Àn
);

98 
	}
}

	@tsk3/vs/mm_open.c

17 
	~"tsk_vs_i.h
"

33 
TSK_VS_INFO
 *

34 
	$tsk_vs_›í
(
TSK_IMG_INFO
 * 
img_öfo
, 
TSK_DADDR_T
 
off£t
,

35 
TSK_VS_TYPE_ENUM
 
ty≥
)

44 i‡(
ty≥
 =
TSK_VS_TYPE_DETECT
) {

45 
TSK_VS_INFO
 *
vs
, *
vs_£t
 = 
NULL
;

46 *
£t
 = 
NULL
;

48 i‡((
vs
 = 
	`tsk_vs_dos_›í
(
img_öfo
, 
off£t
, 1)Ë!
NULL
) {

49 
£t
 = "DOS";

50 
vs_£t
 = 
vs
;

53 
	`tsk_îr‹_ª£t
();

55 i‡((
vs
 = 
	`tsk_vs_bsd_›í
(
img_öfo
, 
off£t
)Ë!
NULL
) {

59 
£t
 = "BSD";

60 
vs_£t
 = 
vs
;

76 
	`tsk_îr‹_ª£t
();

78 i‡((
vs
 = 
	`tsk_vs_g±_›í
(
img_öfo
, 
off£t
)Ë!
NULL
) {

79 i‡(
£t
 !
NULL
) {

83 i‡(
	`°rcmp
(
£t
, "DOS") == 0) {

84 
TSK_VS_PART_INFO
 *
tmp_£t
;

85 
tmp_£t
 = 
vs_£t
->
∑π_li°
;Åmp_set;

86 
tmp_£t
 =Åmp_£t->
√xt
) {

87 i‡((
tmp_£t
->
desc
)

88 && (
	`°∫cmp
(
tmp_£t
->
desc
, "GPT", 3) == 0)

89 && (
tmp_£t
->
°¨t
 <= 63)) {

90 
TSK_VS_PART_INFO
 *
tmp_cur
;

93 
tmp_cur
 = 
vs
->
∑π_li°
;Åmp_cur;

94 
tmp_cur
 =Åmp_cur->
√xt
) {

95 i‡((
tmp_£t
->
°¨t
 +Åmp_£t->
Àn
) ==

96 (
tmp_cur
->
°¨t
 +Åmp_cur->
Àn
)) {

97 i‡(
tsk_vîbo£
)

98 
	`tsk_Ârötf
(
°dîr
,

100 
£t
 = 
NULL
;

101 
vs_£t
 = 
NULL
;

105 i‡(
£t
 =
NULL
)

111 i‡(
£t
 !
NULL
) {

112 
vs_£t
->
	`˛o£
(vs_set);

113 
vs
->
	`˛o£
(vs);

114 
	`tsk_îr‹_ª£t
();

115 
tsk_î∫o
 = 
TSK_ERR_VS_UNKTYPE
;

116 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

117 "GPT o∏%†© %" 
PRIuDADDR
, 
£t
, 
off£t
);

118  
NULL
;

121 
£t
 = "GPT";

122 
vs_£t
 = 
vs
;

125 
	`tsk_îr‹_ª£t
();

128 i‡((
vs
 = 
	`tsk_vs_sun_›í
(
img_öfo
, 
off£t
)Ë!
NULL
) {

129 i‡(
£t
 =
NULL
) {

130 
£t
 = "Sun";

131 
vs_£t
 = 
vs
;

134 
vs_£t
->
	`˛o£
(vs_set);

135 
vs
->
	`˛o£
(vs);

136 
	`tsk_îr‹_ª£t
();

137 
tsk_î∫o
 = 
TSK_ERR_VS_UNKTYPE
;

138 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

139 "Su¿‹ %†© %" 
PRIuDADDR
, 
£t
, 
off£t
);

140  
NULL
;

144 
	`tsk_îr‹_ª£t
();

147 i‡((
vs
 = 
	`tsk_vs_mac_›í
(
img_öfo
, 
off£t
)Ë!
NULL
) {

148 i‡(
£t
 =
NULL
) {

149 
£t
 = "Mac";

150 
vs_£t
 = 
vs
;

153 
vs_£t
->
	`˛o£
(vs_set);

154 
vs
->
	`˛o£
(vs);

155 
	`tsk_îr‹_ª£t
();

156 
tsk_î∫o
 = 
TSK_ERR_VS_UNKTYPE
;

157 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

158 "Ma¯‹ %†© %" 
PRIuDADDR
, 
£t
, 
off£t
);

159  
NULL
;

163 
	`tsk_îr‹_ª£t
();

166 i‡(
vs_£t
 =
NULL
) {

167 
	`tsk_îr‹_ª£t
();

168 
tsk_î∫o
 = 
TSK_ERR_VS_UNKTYPE
;

169  
NULL
;

172  
vs_£t
;

176 
ty≥
) {

177 
TSK_VS_TYPE_DOS
:

178  
	`tsk_vs_dos_›í
(
img_öfo
, 
off£t
, 0);

179 
TSK_VS_TYPE_MAC
:

180  
	`tsk_vs_mac_›í
(
img_öfo
, 
off£t
);

181 
TSK_VS_TYPE_BSD
:

182  
	`tsk_vs_bsd_›í
(
img_öfo
, 
off£t
);

183 
TSK_VS_TYPE_SUN
:

184  
	`tsk_vs_sun_›í
(
img_öfo
, 
off£t
);

185 
TSK_VS_TYPE_GPT
:

186  
	`tsk_vs_g±_›í
(
img_öfo
, 
off£t
);

187 
TSK_VS_TYPE_UNSUPP
:

189 
	`tsk_îr‹_ª£t
();

190 
tsk_î∫o
 = 
TSK_ERR_VS_UNSUPTYPE
;

191 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
, "%d", 
ty≥
);

192  
NULL
;

195 
	}
}

203 
	$tsk_vs_˛o£
(
TSK_VS_INFO
 * 
a_vs
)

205 i‡(
a_vs
 =
NULL
) {

208 
a_vs
->
	`˛o£
((
TSK_VS_INFO
 *)á_vs);

209 
	}
}

	@tsk3/vs/mm_part.c

14 
	~"tsk_vs_i.h
"

29 
TSK_VS_PART_INFO
 *

30 
	$tsk_vs_∑π_add
(
TSK_VS_INFO
 * 
a_vs
, 
TSK_DADDR_T
 
a_°¨t
, TSK_DADDR_T 
Àn
,

31 
TSK_VS_PART_FLAG_ENUM
 
ty≥
, *
desc
, 
öt8_t
 
èbÀ
, i¡8_à
¶Ÿ
)

33 
TSK_VS_PART_INFO
 *
∑π
;

34 
TSK_VS_PART_INFO
 *
cur_∑π
;

36 i‡((
∑π
 =

37 (
TSK_VS_PART_INFO
 *Ë
	`tsk_mÆloc
((TSK_VS_PART_INFO))) ==

38 
NULL
) {

39  
NULL
;

43 
∑π
->
√xt
 = 
NULL
;

44 
∑π
->
¥ev
 = 
NULL
;

45 
∑π
->
°¨t
 = 
a_°¨t
;

46 
∑π
->
Àn
 =Üen;

47 
∑π
->
desc
 = desc;

48 
∑π
->
èbÀ_num
 = 
èbÀ
;

49 
∑π
->
¶Ÿ_num
 = 
¶Ÿ
;

50 
∑π
->
Êags
 = 
ty≥
;

51 
∑π
->
vs
 = 
a_vs
;

52 
∑π
->
addr
 = 0;

55 i‡(
a_vs
->
∑π_li°
 =
NULL
) {

56 
a_vs
->
∑π_li°
 = 
∑π
;

57 
a_vs
->
∑π_cou¡
 = 1;

58  
∑π
;

62 
cur_∑π
 = 
a_vs
->
∑π_li°
; cur_∑π !
NULL
;

63 
cur_∑π
 = cur_∑π->
√xt
) {

65 i‡(
cur_∑π
->
°¨t
 > 
∑π
->start) {

66 
∑π
->
√xt
 = 
cur_∑π
;

67 
∑π
->
¥ev
 = 
cur_∑π
->prev;

68 i‡(
∑π
->
¥ev
)

69 
∑π
->
¥ev
->
√xt
 =Öart;

70 
cur_∑π
->
¥ev
 = 
∑π
;

73 i‡(
∑π
->
¥ev
 =
NULL
)

74 
a_vs
->
∑π_li°
 = 
∑π
;

77 
a_vs
->
∑π_cou¡
++;

78 
∑π
->
addr
 = 
cur_∑π
->addr;

79 ; 
cur_∑π
 !
NULL
; cur_∑π = cur_∑π->
√xt
)

80 
cur_∑π
->
addr
++;

82  
∑π
;

86 i‡(
cur_∑π
->
√xt
 =
NULL
) {

87 
cur_∑π
->
√xt
 = 
∑π
;

88 
∑π
->
¥ev
 = 
cur_∑π
;

91 
a_vs
->
∑π_cou¡
++;

92 
∑π
->
addr
 = 
cur_∑π
->addr + 1;

93  
∑π
;

97 i‡(
cur_∑π
->
√xt
->
°¨t
 > 
∑π
->start) {

98 
∑π
->
¥ev
 = 
cur_∑π
;

99 
∑π
->
√xt
 = 
cur_∑π
->next;

100 
cur_∑π
->
√xt
->
¥ev
 = 
∑π
;

101 
cur_∑π
->
√xt
 = 
∑π
;

104 
a_vs
->
∑π_cou¡
++;

105 
∑π
->
addr
 = 
cur_∑π
->addr + 1;

106 
cur_∑π
 = 
∑π
->
√xt
; cur_∑π !
NULL
;

107 
cur_∑π
 = cur_∑π->
√xt
)

108 
cur_∑π
->
addr
++;

109  
∑π
;

112  
NULL
;

113 
	}
}

122 
uöt8_t


123 
	$tsk_vs_∑π_unu£d
(
TSK_VS_INFO
 * 
a_vs
)

125 
TSK_VS_PART_INFO
 *
∑π
 = 
a_vs
->
∑π_li°
;

126 
TSK_DADDR_T
 
¥ev_íd
 = 0;

129 
∑π
 = 
a_vs
->
∑π_li°
;Ö¨à!
NULL
;Ö¨à∑π->
√xt
) {

132 i‡(
∑π
->
Êags
 & 
TSK_VS_PART_FLAG_META
)

136 i‡(
∑π
->
°¨t
 > 
¥ev_íd
) {

137 *
°r
;

138 i‡((
°r
 = 
	`tsk_mÆloc
(12)Ë=
NULL
)

141 
	`¢¥ötf
(
°r
, 12, "Unallocated");

142 i‡(
NULL
 =
	`tsk_vs_∑π_add
(
a_vs
, 
¥ev_íd
,

143 
∑π
->
°¨t
 - 
¥ev_íd
, 
TSK_VS_PART_FLAG_UNALLOC
, 
°r
,

145 
	`‰ì
(
°r
);

150 
¥ev_íd
 = 
∑π
->
°¨t
 +Ö¨t->
Àn
;

154 i‡(
¥ev_íd
 < (
TSK_DADDR_T
Ë(
a_vs
->
img_öfo
->
size
 /á_vs->
block_size
)) {

155 *
°r
;

156 i‡((
°r
 = 
	`tsk_mÆloc
(12)Ë=
NULL
)

159 
	`¢¥ötf
(
°r
, 12, "Unallocated");

160 i‡(
NULL
 =
	`tsk_vs_∑π_add
(
a_vs
, 
¥ev_íd
,

161 
a_vs
->
img_öfo
->
size
 /á_vs->
block_size
 - 
¥ev_íd
,

162 
TSK_VS_PART_FLAG_UNALLOC
, 
°r
, -1, -1)) {

163 
	`‰ì
(
°r
);

169 
	}
}

175 
	$tsk_vs_∑π_‰ì
(
TSK_VS_INFO
 * 
a_vs
)

177 
TSK_VS_PART_INFO
 *
∑π
 = 
a_vs
->
∑π_li°
;

178 
TSK_VS_PART_INFO
 *
∑π2
;

180 
∑π
) {

181 i‡(
∑π
->
desc
)

182 
	`‰ì
(
∑π
->
desc
);

184 
∑π2
 = 
∑π
->
√xt
;

185 
	`‰ì
(
∑π
);

186 
∑π
 = 
∑π2
;

188 
a_vs
->
∑π_li°
 = 
NULL
;

191 
	}
}

201 c⁄° 
TSK_VS_PART_INFO
 *

202 
	$tsk_vs_∑π_gë
(c⁄° 
TSK_VS_INFO
 * 
a_vs
, 
TSK_PNUM_T
 
a_idx
)

204 
TSK_VS_PART_INFO
 *
∑π
;

206 i‡(
a_vs
 =
NULL
) {

207 
	`tsk_îr‹_ª£t
();

208 
tsk_î∫o
 = 
TSK_ERR_VS_ARG
;

209 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

211  
NULL
;

214 i‡(
a_idx
 >
a_vs
->
∑π_cou¡
) {

215 
	`tsk_îr‹_ª£t
();

216 
tsk_î∫o
 = 
TSK_ERR_VS_ARG
;

217 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

219  
NULL
;

222 
∑π
 = 
a_vs
->
∑π_li°
;Ö¨à!
NULL
;Ö¨à∑π->
√xt
) {

223 i‡(
∑π
->
addr
 =
a_idx
)

224  
∑π
;

227  
NULL
;

228 
	}
}

243 
uöt8_t


244 
	$tsk_vs_∑π_wÆk
(
TSK_VS_INFO
 * 
a_vs
, 
TSK_PNUM_T
 
a_°¨t
, TSK_PNUM_T 
a_œ°
,

245 
TSK_VS_PART_FLAG_ENUM
 
a_Êags
, 
TSK_VS_PART_WALK_CB
 
a_a˘i⁄
,

246 *
a_±r
)

248 
TSK_VS_PART_INFO
 *
∑π
;

250 i‡(
a_°¨t
 >
a_vs
->
∑π_cou¡
) {

251 
	`tsk_îr‹_ª£t
();

252 
tsk_î∫o
 = 
TSK_ERR_VS_WALK_RNG
;

253 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

254 "tsk_vs_∑π_wÆk: SèπÖ¨tôi⁄Åoÿœrge: %" 
PRIuPNUM
 "",

255 
a_°¨t
);

259 i‡(
a_œ°
 >
a_vs
->
∑π_cou¡
) {

260 
	`tsk_îr‹_ª£t
();

261 
tsk_î∫o
 = 
TSK_ERR_VS_WALK_RNG
;

262 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

263 "tsk_vs_∑π_wÆk: EndÖ¨tôi⁄Åoÿœrge: %" 
PRIuPNUM
 "",

264 
a_œ°
);

268 i‡(
a_Êags
 == 0) {

269 
a_Êags
 |=

270 (
TSK_VS_PART_FLAG_ALLOC
 | 
TSK_VS_PART_FLAG_UNALLOC
 |

271 
TSK_VS_PART_FLAG_META
);

274 
∑π
 = 
a_vs
->
∑π_li°
;Ö¨à!
NULL
;Ö¨à∑π->
√xt
) {

275 i‡((
∑π
->
addr
 >
a_°¨t
Ë&& (’¨t->
Êags
 & 
a_Êags
) != 0)) {

276 
ªtvÆ
;

277 
ªtvÆ
 = 
	`a_a˘i⁄
(
a_vs
, 
∑π
, 
a_±r
);

278 i‡(
ªtvÆ
 =
TSK_WALK_STOP
) {

281 i‡(
ªtvÆ
 =
TSK_WALK_ERROR
) {

286 i‡(
∑π
->
addr
 >
a_œ°
)

290 
	}
}

	@tsk3/vs/mm_types.c

14 
	~"tsk_vs_i.h
"

17 *
	m«me
;

18 
TSK_VS_TYPE_ENUM
 
	mcode
;

19 *
	mcommít
;

20 } 
	tVS_TYPES
;

23 
VS_TYPES
 
	gvs_›í_èbÀ
[] = {

24 {"dos", 
TSK_VS_TYPE_DOS
,

26 {"mac", 
TSK_VS_TYPE_MAC
, "MAC Partition Map"},

27 {"bsd", 
TSK_VS_TYPE_BSD
,

29 {"sun", 
TSK_VS_TYPE_SUN
,

31 {"g±", 
TSK_VS_TYPE_GPT
, "GUID Partition Table (EFI)"},

42 
TSK_VS_TYPE_ENUM


43 
	$tsk_vs_ty≥_toid
(c⁄° 
TSK_TCHAR
 * 
°r
)

45 
tmp
[16];

46 
i
;

47 
VS_TYPES
 *
ty≥s
;

50 
i
 = 0; i < 15 && 
°r
[i] != '\0'; i++) {

51 
tmp
[
i
] = (Ë
°r
[i];

53 
tmp
[
i
] = '\0';

55 
ty≥s
 = 
vs_›í_èbÀ
;Åy≥s->
«me
;Åypes++) {

56 i‡(
	`°rcmp
(
tmp
, 
ty≥s
->
«me
) == 0) {

57  
ty≥s
->
code
;

60  
TSK_VS_TYPE_UNSUPP
;

61 
	}
}

69 
	$tsk_vs_ty≥_¥öt
(
FILE
 * 
hFûe
)

71 
VS_TYPES
 *
ty≥s
;

72 
	`tsk_Ârötf
(
hFûe
, "SupportedÖartitionÅypes:\n");

73 
ty≥s
 = 
vs_›í_èbÀ
;Åy≥s->
«me
;Åypes++)

74 
	`tsk_Ârötf
(
hFûe
, "\t%†(%s)\n", 
ty≥s
->
«me
,Åy≥s->
commít
);

75 
	}
}

82 
TSK_VS_TYPE_ENUM


83 
	$tsk_vs_ty≥_suµ‹ãd
()

85 
TSK_VS_TYPE_ENUM
 
sup_ty≥s
 = 0;

86 
VS_TYPES
 *
ty≥s
;

87 
ty≥s
 = 
vs_›í_èbÀ
;Åy≥s->
«me
;Åypes++) {

88 
sup_ty≥s
 |
ty≥s
->
code
;

90  
sup_ty≥s
;

91 
	}
}

103 
	$tsk_vs_ty≥_t⁄ame
(
TSK_VS_TYPE_ENUM
 
ty≥
)

105 
VS_TYPES
 *
ty≥s
;

106 
ty≥s
 = 
vs_›í_èbÀ
;Åy≥s->
«me
;Åypes++) {

107 i‡(
ty≥s
->
code
 =
ty≥
) {

108  
ty≥s
->
«me
;

111  
NULL
;

112 
	}
}

123 
	$tsk_vs_ty≥_todesc
(
TSK_VS_TYPE_ENUM
 
ty≥
)

125 
VS_TYPES
 *
ty≥s
;

126 
ty≥s
 = 
vs_›í_èbÀ
;Åy≥s->
«me
;Åypes++) {

127 i‡(
ty≥s
->
code
 =
ty≥
) {

128  
ty≥s
->
commít
;

132  
NULL
;

133 
	}
}

	@tsk3/vs/sun.c

16 
	~"tsk_vs_i.h
"

17 
	~"tsk_sun.h
"

24 
	$sun_gë_desc
(
uöt16_t
 
f°y≥
)

26 *
°r
 = 
	`tsk_mÆloc
(64);

27 i‡(
°r
 =
NULL
)

29 
f°y≥
) {

32 
	`°∫˝y
(
°r
, "Unassigned (0x00)", 64);

35 
	`°∫˝y
(
°r
, "boot (0x01)", 64);

38 
	`°∫˝y
(
°r
, "/ (0x02)", 64);

41 
	`°∫˝y
(
°r
, "swap (0x03)", 64);

44 
	`°∫˝y
(
°r
, "/usr/ (0x04)", 64);

47 
	`°∫˝y
(
°r
, "backup (0x05)", 64);

50 
	`°∫˝y
(
°r
, "stand (0x06)", 64);

53 
	`°∫˝y
(
°r
, "/var/ (0x07)", 64);

56 
	`°∫˝y
(
°r
, "/home/ (0x08)", 64);

59 
	`°∫˝y
(
°r
, "alt sector (0x09)", 64);

62 
	`°∫˝y
(
°r
, "cachefs (0x0A)", 64);

65 
	`¢¥ötf
(
°r
, 64, "Unknow¿Ty≥ (0x%.4x)", 
f°y≥
);

69  
°r
;

70 
	}
}

77 
uöt8_t


78 
	$sun_lﬂd_èbÀ_i386
(
TSK_VS_INFO
 * 
vs
, 
sun_dœbñ_i386
 * 
dœbñ_x86
)

80 
uöt32_t
 
idx
 = 0;

81 
TSK_DADDR_T
 
max_addr
 = (
vs
->
img_öfo
->
size
 - vs->
off£t
Ë/ vs->
block_size
;

83 i‡(
tsk_vîbo£
)

84 
	`tsk_Ârötf
(
°dîr
, "load_table_i386: Number ofÖartitions: %d\n",

85 
	`tsk_gëu16
(
vs
->
ídün
, 
dœbñ_x86
->
num_∑πs
));

88 
idx
 = 0; idx < 
	`tsk_gëu16
(
vs
->
ídün
, 
dœbñ_x86
->
num_∑πs
);

89 
idx
++) {

91 
TSK_VS_PART_FLAG_ENUM
 
±y≥
 = 
TSK_VS_PART_FLAG_ALLOC
;

93 i‡(
tsk_vîbo£
)

94 
	`tsk_Ârötf
(
°dîr
,

95 "lﬂd_èbÀ_i386: %" 
PRIu32


96 " Sèπög Se˘‹: %" 
PRIu32
 " Size: %" PRIu32

97 " Ty≥: %" 
PRIu16
 "\n", 
idx
, 
	`tsk_gëu32
(
vs
->
ídün
,

98 
dœbñ_x86
->
∑π
[
idx
].
°¨t_£c
),

99 
	`tsk_gëu32
(
vs
->
ídün
, 
dœbñ_x86
->
∑π
[
idx
].
size_£c
),

100 
	`tsk_gëu16
(
vs
->
ídün
, 
dœbñ_x86
->
∑π
[
idx
].
ty≥
));

102 i‡(
	`tsk_gëu32
(
vs
->
ídün
, 
dœbñ_x86
->
∑π
[
idx
].
size_£c
) == 0)

106 i‡((
idx
 < 2Ë&& (
	`tsk_gëu32
(
vs
->
ídün
,

107 
dœbñ_x86
->
∑π
[
idx
].
°¨t_£c
Ë> 
max_addr
)) {

108 
	`tsk_îr‹_ª£t
();

109 
tsk_î∫o
 = 
TSK_ERR_VS_BLK_NUM
;

110 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

116 i‡((
	`tsk_gëu16
(
vs
->
ídün
, 
dœbñ_x86
->
∑π
[
idx
].
ty≥
) == 5)

117 && (
	`tsk_gëu32
(
vs
->
ídün
,

118 
dœbñ_x86
->
∑π
[
idx
].
°¨t_£c
) == 0))

119 
±y≥
 = 
TSK_VS_PART_FLAG_META
;

122 i‡(
NULL
 =
	`tsk_vs_∑π_add
(
vs
,

123 (
TSK_DADDR_T
Ë
	`tsk_gëu32
(
vs
->
ídün
,

124 
dœbñ_x86
->
∑π
[
idx
].
°¨t_£c
),

125 (
TSK_DADDR_T
Ë
	`tsk_gëu32
(
vs
->
ídün
,

126 
dœbñ_x86
->
∑π
[
idx
].
size_£c
), 
±y≥
,

127 
	`sun_gë_desc
(
	`tsk_gëu16
(
vs
->
ídün
,

128 
dœbñ_x86
->
∑π
[
idx
].
ty≥
)), -1, idx)) {

134 
	}
}

140 
uöt8_t


141 
	$sun_lﬂd_èbÀ_•¨c
(
TSK_VS_INFO
 * 
vs
, 
sun_dœbñ_•¨c
 * 
dœbñ_•
)

143 
uöt32_t
 
idx
 = 0;

144 
uöt32_t
 
cyl_c⁄v
;

145 
TSK_DADDR_T
 
max_addr
 = (
vs
->
img_öfo
->
size
 - vs->
off£t
Ë/ vs->
block_size
;

148 
cyl_c⁄v
 = 
	`tsk_gëu16
(
vs
->
ídün
, 
dœbñ_•
->
£c_≥r_å
) *

149 
	`tsk_gëu16
(
vs
->
ídün
, 
dœbñ_•
->
num_hód
);

151 i‡(
tsk_vîbo£
)

152 
	`tsk_Ârötf
(
°dîr
, "load_table_sparc: Number ofÖartitions: %d\n",

153 
	`tsk_gëu16
(
vs
->
ídün
, 
dœbñ_•
->
num_∑πs
));

156 
idx
 = 0; idx < 
	`tsk_gëu16
(
vs
->
ídün
, 
dœbñ_•
->
num_∑πs
);

157 
idx
++) {

158 
TSK_VS_PART_FLAG_ENUM
 
±y≥
 = 
TSK_VS_PART_FLAG_ALLOC
;

159 
uöt32_t
 
∑π_°¨t
 = 
cyl_c⁄v
 * 
	`tsk_gëu32
(
vs
->
ídün
,

160 
dœbñ_•
->
∑π_œyout
[
idx
].
°¨t_cyl
);

162 
uöt32_t
 
∑π_size
 = 
	`tsk_gëu32
(
vs
->
ídün
,

163 
dœbñ_•
->
∑π_œyout
[
idx
].
size_blk
);

165 i‡(
tsk_vîbo£
)

166 
	`tsk_Ârötf
(
°dîr
,

167 "lﬂd_èbÀ_•¨c: %" 
PRIu32


168 " Sèπög Se˘‹: %" 
PRIu32
 " Size: %" PRIu32

169 " Ty≥: %" 
PRIu16
 "\n", 
idx
, 
∑π_°¨t
, 
∑π_size
,

170 
	`tsk_gëu16
(
vs
->
ídün
, 
dœbñ_•
->
∑π_mëa
[
idx
].
ty≥
));

172 i‡(
∑π_size
 == 0)

176 i‡((
idx
 < 2Ë&& (
∑π_°¨t
 > 
max_addr
)) {

177 
	`tsk_îr‹_ª£t
();

178 
tsk_î∫o
 = 
TSK_ERR_VS_BLK_NUM
;

179 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

185 i‡((
	`tsk_gëu16
(
vs
->
ídün
, 
dœbñ_•
->
∑π_mëa
[
idx
].
ty≥
) == 5)

186 && (
∑π_°¨t
 == 0))

187 
±y≥
 = 
TSK_VS_PART_FLAG_META
;

190 i‡(
NULL
 =
	`tsk_vs_∑π_add
(
vs
, (
TSK_DADDR_T
Ë
∑π_°¨t
,

191 (
TSK_DADDR_T
Ë
∑π_size
, 
±y≥
,

192 
	`sun_gë_desc
(
	`tsk_gëu16
(
vs
->
ídün
,

193 
dœbñ_•
->
∑π_mëa
[
idx
].
ty≥
)), -1, idx))

199 
	}
}

210 
uöt8_t


211 
	$sun_lﬂd_èbÀ
(
TSK_VS_INFO
 * 
vs
)

213 
sun_dœbñ_•¨c
 *
dœbñ_•
;

214 
sun_dœbñ_i386
 *
dœbñ_x86
;

215 *
buf
;

216 
ssize_t
 
˙t
;

217 
TSK_DADDR_T
 
èddr
 =

218 
vs
->
off£t
 / vs->
block_size
 + 
SUN_SPARC_PART_SOFFSET
;

222 i‡(((*
dœbñ_•
Ë> 
vs
->
block_size
) ||

223 ((*
dœbñ_x86
Ë> 
vs
->
block_size
)) {

224 
	`tsk_îr‹_ª£t
();

225 
tsk_î∫o
 = 
TSK_ERR_VS_BUF
;

226 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

231 i‡(
tsk_vîbo£
)

232 
	`tsk_Ârötf
(
°dîr
,

233 "sun_lﬂd_èbÀ: Tryög se˘‹: %" 
PRIuDADDR
 "\n", 
èddr
);

235 i‡((
buf
 = 
	`tsk_mÆloc
(
vs
->
block_size
)Ë=
NULL
)

239 
˙t
 = 
tsk_vs_ªad_block


240 (
vs
, 
SUN_SPARC_PART_SOFFSET
, 
buf
, vs->
block_size
);

243 i‡(
˙t
 !
vs
->
block_size
) {

244 i‡(
˙t
 >= 0) {

245 
	`tsk_îr‹_ª£t
();

246 
tsk_î∫o
 = 
TSK_ERR_VS_READ
;

248 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

249 "SUN Disk Labñ i¿Se˘‹: %" 
PRIuDADDR
, 
èddr
);

250 
	`‰ì
(
buf
);

261 
dœbñ_•
 = (
sun_dœbñ_•¨c
 *Ë
buf
;

262 
dœbñ_x86
 = (
sun_dœbñ_i386
 *Ë
buf
;

263 i‡(
	`tsk_vs_guessu16
(
vs
, 
dœbñ_•
->
magic
, 
SUN_MAGIC
) == 0) {

264 i‡(
	`tsk_gëu32
(
vs
->
ídün
, 
dœbñ_•
->
ßnôy
Ë=
SUN_SANITY
) {

265 
	`‰ì
(
buf
);

266  
	`sun_lﬂd_èbÀ_•¨c
(
vs
, 
dœbñ_•
);

268 i‡(
	`tsk_gëu32
(
vs
->
ídün
, 
dœbñ_x86
->
ßnôy
Ë=
SUN_SANITY
) {

269 
	`‰ì
(
buf
);

270  
	`sun_lﬂd_èbÀ_i386
(
vs
, 
dœbñ_x86
);

278 
èddr
 = 
vs
->
off£t
 / vs->
block_size
 / 
SUN_I386_PART_SOFFSET
;

279 i‡(
tsk_vîbo£
)

280 
	`tsk_Ârötf
(
°dîr
,

281 "sun_lﬂd_èbÀ: Tryög se˘‹: %" 
PRIuDADDR
 "\n", 
èddr
 + 1);

283 
˙t
 = 
tsk_vs_ªad_block


284 (
vs
, 
SUN_I386_PART_SOFFSET
, 
buf
, vs->
block_size
);

286 i‡(
˙t
 !
vs
->
block_size
) {

287 i‡(
˙t
 >= 0) {

288 
	`tsk_îr‹_ª£t
();

289 
tsk_î∫o
 = 
TSK_ERR_VS_READ
;

291 
	`¢¥ötf
(
tsk_îr°r2
, 
TSK_ERRSTR_L
,

292 "SUN (I¡ñËDisk Labñ i¿Se˘‹: %" 
PRIuDADDR
, 
èddr
);

293 
	`‰ì
(
buf
);

297 
dœbñ_x86
 = (
sun_dœbñ_i386
 *Ë
buf
;

298 i‡(
	`tsk_vs_guessu16
(
vs
, 
dœbñ_x86
->
magic
, 
SUN_MAGIC
)) {

299 
	`tsk_îr‹_ª£t
();

300 
tsk_î∫o
 = 
TSK_ERR_VS_MAGIC
;

301 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

303 
PRIuDADDR
 "Ë%x", 
èddr
, 
	`tsk_gëu16
(
vs
->
ídün
,

304 
dœbñ_•
->
magic
));

305 
	`‰ì
(
buf
);

309 i‡(
	`tsk_gëu32
(
vs
->
ídün
, 
dœbñ_x86
->
ßnôy
Ë!
SUN_SANITY
) {

310 
	`tsk_îr‹_ª£t
();

311 
tsk_î∫o
 = 
TSK_ERR_VS_MAGIC
;

312 
	`¢¥ötf
(
tsk_îr°r
, 
TSK_ERRSTR_L
,

313 "SUN (öãlËßnôy vÆuê(Se˘‹: %" 
PRIuDADDR


314 "Ë%x", 
èddr
, 
	`tsk_gëu16
(
vs
->
ídün
, 
dœbñ_•
->
magic
));

315 
	`‰ì
(
buf
);

319 
	`‰ì
(
buf
);

320  
	`sun_lﬂd_èbÀ_i386
(
vs
, 
dœbñ_x86
);

321 
	}
}

325 
	$sun_˛o£
(
TSK_VS_INFO
 * 
vs
)

327 
	`tsk_vs_∑π_‰ì
(
vs
);

328 
	`‰ì
(
vs
);

329 
	}
}

331 
TSK_VS_INFO
 *

332 
	$tsk_vs_sun_›í
(
TSK_IMG_INFO
 * 
img_öfo
, 
TSK_DADDR_T
 
off£t
)

334 
TSK_VS_INFO
 *
vs
;

337 
	`tsk_îr‹_ª£t
();

339 
vs
 = (
TSK_VS_INFO
 *Ë
	`tsk_mÆloc
((*vs));

340 i‡(
vs
 =
NULL
)

341  
NULL
;

343 
vs
->
img_öfo
 = img_info;

344 
vs
->
v°y≥
 = 
TSK_VS_TYPE_SUN
;

346 
vs
->
off£t
 = offset;

349 
vs
->
∑π_li°
 = 
NULL
;

350 
vs
->
∑π_cou¡
 = 0;

351 
vs
->
ídün
 = 0;

352 
vs
->
block_size
 = 
img_öfo
->
£˘‹_size
;

355 
vs
->
˛o£
 = 
sun_˛o£
;

358 i‡(
	`sun_lﬂd_èbÀ
(
vs
)) {

359 
	`sun_˛o£
(
vs
);

360  
NULL
;

364 i‡(
	`tsk_vs_∑π_unu£d
(
vs
)) {

365 
	`sun_˛o£
(
vs
);

366  
NULL
;

369  
vs
;

370 
	}
}

	@tsk3/vs/tsk_bsd.h

14 #i‚de‡
_TSK_BSD_H


15 
	#_TSK_BSD_H


	)

17 #ifde‡
__˝lu•lus


22 
uöt8_t
 
magic
[4];

23 
uöt8_t
 
ty≥
[2];

24 
uöt8_t
 
sub_ty≥
[2];

25 
uöt8_t
 
ty≥_«me
[16];

27 
uöt8_t
 
∑ck«me
[16];

29 
uöt8_t
 
£c_size
[4];

30 
uöt8_t
 
£c_≥r_å
[4];

31 
uöt8_t
 
å_≥r_cyl
[4];

32 
uöt8_t
 
cyl_≥r_unô
[4];

33 
uöt8_t
 
£c_≥r_cyl
[4];

34 
uöt8_t
 
£c_≥r_unô
[4];

36 
uöt8_t
 
•¨e_≥r_å
[2];

37 
uöt8_t
 
•¨e_≥r_cyl
[2];

39 
uöt8_t
 
Æt_≥r_unô
[4];

41 
uöt8_t
 
Ωm
[2];

42 
uöt8_t
 
öãæóve
[2];

43 
uöt8_t
 
åackskew
[2];

44 
uöt8_t
 
cylskew
[2];

45 
uöt8_t
 
hódswôch
[4];

46 
uöt8_t
 
åack_£ek
[4];

47 
uöt8_t
 
Êags
[4];

49 
uöt8_t
 
drived©a
[20];

51 
uöt8_t
 
ª£rved1
[20];

53 
uöt8_t
 
magic2
[4];

54 
uöt8_t
 
checksum
[2];

56 
uöt8_t
 
num_∑πs
[2];

57 
uöt8_t
 
boŸ¨ó_size
[4];

58 
uöt8_t
 
sb_size
[4];

61 
uöt8_t
 
size_£c
[4];

62 
uöt8_t
 
°¨t_£c
[4];

63 
uöt8_t
 
‰ag_size
[4];

64 
uöt8_t
 
f°y≥
;

65 
uöt8_t
 
‰ag_≥r_block
;

66 
uöt8_t
 
cyl_≥r_gΩ
[2];

67 } 
∑π
[16];

70 
uöt8_t
 
ª£rved2
[108];

72 } 
	tbsd_diskœbñ
;

74 
	#BSD_MAGIC
 0x82564557

	)

75 
	#BSD_PART_SOFFSET
 1

	)

77 #ifde‡
__˝lu•lus


	@tsk3/vs/tsk_dos.h

13 #i‚de‡
_TSK_DOS_H


14 
	#_TSK_DOS_H


	)

16 #ifde‡
__˝lu•lus


21 
uöt8_t
 
boŸ
;

22 
uöt8_t
 
°¨t_chs
[3];

23 
uöt8_t
 
±y≥
;

24 
uöt8_t
 
íd_chs
[3];

25 
uöt8_t
 
°¨t_£c
[4];

26 
uöt8_t
 
size_£c
[4];

27 } 
	tdos_∑π
;

31 
uöt8_t
 
f1
[3];

34 
€m«me
[8];

35 
uöt8_t
 
ssize
[2];

36 
uöt8_t
 
csize
;

37 
uöt8_t
 
fûÀr
[432];

38 
dos_∑π
 
±abÀ
[4];

39 
uöt8_t
 
magic
[2];

40 } 
	tdos_£˘
;

42 
	#DOS_MAGIC
 0xØ55

	)

43 
	#DOS_PART_SOFFSET
 0

	)

45 #ifde‡
__˝lu•lus


	@tsk3/vs/tsk_gpt.h

14 #i‚de‡
_TSK_GPT_H


15 
	#_TSK_GPT_H


	)

17 #ifde‡
__˝lu•lus


22 
	#GPT_PART_SOFFSET
 0

	)

23 
	#GPT_DOS_TYPE
 0xEE

	)

28 
	#GPT_HEAD_OFFSET
 1

	)

29 
	#GPT_HEAD_SIG
 0x5452415020494645ULL

	)

32 
uöt8_t
 
sig«tuª
[8];

33 
uöt8_t
 
vîsi⁄
[4];

34 
uöt8_t
 
hód_size_b
[4];

35 
uöt8_t
 
hód_¸c
[4];

36 
uöt8_t
 
f1
[4];

37 
uöt8_t
 
hód_lba
[8];

38 
uöt8_t
 
hód2_lba
[8];

39 
uöt8_t
 
∑π¨ó_°¨t
[8];

40 
uöt8_t
 
∑π¨ó_íd
[8];

41 
uöt8_t
 
guid
[16];

42 
uöt8_t
 
èb_°¨t_lba
[8];

43 
uöt8_t
 
èb_num_ít
[4];

44 
uöt8_t
 
èb_size_b
[4];

45 
uöt8_t
 
èb_¸c
[4];

46 
uöt8_t
 
f2
[420];

47 } 
	tg±_hód
;

52 
uöt8_t
 
ty≥_guid
[16];

53 
uöt8_t
 
id_guid
[16];

54 
uöt8_t
 
°¨t_lba
[8];

55 
uöt8_t
 
íd_lba
[8];

56 
uöt8_t
 
Êags
[8];

57 
uöt8_t
 
«me
[72];

58 } 
	tg±_íåy
;

61 #ifde‡
__˝lu•lus


	@tsk3/vs/tsk_mac.h

14 #i‚de‡
_TSK_MAC_H


15 
	#_TSK_MAC_H


	)

17 #ifde‡
__˝lu•lus


22 
uöt8_t
 
magic
[2];

23 
uöt8_t
 
ª£rved
[2];

24 
uöt8_t
 
pm≠_size
[4];

25 
uöt8_t
 
°¨t_£c
[4];

26 
uöt8_t
 
size_£c
[4];

27 
uöt8_t
 
«me
[32];

28 
uöt8_t
 
ty≥
[32];

29 
uöt8_t
 
d©a_°¨t_£c
[4];

30 
uöt8_t
 
d©a_size_£c
[4];

31 
uöt8_t
 
°©us
[4];

32 
uöt8_t
 
boŸ_°¨t_£c
[4];

33 
uöt8_t
 
boŸ_size_£c
[4];

34 
uöt8_t
 
boŸ_lﬂd_addr
[4];

35 
uöt8_t
 
ª£rved2
[4];

36 
uöt8_t
 
boŸ_íåy
[4];

37 
uöt8_t
 
ª£rved3
[4];

38 
uöt8_t
 
boŸ_checksum
[4];

39 
uöt8_t
 
¥oc_ty≥
[16];

40 
uöt8_t
 
ª£rved4
[376];

41 } 
	tmac_∑π
;

43 
	#MAC_MAGIC
 0x504d

	)

44 
	#MAC_PART_SOFFSET
 1

	)

46 
	#MAC_STAT_VALID
 0x00

	)

47 
	#MAC_STAT_ALLOC
 0x01

	)

48 
	#MAC_STAT_INUSE
 0x02

	)

49 
	#MAC_STAT_BOOT
 0x04

	)

50 
	#MAC_STAT_READ
 0x08

	)

52 #ifde‡
__˝lu•lus


	@tsk3/vs/tsk_sun.h

15 #i‚de‡
_TSK_SUN_H


16 
	#_TSK_SUN_H


	)

18 #ifde‡
__˝lu•lus


23 
uöt8_t
 
asciûabñ
[128];

26 
uöt8_t
 
vîsi⁄
[4];

27 
uöt8_t
 
vﬁ_«me
[8];

28 
uöt8_t
 
num_∑πs
[2];

31 
uöt8_t
 
ty≥
[2];

32 
uöt8_t
 
Êag
[2];

33 } 
∑π_mëa
[8];

35 
uöt8_t
 
boŸöfo
[4][3];

36 
uöt8_t
 
ª£rved0
[2];

37 
uöt8_t
 
ßnôy
[4];

38 
uöt8_t
 
ª£rved1
[38];

39 
uöt8_t
 
time°amp
[8][4];

43 
uöt8_t
 
wrôe_ªö°ru˘
[2];

44 
uöt8_t
 
ªad_ªö°ru˘
[2];

45 
uöt8_t
 
ª£rved2
[154];

46 
uöt8_t
 
Ωm
[2];

47 
uöt8_t
 
num_ph_cyl
[2];

48 
uöt8_t
 
Æt_≥r_cyl
[2];

49 
uöt8_t
 
ª£rved3
[4];

50 
uöt8_t
 
öãæóve
[2];

51 
uöt8_t
 
num_cyl
[2];

52 
uöt8_t
 
num_Æt_cyl
[2];

53 
uöt8_t
 
num_hód
[2];

54 
uöt8_t
 
£c_≥r_å
[2];

55 
uöt8_t
 
ª£rved5
[4];

58 
uöt8_t
 
°¨t_cyl
[4];

59 
uöt8_t
 
size_blk
[4];

60 } 
∑π_œyout
[8];

62 
uöt8_t
 
magic
[2];

63 
uöt8_t
 
checksum
[2];

65 } 
	tsun_dœbñ_•¨c
;

71 
uöt8_t
 
boŸöfo
[3][4];

72 
uöt8_t
 
ßnôy
[4];

73 
uöt8_t
 
vîsi⁄
[4];

74 
uöt8_t
 
vﬁ_«me
[8];

75 
uöt8_t
 
£c_size
[2];

76 
uöt8_t
 
num_∑πs
[2];

77 
uöt8_t
 
ª£rved0
[40];

80 
uöt8_t
 
ty≥
[2];

81 
uöt8_t
 
Êag
[2];

82 
uöt8_t
 
°¨t_£c
[4];

83 
uöt8_t
 
size_£c
[4];

84 } 
∑π
[16];

86 
uöt8_t
 
time°amp
[16][4];

87 
uöt8_t
 
asciûabñ
[128];

90 
uöt8_t
 
num_ph_cyl
[4];

91 
uöt8_t
 
num_cyl
[4];

92 
uöt8_t
 
num_Æt_cyl
[2];

93 
uöt8_t
 
cyl_off£t
[2];

94 
uöt8_t
 
num_hód
[4];

95 
uöt8_t
 
£c_≥r_å
[4];

96 
uöt8_t
 
öãæóve
[2];

97 
uöt8_t
 
skew
[2];

98 
uöt8_t
 
Æt_≥r_cyl
[2];

99 
uöt8_t
 
Ωm
[2];

100 
uöt8_t
 
wrôe_ªö°ru˘
[2];

101 
uöt8_t
 
ªad_ªö°ru˘
[2];

102 
uöt8_t
 
ª£rved1
[8];

103 
uöt8_t
 
ª£rved2
[12];

104 
uöt8_t
 
magic
[2];

105 
uöt8_t
 
checksum
[2];

107 } 
	tsun_dœbñ_i386
;

109 
	#SUN_MAGIC
 0xDABE

	)

110 
	#SUN_SANITY
 0x600DDEEE

	)

112 
	#SUN_FLAG_UNMNT
 0x01

	)

113 
	#SUN_FLAG_RO
 0x10

	)

115 
	#SUN_SPARC_PART_SOFFSET
 0

	)

116 
	#SUN_I386_PART_SOFFSET
 1

	)

118 #ifde‡
__˝lu•lus


	@tsk3/vs/tsk_vs.h

21 #i‚de‡
_TSK_VS_H


22 
	#_TSK_VS_H


	)

24 #ifde‡
__˝lu•lus


29 
TSK_VS_INFO
 
	tTSK_VS_INFO
;

30 
TSK_VS_PART_INFO
 
	tTSK_VS_PART_INFO
;

42 
TSK_WALK_RET_ENUM
(*
	tTSK_VS_PART_WALK_CB
Ë(
	tTSK_VS_INFO
 *

43 
	ta_vs
, c⁄° 
	tTSK_VS_PART_INFO
 * 
	ta_vs_∑π
, *
	ta_±r
);

49 
TSK_VS_TYPE_DETECT
 = 0x0000,

50 
TSK_VS_TYPE_DOS
 = 0x0001,

51 
TSK_VS_TYPE_BSD
 = 0x0002,

52 
TSK_VS_TYPE_SUN
 = 0x0004,

53 
TSK_VS_TYPE_MAC
 = 0x0008,

54 
TSK_VS_TYPE_GPT
 = 0x0010,

55 
TSK_VS_TYPE_UNSUPP
 = 0xffff,

56 } 
	tTSK_VS_TYPE_ENUM
;

62 
	sTSK_VS_INFO
 {

63 
TSK_IMG_INFO
 *
img_öfo
;

64 
TSK_VS_TYPE_ENUM
 
v°y≥
;

65 
TSK_DADDR_T
 
off£t
;

66 
block_size
;

68 
TSK_ENDIAN_ENUM
 
ídün
;

70 
TSK_VS_PART_INFO
 *
∑π_li°
;

72 
TSK_PNUM_T
 
∑π_cou¡
;

74 (*
˛o£
Ë(
TSK_VS_INFO
 *);

89 
TSK_VS_PART_FLAG_ALLOC
 = 0x01,

90 
TSK_VS_PART_FLAG_UNALLOC
 = 0x02,

91 
TSK_VS_PART_FLAG_META
 = 0x04,

92 
TSK_VS_PART_FLAG_ALL
 = 0x07,

93 } 
	tTSK_VS_PART_FLAG_ENUM
;

98 
	sTSK_VS_PART_INFO
 {

99 
TSK_VS_PART_INFO
 *
¥ev
;

100 
TSK_VS_PART_INFO
 *
√xt
;

101 
TSK_VS_INFO
 *
vs
;

103 
TSK_DADDR_T
 
°¨t
;

104 
TSK_DADDR_T
 
Àn
;

105 *
desc
;

106 
öt8_t
 
èbÀ_num
;

107 
öt8_t
 
¶Ÿ_num
;

108 
TSK_PNUM_T
 
addr
;

109 
TSK_VS_PART_FLAG_ENUM
 
Êags
;

114 
TSK_VS_TYPE_ENUM
 
tsk_vs_ty≥_toid
(c⁄° 
TSK_TCHAR
 *);

115 c⁄° *
tsk_vs_ty≥_t⁄ame
(
TSK_VS_TYPE_ENUM
);

116 c⁄° *
tsk_vs_ty≥_todesc
(
TSK_VS_TYPE_ENUM
);

117 
TSK_VS_TYPE_ENUM
 
tsk_vs_ty≥_suµ‹ãd
();

118 
tsk_vs_ty≥_¥öt
(
FILE
 *);

121 
TSK_VS_INFO
 *
tsk_vs_›í
(
TSK_IMG_INFO
 *, 
TSK_DADDR_T
,

122 
TSK_VS_TYPE_ENUM
);

123 
tsk_vs_˛o£
(
TSK_VS_INFO
 *);

126 
ssize_t
 
tsk_vs_ªad_block
(
TSK_VS_INFO
 * 
a_vs
,

127 
TSK_DADDR_T
 
a_addr
, *
buf
, 
size_t
 
Àn
);

130 c⁄° 
TSK_VS_PART_INFO
 *
tsk_vs_∑π_gë
(c⁄° 
TSK_VS_INFO
 *,

131 
TSK_PNUM_T
 
idx
);

132 
uöt8_t
 
tsk_vs_∑π_wÆk
(
TSK_VS_INFO
 * 
vs
, 
TSK_PNUM_T
 
°¨t
,

133 
TSK_PNUM_T
 
œ°
, 
TSK_VS_PART_FLAG_ENUM
 
Êags
,

134 
TSK_VS_PART_WALK_CB
 
a˘i⁄
, *
±r
);

137 
ssize_t
 
tsk_vs_∑π_ªad
(c⁄° 
TSK_VS_PART_INFO
 *

138 
a_vs_∑π
, 
TSK_OFF_T
 
a_off
, *
buf
, 
size_t
 
Àn
);

139 
ssize_t
 
tsk_vs_∑π_ªad_block
(c⁄° 
TSK_VS_PART_INFO
 *

140 
a_vs_∑π
, 
TSK_DADDR_T
 
a_addr
, *
buf
, 
size_t
 
Àn
);

142 #ifde‡
__˝lu•lus


	@tsk3/vs/tsk_vs_i.h

15 #i‚de‡
_TSK_VS_I_H


16 
	#_TSK_VS_I_H


	)

19 
	~"tsk3/ba£/tsk_ba£_i.h
"

20 
	~"tsk3/img/tsk_img_i.h
"

23 
	~"tsk_vs.h
"

25 
	~<sys/ty≥s.h
>

27 
TSK_VS_INFO
 *
tsk_vs_dos_›í
(
TSK_IMG_INFO
 *, 
TSK_DADDR_T
, 
uöt8_t
);

28 
TSK_VS_INFO
 *
tsk_vs_mac_›í
(
TSK_IMG_INFO
 *, 
TSK_DADDR_T
);

29 
TSK_VS_INFO
 *
tsk_vs_bsd_›í
(
TSK_IMG_INFO
 *, 
TSK_DADDR_T
);

30 
TSK_VS_INFO
 *
tsk_vs_sun_›í
(
TSK_IMG_INFO
 *, 
TSK_DADDR_T
);

31 
TSK_VS_INFO
 *
tsk_vs_g±_›í
(
TSK_IMG_INFO
 *, 
TSK_DADDR_T
);

33 
uöt8_t
 
tsk_vs_∑π_unu£d
(
TSK_VS_INFO
 *);

34 
TSK_VS_PART_INFO
 *
tsk_vs_∑π_add
(
TSK_VS_INFO
 *, 
TSK_DADDR_T
,

35 
TSK_DADDR_T
, 
TSK_VS_PART_FLAG_ENUM
, *, 
öt8_t
, int8_t);

36 
tsk_vs_∑π_‰ì
(
TSK_VS_INFO
 *);

39 
	#tsk_vs_guessu16
(
vs
, 
x
, 
mag
) \

40 
	`tsk_guess_íd_u16
(&(
vs
->
ídün
), (
x
), (
mag
))

	)

42 
	#tsk_vs_guessu32
(
vs
, 
x
, 
mag
) \

43 
	`tsk_guess_íd_u32
(&(
vs
->
ídün
), (
x
), (
mag
))

	)

	@/usr/include/ctype.h

24 #i‚def 
_CTYPE_H


25 
	#_CTYPE_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

30 
	g__BEGIN_DECLS


32 #i‚de‡
_ISbô


41 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

45 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

50 
	m_ISuµî
 = 
_ISbô
 (0),

51 
	m_ISlowî
 = 
_ISbô
 (1),

52 
	m_ISÆpha
 = 
_ISbô
 (2),

53 
	m_ISdigô
 = 
_ISbô
 (3),

54 
	m_ISxdigô
 = 
_ISbô
 (4),

55 
	m_IS•a˚
 = 
_ISbô
 (5),

56 
	m_IS¥öt
 = 
_ISbô
 (6),

57 
	m_ISgøph
 = 
_ISbô
 (7),

58 
	m_ISbœnk
 = 
_ISbô
 (8),

59 
	m_IS˙ål
 = 
_ISbô
 (9),

60 
	m_ISpun˘
 = 
_ISbô
 (10),

61 
	m_ISÆnum
 = 
_ISbô
 (11)

81 
__c⁄°
 **
	$__˘y≥_b_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

83 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

85 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

86 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

91 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

92 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

94 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

96 
__BEGIN_NAMESPACE_STD


102 
	`__ex˘y≥
 (
iß um
);

103 
	`__ex˘y≥
 (
ißÕha
);

104 
	`__ex˘y≥
 (
is˙ål
);

105 
	`__ex˘y≥
 (
isdigô
);

106 
	`__ex˘y≥
 (
i¶owî
);

107 
	`__ex˘y≥
 (
isgøph
);

108 
	`__ex˘y≥
 (
i•röt
);

109 
	`__ex˘y≥
 (
i•un˘
);

110 
	`__ex˘y≥
 (
is•a˚
);

111 
	`__ex˘y≥
 (
isuµî
);

112 
	`__ex˘y≥
 (
isxdigô
);

116 
	$tﬁowî
 (
__c
Ë
__THROW
;

119 
	$touµî
 (
__c
Ë
__THROW
;

121 
__END_NAMESPACE_STD


125 #ifdef 
__USE_ISOC99


126 
__BEGIN_NAMESPACE_C99


128 
	`__ex˘y≥
 (
isbœnk
);

130 
__END_NAMESPACE_C99


133 #ifde‡
__USE_GNU


135 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

138 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


142 
	$ißscii
 (
__c
Ë
__THROW
;

146 
	$tﬂscii
 (
__c
Ë
__THROW
;

150 
	`__ex˘y≥
 (
_touµî
);

151 
	`__ex˘y≥
 (
_tﬁowî
);

155 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

156 (
__exãnsi⁄__
 \

157 ({ 
__ªs
; \

158 i‡( (
c
) > 1) \

160 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

162 
__c
 = (
c
); \

163 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

166 
__ªs
 = 
f
 
¨gs
; \

169 
__ªs
 = (
a
)[(Ë(
c
)]; \

170 
__ªs
; 
	}
}))

	)

172 #i‡!
deföed
 
__NO_CTYPE
 && !deföed 
__˝lu•lus


173 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

174 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

175 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

176 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

177 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

178 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

179 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

180 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

181 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

182 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

183 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

185 #ifde‡
__USE_ISOC99


186 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

189 #ifde‡
__USE_EXTERN_INLINES


190 
__exã∫_ölöe
 

191 
__NTH
 (
	$tﬁowî
 (
__c
))

193  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

194 
	}
}

196 
__exã∫_ölöe
 

197 
__NTH
 (
	$touµî
 (
__c
))

199  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

200 
	}
}

203 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


204 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

205 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

208 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


209 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

210 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

212 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

213 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

219 #ifde‡
__USE_XOPEN2K8


233 
	~<xloˇÀ.h
>

237 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

238 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

240 
	#__ex˘y≥_l
(
«me
) \

241 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

247 
__ex˘y≥_l
 (
iß um_l
);

248 
__ex˘y≥_l
 (
ißÕha_l
);

249 
__ex˘y≥_l
 (
is˙ål_l
);

250 
__ex˘y≥_l
 (
isdigô_l
);

251 
__ex˘y≥_l
 (
i¶owî_l
);

252 
__ex˘y≥_l
 (
isgøph_l
);

253 
__ex˘y≥_l
 (
i•röt_l
);

254 
__ex˘y≥_l
 (
i•un˘_l
);

255 
__ex˘y≥_l
 (
is•a˚_l
);

256 
__ex˘y≥_l
 (
isuµî_l
);

257 
__ex˘y≥_l
 (
isxdigô_l
);

259 
__ex˘y≥_l
 (
isbœnk_l
);

263 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

264 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

267 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

268 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

270 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


271 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

272 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

273 
	#__touµî_l
(
c
, 
loˇÀ
) \

274 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

275 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

276 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

280 #i‚de‡
__NO_CTYPE


281 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

282 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

283 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

284 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

285 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

286 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

287 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

288 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

289 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

290 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

291 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

293 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

295 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


296 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

297 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

300 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

301 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

302 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

303 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

304 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

305 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

306 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

307 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

308 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

309 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

310 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

312 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

314 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


315 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

316 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

323 
__END_DECLS


	@/usr/include/errno.h

23 #i‚def 
_ERRNO_H


27 #i‚def 
__√ed_Em©h


28 
	#_ERRNO_H
 1

	)

29 
	~<„©uªs.h
>

32 
	g__BEGIN_DECLS


36 
	~<bôs/î∫o.h
>

37 #unde‡
__√ed_Em©h


39 #ifdef 
_ERRNO_H


46 #i‚def 
î∫o


47 
î∫o
;

50 #ifde‡
__USE_GNU


55 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

59 
	g__END_DECLS


67 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


68 #i‚de‡
__îr‹_t_deföed


69 
	tîr‹_t
;

70 
	#__îr‹_t_deföed
 1

	)

72 #unde‡
__√ed_îr‹_t


	@/usr/include/fcntl.h

24 #i‚def 
_FCNTL_H


25 
	#_FCNTL_H
 1

	)

27 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 
	~<bôs/f˙é.h
>

37 #ifde‡
__USE_XOPEN


38 
	~<sys/°©.h
>

41 #ifdef 
__USE_MISC


42 #i‚de‡
R_OK


45 
	#R_OK
 4

	)

46 
	#W_OK
 2

	)

47 
	#X_OK
 1

	)

48 
	#F_OK
 0

	)

53 #ifde‡
__USE_XOPEN


54 
	#SEEK_SET
 0

	)

55 
	#SEEK_CUR
 1

	)

56 
	#SEEK_END
 2

	)

64 
f˙é
 (
__fd
, 
__cmd
, ...);

72 #i‚de‡
__USE_FILE_OFFSET64


73 
	$›í
 (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

75 #ifde‡
__REDIRECT


76 
	`__REDIRECT
 (
›í
, (
__c⁄°
 *
__fûe
, 
__oÊag
, ...), 
›í64
)

77 
	`__n⁄nuŒ
 ((1));

79 
	#›í
 
›í64


	)

82 #ifde‡
__USE_LARGEFILE64


83 
	$›í64
 (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

86 #ifde‡
__USE_ATFILE


96 #i‚de‡
__USE_FILE_OFFSET64


97 
	$›í©
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
, ...)

98 
	`__n⁄nuŒ
 ((2));

100 #ifde‡
__REDIRECT


101 
	`__REDIRECT
 (
›í©
, (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
,

102 ...), 
›í©64
Ë
	`__n⁄nuŒ
 ((2));

104 
	#›í©
 
›í©64


	)

108 
	$›í©64
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
, ...)

109 
	`__n⁄nuŒ
 ((2));

117 #i‚de‡
__USE_FILE_OFFSET64


118 
	$¸ót
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

120 #ifde‡
__REDIRECT


121 
	`__REDIRECT
 (
¸ót
, (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
),

122 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

124 
	#¸ót
 
¸ót64


	)

127 #ifde‡
__USE_LARGEFILE64


128 
	$¸ót64
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

131 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

132 && !
deföed
 
__USE_POSIX
))

141 
	#F_ULOCK
 0

	)

142 
	#F_LOCK
 1

	)

143 
	#F_TLOCK
 2

	)

144 
	#F_TEST
 3

	)

146 #i‚de‡
__USE_FILE_OFFSET64


147 
	`lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
);

149 #ifde‡
__REDIRECT


150 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

152 
	#lockf
 
lockf64


	)

155 #ifde‡
__USE_LARGEFILE64


156 
	`lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
);

160 #ifde‡
__USE_XOPEN2K


163 #i‚de‡
__USE_FILE_OFFSET64


164 
	$posix_Ádvi£
 (
__fd
, 
__off_t
 
__off£t
, __off_à
__Àn
,

165 
__advi£
Ë
__THROW
;

167 #ifde‡
__REDIRECT_NTH


168 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

169 
__off64_t
 
__Àn
, 
__advi£
),

170 
posix_Ádvi£64
);

172 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

175 #ifde‡
__USE_LARGEFILE64


176 
	$posix_Ádvi£64
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__Àn
,

177 
__advi£
Ë
__THROW
;

185 #i‚de‡
__USE_FILE_OFFSET64


186 
	`posix_ÁŒoˇã
 (
__fd
, 
__off_t
 
__off£t
, __off_à
__Àn
);

188 #ifde‡
__REDIRECT


189 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

190 
__off64_t
 
__Àn
),

191 
posix_ÁŒoˇã64
);

193 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

196 #ifde‡
__USE_LARGEFILE64


197 
	`posix_ÁŒoˇã64
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__Àn
);

203 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe
 \

204 && 
deföed
 
__va_¨g_∑ck_Àn


205 
	~<bôs/f˙é2.h
>

208 
__END_DECLS


	@/usr/include/inttypes.h

23 #i‚de‡
_INTTYPES_H


24 
	#_INTTYPES_H
 1

	)

26 
	~<„©uªs.h
>

28 
	~<°döt.h
>

31 #i‚de‡
____gwch¨_t_deföed


32 #ifde‡
__˝lu•lus


33 
	#__gwch¨_t
 
wch¨_t


	)

34 #ñi‡
deföed
 
__WCHAR_TYPE__


35 
__WCHAR_TYPE__
 
	t__gwch¨_t
;

37 
	#__√ed_wch¨_t


	)

38 
	~<°ddef.h
>

39 
wch¨_t
 
	t__gwch¨_t
;

41 
	#____gwch¨_t_deföed
 1

	)

47 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_FORMAT_MACROS


49 #i‡
__WORDSIZE
 == 64

50 
	#__PRI64_PREFIX
 "l"

	)

51 
	#__PRIPTR_PREFIX
 "l"

	)

53 
	#__PRI64_PREFIX
 "Œ"

	)

54 
	#__PRIPTR_PREFIX


	)

60 
	#PRId8
 "d"

	)

61 
	#PRId16
 "d"

	)

62 
	#PRId32
 "d"

	)

63 
	#PRId64
 
__PRI64_PREFIX
 "d"

	)

65 
	#PRIdLEAST8
 "d"

	)

66 
	#PRIdLEAST16
 "d"

	)

67 
	#PRIdLEAST32
 "d"

	)

68 
	#PRIdLEAST64
 
__PRI64_PREFIX
 "d"

	)

70 
	#PRIdFAST8
 "d"

	)

71 
	#PRIdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

72 
	#PRIdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

73 
	#PRIdFAST64
 
__PRI64_PREFIX
 "d"

	)

76 
	#PRIi8
 "i"

	)

77 
	#PRIi16
 "i"

	)

78 
	#PRIi32
 "i"

	)

79 
	#PRIi64
 
__PRI64_PREFIX
 "i"

	)

81 
	#PRIiLEAST8
 "i"

	)

82 
	#PRIiLEAST16
 "i"

	)

83 
	#PRIiLEAST32
 "i"

	)

84 
	#PRIiLEAST64
 
__PRI64_PREFIX
 "i"

	)

86 
	#PRIiFAST8
 "i"

	)

87 
	#PRIiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

88 
	#PRIiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

89 
	#PRIiFAST64
 
__PRI64_PREFIX
 "i"

	)

92 
	#PRIo8
 "o"

	)

93 
	#PRIo16
 "o"

	)

94 
	#PRIo32
 "o"

	)

95 
	#PRIo64
 
__PRI64_PREFIX
 "o"

	)

97 
	#PRIoLEAST8
 "o"

	)

98 
	#PRIoLEAST16
 "o"

	)

99 
	#PRIoLEAST32
 "o"

	)

100 
	#PRIoLEAST64
 
__PRI64_PREFIX
 "o"

	)

102 
	#PRIoFAST8
 "o"

	)

103 
	#PRIoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

104 
	#PRIoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

105 
	#PRIoFAST64
 
__PRI64_PREFIX
 "o"

	)

108 
	#PRIu8
 "u"

	)

109 
	#PRIu16
 "u"

	)

110 
	#PRIu32
 "u"

	)

111 
	#PRIu64
 
__PRI64_PREFIX
 "u"

	)

113 
	#PRIuLEAST8
 "u"

	)

114 
	#PRIuLEAST16
 "u"

	)

115 
	#PRIuLEAST32
 "u"

	)

116 
	#PRIuLEAST64
 
__PRI64_PREFIX
 "u"

	)

118 
	#PRIuFAST8
 "u"

	)

119 
	#PRIuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

120 
	#PRIuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

121 
	#PRIuFAST64
 
__PRI64_PREFIX
 "u"

	)

124 
	#PRIx8
 "x"

	)

125 
	#PRIx16
 "x"

	)

126 
	#PRIx32
 "x"

	)

127 
	#PRIx64
 
__PRI64_PREFIX
 "x"

	)

129 
	#PRIxLEAST8
 "x"

	)

130 
	#PRIxLEAST16
 "x"

	)

131 
	#PRIxLEAST32
 "x"

	)

132 
	#PRIxLEAST64
 
__PRI64_PREFIX
 "x"

	)

134 
	#PRIxFAST8
 "x"

	)

135 
	#PRIxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

136 
	#PRIxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

137 
	#PRIxFAST64
 
__PRI64_PREFIX
 "x"

	)

140 
	#PRIX8
 "X"

	)

141 
	#PRIX16
 "X"

	)

142 
	#PRIX32
 "X"

	)

143 
	#PRIX64
 
__PRI64_PREFIX
 "X"

	)

145 
	#PRIXLEAST8
 "X"

	)

146 
	#PRIXLEAST16
 "X"

	)

147 
	#PRIXLEAST32
 "X"

	)

148 
	#PRIXLEAST64
 
__PRI64_PREFIX
 "X"

	)

150 
	#PRIXFAST8
 "X"

	)

151 
	#PRIXFAST16
 
__PRIPTR_PREFIX
 "X"

	)

152 
	#PRIXFAST32
 
__PRIPTR_PREFIX
 "X"

	)

153 
	#PRIXFAST64
 
__PRI64_PREFIX
 "X"

	)

157 
	#PRIdMAX
 
__PRI64_PREFIX
 "d"

	)

158 
	#PRIiMAX
 
__PRI64_PREFIX
 "i"

	)

159 
	#PRIoMAX
 
__PRI64_PREFIX
 "o"

	)

160 
	#PRIuMAX
 
__PRI64_PREFIX
 "u"

	)

161 
	#PRIxMAX
 
__PRI64_PREFIX
 "x"

	)

162 
	#PRIXMAX
 
__PRI64_PREFIX
 "X"

	)

166 
	#PRIdPTR
 
__PRIPTR_PREFIX
 "d"

	)

167 
	#PRIiPTR
 
__PRIPTR_PREFIX
 "i"

	)

168 
	#PRIoPTR
 
__PRIPTR_PREFIX
 "o"

	)

169 
	#PRIuPTR
 
__PRIPTR_PREFIX
 "u"

	)

170 
	#PRIxPTR
 
__PRIPTR_PREFIX
 "x"

	)

171 
	#PRIXPTR
 
__PRIPTR_PREFIX
 "X"

	)

177 
	#SCNd8
 "hhd"

	)

178 
	#SCNd16
 "hd"

	)

179 
	#SCNd32
 "d"

	)

180 
	#SCNd64
 
__PRI64_PREFIX
 "d"

	)

182 
	#SCNdLEAST8
 "hhd"

	)

183 
	#SCNdLEAST16
 "hd"

	)

184 
	#SCNdLEAST32
 "d"

	)

185 
	#SCNdLEAST64
 
__PRI64_PREFIX
 "d"

	)

187 
	#SCNdFAST8
 "hhd"

	)

188 
	#SCNdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

189 
	#SCNdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

190 
	#SCNdFAST64
 
__PRI64_PREFIX
 "d"

	)

193 
	#SCNi8
 "hhi"

	)

194 
	#SCNi16
 "hi"

	)

195 
	#SCNi32
 "i"

	)

196 
	#SCNi64
 
__PRI64_PREFIX
 "i"

	)

198 
	#SCNiLEAST8
 "hhi"

	)

199 
	#SCNiLEAST16
 "hi"

	)

200 
	#SCNiLEAST32
 "i"

	)

201 
	#SCNiLEAST64
 
__PRI64_PREFIX
 "i"

	)

203 
	#SCNiFAST8
 "hhi"

	)

204 
	#SCNiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

205 
	#SCNiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

206 
	#SCNiFAST64
 
__PRI64_PREFIX
 "i"

	)

209 
	#SCNu8
 "hhu"

	)

210 
	#SCNu16
 "hu"

	)

211 
	#SCNu32
 "u"

	)

212 
	#SCNu64
 
__PRI64_PREFIX
 "u"

	)

214 
	#SCNuLEAST8
 "hhu"

	)

215 
	#SCNuLEAST16
 "hu"

	)

216 
	#SCNuLEAST32
 "u"

	)

217 
	#SCNuLEAST64
 
__PRI64_PREFIX
 "u"

	)

219 
	#SCNuFAST8
 "hhu"

	)

220 
	#SCNuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

221 
	#SCNuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

222 
	#SCNuFAST64
 
__PRI64_PREFIX
 "u"

	)

225 
	#SCNo8
 "hho"

	)

226 
	#SCNo16
 "ho"

	)

227 
	#SCNo32
 "o"

	)

228 
	#SCNo64
 
__PRI64_PREFIX
 "o"

	)

230 
	#SCNoLEAST8
 "hho"

	)

231 
	#SCNoLEAST16
 "ho"

	)

232 
	#SCNoLEAST32
 "o"

	)

233 
	#SCNoLEAST64
 
__PRI64_PREFIX
 "o"

	)

235 
	#SCNoFAST8
 "hho"

	)

236 
	#SCNoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

237 
	#SCNoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

238 
	#SCNoFAST64
 
__PRI64_PREFIX
 "o"

	)

241 
	#SCNx8
 "hhx"

	)

242 
	#SCNx16
 "hx"

	)

243 
	#SCNx32
 "x"

	)

244 
	#SCNx64
 
__PRI64_PREFIX
 "x"

	)

246 
	#SCNxLEAST8
 "hhx"

	)

247 
	#SCNxLEAST16
 "hx"

	)

248 
	#SCNxLEAST32
 "x"

	)

249 
	#SCNxLEAST64
 
__PRI64_PREFIX
 "x"

	)

251 
	#SCNxFAST8
 "hhx"

	)

252 
	#SCNxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

253 
	#SCNxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

254 
	#SCNxFAST64
 
__PRI64_PREFIX
 "x"

	)

258 
	#SCNdMAX
 
__PRI64_PREFIX
 "d"

	)

259 
	#SCNiMAX
 
__PRI64_PREFIX
 "i"

	)

260 
	#SCNoMAX
 
__PRI64_PREFIX
 "o"

	)

261 
	#SCNuMAX
 
__PRI64_PREFIX
 "u"

	)

262 
	#SCNxMAX
 
__PRI64_PREFIX
 "x"

	)

265 
	#SCNdPTR
 
__PRIPTR_PREFIX
 "d"

	)

266 
	#SCNiPTR
 
__PRIPTR_PREFIX
 "i"

	)

267 
	#SCNoPTR
 
__PRIPTR_PREFIX
 "o"

	)

268 
	#SCNuPTR
 
__PRIPTR_PREFIX
 "u"

	)

269 
	#SCNxPTR
 
__PRIPTR_PREFIX
 "x"

	)

274 
	g__BEGIN_DECLS


276 #i‡
__WORDSIZE
 == 64

281 
	mquŸ
;

282 
	mªm
;

283 } 
	timaxdiv_t
;

290 
	mquŸ
;

291 
	mªm
;

292 } 
	timaxdiv_t
;

298 
ötmax_t
 
	$imaxabs
 (
ötmax_t
 
__n
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

301 
imaxdiv_t
 
	$imaxdiv
 (
ötmax_t
 
__numî
, i¡max_à
__díom
)

302 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

305 
ötmax_t
 
	$°πoimax
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

306 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

309 
uötmax_t
 
	$°πoumax
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

310 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

313 
ötmax_t
 
	$wc°oimax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

314 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

315 
__THROW
;

318 
uötmax_t
 
	$wc°oumax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

319 
__gwch¨_t
 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
)

320 
__THROW
;

322 #ifde‡
__USE_EXTERN_INLINES


324 #i‡
__WORDSIZE
 == 64

326 
	$__°πﬁ_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

327 **
__ª°ri˘
 
__íd±r
,

328 
__ba£
, 
__group
)

329 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

331 
__exã∫_ölöe
 
ötmax_t


332 
	`__NTH
 (
	$°πoimax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

333 
ba£
))

335  
	`__°πﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

336 
	}
}

338 
	$__°πoul_öã∫Æ
 (
__c⁄°
 *

339 
__ª°ri˘
 
__≈å
,

340 ** 
__ª°ri˘
 
__íd±r
,

341 
__ba£
, 
__group
)

342 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

344 
__exã∫_ölöe
 
uötmax_t


345 
	`__NTH
 (
	$°πoumax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

346 
ba£
))

348  
	`__°πoul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

349 
	}
}

351 
	$__wc°ﬁ_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 * 
__ª°ri˘
 
__≈å
,

352 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

353 
__ba£
, 
__group
)

354 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

356 
__exã∫_ölöe
 
ötmax_t


357 
	`__NTH
 (
	$wc°oimax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

358 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

360  
	`__wc°ﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

361 
	}
}

363 
	$__wc°oul_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 *

364 
__ª°ri˘
 
__≈å
,

365 
__gwch¨_t
 **

366 
__ª°ri˘
 
__íd±r
,

367 
__ba£
, 
__group
)

368 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

370 
__exã∫_ölöe
 
uötmax_t


371 
	`__NTH
 (
	$wc°oumax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

372 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

374  
	`__wc°oul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

375 
	}
}

379 
__exãnsi⁄__


380 
	$__°πﬁl_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

381 **
__ª°ri˘
 
__íd±r
,

382 
__ba£
, 
__group
)

383 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

385 
__exã∫_ölöe
 
ötmax_t


386 
	`__NTH
 (
	$°πoimax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

387 
ba£
))

389  
	`__°πﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

390 
	}
}

392 
__exãnsi⁄__


393 
	$__°πouŒ_öã∫Æ
 (
__c⁄°
 *

394 
__ª°ri˘
 
__≈å
,

396 
__ª°ri˘
 
__íd±r
,

397 
__ba£
,

398 
__group
)

399 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

401 
__exã∫_ölöe
 
uötmax_t


402 
	`__NTH
 (
	$°πoumax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

403 
ba£
))

405  
	`__°πouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

406 
	}
}

408 
__exãnsi⁄__


409 
	$__wc°ﬁl_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 *

410 
__ª°ri˘
 
__≈å
,

411 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

412 
__ba£
, 
__group
)

413 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

415 
__exã∫_ölöe
 
ötmax_t


416 
	`__NTH
 (
	$wc°oimax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

417 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

419  
	`__wc°ﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

420 
	}
}

423 
__exãnsi⁄__


424 
	$__wc°ouŒ_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 *

425 
__ª°ri˘
 
__≈å
,

426 
__gwch¨_t
 **

427 
__ª°ri˘
 
__íd±r
,

428 
__ba£
,

429 
__group
)

430 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

432 
__exã∫_ölöe
 
uötmax_t


433 
	`__NTH
 (
	$wc°oumax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

434 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

436  
	`__wc°ouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

437 
	}
}

442 
	g__END_DECLS


	@/usr/include/locale.h

23 #i‚def 
_LOCALE_H


24 
	#_LOCALE_H
 1

	)

26 
	~<„©uªs.h
>

28 
	#__√ed_NULL


	)

29 
	~<°ddef.h
>

30 
	~<bôs/loˇÀ.h
>

32 
	g__BEGIN_DECLS


36 
	#LC_CTYPE
 
__LC_CTYPE


	)

37 
	#LC_NUMERIC
 
__LC_NUMERIC


	)

38 
	#LC_TIME
 
__LC_TIME


	)

39 
	#LC_COLLATE
 
__LC_COLLATE


	)

40 
	#LC_MONETARY
 
__LC_MONETARY


	)

41 
	#LC_MESSAGES
 
__LC_MESSAGES


	)

42 
	#LC_ALL
 
__LC_ALL


	)

43 
	#LC_PAPER
 
__LC_PAPER


	)

44 
	#LC_NAME
 
__LC_NAME


	)

45 
	#LC_ADDRESS
 
__LC_ADDRESS


	)

46 
	#LC_TELEPHONE
 
__LC_TELEPHONE


	)

47 
	#LC_MEASUREMENT
 
__LC_MEASUREMENT


	)

48 
	#LC_IDENTIFICATION
 
__LC_IDENTIFICATION


	)

51 
__BEGIN_NAMESPACE_STD


54 
	slc⁄v


58 *
	mdecimÆ_poöt
;

59 *
	mthoußnds_£p
;

65 *
	mgroupög
;

71 *
	möt_cuº_symbﬁ
;

72 *
	mcuºícy_symbﬁ
;

73 *
	mm⁄_decimÆ_poöt
;

74 *
	mm⁄_thoußnds_£p
;

75 *
	mm⁄_groupög
;

76 *
	mposôive_sign
;

77 *
	m√g©ive_sign
;

78 
	möt_‰ac_digôs
;

79 
	m‰ac_digôs
;

81 
	mp_cs_¥e˚des
;

83 
	mp_£p_by_•a˚
;

85 
	mn_cs_¥e˚des
;

87 
	mn_£p_by_•a˚
;

94 
	mp_sign_po¢
;

95 
	mn_sign_po¢
;

96 #ifde‡
__USE_ISOC99


98 
	möt_p_cs_¥e˚des
;

100 
	möt_p_£p_by_•a˚
;

102 
	möt_n_cs_¥e˚des
;

104 
	möt_n_£p_by_•a˚
;

111 
	möt_p_sign_po¢
;

112 
	möt_n_sign_po¢
;

114 
	m__öt_p_cs_¥e˚des
;

115 
	m__öt_p_£p_by_•a˚
;

116 
	m__öt_n_cs_¥e˚des
;

117 
	m__öt_n_£p_by_•a˚
;

118 
	m__öt_p_sign_po¢
;

119 
	m__öt_n_sign_po¢
;

125 *
	$£éoˇÀ
 (
__ˇãg‹y
, 
__c⁄°
 *
__loˇÀ
Ë
__THROW
;

128 
lc⁄v
 *
	$loˇÀc⁄v
 (Ë
__THROW
;

130 
__END_NAMESPACE_STD


133 #ifdef 
__USE_XOPEN2K8


146 
	~<xloˇÀ.h
>

152 
__loˇÀ_t
 
	$√wloˇÀ
 (
__ˇãg‹y_mask
, 
__c⁄°
 *
__loˇÀ
,

153 
__loˇÀ_t
 
__ba£
Ë
__THROW
;

159 
	#LC_CTYPE_MASK
 (1 << 
__LC_CTYPE
)

	)

160 
	#LC_NUMERIC_MASK
 (1 << 
__LC_NUMERIC
)

	)

161 
	#LC_TIME_MASK
 (1 << 
__LC_TIME
)

	)

162 
	#LC_COLLATE_MASK
 (1 << 
__LC_COLLATE
)

	)

163 
	#LC_MONETARY_MASK
 (1 << 
__LC_MONETARY
)

	)

164 
	#LC_MESSAGES_MASK
 (1 << 
__LC_MESSAGES
)

	)

165 
	#LC_PAPER_MASK
 (1 << 
__LC_PAPER
)

	)

166 
	#LC_NAME_MASK
 (1 << 
__LC_NAME
)

	)

167 
	#LC_ADDRESS_MASK
 (1 << 
__LC_ADDRESS
)

	)

168 
	#LC_TELEPHONE_MASK
 (1 << 
__LC_TELEPHONE
)

	)

169 
	#LC_MEASUREMENT_MASK
 (1 << 
__LC_MEASUREMENT
)

	)

170 
	#LC_IDENTIFICATION_MASK
 (1 << 
__LC_IDENTIFICATION
)

	)

171 
	#LC_ALL_MASK
 (
LC_CTYPE_MASK
 \

172 | 
LC_NUMERIC_MASK
 \

173 | 
LC_TIME_MASK
 \

174 | 
LC_COLLATE_MASK
 \

175 | 
LC_MONETARY_MASK
 \

176 | 
LC_MESSAGES_MASK
 \

177 | 
LC_PAPER_MASK
 \

178 | 
LC_NAME_MASK
 \

179 | 
LC_ADDRESS_MASK
 \

180 | 
LC_TELEPHONE_MASK
 \

181 | 
LC_MEASUREMENT_MASK
 \

182 | 
LC_IDENTIFICATION_MASK
 \

183 )

	)

187 
__loˇÀ_t
 
	$du∂oˇÀ
 (
__loˇÀ_t
 
__d©a£t
Ë
__THROW
;

191 
	$‰ìloˇÀ
 (
__loˇÀ_t
 
__d©a£t
Ë
__THROW
;

198 
__loˇÀ_t
 
	$u£loˇÀ
 (
__loˇÀ_t
 
__d©a£t
Ë
__THROW
;

202 
	#LC_GLOBAL_LOCALE
 ((
__loˇÀ_t
Ë-1L)

	)

206 
__END_DECLS


	@/usr/include/stdio.h

24 #i‚de‡
_STDIO_H


26 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


27 
	#_STDIO_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

36 
	~<bôs/ty≥s.h
>

37 
	#__√ed_FILE


	)

38 
	#__√ed___FILE


	)

42 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


45 
	g_IO_FILE
;

47 
__BEGIN_NAMESPACE_STD


49 
_IO_FILE
 
	tFILE
;

50 
	g__END_NAMESPACE_STD


51 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

52 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

53 || 
deföed
 
__USE_POSIX2


54 
	$__USING_NAMESPACE_STD
(
FILE
)

57 
	#__FILE_deföed
 1

	)

59 #unde‡
__√ed_FILE


62 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


65 
_IO_FILE
 
	t__FILE
;

67 
	#____FILE_deföed
 1

	)

69 #unde‡
__√ed___FILE


72 #ifdef 
_STDIO_H


73 
	#_STDIO_USES_IOSTREAM


	)

75 
	~<libio.h
>

77 #ifde‡
__USE_XOPEN


78 #ifde‡
__GNUC__


79 #i‚de‡
_VA_LIST_DEFINED


80 
_G_va_li°
 
	tva_li°
;

81 
	#_VA_LIST_DEFINED


	)

84 
	~<°d¨g.h
>

89 
__BEGIN_NAMESPACE_STD


90 #i‚de‡
__USE_FILE_OFFSET64


91 
_G_Âos_t
 
	tÂos_t
;

93 
_G_Âos64_t
 
	tÂos_t
;

95 
__END_NAMESPACE_STD


96 #ifde‡
__USE_LARGEFILE64


97 
_G_Âos64_t
 
	tÂos64_t
;

101 
	#_IOFBF
 0

	)

102 
	#_IOLBF
 1

	)

103 
	#_IONBF
 2

	)

107 #i‚de‡
BUFSIZ


108 
	#BUFSIZ
 
_IO_BUFSIZ


	)

114 #i‚de‡
EOF


115 
	#EOF
 (-1)

	)

121 
	#SEEK_SET
 0

	)

122 
	#SEEK_CUR
 1

	)

123 
	#SEEK_END
 2

	)

126 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


128 
	#P_tmpdú
 "/tmp"

	)

141 
	~<bôs/°dio_lim.h
>

145 
_IO_FILE
 *
°dö
;

146 
_IO_FILE
 *
°dout
;

147 
_IO_FILE
 *
°dîr
;

149 
	#°dö
 
°dö


	)

150 
	#°dout
 
°dout


	)

151 
	#°dîr
 
°dîr


	)

153 
__BEGIN_NAMESPACE_STD


155 
	$ªmove
 (
__c⁄°
 *
__fûíame
Ë
__THROW
;

157 
	$ª«me
 (
__c⁄°
 *
__ﬁd
, __c⁄° *
__√w
Ë
__THROW
;

158 
__END_NAMESPACE_STD


160 #ifde‡
__USE_ATFILE


162 
	$ª«mót
 (
__ﬁdfd
, 
__c⁄°
 *
__ﬁd
, 
__√wfd
,

163 
__c⁄°
 *
__√w
Ë
__THROW
;

166 
__BEGIN_NAMESPACE_STD


171 #i‚de‡
__USE_FILE_OFFSET64


172 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

174 #ifde‡
__REDIRECT


175 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

177 
	#tmpfûe
 
tmpfûe64


	)

181 #ifde‡
__USE_LARGEFILE64


182 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

186 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

187 
__END_NAMESPACE_STD


189 #ifde‡
__USE_MISC


192 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

196 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


204 *
	$ãm≤am
 (
__c⁄°
 *
__dú
, __c⁄° *
__pfx
)

205 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

209 
__BEGIN_NAMESPACE_STD


214 
	`f˛o£
 (
FILE
 *
__°ªam
);

219 
	`fÊush
 (
FILE
 *
__°ªam
);

220 
__END_NAMESPACE_STD


222 #ifde‡
__USE_MISC


229 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

232 #ifde‡
__USE_GNU


239 
	`f˛o£Æl
 ();

243 
__BEGIN_NAMESPACE_STD


244 #i‚de‡
__USE_FILE_OFFSET64


249 
FILE
 *
	$f›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

250 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

255 
FILE
 *
	$‰e›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

256 
__c⁄°
 *
__ª°ri˘
 
__modes
,

257 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

259 #ifde‡
__REDIRECT


260 
FILE
 *
	`__REDIRECT
 (
f›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

261 
__c⁄°
 *
__ª°ri˘
 
__modes
), 
f›í64
)

262 
__wur
;

263 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

264 
__c⁄°
 *
__ª°ri˘
 
__modes
,

265 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

266 
__wur
;

268 
	#f›í
 
f›í64


	)

269 
	#‰e›í
 
‰e›í64


	)

272 
__END_NAMESPACE_STD


273 #ifde‡
__USE_LARGEFILE64


274 
FILE
 *
	$f›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

275 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

276 
FILE
 *
	$‰e›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

277 
__c⁄°
 *
__ª°ri˘
 
__modes
,

278 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

281 #ifdef 
__USE_POSIX


283 
FILE
 *
	$fd›í
 (
__fd
, 
__c⁄°
 *
__modes
Ë
__THROW
 
__wur
;

286 #ifdef 
__USE_GNU


289 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

290 
__c⁄°
 *
__ª°ri˘
 
__modes
,

291 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

294 #ifde‡
__USE_XOPEN2K8


296 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, 
__c⁄°
 *
__modes
)

297 
__THROW
 
__wur
;

302 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

306 
__BEGIN_NAMESPACE_STD


309 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

313 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

314 
__modes
, 
size_t
 
__n
Ë
__THROW
;

315 
__END_NAMESPACE_STD


317 #ifdef 
__USE_BSD


320 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

321 
size_t
 
__size
Ë
__THROW
;

324 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

328 
__BEGIN_NAMESPACE_STD


333 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

334 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

339 
	`¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

341 
	$•rötf
 (*
__ª°ri˘
 
__s
,

342 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

348 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

349 
_G_va_li°
 
__¨g
);

354 
	`v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

356 
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

357 
_G_va_li°
 
__¨g
Ë
__THROW
;

358 
__END_NAMESPACE_STD


360 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


361 
__BEGIN_NAMESPACE_C99


363 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

364 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

365 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

367 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

368 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

369 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

370 
__END_NAMESPACE_C99


373 #ifde‡
__USE_GNU


376 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__f
,

377 
_G_va_li°
 
__¨g
)

378 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

379 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

380 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

381 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

382 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

383 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

384 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

387 #ifde‡
__USE_XOPEN2K8


394 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

395 
_G_va_li°
 
__¨g
)

396 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

397 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

398 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

402 
__BEGIN_NAMESPACE_STD


407 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

408 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

413 
	$sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

415 
	$ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

416 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

418 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

419 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

420 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

421 #ifde‡
__REDIRECT


425 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

426 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

427 
__isoc99_fsˇnf
Ë
__wur
;

428 
	`__REDIRECT
 (
sˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

429 
__isoc99_sˇnf
Ë
__wur
;

430 
	`__REDIRECT
 (
ssˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__s
,

431 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

432 
__isoc99_ssˇnf
Ë
__THROW
;

434 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

435 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

436 
	$__isoc99_sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

437 
	$__isoc99_ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

438 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

439 
	#fsˇnf
 
__isoc99_fsˇnf


	)

440 
	#sˇnf
 
__isoc99_sˇnf


	)

441 
	#ssˇnf
 
__isoc99_ssˇnf


	)

445 
__END_NAMESPACE_STD


447 #ifdef 
__USE_ISOC99


448 
__BEGIN_NAMESPACE_C99


453 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

454 
_G_va_li°
 
__¨g
)

455 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

461 
	$vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

462 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

465 
	$vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

466 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

467 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

469 #i‡!
deföed
 
__USE_GNU
 \

470 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

471 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

472 #ifde‡
__REDIRECT


476 
	`__REDIRECT
 (
vfsˇnf
,

477 (
FILE
 *
__ª°ri˘
 
__s
,

478 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

479 
__isoc99_vfsˇnf
)

480 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

481 
	`__REDIRECT
 (
vsˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

482 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

483 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

484 
	`__REDIRECT
 (
vssˇnf
,

485 (
__c⁄°
 *
__ª°ri˘
 
__s
,

486 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

487 
__isoc99_vssˇnf
)

488 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

490 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

491 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

492 
_G_va_li°
 
__¨g
Ë
__wur
;

493 
	$__isoc99_vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

494 
_G_va_li°
 
__¨g
Ë
__wur
;

495 
	$__isoc99_vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

496 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

497 
_G_va_li°
 
__¨g
Ë
__THROW
;

498 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

499 
	#vsˇnf
 
__isoc99_vsˇnf


	)

500 
	#vssˇnf
 
__isoc99_vssˇnf


	)

504 
__END_NAMESPACE_C99


508 
__BEGIN_NAMESPACE_STD


513 
	`fgëc
 (
FILE
 *
__°ªam
);

514 
	`gëc
 (
FILE
 *
__°ªam
);

520 
	`gëch¨
 ();

521 
__END_NAMESPACE_STD


525 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

527 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


532 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

533 
	`gëch¨_u∆ocked
 ();

536 #ifde‡
__USE_MISC


543 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

547 
__BEGIN_NAMESPACE_STD


555 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

556 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

562 
	`putch¨
 (
__c
);

563 
__END_NAMESPACE_STD


567 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

569 #ifde‡
__USE_MISC


576 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

579 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


584 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

585 
	`putch¨_u∆ocked
 (
__c
);

589 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

590 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

592 
	`gëw
 (
FILE
 *
__°ªam
);

595 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

599 
__BEGIN_NAMESPACE_STD


604 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

605 
__wur
;

612 *
	$gës
 (*
__s
Ë
__wur
;

613 
__END_NAMESPACE_STD


615 #ifde‡
__USE_GNU


622 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

623 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

627 #ifdef 
__USE_XOPEN2K8


638 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

639 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

640 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

641 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

642 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

643 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

651 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

652 
size_t
 *
__ª°ri˘
 
__n
,

653 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

657 
__BEGIN_NAMESPACE_STD


662 
	`Âuts
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

668 
	`puts
 (
__c⁄°
 *
__s
);

675 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

682 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

683 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

688 
size_t
 
	`fwrôe
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

689 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

690 
__END_NAMESPACE_STD


692 #ifde‡
__USE_GNU


699 
	`Âuts_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

700 
FILE
 *
__ª°ri˘
 
__°ªam
);

703 #ifde‡
__USE_MISC


710 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

711 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

712 
size_t
 
	`fwrôe_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

713 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

717 
__BEGIN_NAMESPACE_STD


722 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

727 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

732 
	`ªwöd
 (
FILE
 *
__°ªam
);

733 
__END_NAMESPACE_STD


740 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


741 #i‚de‡
__USE_FILE_OFFSET64


746 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

751 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

753 #ifde‡
__REDIRECT


754 
	`__REDIRECT
 (
f£eko
,

755 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

756 
f£eko64
);

757 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

759 
	#f£eko
 
f£eko64


	)

760 
	#·ñlo
 
·ñlo64


	)

765 
__BEGIN_NAMESPACE_STD


766 #i‚de‡
__USE_FILE_OFFSET64


771 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

776 
	`f£ços
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
);

778 #ifde‡
__REDIRECT


779 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

780 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

781 
	`__REDIRECT
 (
f£ços
,

782 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
), 
f£ços64
);

784 
	#fgëpos
 
fgëpos64


	)

785 
	#f£ços
 
f£ços64


	)

788 
__END_NAMESPACE_STD


790 #ifde‡
__USE_LARGEFILE64


791 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

792 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

793 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

794 
	`f£ços64
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos64_t
 *
__pos
);

797 
__BEGIN_NAMESPACE_STD


799 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

801 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

803 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

804 
__END_NAMESPACE_STD


806 #ifde‡
__USE_MISC


808 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

809 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

810 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

814 
__BEGIN_NAMESPACE_STD


819 
	`≥º‹
 (
__c⁄°
 *
__s
);

820 
__END_NAMESPACE_STD


826 
	~<bôs/sys_îæi°.h
>

829 #ifdef 
__USE_POSIX


831 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

834 #ifde‡
__USE_MISC


836 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

840 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

841 
deföed
 
__USE_MISC
)

846 
FILE
 *
	$p›í
 (
__c⁄°
 *
__comm™d
, __c⁄° *
__modes
Ë
__wur
;

852 
	`p˛o£
 (
FILE
 *
__°ªam
);

856 #ifdef 
__USE_POSIX


858 *
	$˘îmid
 (*
__s
Ë
__THROW
;

862 #ifde‡
__USE_XOPEN


864 *
	`cu£rid
 (*
__s
);

868 #ifdef 
__USE_GNU


869 
ob°ack
;

872 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

873 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

874 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

875 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

876 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

877 
_G_va_li°
 
__¨gs
)

878 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

882 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


886 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

890 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

893 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

896 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


900 
	#__√ed_gë›t


	)

901 
	~<gë›t.h
>

906 #ifde‡
__USE_EXTERN_INLINES


907 
	~<bôs/°dio.h
>

909 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


910 
	~<bôs/°dio2.h
>

912 #ifde‡
__LDBL_COMPAT


913 
	~<bôs/°dio-ldbl.h
>

916 
__END_DECLS


	@/usr/include/stdlib.h

23 #i‚def 
_STDLIB_H


25 
	~<„©uªs.h
>

28 
	#__√ed_size_t


	)

29 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


30 
	#__√ed_wch¨_t


	)

31 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	g__BEGIN_DECLS


37 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


38 
	#_STDLIB_H
 1

	)

40 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
_SYS_WAIT_H


42 
	~<bôs/waôÊags.h
>

43 
	~<bôs/waô°©us.h
>

45 #ifde‡
__USE_BSD


50 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


51 
	#__WAIT_INT
(
°©us
) \

52 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

53 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

55 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

63 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


64 
	#__WAIT_STATUS
 *

	)

65 
	#__WAIT_STATUS_DEFN
 *

	)

70 
waô
 *
	m__u±r
;

71 *
	m__ùå
;

72 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

73 
	#__WAIT_STATUS_DEFN
 *

	)

78 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

79 
	#__WAIT_STATUS
 *

	)

80 
	#__WAIT_STATUS_DEFN
 *

	)

85 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

90 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

91 #ifde‡
__WIFCONTINUED


92 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

96 
__BEGIN_NAMESPACE_STD


100 
	mquŸ
;

101 
	mªm
;

102 } 
	tdiv_t
;

105 #i‚de‡
__ldiv_t_deföed


108 
	mquŸ
;

109 
	mªm
;

110 } 
	tldiv_t
;

111 
	#__ldiv_t_deföed
 1

	)

113 
	g__END_NAMESPACE_STD


115 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


116 
__BEGIN_NAMESPACE_C99


118 
__exãnsi⁄__
 struct

120 
	mquŸ
;

121 
	mªm
;

122 } 
	tŒdiv_t
;

123 
	#__Œdiv_t_deföed
 1

	)

124 
	g__END_NAMESPACE_C99


129 
	#RAND_MAX
 2147483647

	)

134 
	#EXIT_FAILURE
 1

	)

135 
	#EXIT_SUCCESS
 0

	)

139 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

140 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

143 
__BEGIN_NAMESPACE_STD


145 
	$©of
 (
__c⁄°
 *
__≈å
)

146 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

148 
	$©oi
 (
__c⁄°
 *
__≈å
)

149 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

151 
	$©ﬁ
 (
__c⁄°
 *
__≈å
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

153 
__END_NAMESPACE_STD


155 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

156 
__BEGIN_NAMESPACE_C99


158 
__exãnsi⁄__
 
	$©ﬁl
 (
__c⁄°
 *
__≈å
)

159 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

160 
__END_NAMESPACE_C99


163 
__BEGIN_NAMESPACE_STD


165 
	$°πod
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

166 **
__ª°ri˘
 
__íd±r
)

167 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

168 
__END_NAMESPACE_STD


170 #ifdef 
__USE_ISOC99


171 
__BEGIN_NAMESPACE_C99


173 
	$°πof
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

174 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

176 
	$°πﬁd
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

177 **
__ª°ri˘
 
__íd±r
)

178 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

179 
__END_NAMESPACE_C99


182 
__BEGIN_NAMESPACE_STD


184 
	$°πﬁ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

185 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

186 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

188 
	$°πoul
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

189 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

190 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

191 
__END_NAMESPACE_STD


193 #i‡
deföed
 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_BSD


195 
__exãnsi⁄__


196 
	$°πoq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

197 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

198 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

200 
__exãnsi⁄__


201 
	$°πouq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

202 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

203 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

206 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

207 
__BEGIN_NAMESPACE_C99


209 
__exãnsi⁄__


210 
	$°πﬁl
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

211 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

212 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

214 
__exãnsi⁄__


215 
	$°πouŒ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

216 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

217 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

218 
__END_NAMESPACE_C99


222 #ifde‡
__USE_GNU


236 
	~<xloˇÀ.h
>

240 
	$°πﬁ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

241 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

242 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

244 
	$°πoul_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

245 **
__ª°ri˘
 
__íd±r
,

246 
__ba£
, 
__loˇÀ_t
 
__loc
)

247 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

249 
__exãnsi⁄__


250 
	$°πﬁl_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

251 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

252 
__loˇÀ_t
 
__loc
)

253 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

255 
__exãnsi⁄__


256 
	$°πouŒ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

257 **
__ª°ri˘
 
__íd±r
,

258 
__ba£
, 
__loˇÀ_t
 
__loc
)

259 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

261 
	$°πod_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

262 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

263 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

265 
	$°πof_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

266 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

267 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

269 
	$°πﬁd_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

270 **
__ª°ri˘
 
__íd±r
,

271 
__loˇÀ_t
 
__loc
)

272 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

276 #ifde‡
__USE_EXTERN_INLINES


277 
__BEGIN_NAMESPACE_STD


278 
__exã∫_ölöe
 

279 
	`__NTH
 (
	$©of
 (
__c⁄°
 *
__≈å
))

281  
	`°πod
 (
__≈å
, (**Ë
NULL
);

282 
	}
}

283 
__exã∫_ölöe
 

284 
__NTH
 (
	$©oi
 (
__c⁄°
 *
__≈å
))

286  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

287 
	}
}

288 
__exã∫_ölöe
 

289 
__NTH
 (
	$©ﬁ
 (
__c⁄°
 *
__≈å
))

291  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

292 
	}
}

293 
	g__END_NAMESPACE_STD


295 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


296 
__BEGIN_NAMESPACE_C99


297 
__exãnsi⁄__
 
__exã∫_ölöe
 

298 
__NTH
 (
	$©ﬁl
 (
__c⁄°
 *
__≈å
))

300  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

301 
	}
}

302 
	g__END_NAMESPACE_C99


307 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


311 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

314 
	$a64l
 (
__c⁄°
 *
__s
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

319 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


320 
	~<sys/ty≥s.h
>

327 
	$øndom
 (Ë
__THROW
;

330 
	$§™dom
 (
__£ed
Ë
__THROW
;

336 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

337 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

341 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

344 #ifde‡
__USE_MISC


349 
	søndom_d©a


351 
öt32_t
 *
Âå
;

352 
öt32_t
 *
Ωå
;

353 
öt32_t
 *
°©e
;

354 
ønd_ty≥
;

355 
ønd_deg
;

356 
ønd_£p
;

357 
öt32_t
 *
íd_±r
;

360 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

361 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

363 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

364 
__THROW
 
	`__n⁄nuŒ
 ((2));

366 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

367 
size_t
 
__°©ñí
,

368 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

369 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

371 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

372 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

373 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

378 
__BEGIN_NAMESPACE_STD


380 
	$ønd
 (Ë
__THROW
;

382 
	$§™d
 (
__£ed
Ë
__THROW
;

383 
__END_NAMESPACE_STD


385 #ifde‡
__USE_POSIX


387 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

391 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


395 
	$dønd48
 (Ë
__THROW
;

396 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

399 
	$Ã™d48
 (Ë
__THROW
;

400 
	$ƒ™d48
 (
__xsubi
[3])

401 
__THROW
 
	`__n⁄nuŒ
 ((1));

404 
	$mønd48
 (Ë
__THROW
;

405 
	$jønd48
 (
__xsubi
[3])

406 
__THROW
 
	`__n⁄nuŒ
 ((1));

409 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

410 *
	$£ed48
 (
__£ed16v
[3])

411 
__THROW
 
	`__n⁄nuŒ
 ((1));

412 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

414 #ifde‡
__USE_MISC


418 
	sdønd48_d©a


420 
__x
[3];

421 
__ﬁd_x
[3];

422 
__c
;

423 
__öô
;

424 
__a
;

428 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

429 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$î™d48_r
 (
__xsubi
[3],

431 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

432 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

435 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

436 *
__ª°ri˘
 
__ªsu…
)

437 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

438 
	$ƒ™d48_r
 (
__xsubi
[3],

439 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

444 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

445 *
__ª°ri˘
 
__ªsu…
)

446 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

447 
	$jønd48_r
 (
__xsubi
[3],

448 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

449 *
__ª°ri˘
 
__ªsu…
)

450 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

453 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

454 
__THROW
 
	`__n⁄nuŒ
 ((2));

456 
	$£ed48_r
 (
__£ed16v
[3],

457 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$lc⁄g48_r
 (
__∑øm
[7],

460 
dønd48_d©a
 *
__buf„r
)

461 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

467 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


468 
	#__mÆloc_™d_ˇŒoc_deföed


	)

469 
__BEGIN_NAMESPACE_STD


471 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

473 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

474 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

475 
__END_NAMESPACE_STD


478 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


479 
__BEGIN_NAMESPACE_STD


485 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

486 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

488 
	$‰ì
 (*
__±r
Ë
__THROW
;

489 
__END_NAMESPACE_STD


491 #ifdef 
__USE_MISC


493 
	$c‰ì
 (*
__±r
Ë
__THROW
;

496 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


497 
	~<Æloˇ.h
>

500 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


502 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

505 #ifde‡
__USE_XOPEN2K


507 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

508 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

511 
__BEGIN_NAMESPACE_STD


513 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

517 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

519 #ifde‡
__USE_GNU


523 #ifde‡
__˝lu•lus


524 "C++" 
	`©_quick_exô
 ((*
__func
) ())

525 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

527 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

530 
__END_NAMESPACE_STD


532 #ifdef 
__USE_MISC


535 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

536 
__THROW
 
	`__n⁄nuŒ
 ((1));

539 
__BEGIN_NAMESPACE_STD


543 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

545 #ifde‡
__USE_GNU


551 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

553 
__END_NAMESPACE_STD


555 #ifde‡
__USE_ISOC99


556 
__BEGIN_NAMESPACE_C99


559 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

560 
__END_NAMESPACE_C99


564 
__BEGIN_NAMESPACE_STD


566 *
	$gëív
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

567 
__END_NAMESPACE_STD


571 *
	$__£cuª_gëív
 (
__c⁄°
 *
__«me
)

572 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

574 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


578 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

581 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


584 
	$£ãnv
 (
__c⁄°
 *
__«me
, __c⁄° *
__vÆue
, 
__ª∂a˚
)

585 
__THROW
 
	`__n⁄nuŒ
 ((2));

588 
	$un£ãnv
 (
__c⁄°
 *
__«me
Ë
__THROW
;

591 #ifdef 
__USE_MISC


595 
	$˛óªnv
 (Ë
__THROW
;

599 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


604 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

614 #i‚de‡
__USE_FILE_OFFSET64


615 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

617 #ifde‡
__REDIRECT


618 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

619 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

621 
	#mk°emp
 
mk°emp64


	)

624 #ifde‡
__USE_LARGEFILE64


625 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

629 #ifde‡
__USE_MISC


636 #i‚de‡
__USE_FILE_OFFSET64


637 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

639 #ifde‡
__REDIRECT


640 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

641 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

643 
	#mk°emps
 
mk°emps64


	)

646 #ifde‡
__USE_LARGEFILE64


647 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

648 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

652 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K8


658 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

661 #ifde‡
__USE_GNU


668 #i‚de‡
__USE_FILE_OFFSET64


669 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

671 #ifde‡
__REDIRECT


672 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

673 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

675 
	#mko°emp
 
mko°emp64


	)

678 #ifde‡
__USE_LARGEFILE64


679 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

688 #i‚de‡
__USE_FILE_OFFSET64


689 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

690 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

692 #ifde‡
__REDIRECT


693 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

694 
__Êags
), 
mko°emps64
)

695 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

697 
	#mko°emps
 
mko°emps64


	)

700 #ifde‡
__USE_LARGEFILE64


701 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

702 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

707 
__BEGIN_NAMESPACE_STD


712 
	$sy°em
 (
__c⁄°
 *
__comm™d
Ë
__wur
;

713 
__END_NAMESPACE_STD


716 #ifdef 
__USE_GNU


719 *
	$ˇn⁄iˇlize_fûe_«me
 (
__c⁄°
 *
__«me
)

720 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

723 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


729 *
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

730 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

735 #i‚de‡
__COMPAR_FN_T


736 
	#__COMPAR_FN_T


	)

737 (*
	t__com∑r_‚_t
Ë(
	t__c⁄°
 *, __const *);

739 #ifdef 
__USE_GNU


740 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

743 #ifde‡
__USE_GNU


744 (*
	t__com∑r_d_‚_t
Ë(
	t__c⁄°
 *, __const *, *);

747 
__BEGIN_NAMESPACE_STD


750 *
	$b£¨ch
 (
__c⁄°
 *
__key
, __c⁄° *
__ba£
,

751 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

752 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

756 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

757 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

758 #ifde‡
__USE_GNU


759 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

760 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

761 
	`__n⁄nuŒ
 ((1, 4));

766 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

767 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

768 
__END_NAMESPACE_STD


770 #ifde‡
__USE_ISOC99


771 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

772 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

776 
__BEGIN_NAMESPACE_STD


780 
div_t
 
	$div
 (
__numî
, 
__díom
)

781 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

782 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

783 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

784 
__END_NAMESPACE_STD


786 #ifde‡
__USE_ISOC99


787 
__BEGIN_NAMESPACE_C99


788 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

789 
__díom
)

790 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

791 
__END_NAMESPACE_C99


795 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


802 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

803 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

808 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

809 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

814 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

815 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

818 #ifde‡
__USE_MISC


820 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

821 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

822 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

823 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

824 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

825 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

826 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

827 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

832 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

833 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

834 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

835 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

836 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

837 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

839 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

840 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

841 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

842 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

843 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

844 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

845 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

846 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

851 
__BEGIN_NAMESPACE_STD


854 
	$mbÀn
 (
__c⁄°
 *
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

857 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

858 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

861 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
 
__wur
;

865 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

866 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

868 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

869 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

870 
__THROW
;

871 
__END_NAMESPACE_STD


874 #ifde‡
__USE_SVID


879 
	$Ωm©ch
 (
__c⁄°
 *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

883 #ifde‡
__USE_XOPEN_EXTENDED


890 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

891 *
__c⁄°
 *
__ª°ri˘
 
__tokís
,

892 **
__ª°ri˘
 
__vÆuï
)

893 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

897 #ifde‡
__USE_XOPEN


899 
	$£tkey
 (
__c⁄°
 *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

905 #ifde‡
__USE_XOPEN2K


907 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

910 #ifde‡
__USE_XOPEN


915 
	$gø¡±
 (
__fd
Ë
__THROW
;

919 
	$u∆ock±
 (
__fd
Ë
__THROW
;

924 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

927 #ifde‡
__USE_GNU


931 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

932 
__THROW
 
	`__n⁄nuŒ
 ((2));

935 
	`gë±
 ();

938 #ifde‡
__USE_BSD


942 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

943 
__THROW
 
	`__n⁄nuŒ
 ((1));

948 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


949 
	~<bôs/°dlib.h
>

951 #ifde‡
__LDBL_COMPAT


952 
	~<bôs/°dlib-ldbl.h
>

956 #unde‡
__√ed_mÆloc_™d_ˇŒoc


958 
__END_DECLS


	@/usr/include/string.h

23 #i‚def 
_STRING_H


24 
	#_STRING_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

36 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

37 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

41 
__BEGIN_NAMESPACE_STD


43 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
,

44 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

45 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

48 *
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

49 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

50 
__END_NAMESPACE_STD


55 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


56 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

57 
__c
, 
size_t
 
__n
)

58 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

62 
__BEGIN_NAMESPACE_STD


64 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

67 
	$memcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

68 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

71 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


74 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

75 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

76 
__c⁄°
 *
	`memchr
 (__c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

77 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

79 #ifde‡
__OPTIMIZE__


80 
__exã∫_Æways_ölöe
 *

81 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


83  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

86 
__exã∫_Æways_ölöe
 
__c⁄°
 *

87 
	`memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


89  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

92 
	}
}

94 *
	$memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

95 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

97 
__END_NAMESPACE_STD


99 #ifde‡
__USE_GNU


102 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


103 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

104 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

105 "C++" 
__c⁄°
 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

106 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

108 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

109 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

113 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


114 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

115 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

116 "C++" 
__c⁄°
 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

117 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

119 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

120 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

125 
__BEGIN_NAMESPACE_STD


127 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

128 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

130 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

131 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

132 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

135 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

136 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

138 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

139 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

142 
	$°rcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

143 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

145 
	$°∫cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

146 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

149 
	$°rcﬁl
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

150 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

152 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

153 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

154 
__THROW
 
	`__n⁄nuŒ
 ((2));

155 
__END_NAMESPACE_STD


157 #ifde‡
__USE_XOPEN2K8


161 
	~<xloˇÀ.h
>

164 
	$°rcﬁl_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

165 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

167 
size_t
 
	$°rx‰m_l
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

168 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

171 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


173 *
	$°rdup
 (
__c⁄°
 *
__s
)

174 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

180 #i‡
deföed
 
__USE_XOPEN2K8


181 *
	$°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

182 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

185 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


187 
	#°rdu∑
(
s
) \

188 (
__exãnsi⁄__
 \

190 
__c⁄°
 *
__ﬁd
 = (
s
); \

191 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

192 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

193 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

194 
	}
}))

	)

197 
	#°∫du∑
(
s
, 
n
) \

198 (
__exãnsi⁄__
 \

200 
__c⁄°
 *
__ﬁd
 = (
s
); \

201 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

202 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

203 
__√w
[
__Àn
] = '\0'; \

204 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

205 }))

	)

208 
	g__BEGIN_NAMESPACE_STD


210 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


213 *
°rchr
 (*
__s
, 
__c
)

214 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

215 
__c⁄°
 *
°rchr
 (__c⁄° *
__s
, 
__c
)

216 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

218 #ifde‡
__OPTIMIZE__


219 
__exã∫_Æways_ölöe
 *

220 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


222  
__buûtö_°rchr
 (
__s
, 
__c
);

225 
__exã∫_Æways_ölöe
 
__c⁄°
 *

226 
°rchr
 (
__c⁄°
 *
__s
, 
__c
Ë
	g__THROW


228  
__buûtö_°rchr
 (
__s
, 
__c
);

233 *
	$°rchr
 (
__c⁄°
 *
__s
, 
__c
)

234 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

237 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


240 *
	`°ºchr
 (*
__s
, 
__c
)

241 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

242 
__c⁄°
 *
	`°ºchr
 (__c⁄° *
__s
, 
__c
)

243 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

245 #ifde‡
__OPTIMIZE__


246 
__exã∫_Æways_ölöe
 *

247 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


249  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

252 
__exã∫_Æways_ölöe
 
__c⁄°
 *

253 
	`°ºchr
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


255  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

258 
	}
}

260 *
	$°ºchr
 (
__c⁄°
 *
__s
, 
__c
)

261 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

263 
__END_NAMESPACE_STD


265 #ifde‡
__USE_GNU


268 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


269 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

270 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

271 "C++" 
__c⁄°
 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

272 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

274 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

275 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

279 
__BEGIN_NAMESPACE_STD


282 
size_t
 
	$°rc•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

283 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

286 
size_t
 
	$°r•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

287 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

289 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


292 *
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
)

293 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

294 
__c⁄°
 *
	`°Ωbrk
 (__c⁄° *
__s
, __c⁄° *
__ac˚±
)

295 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

297 #ifde‡
__OPTIMIZE__


298 
__exã∫_Æways_ölöe
 *

299 
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
Ë
__THROW


301  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

304 
__exã∫_Æways_ölöe
 
__c⁄°
 *

305 
	`°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
Ë
__THROW


307  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

310 
	}
}

312 *
	$°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

313 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

316 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


319 *
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

320 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

321 
__c⁄°
 *
	`°r°r
 (__c⁄° *
__hay°ack
,

322 
__c⁄°
 *
__√edÀ
)

323 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

325 #ifde‡
__OPTIMIZE__


326 
__exã∫_Æways_ölöe
 *

327 
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
Ë
__THROW


329  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

332 
__exã∫_Æways_ölöe
 
__c⁄°
 *

333 
	`°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
Ë
__THROW


335  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

338 
	}
}

340 *
	$°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

341 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

346 *
	$°πok
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
)

347 
__THROW
 
	`__n⁄nuŒ
 ((2));

348 
__END_NAMESPACE_STD


352 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

353 
__c⁄°
 *
__ª°ri˘
 
__dñim
,

354 **
__ª°ri˘
 
__ßve_±r
)

355 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

356 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


357 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
,

358 **
__ª°ri˘
 
__ßve_±r
)

359 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

362 #ifde‡
__USE_GNU


364 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


365 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

366 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

367 "C++" 
__c⁄°
 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
,

368 
__c⁄°
 *
__√edÀ
)

369 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

371 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

372 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

376 #ifde‡
__USE_GNU


380 *
	$memmem
 (
__c⁄°
 *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

381 
__c⁄°
 *
__√edÀ
, 
size_t
 
__√edÀÀn
)

382 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

386 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

387 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

388 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

389 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

390 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

391 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

395 
__BEGIN_NAMESPACE_STD


397 
size_t
 
	$°æí
 (
__c⁄°
 *
__s
)

398 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

399 
__END_NAMESPACE_STD


401 #ifdef 
__USE_XOPEN2K8


404 
size_t
 
	$°∫Àn
 (
__c⁄°
 *
__°rög
, 
size_t
 
__maxÀn
)

405 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

409 
__BEGIN_NAMESPACE_STD


411 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

412 
__END_NAMESPACE_STD


413 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


421 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


424 #ifde‡
__REDIRECT_NTH


425 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

426 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

427 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

429 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

430 
__THROW
 
	`__n⁄nuŒ
 ((2));

431 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

436 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

437 
__THROW
 
	`__n⁄nuŒ
 ((2));

441 #ifde‡
__USE_XOPEN2K8


443 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

449 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

451 #ifde‡
__USE_BSD


453 
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__n
)

454 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

457 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

460 
	$bcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

461 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

464 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


467 *
	`ödex
 (*
__s
, 
__c
)

468 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

469 
__c⁄°
 *
	`ödex
 (__c⁄° *
__s
, 
__c
)

470 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

472 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


473 
__exã∫_Æways_ölöe
 *

474 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


476  
	`__buûtö_ödex
 (
__s
, 
__c
);

479 
__exã∫_Æways_ölöe
 
__c⁄°
 *

480 
	`ödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


482  
	`__buûtö_ödex
 (
__s
, 
__c
);

485 
	}
}

487 *
	$ödex
 (
__c⁄°
 *
__s
, 
__c
)

488 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

492 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


495 *
	`rödex
 (*
__s
, 
__c
)

496 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

497 
__c⁄°
 *
	`rödex
 (__c⁄° *
__s
, 
__c
)

498 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

500 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


501 
__exã∫_Æways_ölöe
 *

502 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


504  
	`__buûtö_rödex
 (
__s
, 
__c
);

507 
__exã∫_Æways_ölöe
 
__c⁄°
 *

508 
	`rödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


510  
	`__buûtö_rödex
 (
__s
, 
__c
);

513 
	}
}

515 *
	$rödex
 (
__c⁄°
 *
__s
, 
__c
)

516 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

521 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

525 #ifdef 
__USE_GNU


526 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

527 #ifde‡
__GNUC__


528 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

529 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

534 
	$°rˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

535 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

538 
	$°∫ˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

539 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

542 #ifdef 
__USE_GNU


545 
	$°rˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

546 
__loˇÀ_t
 
__loc
)

547 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

549 
	$°∫ˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

550 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

551 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

554 #ifdef 
__USE_BSD


557 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

558 
__c⁄°
 *
__ª°ri˘
 
__dñim
)

559 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

562 #ifdef 
__USE_XOPEN2K8


564 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

567 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

568 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

569 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

574 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

575 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

576 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

577 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

578 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

579 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

582 #ifdef 
__USE_GNU


584 
	$°rvîscmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

585 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

588 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

593 #i‚de‡
ba£«me


598 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


599 "C++" *
	$ba£«me
 (*
__fûíame
)

600 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

601 "C++" 
__c⁄°
 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
)

602 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

604 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

610 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

611 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

612 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


632 
	~<bôs/°rög.h
>

635 
	~<bôs/°rög2.h
>

638 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


640 
	~<bôs/°rög3.h
>

644 
__END_DECLS


	@/usr/include/sys/fcntl.h

1 
	~<f˙é.h
>

	@/usr/include/sys/param.h

19 #i‚de‡
_SYS_PARAM_H


20 
	#_SYS_PARAM_H
 1

	)

22 #i‚de‡
ARG_MAX


23 
	#__undef_ARG_MAX


	)

26 
	~<limôs.h
>

27 
	~<löux/limôs.h
>

28 
	~<löux/∑øm.h
>

31 #i‚de‡
__undef_ARG_MAX


32 #unde‡
ARG_MAX


33 #unde‡
__undef_ARG_MAX


38 
	#NBBY
 
CHAR_BIT


	)

39 #i‚def 
NGROUPS


40 
	#NGROUPS
 
NGROUPS_MAX


	)

42 
	#MAXSYMLINKS
 20

	)

43 
	#CANBSIZ
 
MAX_CANON


	)

44 
	#MAXPATHLEN
 
PATH_MAX


	)

48 
	#NOFILE
 256

	)

49 
	#NCARGS
 131072

	)

52 
	~<sys/ty≥s.h
>

55 
	#£tbô
(
a
,
i
Ë(◊)[(i)/
NBBY
] |1<<((i)%NBBY))

	)

56 
	#˛rbô
(
a
,
i
Ë(◊)[(i)/
NBBY
] &~(1<<((i)%NBBY)))

	)

57 
	#is£t
(
a
,
i
Ë(◊)[(i)/
NBBY
] & (1<<((i)%NBBY)))

	)

58 
	#is˛r
(
a
,
i
Ë((◊)[(i)/
NBBY
] & (1<<((i)%NBBY))Ë=0)

	)

61 #i‚de‡
howm™y


62 
	#howm™y
(
x
, 
y
Ë(((xË+ ((yË- 1)Ë/ (y))

	)

64 #ifde‡
__GNUC__


65 
	#roundup
(
x
, 
y
Ë(
	`__buûtö_c⁄°™t_p
 (yË&& 
	`powîof2
 (y) \

66 ? (((
x
Ë+ (
y
) - 1) & ~((y) - 1)) \

67 : ((((
x
Ë+ ((
y
Ë- 1)Ë/ (y)Ë* (y)))

	)

69 
	#roundup
(
x
, 
y
Ë((((xË+ ((yË- 1)Ë/ (y)Ë* (y))

	)

71 
	#powîof2
(
x
Ë((((xË- 1Ë& (x)Ë=0)

	)

74 
	#MIN
(
a
,
b
Ë((◊)<(b))?◊):(b))

	)

75 
	#MAX
(
a
,
b
Ë((◊)>(b))?◊):(b))

	)

79 
	#DEV_BSIZE
 512

	)

	@/usr/include/sys/stat.h

24 #i‚def 
_SYS_STAT_H


25 
	#_SYS_STAT_H
 1

	)

27 
	~<„©uªs.h
>

29 
	~<bôs/ty≥s.h
>

31 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K
 || deföed 
__USE_MISC
 \

32 || 
deföed
 
	g__USE_ATFILE


33 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_time_t


	)

36 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ATFILE


37 
	#__√ed_time•ec


	)

39 
	~<time.h
>

42 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


45 #i‚de‡
__dev_t_deföed


46 
__dev_t
 
	tdev_t
;

47 
	#__dev_t_deföed


	)

50 #i‚de‡
__gid_t_deföed


51 
__gid_t
 
	tgid_t
;

52 
	#__gid_t_deföed


	)

55 #i‚de‡
__öo_t_deföed


56 #i‚de‡
__USE_FILE_OFFSET64


57 
__öo_t
 
	töo_t
;

59 
__öo64_t
 
	töo_t
;

61 
	#__öo_t_deföed


	)

64 #i‚de‡
__mode_t_deföed


65 
__mode_t
 
	tmode_t
;

66 
	#__mode_t_deföed


	)

69 #i‚de‡
__∆ök_t_deföed


70 
__∆ök_t
 
	t∆ök_t
;

71 
	#__∆ök_t_deföed


	)

74 #i‚de‡
__off_t_deföed


75 #i‚de‡
__USE_FILE_OFFSET64


76 
__off_t
 
	toff_t
;

78 
__off64_t
 
	toff_t
;

80 
	#__off_t_deföed


	)

83 #i‚de‡
__uid_t_deföed


84 
__uid_t
 
	tuid_t
;

85 
	#__uid_t_deföed


	)

89 #ifde‡
__USE_UNIX98


90 #i‚de‡
__blk˙t_t_deföed


91 #i‚de‡
__USE_FILE_OFFSET64


92 
__blk˙t_t
 
	tblk˙t_t
;

94 
__blk˙t64_t
 
	tblk˙t_t
;

96 
	#__blk˙t_t_deföed


	)

99 #i‚de‡
__blksize_t_deföed


100 
__blksize_t
 
	tblksize_t
;

101 
	#__blksize_t_deföed


	)

105 
	g__BEGIN_DECLS


107 
	~<bôs/°©.h
>

109 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


110 
	#S_IFMT
 
__S_IFMT


	)

111 
	#S_IFDIR
 
__S_IFDIR


	)

112 
	#S_IFCHR
 
__S_IFCHR


	)

113 
	#S_IFBLK
 
__S_IFBLK


	)

114 
	#S_IFREG
 
__S_IFREG


	)

115 #ifde‡
__S_IFIFO


116 
	#S_IFIFO
 
__S_IFIFO


	)

118 #ifde‡
__S_IFLNK


119 
	#S_IFLNK
 
__S_IFLNK


	)

121 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_UNIX98
) \

122 && 
deföed
 
	g__S_IFSOCK


123 
	#S_IFSOCK
 
__S_IFSOCK


	)

129 
	#__S_ISTYPE
(
mode
, 
mask
Ë(((modeË& 
__S_IFMT
Ë=(mask))

	)

131 
	#S_ISDIR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFDIR
)

	)

132 
	#S_ISCHR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFCHR
)

	)

133 
	#S_ISBLK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFBLK
)

	)

134 
	#S_ISREG
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFREG
)

	)

135 #ifde‡
__S_IFIFO


136 
	#S_ISFIFO
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFIFO
)

	)

138 #ifde‡
__S_IFLNK


139 
	#S_ISLNK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFLNK
)

	)

142 #i‡
deföed
 
__USE_BSD
 && !deföed 
__S_IFLNK


143 
	#S_ISLNK
(
mode
Ë0

	)

146 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K
) \

147 && 
deföed
 
	g__S_IFSOCK


148 
	#S_ISSOCK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFSOCK
)

	)

155 #ifdef 
__USE_POSIX199309


156 
	#S_TYPEISMQ
(
buf
Ë
	`__S_TYPEISMQ
(buf)

	)

157 
	#S_TYPEISSEM
(
buf
Ë
	`__S_TYPEISSEM
(buf)

	)

158 
	#S_TYPEISSHM
(
buf
Ë
	`__S_TYPEISSHM
(buf)

	)

164 
	#S_ISUID
 
__S_ISUID


	)

165 
	#S_ISGID
 
__S_ISGID


	)

167 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


169 
	#S_ISVTX
 
__S_ISVTX


	)

172 
	#S_IRUSR
 
__S_IREAD


	)

173 
	#S_IWUSR
 
__S_IWRITE


	)

174 
	#S_IXUSR
 
__S_IEXEC


	)

176 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

178 #i‡
deföed
 
__USE_MISC
 && deföed 
__USE_BSD


179 
	#S_IREAD
 
S_IRUSR


	)

180 
	#S_IWRITE
 
S_IWUSR


	)

181 
	#S_IEXEC
 
S_IXUSR


	)

184 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

185 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

186 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

188 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

190 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

191 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

192 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

194 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

197 #ifdef 
__USE_BSD


199 
	#ACCESSPERMS
 (
S_IRWXU
|
S_IRWXG
|
S_IRWXO
Ë

	)

200 
	#ALLPERMS
 (
S_ISUID
|
S_ISGID
|
S_ISVTX
|
S_IRWXU
|
S_IRWXG
|
S_IRWXO
)

	)

201 
	#DEFFILEMODE
 (
S_IRUSR
|
S_IWUSR
|
S_IRGRP
|
S_IWGRP
|
S_IROTH
|
S_IWOTH
)

	)

203 
	#S_BLKSIZE
 512

	)

207 #i‚de‡
__USE_FILE_OFFSET64


209 
	$°©
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

210 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

214 
	$f°©
 (
__fd
, 
°©
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

216 #ifde‡
__REDIRECT_NTH


217 
	`__REDIRECT_NTH
 (
°©
, (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

218 
°©
 *
__ª°ri˘
 
__buf
), 
°©64
)

219 
	`__n⁄nuŒ
 ((1, 2));

220 
	`__REDIRECT_NTH
 (
f°©
, (
__fd
, 
°©
 *
__buf
), 
f°©64
)

221 
	`__n⁄nuŒ
 ((2));

223 
	#°©
 
°©64


	)

224 
	#f°©
 
f°©64


	)

227 #ifde‡
__USE_LARGEFILE64


228 
	$°©64
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

229 
°©64
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

230 
	$f°©64
 (
__fd
, 
°©64
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

233 #ifde‡
__USE_ATFILE


237 #i‚de‡
__USE_FILE_OFFSET64


238 
	$f°©©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

239 
°©
 *
__ª°ri˘
 
__buf
, 
__Êag
)

240 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

242 #ifde‡
__REDIRECT_NTH


243 
	`__REDIRECT_NTH
 (
f°©©
, (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

244 
°©
 *
__ª°ri˘
 
__buf
,

245 
__Êag
),

246 
f°©©64
Ë
	`__n⁄nuŒ
 ((2, 3));

248 
	#f°©©
 
f°©©64


	)

252 #ifde‡
__USE_LARGEFILE64


253 
	$f°©©64
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

254 
°©64
 *
__ª°ri˘
 
__buf
, 
__Êag
)

255 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

259 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


260 #i‚de‡
__USE_FILE_OFFSET64


263 
	$l°©
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

264 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

266 #ifde‡
__REDIRECT_NTH


267 
	`__REDIRECT_NTH
 (
l°©
,

268 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

269 
°©
 *
__ª°ri˘
 
__buf
), 
l°©64
)

270 
	`__n⁄nuŒ
 ((1, 2));

272 
	#l°©
 
l°©64


	)

275 #ifde‡
__USE_LARGEFILE64


276 
	$l°©64
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

277 
°©64
 *
__ª°ri˘
 
__buf
)

278 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

284 
	$chmod
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
)

285 
__THROW
 
	`__n⁄nuŒ
 ((1));

287 #ifde‡
__USE_BSD


291 
	$lchmod
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
)

292 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


297 
	$fchmod
 (
__fd
, 
__mode_t
 
__mode
Ë
__THROW
;

300 #ifde‡
__USE_ATFILE


303 
	$fchmod©
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
,

304 
__Êag
)

305 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

312 
__mode_t
 
	$umask
 (
__mode_t
 
__mask
Ë
__THROW
;

314 #ifdef 
__USE_GNU


317 
__mode_t
 
	$gëumask
 (Ë
__THROW
;

321 
	$mkdú
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

322 
__THROW
 
	`__n⁄nuŒ
 ((1));

324 #ifde‡
__USE_ATFILE


328 
	$mkdú©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

329 
__THROW
 
	`__n⁄nuŒ
 ((2));

335 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


336 
	$mknod
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
)

337 
__THROW
 
	`__n⁄nuŒ
 ((1));

339 #ifde‡
__USE_ATFILE


343 
	$mknod©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

344 
__dev_t
 
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

350 
	$mkfifo
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

351 
__THROW
 
	`__n⁄nuŒ
 ((1));

353 #ifde‡
__USE_ATFILE


357 
	$mkfifﬂt
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

358 
__THROW
 
	`__n⁄nuŒ
 ((2));

361 #ifde‡
__USE_ATFILE


364 
	$utimíßt
 (
__fd
, 
__c⁄°
 *
__∑th
,

365 
__c⁄°
 
time•ec
 
__times
[2],

366 
__Êags
)

367 
__THROW
 
	`__n⁄nuŒ
 ((2));

370 #ifde‡
__USE_XOPEN2K8


372 
	$futimís
 (
__fd
, 
__c⁄°
 
time•ec
 
__times
[2]Ë
__THROW
;

390 #i‚de‡
_STAT_VER


391 
	#_STAT_VER
 0

	)

393 #i‚de‡
_MKNOD_VER


394 
	#_MKNOD_VER
 0

	)

398 #i‚de‡
__USE_FILE_OFFSET64


399 
	$__fx°©
 (
__vî
, 
__fûdes
, 
°©
 *
__°©_buf
)

400 
__THROW
 
	`__n⁄nuŒ
 ((3));

401 
	$__x°©
 (
__vî
, 
__c⁄°
 *
__fûíame
,

402 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

403 
	$__lx°©
 (
__vî
, 
__c⁄°
 *
__fûíame
,

404 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

405 
	$__fx°©©
 (
__vî
, 
__fûdes
, 
__c⁄°
 *
__fûíame
,

406 
°©
 *
__°©_buf
, 
__Êag
)

407 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

409 #ifde‡
__REDIRECT_NTH


410 
	`__REDIRECT_NTH
 (
__fx°©
, (
__vî
, 
__fûdes
,

411 
°©
 *
__°©_buf
), 
__fx°©64
)

412 
	`__n⁄nuŒ
 ((3));

413 
	`__REDIRECT_NTH
 (
__x°©
, (
__vî
, 
__c⁄°
 *
__fûíame
,

414 
°©
 *
__°©_buf
), 
__x°©64
)

415 
	`__n⁄nuŒ
 ((2, 3));

416 
	`__REDIRECT_NTH
 (
__lx°©
, (
__vî
, 
__c⁄°
 *
__fûíame
,

417 
°©
 *
__°©_buf
), 
__lx°©64
)

418 
	`__n⁄nuŒ
 ((2, 3));

419 
	`__REDIRECT_NTH
 (
__fx°©©
, (
__vî
, 
__fûdes
,

420 
__c⁄°
 *
__fûíame
,

421 
°©
 *
__°©_buf
, 
__Êag
),

422 
__fx°©©64
Ë
	`__n⁄nuŒ
 ((3, 4));

425 
	#__fx°©
 
__fx°©64


	)

426 
	#__x°©
 
__x°©64


	)

427 
	#__lx°©
 
__lx°©64


	)

431 #ifde‡
__USE_LARGEFILE64


432 
	$__fx°©64
 (
__vî
, 
__fûdes
, 
°©64
 *
__°©_buf
)

433 
__THROW
 
	`__n⁄nuŒ
 ((3));

434 
	$__x°©64
 (
__vî
, 
__c⁄°
 *
__fûíame
,

435 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

436 
	$__lx°©64
 (
__vî
, 
__c⁄°
 *
__fûíame
,

437 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

438 
	$__fx°©©64
 (
__vî
, 
__fûdes
, 
__c⁄°
 *
__fûíame
,

439 
°©64
 *
__°©_buf
, 
__Êag
)

440 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

442 
	$__xmknod
 (
__vî
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

443 
__dev_t
 *
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

445 
	$__xmknod©
 (
__vî
, 
__fd
, 
__c⁄°
 *
__∑th
,

446 
__mode_t
 
__mode
, 
__dev_t
 *
__dev
)

447 
__THROW
 
	`__n⁄nuŒ
 ((3, 5));

449 #i‡
deföed
 
__GNUC__
 && __GNUC__ >2 && deföed 
__USE_EXTERN_INLINES_IN_LIBC


452 
__exã∫_ölöe
 

453 
	`__NTH
 (
	$°©
 (
__c⁄°
 *
__∑th
, 
°©
 *
__°©buf
))

455  
	`__x°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

456 
	}
}

458 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


459 
__exã∫_ölöe
 

460 
__NTH
 (
	$l°©
 (
__c⁄°
 *
__∑th
, 
°©
 *
__°©buf
))

462  
	`__lx°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

463 
	}
}

466 
__exã∫_ölöe
 

467 
__NTH
 (
	$f°©
 (
__fd
, 
°©
 *
__°©buf
))

469  
	`__fx°©
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

470 
	}
}

472 #ifde‡
__USE_ATFILE


473 
__exã∫_ölöe
 

474 
__NTH
 (
	$f°©©
 (
__fd
, 
__c⁄°
 *
__fûíame
, 
°©
 *
__°©buf
,

475 
__Êag
))

477  
	`__fx°©©
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

478 
	}
}

481 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD


482 
__exã∫_ölöe
 

483 
__NTH
 (
	$mknod
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
))

485  
	`__xmknod
 (
_MKNOD_VER
, 
__∑th
, 
__mode
, &
__dev
);

486 
	}
}

489 #ifde‡
__USE_ATFILE


490 
__exã∫_ölöe
 

491 
__NTH
 (
	$mknod©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

492 
__dev_t
 
__dev
))

494  
	`__xmknod©
 (
_MKNOD_VER
, 
__fd
, 
__∑th
, 
__mode
, &
__dev
);

495 
	}
}

498 #i‡
deföed
 
__USE_LARGEFILE64
 \

499 && (! 
deföed
 
	g__USE_FILE_OFFSET64
 \

500 || (
deföed
 
	g__REDIRECT_NTH
 && deföed 
	g__OPTIMIZE__
))

501 
__exã∫_ölöe
 

502 
__NTH
 (
	$°©64
 (
__c⁄°
 *
__∑th
, 
°©64
 *
__°©buf
))

504  
	`__x°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

505 
	}
}

507 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


508 
__exã∫_ölöe
 

509 
__NTH
 (
	$l°©64
 (
__c⁄°
 *
__∑th
, 
°©64
 *
__°©buf
))

511  
	`__lx°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

512 
	}
}

515 
__exã∫_ölöe
 

516 
__NTH
 (
	$f°©64
 (
__fd
, 
°©64
 *
__°©buf
))

518  
	`__fx°©64
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

519 
	}
}

521 #ifde‡
__USE_ATFILE


522 
__exã∫_ölöe
 

523 
__NTH
 (
	$f°©©64
 (
__fd
, 
__c⁄°
 *
__fûíame
, 
°©64
 *
__°©buf
,

524 
__Êag
))

526  
	`__fx°©©64
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

527 
	}
}

534 
	g__END_DECLS


	@/usr/include/sys/sysmacros.h

21 #i‚de‡
_SYS_SYSMACROS_H


22 
	#_SYS_SYSMACROS_H
 1

	)

24 
	~<„©uªs.h
>

29 #ifde‡
__GLIBC_HAVE_LONG_LONG


30 
__exãnsi⁄__


31 
	$gnu_dev_maj‹
 (
__dev
)

32 
__THROW
;

33 
__exãnsi⁄__


34 
	$gnu_dev_mö‹
 (
__dev
)

35 
__THROW
;

36 
__exãnsi⁄__


37 
	$gnu_dev_makedev
 (
__maj‹
,

38 
__mö‹
)

39 
__THROW
;

41 #i‡
deföed
 
__GNUC__
 && __GNUC__ >2 && deföed 
__USE_EXTERN_INLINES


42 
__exãnsi⁄__
 
__exã∫_ölöe
 

43 
	`__NTH
 (
	$gnu_dev_maj‹
 (
__dev
))

45  ((
__dev
 >> 8) & 0xfff) | (() (__dev >> 32) & ~0xfff);

46 
	}
}

48 
__exãnsi⁄__
 
__exã∫_ölöe
 

49 
__NTH
 (
	$gnu_dev_mö‹
 (
__dev
))

51  (
__dev
 & 0xff) | (() (__dev >> 12) & ~0xff);

52 
	}
}

54 
__exãnsi⁄__
 
__exã∫_ölöe
 

55 
__NTH
 (
	$gnu_dev_makedev
 (
__maj‹
, 
__mö‹
))

57  ((
__mö‹
 & 0xffË| ((
__maj‹
 & 0xfff) << 8)

58 | (((Ë(
__mö‹
 & ~0xff)) << 12)

59 | (((Ë(
__maj‹
 & ~0xfff)) << 32));

60 
	}
}

65 
	#maj‹
(
dev
Ë
	`gnu_dev_maj‹
 (dev)

	)

66 
	#mö‹
(
dev
Ë
	`gnu_dev_mö‹
 (dev)

	)

67 
	#makedev
(
maj
, 
mö
Ë
	`gnu_dev_makedev
 (maj, mö)

	)

	@/usr/include/sys/time.h

20 #i‚de‡
_SYS_TIME_H


21 
	#_SYS_TIME_H
 1

	)

23 
	~<„©uªs.h
>

25 
	~<bôs/ty≥s.h
>

26 
	#__√ed_time_t


	)

27 
	~<time.h
>

28 
	#__√ed_timevÆ


	)

29 
	~<bôs/time.h
>

31 
	~<sys/£À˘.h
>

33 #i‚de‡
__su£c⁄ds_t_deföed


34 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

35 
	#__su£c⁄ds_t_deföed


	)

39 
	g__BEGIN_DECLS


41 #ifde‡
__USE_GNU


43 
	#TIMEVAL_TO_TIMESPEC
(
tv
, 
ts
) { \

44 (
ts
)->
tv_£c
 = (
tv
)->tv_sec; \

45 (
ts
)->
tv_n£c
 = (
tv
)->
tv_u£c
 * 1000; \

46 }

	)

47 
	#TIMESPEC_TO_TIMEVAL
(
tv
, 
ts
) { \

48 (
tv
)->
tv_£c
 = (
ts
)->tv_sec; \

49 (
tv
)->
tv_u£c
 = (
ts
)->
tv_n£c
 / 1000; \

50 }

	)

54 #ifde‡
__USE_BSD


57 
	stimez⁄e


59 
	mtz_möuãswe°
;

60 
	mtz_d°time
;

63 
timez⁄e
 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

65 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

73 
	$gëtimeofday
 (
timevÆ
 *
__ª°ri˘
 
__tv
,

74 
__timez⁄e_±r_t
 
__tz
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

76 #ifde‡
__USE_BSD


79 
	$£âimeofday
 (
__c⁄°
 
timevÆ
 *
__tv
,

80 
__c⁄°
 
timez⁄e
 *
__tz
)

81 
__THROW
 
	`__n⁄nuŒ
 ((1));

87 
	$adjtime
 (
__c⁄°
 
timevÆ
 *
__dñè
,

88 
timevÆ
 *
__ﬁddñè
Ë
__THROW
;

93 
	e__ôimî_which


96 
ITIMER_REAL
 = 0,

97 
	#ITIMER_REAL
 
ITIMER_REAL


	)

99 
ITIMER_VIRTUAL
 = 1,

100 
	#ITIMER_VIRTUAL
 
ITIMER_VIRTUAL


	)

103 
ITIMER_PROF
 = 2

104 
	#ITIMER_PROF
 
ITIMER_PROF


	)

109 
	sôimîvÆ


112 
timevÆ
 
ô_öãrvÆ
;

114 
timevÆ
 
ô_vÆue
;

117 #i‡
deföed
 
__USE_GNU
 && !deföed 
__˝lu•lus


120 
__ôimî_which
 
	t__ôimî_which_t
;

122 
	t__ôimî_which_t
;

127 
	$gëôimî
 (
__ôimî_which_t
 
__which
,

128 
ôimîvÆ
 *
__vÆue
Ë
__THROW
;

133 
	$£tôimî
 (
__ôimî_which_t
 
__which
,

134 
__c⁄°
 
ôimîvÆ
 *
__ª°ri˘
 
__√w
,

135 
ôimîvÆ
 *
__ª°ri˘
 
__ﬁd
Ë
__THROW
;

140 
	$utimes
 (
__c⁄°
 *
__fûe
, __c⁄° 
timevÆ
 
__tvp
[2])

141 
__THROW
 
	`__n⁄nuŒ
 ((1));

143 #ifde‡
__USE_BSD


145 
	$lutimes
 (
__c⁄°
 *
__fûe
, __c⁄° 
timevÆ
 
__tvp
[2])

146 
__THROW
 
	`__n⁄nuŒ
 ((1));

149 
	$futimes
 (
__fd
, 
__c⁄°
 
timevÆ
 
__tvp
[2]Ë
__THROW
;

152 #ifde‡
__USE_GNU


156 
	$futimeßt
 (
__fd
, 
__c⁄°
 *
__fûe
,

157 
__c⁄°
 
timevÆ
 
__tvp
[2]Ë
__THROW
;

161 #ifde‡
__USE_BSD


164 
	#timîis£t
(
tvp
Ë(—vp)->
tv_£c
 || (tvp)->
tv_u£c
)

	)

165 
	#timî˛ór
(
tvp
Ë(—vp)->
tv_£c
 = (tvp)->
tv_u£c
 = 0)

	)

166 
	#timîcmp
(
a
, 
b
, 
CMP
) \

167 (((
a
)->
tv_£c
 =(
b
)->tv_sec) ? \

168 ((
a
)->
tv_u£c
 
	`CMP
 (
b
)->tv_usec) : \

169 ((
a
)->
tv_£c
 
	`CMP
 (
b
)->tv_£c))

	)

170 
	#timîadd
(
a
, 
b
, 
ªsu…
) \

172 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯+ (
b
)->tv_sec; \

173 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯+ (
b
)->tv_usec; \

174 i‡((
ªsu…
)->
tv_u£c
 >= 1000000) \

176 ++(
ªsu…
)->
tv_£c
; \

177 (
ªsu…
)->
tv_u£c
 -= 1000000; \

179 
	}
} 0)

	)

180 
	#timîsub
(
a
, 
b
, 
ªsu…
) \

182 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯- (
b
)->tv_sec; \

183 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯- (
b
)->tv_usec; \

184 i‡((
ªsu…
)->
tv_u£c
 < 0) { \

185 --(
ªsu…
)->
tv_£c
; \

186 (
ªsu…
)->
tv_u£c
 += 1000000; \

188 } 0)

	)

191 
	g__END_DECLS


	@/usr/include/sys/types.h

24 #i‚def 
_SYS_TYPES_H


25 
	#_SYS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

33 #ifdef 
__USE_BSD


34 #i‚de‡
__u_ch¨_deföed


35 
__u_ch¨
 
	tu_ch¨
;

36 
__u_sh‹t
 
	tu_sh‹t
;

37 
__u_öt
 
	tu_öt
;

38 
__u_l⁄g
 
	tu_l⁄g
;

39 
__quad_t
 
	tquad_t
;

40 
__u_quad_t
 
	tu_quad_t
;

41 
__fsid_t
 
	tfsid_t
;

42 
	#__u_ch¨_deföed


	)

46 
__loff_t
 
	tloff_t
;

48 #i‚de‡
__öo_t_deföed


49 #i‚de‡
__USE_FILE_OFFSET64


50 
__öo_t
 
	töo_t
;

52 
__öo64_t
 
	töo_t
;

54 
	#__öo_t_deföed


	)

56 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


57 
__öo64_t
 
	töo64_t
;

58 
	#__öo64_t_deföed


	)

61 #i‚de‡
__dev_t_deföed


62 
__dev_t
 
	tdev_t
;

63 
	#__dev_t_deföed


	)

66 #i‚de‡
__gid_t_deföed


67 
__gid_t
 
	tgid_t
;

68 
	#__gid_t_deföed


	)

71 #i‚de‡
__mode_t_deföed


72 
__mode_t
 
	tmode_t
;

73 
	#__mode_t_deföed


	)

76 #i‚de‡
__∆ök_t_deföed


77 
__∆ök_t
 
	t∆ök_t
;

78 
	#__∆ök_t_deföed


	)

81 #i‚de‡
__uid_t_deföed


82 
__uid_t
 
	tuid_t
;

83 
	#__uid_t_deföed


	)

86 #i‚de‡
__off_t_deföed


87 #i‚de‡
__USE_FILE_OFFSET64


88 
__off_t
 
	toff_t
;

90 
__off64_t
 
	toff_t
;

92 
	#__off_t_deföed


	)

94 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


95 
__off64_t
 
	toff64_t
;

96 
	#__off64_t_deföed


	)

99 #i‚de‡
__pid_t_deföed


100 
__pid_t
 
	tpid_t
;

101 
	#__pid_t_deföed


	)

104 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__id_t_deföed


105 
__id_t
 
	tid_t
;

106 
	#__id_t_deföed


	)

109 #i‚de‡
__ssize_t_deföed


110 
__ssize_t
 
	tssize_t
;

111 
	#__ssize_t_deföed


	)

114 #ifdef 
__USE_BSD


115 #i‚de‡
__daddr_t_deföed


116 
__daddr_t
 
	tdaddr_t
;

117 
__ˇddr_t
 
	tˇddr_t
;

118 
	#__daddr_t_deföed


	)

122 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


123 
__key_t
 
	tkey_t
;

124 
	#__key_t_deföed


	)

127 #ifde‡
__USE_XOPEN


128 
	#__√ed_˛ock_t


	)

130 
	#__√ed_time_t


	)

131 
	#__√ed_timî_t


	)

132 
	#__√ed_˛ockid_t


	)

133 
	~<time.h
>

135 #ifde‡
__USE_XOPEN


136 #i‚de‡
__u£c⁄ds_t_deföed


137 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

138 
	#__u£c⁄ds_t_deföed


	)

140 #i‚de‡
__su£c⁄ds_t_deföed


141 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

142 
	#__su£c⁄ds_t_deföed


	)

146 
	#__√ed_size_t


	)

147 
	~<°ddef.h
>

149 #ifde‡
__USE_MISC


151 
	tul⁄g
;

152 
	tush‹t
;

153 
	tuöt
;

158 #i‡!
__GNUC_PREREQ
 (2, 7)

161 #i‚de‡
__öt8_t_deföed


162 
	#__öt8_t_deföed


	)

163 
	töt8_t
;

164 
	töt16_t
;

165 
	töt32_t
;

166 #i‡
__WORDSIZE
 == 64

167 
	töt64_t
;

168 #ñi‡
__GLIBC_HAVE_LONG_LONG


169 
__exãnsi⁄__
 
	töt64_t
;

174 
	tu_öt8_t
;

175 
	tu_öt16_t
;

176 
	tu_öt32_t
;

177 #i‡
__WORDSIZE
 == 64

178 
	tu_öt64_t
;

179 #ñi‡
__GLIBC_HAVE_LONG_LONG


180 
__exãnsi⁄__
 
	tu_öt64_t
;

183 
	tªgi°î_t
;

188 
	#__ötN_t
(
N
, 
MODE
) \

189 ##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

190 
	t__u_ötN_t
(
	tN
, 
	tMODE
) \

191 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

193 #i‚de‡
	t__öt8_t_deföed


194 
	t__öt8_t_deföed


	)

195 
	t__ötN_t
 (8, 
	t__QI__
);

196 
__ötN_t
 (16, 
__HI__
);

197 
__ötN_t
 (32, 
__SI__
);

198 
__ötN_t
 (64, 
__DI__
);

201 
__u_ötN_t
 (8, 
__QI__
);

202 
__u_ötN_t
 (16, 
__HI__
);

203 
__u_ötN_t
 (32, 
__SI__
);

204 
__u_ötN_t
 (64, 
__DI__
);

206 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

212 
	#__BIT_TYPES_DEFINED__
 1

	)

215 #ifdef 
__USE_BSD


217 
	~<ídün.h
>

220 
	~<sys/£À˘.h
>

223 
	~<sys/sysma¸os.h
>

227 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__blksize_t_deföed


228 
__blksize_t
 
	tblksize_t
;

229 
	#__blksize_t_deföed


	)

233 #i‚de‡
__USE_FILE_OFFSET64


234 #i‚de‡
__blk˙t_t_deföed


235 
__blk˙t_t
 
	tblk˙t_t
;

236 
	#__blk˙t_t_deföed


	)

238 #i‚de‡
__fsblk˙t_t_deföed


239 
__fsblk˙t_t
 
	tfsblk˙t_t
;

240 
	#__fsblk˙t_t_deföed


	)

242 #i‚de‡
__fsfû˙t_t_deföed


243 
__fsfû˙t_t
 
	tfsfû˙t_t
;

244 
	#__fsfû˙t_t_deföed


	)

247 #i‚de‡
__blk˙t_t_deföed


248 
__blk˙t64_t
 
	tblk˙t_t
;

249 
	#__blk˙t_t_deföed


	)

251 #i‚de‡
__fsblk˙t_t_deföed


252 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

253 
	#__fsblk˙t_t_deföed


	)

255 #i‚de‡
__fsfû˙t_t_deföed


256 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

257 
	#__fsfû˙t_t_deföed


	)

261 #ifde‡
__USE_LARGEFILE64


262 
__blk˙t64_t
 
	tblk˙t64_t
;

263 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

264 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

269 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


270 
	~<bôs/±hªadty≥s.h
>

273 
	g__END_DECLS


	@/usr/include/time.h

23 #i‚def 
_TIME_H


25 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

26 ! 
deföed
 
	g__√ed_time•ec
)

27 
	#_TIME_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 #ifdef 
_TIME_H


36 
	#__√ed_size_t


	)

37 
	#__√ed_NULL


	)

38 
	~<°ddef.h
>

42 
	~<bôs/time.h
>

45 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


46 #i‚de‡
CLK_TCK


47 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

53 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

54 
	#__˛ock_t_deföed
 1

	)

56 
	~<bôs/ty≥s.h
>

58 
__BEGIN_NAMESPACE_STD


60 
__˛ock_t
 
	t˛ock_t
;

61 
	g__END_NAMESPACE_STD


62 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


63 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

67 #unde‡
__√ed_˛ock_t


69 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

70 
	#__time_t_deföed
 1

	)

72 
	~<bôs/ty≥s.h
>

74 
__BEGIN_NAMESPACE_STD


76 
__time_t
 
	ttime_t
;

77 
__END_NAMESPACE_STD


78 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


79 
	$__USING_NAMESPACE_STD
(
time_t
)

83 #unde‡
__√ed_time_t


85 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

86 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

87 
	#__˛ockid_t_deföed
 1

	)

89 
	~<bôs/ty≥s.h
>

92 
__˛ockid_t
 
	t˛ockid_t
;

95 #unde‡
__˛ockid_time_t


97 #i‡!
deföed
 
__timî_t_deföed
 && \

98 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

99 
	#__timî_t_deföed
 1

	)

101 
	~<bôs/ty≥s.h
>

104 
__timî_t
 
	ttimî_t
;

107 #unde‡
__√ed_timî_t


110 #i‡!
deföed
 
__time•ec_deföed
 && \

111 ((
deföed
 
_TIME_H
 && \

112 (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
)) || \

113 
deföed
 
__√ed_time•ec
)

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 
__c⁄°
 *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 
__c⁄°
 *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 
__BEGIN_NAMESPACE_STD


183 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

186 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

189 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

190 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

193 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

199 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

200 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

201 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

202 
__END_NAMESPACE_STD


204 #ifde‡
__USE_XOPEN


207 *
	$°Ωtime
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

208 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

209 
__THROW
;

212 #ifde‡
__USE_XOPEN2K8


215 
	~<xloˇÀ.h
>

217 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

218 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

219 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

220 
__loˇÀ_t
 
__loc
Ë
__THROW
;

223 #ifde‡
__USE_GNU


224 *
	$°Ωtime_l
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

225 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

230 
__BEGIN_NAMESPACE_STD


233 
tm
 *
	$gmtime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

237 
tm
 *
	$loˇ…ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

238 
__END_NAMESPACE_STD


240 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


243 
tm
 *
	$gmtime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

244 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

248 
tm
 *
	$loˇ…ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

249 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

252 
__BEGIN_NAMESPACE_STD


255 *
	$as˘ime
 (
__c⁄°
 
tm
 *
__ç
Ë
__THROW
;

258 *
	$˘ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

259 
__END_NAMESPACE_STD


261 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


266 *
	$as˘ime_r
 (
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

267 *
__ª°ri˘
 
__buf
Ë
__THROW
;

270 *
	$˘ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

271 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
__tz«me
[2];

277 
__daylight
;

278 
__timez⁄e
;

281 #ifdef 
__USE_POSIX


283 *
tz«me
[2];

287 
	$tz£t
 (Ë
__THROW
;

290 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


291 
daylight
;

292 
timez⁄e
;

295 #ifde‡
__USE_SVID


298 
	$°ime
 (
__c⁄°
 
time_t
 *
__whí
Ë
__THROW
;

304 
	#__i¶óp
(
yór
) \

305 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

308 #ifde‡
__USE_MISC


313 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

316 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

319 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

323 #ifde‡
__USE_POSIX199309


328 
	`«no¶ìp
 (
__c⁄°
 
time•ec
 *
__ªque°ed_time
,

329 
time•ec
 *
__ªmaöög
);

333 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

336 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

339 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, 
__c⁄°
 
time•ec
 *
__ç
)

340 
__THROW
;

342 #ifde‡
__USE_XOPEN2K


347 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

348 
__c⁄°
 
time•ec
 *
__ªq
,

349 
time•ec
 *
__ªm
);

352 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

357 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

358 
sigevít
 *
__ª°ri˘
 
__evp
,

359 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

362 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

365 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

366 
__c⁄°
 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

367 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

370 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

371 
__THROW
;

374 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

378 #ifde‡
__USE_XOPEN_EXTENDED


390 
gëd©e_îr
;

399 
tm
 *
	`gëd©e
 (
__c⁄°
 *
__°rög
);

402 #ifde‡
__USE_GNU


413 
	`gëd©e_r
 (
__c⁄°
 *
__ª°ri˘
 
__°rög
,

414 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

417 
__END_DECLS


	@/usr/include/unistd.h

23 #i‚def 
_UNISTD_H


24 
	#_UNISTD_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


33 #ifde‡
__USE_XOPEN2K8


35 
	#_POSIX_VERSION
 200809L

	)

36 #ñi‡
deföed
 
__USE_XOPEN2K


38 
	#_POSIX_VERSION
 200112L

	)

39 #ñi‡
deföed
 
__USE_POSIX199506


41 
	#_POSIX_VERSION
 199506L

	)

42 #ñi‡
deföed
 
__USE_POSIX199309


44 
	#_POSIX_VERSION
 199309L

	)

47 
	#_POSIX_VERSION
 199009L

	)

53 #ifde‡
__USE_XOPEN2K8


54 
	#__POSIX2_THIS_VERSION
 200809L

	)

56 #ñi‡
deföed
 
__USE_XOPEN2K


58 
	#__POSIX2_THIS_VERSION
 200112L

	)

59 #ñi‡
deföed
 
__USE_POSIX199506


61 
	#__POSIX2_THIS_VERSION
 199506L

	)

64 
	#__POSIX2_THIS_VERSION
 199209L

	)

68 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

72 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

76 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

80 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

84 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

87 #ifde‡
__USE_XOPEN2K8


88 
	#_XOPEN_VERSION
 700

	)

89 #ñi‡
deföed
 
__USE_XOPEN2K


90 
	#_XOPEN_VERSION
 600

	)

91 #ñi‡
deföed
 
__USE_UNIX98


92 
	#_XOPEN_VERSION
 500

	)

94 
	#_XOPEN_VERSION
 4

	)

98 
	#_XOPEN_XCU_VERSION
 4

	)

101 
	#_XOPEN_XPG2
 1

	)

102 
	#_XOPEN_XPG3
 1

	)

103 
	#_XOPEN_XPG4
 1

	)

106 
	#_XOPEN_UNIX
 1

	)

109 
	#_XOPEN_CRYPT
 1

	)

113 
	#_XOPEN_ENH_I18N
 1

	)

116 
	#_XOPEN_LEGACY
 1

	)

203 
	~<bôs/posix_›t.h
>

206 #ifde‡
__USE_UNIX98


207 
	~<bôs/ívú⁄míts.h
>

211 
	#STDIN_FILENO
 0

	)

212 
	#STDOUT_FILENO
 1

	)

213 
	#STDERR_FILENO
 2

	)

218 
	~<bôs/ty≥s.h
>

220 #i‚def 
__ssize_t_deföed


221 
__ssize_t
 
	tssize_t
;

222 
	#__ssize_t_deföed


	)

225 
	#__√ed_size_t


	)

226 
	#__√ed_NULL


	)

227 
	~<°ddef.h
>

229 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


232 #i‚de‡
__gid_t_deföed


233 
__gid_t
 
	tgid_t
;

234 
	#__gid_t_deföed


	)

237 #i‚de‡
__uid_t_deföed


238 
__uid_t
 
	tuid_t
;

239 
	#__uid_t_deföed


	)

242 #i‚de‡
__off_t_deföed


243 #i‚de‡
__USE_FILE_OFFSET64


244 
__off_t
 
	toff_t
;

246 
__off64_t
 
	toff_t
;

248 
	#__off_t_deföed


	)

250 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


251 
__off64_t
 
	toff64_t
;

252 
	#__off64_t_deföed


	)

255 #i‚de‡
__u£c⁄ds_t_deföed


256 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

257 
	#__u£c⁄ds_t_deföed


	)

260 #i‚de‡
__pid_t_deföed


261 
__pid_t
 
	tpid_t
;

262 
	#__pid_t_deföed


	)

266 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


267 #i‚de‡
__öçå_t_deföed


268 
__öçå_t
 
	töçå_t
;

269 
	#__öçå_t_deföed


	)

273 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


274 #i‚de‡
__sockÀn_t_deföed


275 
__sockÀn_t
 
	tsockÀn_t
;

276 
	#__sockÀn_t_deföed


	)

282 
	#R_OK
 4

	)

283 
	#W_OK
 2

	)

284 
	#X_OK
 1

	)

285 
	#F_OK
 0

	)

288 
	$ac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

290 #ifde‡
__USE_GNU


293 
	$euidac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

294 
__THROW
 
	`__n⁄nuŒ
 ((1));

297 
	$óc˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

298 
__THROW
 
	`__n⁄nuŒ
 ((1));

301 #ifde‡
__USE_ATFILE


305 
	$Ác˚sßt
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__ty≥
, 
__Êag
)

306 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

311 #i‚def 
_STDIO_H


312 
	#SEEK_SET
 0

	)

313 
	#SEEK_CUR
 1

	)

314 
	#SEEK_END
 2

	)

317 #i‡
deföed
 
__USE_BSD
 && !deföed 
L_SET


319 
	#L_SET
 
SEEK_SET


	)

320 
	#L_INCR
 
SEEK_CUR


	)

321 
	#L_XTND
 
SEEK_END


	)

330 #i‚de‡
__USE_FILE_OFFSET64


331 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

333 #ifde‡
__REDIRECT_NTH


334 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

335 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

336 
l£ek64
);

338 
	#l£ek
 
l£ek64


	)

341 #ifde‡
__USE_LARGEFILE64


342 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

343 
__THROW
;

350 
	`˛o£
 (
__fd
);

357 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

363 
ssize_t
 
	$wrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
Ë
__wur
;

365 #ifde‡
__USE_UNIX98


366 #i‚de‡
__USE_FILE_OFFSET64


373 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

374 
__off_t
 
__off£t
Ë
__wur
;

381 
ssize_t
 
	$pwrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

382 
__off_t
 
__off£t
Ë
__wur
;

384 #ifde‡
__REDIRECT


385 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

386 
__off64_t
 
__off£t
),

387 
¥ód64
Ë
__wur
;

388 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, 
__c⁄°
 *
__buf
,

389 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

390 
pwrôe64
Ë
__wur
;

392 
	#¥ód
 
¥ód64


	)

393 
	#pwrôe
 
pwrôe64


	)

397 #ifde‡
__USE_LARGEFILE64


401 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

402 
__off64_t
 
__off£t
Ë
__wur
;

405 
ssize_t
 
	$pwrôe64
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

406 
__off64_t
 
__off£t
Ë
__wur
;

414 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

416 #ifde‡
__USE_GNU


419 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

429 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

441 
	`¶ìp
 (
__£c⁄ds
);

443 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


448 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

449 
__THROW
;

456 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

465 
	`∑u£
 ();

469 
	$chown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

470 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

472 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


474 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

479 
	$lchown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

480 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

484 #ifde‡
__USE_ATFILE


487 
	$fchow«t
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
,

488 
__gid_t
 
__group
, 
__Êag
)

489 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

493 
	$chdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

495 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


497 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

507 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

509 #ifdef 
__USE_GNU


513 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

516 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


520 *
	$gëwd
 (*
__buf
)

521 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

526 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

529 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

531 #ifde‡
__USE_GNU


534 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

538 **
__ívú⁄
;

539 #ifde‡
__USE_GNU


540 **
ívú⁄
;

546 
	$execve
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[],

547 *
__c⁄°
 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

549 #ifde‡
__USE_XOPEN2K8


552 
	$„xecve
 (
__fd
, *
__c⁄°
 
__¨gv
[], *__c⁄° 
__ívp
[])

553 
__THROW
;

558 
	$execv
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[])

559 
__THROW
 
	`__n⁄nuŒ
 ((1));

563 
	$exe˛e
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

564 
__THROW
 
	`__n⁄nuŒ
 ((1));

568 
	$exe˛
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

569 
__THROW
 
	`__n⁄nuŒ
 ((1));

573 
	$execvp
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[])

574 
__THROW
 
	`__n⁄nuŒ
 ((1));

579 
	$exe˛p
 (
__c⁄°
 *
__fûe
, __c⁄° *
__¨g
, ...)

580 
__THROW
 
	`__n⁄nuŒ
 ((1));

582 #ifde‡
__USE_GNU


585 
	$execv≥
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[],

586 *
__c⁄°
 
__ívp
[])

587 
__THROW
 
	`__n⁄nuŒ
 ((1));

591 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


593 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

598 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

604 
	~<bôs/c⁄‚ame.h
>

607 
	$∑thc⁄f
 (
__c⁄°
 *
__∑th
, 
__«me
)

608 
__THROW
 
	`__n⁄nuŒ
 ((1));

611 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

614 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

616 #ifdef 
__USE_POSIX2


618 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

623 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

626 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

630 #i‚de‡
__FAVOR_BSD


631 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

633 #ifde‡
__REDIRECT_NTH


634 
__pid_t
 
	`__REDIRECT_NTH
 (
gëpgΩ
, (__pid_à
__pid
), 
__gëpgid
);

636 
	#gëpgΩ
 
__gëpgid


	)

641 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

642 #ifde‡
__USE_XOPEN_EXTENDED


643 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

650 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

652 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


663 #i‚de‡
__FAVOR_BSD


667 
	$£çgΩ
 (Ë
__THROW
;

672 #ifde‡
__REDIRECT_NTH


673 
	`__REDIRECT_NTH
 (
£çgΩ
, (
__pid_t
 
__pid
, __pid_à
__pgΩ
), 
£çgid
);

675 
	#£çgΩ
 
£çgid


	)

684 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

686 #ifde‡
__USE_XOPEN_EXTENDED


688 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

692 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

695 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

698 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

701 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

706 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

708 #ifdef 
__USE_GNU


710 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

717 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
;

719 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


722 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
;

725 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


727 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
;

734 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
;

736 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


739 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
;

742 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


744 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
;

747 #ifde‡
__USE_GNU


750 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

751 
__THROW
;

755 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

756 
__THROW
;

760 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

761 
__THROW
;

765 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

766 
__THROW
;

773 
__pid_t
 
	$f‹k
 (Ë
__THROW
;

775 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


780 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

786 *
	$ây«me
 (
__fd
Ë
__THROW
;

790 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

791 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

795 
	$ißây
 (
__fd
Ë
__THROW
;

797 #i‡
deföed
 
__USE_BSD
 \

798 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

801 
	$ây¶Ÿ
 (Ë
__THROW
;

806 
	$lök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

807 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

809 #ifde‡
__USE_ATFILE


812 
	$lök©
 (
__‰omfd
, 
__c⁄°
 *
__‰om
, 
__tofd
,

813 
__c⁄°
 *
__to
, 
__Êags
)

814 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

817 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


819 
	$symlök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

820 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

825 
ssize_t
 
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

826 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

827 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

830 #ifde‡
__USE_ATFILE


832 
	$symlök©
 (
__c⁄°
 *
__‰om
, 
__tofd
,

833 
__c⁄°
 *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

836 
ssize_t
 
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

837 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

838 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

842 
	$u∆ök
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

844 #ifde‡
__USE_ATFILE


846 
	$u∆ök©
 (
__fd
, 
__c⁄°
 *
__«me
, 
__Êag
)

847 
__THROW
 
	`__n⁄nuŒ
 ((2));

851 
	$rmdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

855 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

858 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

865 *
	`gëlogö
 ();

866 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


873 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

876 #ifdef 
__USE_BSD


878 
	$£éogö
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

882 #ifdef 
__USE_POSIX2


886 
	#__√ed_gë›t


	)

887 
	~<gë›t.h
>

891 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


895 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

899 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

902 
	$£tho°«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

903 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

907 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

913 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

914 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

915 
	$£tdomaö«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

916 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

922 
	$vh™gup
 (Ë
__THROW
;

925 
	$ªvoke
 (
__c⁄°
 *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

933 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

934 
size_t
 
__off£t
, 
__sˇÀ
)

935 
__THROW
 
	`__n⁄nuŒ
 ((1));

941 
	$ac˘
 (
__c⁄°
 *
__«me
Ë
__THROW
;

945 *
	$gëu£rshñl
 (Ë
__THROW
;

946 
	$ídu£rshñl
 (Ë
__THROW
;

947 
	$£tu£rshñl
 (Ë
__THROW
;

953 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

957 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

960 
	$chroŸ
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

964 *
	$gë∑ss
 (
__c⁄°
 *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

968 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


973 
	`fsync
 (
__fd
);

977 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


980 
	`gëho°id
 ();

983 
	$sync
 (Ë
__THROW
;

988 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

993 
	$gëdèbÀsize
 (Ë
__THROW
;

997 #i‚de‡
__USE_FILE_OFFSET64


998 
	$åunˇã
 (
__c⁄°
 *
__fûe
, 
__off_t
 
__Àngth
)

999 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1001 #ifde‡
__REDIRECT_NTH


1002 
	`__REDIRECT_NTH
 (
åunˇã
,

1003 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
),

1004 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1006 
	#åunˇã
 
åunˇã64


	)

1009 #ifde‡
__USE_LARGEFILE64


1010 
	$åunˇã64
 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
)

1011 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1016 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1019 #i‚de‡
__USE_FILE_OFFSET64


1020 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1022 #ifde‡
__REDIRECT_NTH


1023 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1024 
·runˇã64
Ë
__wur
;

1026 
	#·runˇã
 
·runˇã64


	)

1029 #ifde‡
__USE_LARGEFILE64


1030 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1036 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


1040 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1046 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1050 #ifde‡
__USE_MISC


1061 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1066 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1078 
	#F_ULOCK
 0

	)

1079 
	#F_LOCK
 1

	)

1080 
	#F_TLOCK
 2

	)

1081 
	#F_TEST
 3

	)

1083 #i‚de‡
__USE_FILE_OFFSET64


1084 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1086 #ifde‡
__REDIRECT


1087 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1088 
lockf64
Ë
__wur
;

1090 
	#lockf
 
lockf64


	)

1093 #ifde‡
__USE_LARGEFILE64


1094 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1099 #ifde‡
__USE_GNU


1104 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1105 (
__exãnsi⁄__
 \

1106 ({ 
__ªsu…
; \

1107 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1108 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1109 
__ªsu…
; 
	}
}))

	)

1112 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1115 
fd©async
 (
__fûdes
);

1121 #ifdef 
__USE_XOPEN


1123 *
	$¸y±
 (
__c⁄°
 *
__key
, __c⁄° *
__ß…
)

1124 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1128 
	$í¸y±
 (*
__block
, 
__edÊag
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1135 
	$swab
 (
__c⁄°
 *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1136 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1142 #ifde‡
__USE_XOPEN


1144 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1149 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


1150 
	~<bôs/uni°d.h
>

1153 
__END_DECLS


	@/usr/include/wchar.h

24 #i‚de‡
_WCHAR_H


26 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


27 
	#_WCHAR_H
 1

	)

28 
	~<„©uªs.h
>

31 #ifde‡
_WCHAR_H


33 
	#__√ed___FILE


	)

34 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


35 
	#__√ed_FILE


	)

37 
	~<°dio.h
>

39 
	#__√ed___va_li°


	)

40 
	~<°d¨g.h
>

42 
	~<bôs/wch¨.h
>

45 
	#__√ed_size_t


	)

46 
	#__√ed_wch¨_t


	)

47 
	#__√ed_NULL


	)

49 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


50 #unde‡
__√ed_wöt_t


51 
	#__√ed_wöt_t


	)

52 
	~<°ddef.h
>

55 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

56 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

61 #i‚de‡
_WINT_T


66 
	#_WINT_T


	)

67 
	twöt_t
;

71 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

72 && 
deföed
 
__WINT_TYPE__


73 
__BEGIN_NAMESPACE_STD


74 
__WINT_TYPE__
 
	twöt_t
;

75 
	g__END_NAMESPACE_STD


80 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
__mb°©e_t_deföed


81 
	#__mb°©e_t_deföed
 1

	)

85 
	m__cou¡
;

88 #ifde‡
__WINT_TYPE__


89 
__WINT_TYPE__
 
	m__wch
;

91 
wöt_t
 
	m__wch
;

93 
	m__wchb
[4];

94 } 
	m__vÆue
;

95 } 
	t__mb°©e_t
;

97 #unde‡
__√ed_mb°©e_t


102 #ifde‡
_WCHAR_H


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 #ifde‡
__USE_GNU


109 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

112 #i‚de‡
WCHAR_MIN


114 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

115 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

118 #i‚de‡
WEOF


119 
	#WEOF
 (0xffffffffu)

	)

124 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


125 
	~<w˘y≥.h
>

129 
__BEGIN_DECLS


131 
__BEGIN_NAMESPACE_STD


134 
tm
;

135 
__END_NAMESPACE_STD


139 
	$__USING_NAMESPACE_STD
(
tm
)

142 
__BEGIN_NAMESPACE_STD


144 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

145 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

147 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

149 
__THROW
;

152 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

153 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

155 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

157 
__THROW
;

160 
	$wcscmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
)

161 
__THROW
 
__©åibuã_puª__
;

163 
	$wc¢cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

164 
__THROW
 
__©åibuã_puª__
;

165 
__END_NAMESPACE_STD


167 #ifde‡
__USE_XOPEN2K8


169 
	$wcsˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

172 
	$wc¢ˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

173 
size_t
 
__n
Ë
__THROW
;

177 
	~<xloˇÀ.h
>

179 
	$wcsˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

180 
__loˇÀ_t
 
__loc
Ë
__THROW
;

182 
	$wc¢ˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

183 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

186 
__BEGIN_NAMESPACE_STD


189 
	$wcscﬁl
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

193 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

194 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

195 
__END_NAMESPACE_STD


197 #ifde‡
__USE_XOPEN2K8


203 
	$wcscﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

204 
__loˇÀ_t
 
__loc
Ë
__THROW
;

209 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

210 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

213 
wch¨_t
 *
	$wcsdup
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

216 
__BEGIN_NAMESPACE_STD


218 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


219 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

220 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

221 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

222 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
__©åibuã_puª__
;

228 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


229 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

230 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

231 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

232 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
__©åibuã_puª__
;

237 
__END_NAMESPACE_STD


239 #ifde‡
__USE_GNU


242 
wch¨_t
 *
	$wcsch∫ul
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__wc
)

243 
__THROW
 
__©åibuã_puª__
;

246 
__BEGIN_NAMESPACE_STD


249 
size_t
 
	$wcsc•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ªje˘
)

250 
__THROW
 
__©åibuã_puª__
;

253 
size_t
 
	$wcs•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

254 
__THROW
 
__©åibuã_puª__
;

256 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


257 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, 
__c⁄°
 wch¨_à*
__ac˚±
)

258 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

259 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
,

260 
__c⁄°
 
wch¨_t
 *
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

263 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

264 
__THROW
 
__©åibuã_puª__
;

267 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


268 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

269 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

270 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

271 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

274 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

275 
__THROW
 
__©åibuã_puª__
;

279 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

280 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

281 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

284 
size_t
 
	$wc¶í
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

285 
__END_NAMESPACE_STD


287 #ifde‡
__USE_XOPEN


289 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


290 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

291 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

292 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

293 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

296 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

297 
__THROW
 
__©åibuã_puª__
;

301 #ifde‡
__USE_XOPEN2K8


303 
size_t
 
	$wc¢Àn
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

304 
__THROW
 
__©åibuã_puª__
;

308 
__BEGIN_NAMESPACE_STD


310 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


311 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

312 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

313 "C++" 
__c⁄°
 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
,

314 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

317 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

318 
__THROW
 
__©åibuã_puª__
;

322 
	$wmemcmp
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s1
,

323 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

324 
__THROW
 
__©åibuã_puª__
;

327 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

328 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

332 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
)

333 
__THROW
;

336 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

337 
__END_NAMESPACE_STD


339 #ifde‡
__USE_GNU


342 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

343 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

344 
__THROW
;

348 
__BEGIN_NAMESPACE_STD


351 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

355 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

359 
	$mbsöô
 (
__c⁄°
 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

363 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

364 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

365 
mb°©e_t
 *
__p
Ë
__THROW
;

368 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

369 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

372 
size_t
 
	$__mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

373 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

374 
size_t
 
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

375 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

376 
__END_NAMESPACE_STD


378 #ifde‡
__USE_EXTERN_INLINES


384 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

385 
__exã∫_ölöe
 
wöt_t


386 
	`__NTH
 (
	$btowc
 (
__c
))

387 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

388 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

390 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

391 
__exã∫_ölöe
 

392 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

393 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

394 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

396 
__exã∫_ölöe
 
size_t


397 
__NTH
 (
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

398 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

399 {  (
__ps
 !
NULL


400 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

403 
__BEGIN_NAMESPACE_STD


406 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

407 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

408 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

412 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

413 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

414 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

415 
__END_NAMESPACE_STD


418 #ifdef 
__USE_XOPEN2K8


421 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

422 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

423 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

427 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

428 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

429 
size_t
 
__nwc
, size_à
__Àn
,

430 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

435 #ifde‡
__USE_XOPEN


437 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

441 
	$wcswidth
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

445 
__BEGIN_NAMESPACE_STD


448 
	$wc°od
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

449 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

450 
__END_NAMESPACE_STD


452 #ifde‡
__USE_ISOC99


453 
__BEGIN_NAMESPACE_C99


455 
	$wc°of
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

456 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

457 
	$wc°ﬁd
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

458 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

459 
__END_NAMESPACE_C99


463 
__BEGIN_NAMESPACE_STD


466 
	$wc°ﬁ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

467 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

471 
	$wc°oul
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

472 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

473 
__THROW
;

474 
__END_NAMESPACE_STD


476 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GNUC__
 && deföed 
__USE_GNU
)

477 
__BEGIN_NAMESPACE_C99


480 
__exãnsi⁄__


481 
	$wc°ﬁl
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

482 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

483 
__THROW
;

487 
__exãnsi⁄__


488 
	$wc°ouŒ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

489 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

490 
__ba£
Ë
__THROW
;

491 
__END_NAMESPACE_C99


494 #i‡
deföed
 
__GNUC__
 && deföed 
__USE_GNU


497 
__exãnsi⁄__


498 
	$wc°oq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

499 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

500 
__THROW
;

504 
__exãnsi⁄__


505 
	$wc°ouq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

506 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

507 
__ba£
Ë
__THROW
;

510 #ifde‡
__USE_GNU


524 
	~<xloˇÀ.h
>

528 
	$wc°ﬁ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

529 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

530 
__loˇÀ_t
 
__loc
Ë
__THROW
;

532 
	$wc°oul_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

533 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

534 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

536 
__exãnsi⁄__


537 
	$wc°ﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

538 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

539 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

541 
__exãnsi⁄__


542 
	$wc°ouŒ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

543 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

544 
__ba£
, 
__loˇÀ_t
 
__loc
)

545 
__THROW
;

547 
	$wc°od_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

548 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

549 
__THROW
;

551 
	$wc°of_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

552 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

553 
__THROW
;

555 
	$wc°ﬁd_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

556 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

557 
__loˇÀ_t
 
__loc
Ë
__THROW
;

561 #ifdef 
__USE_XOPEN2K8


564 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
Ë
__THROW
;

568 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
)

569 
__THROW
;

575 #ifdef 
__USE_XOPEN2K8


578 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

581 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


582 
__BEGIN_NAMESPACE_STD


585 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

592 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

593 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

599 
	`w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

602 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

603 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
__THROW
 ;

610 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

611 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

612 
__gnuc_va_li°
 
__¨g
)

618 
	`vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

619 
__gnuc_va_li°
 
__¨g
)

623 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

624 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

625 
__gnuc_va_li°
 
__¨g
)

626 
__THROW
 ;

633 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

634 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

640 
	`wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

643 
	$swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

644 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
__THROW
 ;

647 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

648 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

649 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

650 #ifde‡
__REDIRECT


654 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

655 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

656 
__isoc99_fwsˇnf
)

658 
	`__REDIRECT
 (
wsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

659 
__isoc99_wsˇnf
)

661 
	`__REDIRECT
 (
swsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

662 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

663 
__isoc99_swsˇnf
)

664 
__THROW
 ;

666 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

667 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

668 
	`__isoc99_wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

669 
	$__isoc99_swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

670 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

671 
__THROW
;

672 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

673 
	#wsˇnf
 
__isoc99_wsˇnf


	)

674 
	#swsˇnf
 
__isoc99_swsˇnf


	)

678 
__END_NAMESPACE_STD


681 #ifde‡
__USE_ISOC99


682 
__BEGIN_NAMESPACE_C99


687 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

688 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

689 
__gnuc_va_li°
 
__¨g
)

695 
	`vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

696 
__gnuc_va_li°
 
__¨g
)

699 
	$vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

700 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

701 
__gnuc_va_li°
 
__¨g
)

702 
__THROW
 ;

704 #i‡!
deföed
 
__USE_GNU
 \

705 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

706 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

707 #ifde‡
__REDIRECT


708 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

709 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

710 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

712 
	`__REDIRECT
 (
vwsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

713 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

715 
	`__REDIRECT
 (
vswsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

716 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

717 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

718 
__THROW
 ;

720 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

721 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

722 
__gnuc_va_li°
 
__¨g
);

723 
	`__isoc99_vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

724 
__gnuc_va_li°
 
__¨g
);

725 
	$__isoc99_vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

726 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

727 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

728 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

729 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

730 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

734 
__END_NAMESPACE_C99


738 
__BEGIN_NAMESPACE_STD


743 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

744 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

750 
wöt_t
 
	`gëwch¨
 ();

757 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

758 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

764 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

772 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

773 
__FILE
 *
__ª°ri˘
 
__°ªam
);

779 
	`Âutws
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

780 
__FILE
 *
__ª°ri˘
 
__°ªam
);

787 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

788 
__END_NAMESPACE_STD


791 #ifde‡
__USE_GNU


799 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

800 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

808 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

816 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

825 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

826 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

835 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

836 
__FILE
 *
__ª°ri˘
 
__°ªam
);

844 
	`Âutws_u∆ocked
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

845 
__FILE
 *
__ª°ri˘
 
__°ªam
);

849 
__BEGIN_NAMESPACE_C99


853 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

854 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

855 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

856 
__END_NAMESPACE_C99


858 #ifde‡
__USE_GNU


859 
	~<xloˇÀ.h
>

863 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

864 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

865 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

866 
__loˇÀ_t
 
__loc
Ë
__THROW
;

875 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


876 
	#__√ed_iswxxx


	)

877 
	~<w˘y≥.h
>

881 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


882 
	~<bôs/wch¨2.h
>

885 #ifde‡
__LDBL_COMPAT


886 
	~<bôs/wch¨-ldbl.h
>

889 
__END_DECLS


897 #unde‡
__√ed_mb°©e_t


898 #unde‡
__√ed_wöt_t


	@tsk3/tsk_config.h

13 
	#HAVE_ALLOCA
 1

	)

17 
	#HAVE_ALLOCA_H
 1

	)

20 
	#HAVE_DLFCN_H
 1

	)

26 
	#HAVE_FSEEKO
 1

	)

29 
	#HAVE_INTTYPES_H
 1

	)

42 
	#HAVE_MEMORY_H
 1

	)

45 
	#HAVE_STDBOOL_H
 1

	)

48 
	#HAVE_STDINT_H
 1

	)

51 
	#HAVE_STDLIB_H
 1

	)

54 
	#HAVE_STRINGS_H
 1

	)

57 
	#HAVE_STRING_H
 1

	)

60 
	#HAVE_SYS_PARAM_H
 1

	)

63 
	#HAVE_SYS_SELECT_H
 1

	)

66 
	#HAVE_SYS_SOCKET_H
 1

	)

69 
	#HAVE_SYS_STAT_H
 1

	)

72 
	#HAVE_SYS_TYPES_H
 1

	)

75 
	#HAVE_UNISTD_H
 1

	)

78 
	#HAVE_UTIME_NULL
 1

	)

81 
	#HAVE_VPRINTF
 1

	)

84 
	#HAVE__BOOL
 1

	)

88 
	#LSTAT_FOLLOWS_SLASHED_SYMLINK
 1

	)

91 
	#PACKAGE
 "¶euthkô"

	)

94 
	#PACKAGE_BUGREPORT
 ""

	)

97 
	#PACKAGE_NAME
 "¶euthkô"

	)

100 
	#PACKAGE_STRING
 "¶euthkô 3.1.2"

	)

103 
	#PACKAGE_TARNAME
 "¶euthkô"

	)

106 
	#PACKAGE_VERSION
 "3.1.2"

	)

109 
	#SELECT_TYPE_ARG1
 

	)

112 
	#SELECT_TYPE_ARG234
 (
fd_£t
 *)

	)

115 
	#SELECT_TYPE_ARG5
 (
timevÆ
 *)

	)

126 
	#STDC_HEADERS
 1

	)

129 
	#VERSION
 "3.1.2"

	)

	@/usr/include/alloca.h

19 #i‚def 
_ALLOCA_H


20 
	#_ALLOCA_H
 1

	)

22 
	~<„©uªs.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

27 
	g__BEGIN_DECLS


30 #unde‡
Æloˇ


33 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

35 #ifdef 
__GNUC__


36 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

39 
__END_DECLS


	@/usr/include/bits/confname.h

21 #i‚de‡
_UNISTD_H


28 
	m_PC_LINK_MAX
,

29 
	#_PC_LINK_MAX
 
_PC_LINK_MAX


	)

30 
	m_PC_MAX_CANON
,

31 
	#_PC_MAX_CANON
 
_PC_MAX_CANON


	)

32 
	m_PC_MAX_INPUT
,

33 
	#_PC_MAX_INPUT
 
_PC_MAX_INPUT


	)

34 
	m_PC_NAME_MAX
,

35 
	#_PC_NAME_MAX
 
_PC_NAME_MAX


	)

36 
	m_PC_PATH_MAX
,

37 
	#_PC_PATH_MAX
 
_PC_PATH_MAX


	)

38 
	m_PC_PIPE_BUF
,

39 
	#_PC_PIPE_BUF
 
_PC_PIPE_BUF


	)

40 
	m_PC_CHOWN_RESTRICTED
,

41 
	#_PC_CHOWN_RESTRICTED
 
_PC_CHOWN_RESTRICTED


	)

42 
	m_PC_NO_TRUNC
,

43 
	#_PC_NO_TRUNC
 
_PC_NO_TRUNC


	)

44 
	m_PC_VDISABLE
,

45 
	#_PC_VDISABLE
 
_PC_VDISABLE


	)

46 
	m_PC_SYNC_IO
,

47 
	#_PC_SYNC_IO
 
_PC_SYNC_IO


	)

48 
	m_PC_ASYNC_IO
,

49 
	#_PC_ASYNC_IO
 
_PC_ASYNC_IO


	)

50 
	m_PC_PRIO_IO
,

51 
	#_PC_PRIO_IO
 
_PC_PRIO_IO


	)

52 
	m_PC_SOCK_MAXBUF
,

53 
	#_PC_SOCK_MAXBUF
 
_PC_SOCK_MAXBUF


	)

54 
	m_PC_FILESIZEBITS
,

55 
	#_PC_FILESIZEBITS
 
_PC_FILESIZEBITS


	)

56 
	m_PC_REC_INCR_XFER_SIZE
,

57 
	#_PC_REC_INCR_XFER_SIZE
 
_PC_REC_INCR_XFER_SIZE


	)

58 
	m_PC_REC_MAX_XFER_SIZE
,

59 
	#_PC_REC_MAX_XFER_SIZE
 
_PC_REC_MAX_XFER_SIZE


	)

60 
	m_PC_REC_MIN_XFER_SIZE
,

61 
	#_PC_REC_MIN_XFER_SIZE
 
_PC_REC_MIN_XFER_SIZE


	)

62 
	m_PC_REC_XFER_ALIGN
,

63 
	#_PC_REC_XFER_ALIGN
 
_PC_REC_XFER_ALIGN


	)

64 
	m_PC_ALLOC_SIZE_MIN
,

65 
	#_PC_ALLOC_SIZE_MIN
 
_PC_ALLOC_SIZE_MIN


	)

66 
	m_PC_SYMLINK_MAX
,

67 
	#_PC_SYMLINK_MAX
 
_PC_SYMLINK_MAX


	)

68 
	m_PC_2_SYMLINKS


69 
	#_PC_2_SYMLINKS
 
_PC_2_SYMLINKS


	)

75 
	m_SC_ARG_MAX
,

76 
	#_SC_ARG_MAX
 
_SC_ARG_MAX


	)

77 
	m_SC_CHILD_MAX
,

78 
	#_SC_CHILD_MAX
 
_SC_CHILD_MAX


	)

79 
	m_SC_CLK_TCK
,

80 
	#_SC_CLK_TCK
 
_SC_CLK_TCK


	)

81 
	m_SC_NGROUPS_MAX
,

82 
	#_SC_NGROUPS_MAX
 
_SC_NGROUPS_MAX


	)

83 
	m_SC_OPEN_MAX
,

84 
	#_SC_OPEN_MAX
 
_SC_OPEN_MAX


	)

85 
	m_SC_STREAM_MAX
,

86 
	#_SC_STREAM_MAX
 
_SC_STREAM_MAX


	)

87 
	m_SC_TZNAME_MAX
,

88 
	#_SC_TZNAME_MAX
 
_SC_TZNAME_MAX


	)

89 
	m_SC_JOB_CONTROL
,

90 
	#_SC_JOB_CONTROL
 
_SC_JOB_CONTROL


	)

91 
	m_SC_SAVED_IDS
,

92 
	#_SC_SAVED_IDS
 
_SC_SAVED_IDS


	)

93 
	m_SC_REALTIME_SIGNALS
,

94 
	#_SC_REALTIME_SIGNALS
 
_SC_REALTIME_SIGNALS


	)

95 
	m_SC_PRIORITY_SCHEDULING
,

96 
	#_SC_PRIORITY_SCHEDULING
 
_SC_PRIORITY_SCHEDULING


	)

97 
	m_SC_TIMERS
,

98 
	#_SC_TIMERS
 
_SC_TIMERS


	)

99 
	m_SC_ASYNCHRONOUS_IO
,

100 
	#_SC_ASYNCHRONOUS_IO
 
_SC_ASYNCHRONOUS_IO


	)

101 
	m_SC_PRIORITIZED_IO
,

102 
	#_SC_PRIORITIZED_IO
 
_SC_PRIORITIZED_IO


	)

103 
	m_SC_SYNCHRONIZED_IO
,

104 
	#_SC_SYNCHRONIZED_IO
 
_SC_SYNCHRONIZED_IO


	)

105 
	m_SC_FSYNC
,

106 
	#_SC_FSYNC
 
_SC_FSYNC


	)

107 
	m_SC_MAPPED_FILES
,

108 
	#_SC_MAPPED_FILES
 
_SC_MAPPED_FILES


	)

109 
	m_SC_MEMLOCK
,

110 
	#_SC_MEMLOCK
 
_SC_MEMLOCK


	)

111 
	m_SC_MEMLOCK_RANGE
,

112 
	#_SC_MEMLOCK_RANGE
 
_SC_MEMLOCK_RANGE


	)

113 
	m_SC_MEMORY_PROTECTION
,

114 
	#_SC_MEMORY_PROTECTION
 
_SC_MEMORY_PROTECTION


	)

115 
	m_SC_MESSAGE_PASSING
,

116 
	#_SC_MESSAGE_PASSING
 
_SC_MESSAGE_PASSING


	)

117 
	m_SC_SEMAPHORES
,

118 
	#_SC_SEMAPHORES
 
_SC_SEMAPHORES


	)

119 
	m_SC_SHARED_MEMORY_OBJECTS
,

120 
	#_SC_SHARED_MEMORY_OBJECTS
 
_SC_SHARED_MEMORY_OBJECTS


	)

121 
	m_SC_AIO_LISTIO_MAX
,

122 
	#_SC_AIO_LISTIO_MAX
 
_SC_AIO_LISTIO_MAX


	)

123 
	m_SC_AIO_MAX
,

124 
	#_SC_AIO_MAX
 
_SC_AIO_MAX


	)

125 
	m_SC_AIO_PRIO_DELTA_MAX
,

126 
	#_SC_AIO_PRIO_DELTA_MAX
 
_SC_AIO_PRIO_DELTA_MAX


	)

127 
	m_SC_DELAYTIMER_MAX
,

128 
	#_SC_DELAYTIMER_MAX
 
_SC_DELAYTIMER_MAX


	)

129 
	m_SC_MQ_OPEN_MAX
,

130 
	#_SC_MQ_OPEN_MAX
 
_SC_MQ_OPEN_MAX


	)

131 
	m_SC_MQ_PRIO_MAX
,

132 
	#_SC_MQ_PRIO_MAX
 
_SC_MQ_PRIO_MAX


	)

133 
	m_SC_VERSION
,

134 
	#_SC_VERSION
 
_SC_VERSION


	)

135 
	m_SC_PAGESIZE
,

136 
	#_SC_PAGESIZE
 
_SC_PAGESIZE


	)

137 
	#_SC_PAGE_SIZE
 
_SC_PAGESIZE


	)

138 
	m_SC_RTSIG_MAX
,

139 
	#_SC_RTSIG_MAX
 
_SC_RTSIG_MAX


	)

140 
	m_SC_SEM_NSEMS_MAX
,

141 
	#_SC_SEM_NSEMS_MAX
 
_SC_SEM_NSEMS_MAX


	)

142 
	m_SC_SEM_VALUE_MAX
,

143 
	#_SC_SEM_VALUE_MAX
 
_SC_SEM_VALUE_MAX


	)

144 
	m_SC_SIGQUEUE_MAX
,

145 
	#_SC_SIGQUEUE_MAX
 
_SC_SIGQUEUE_MAX


	)

146 
	m_SC_TIMER_MAX
,

147 
	#_SC_TIMER_MAX
 
_SC_TIMER_MAX


	)

151 
	m_SC_BC_BASE_MAX
,

152 
	#_SC_BC_BASE_MAX
 
_SC_BC_BASE_MAX


	)

153 
	m_SC_BC_DIM_MAX
,

154 
	#_SC_BC_DIM_MAX
 
_SC_BC_DIM_MAX


	)

155 
	m_SC_BC_SCALE_MAX
,

156 
	#_SC_BC_SCALE_MAX
 
_SC_BC_SCALE_MAX


	)

157 
	m_SC_BC_STRING_MAX
,

158 
	#_SC_BC_STRING_MAX
 
_SC_BC_STRING_MAX


	)

159 
	m_SC_COLL_WEIGHTS_MAX
,

160 
	#_SC_COLL_WEIGHTS_MAX
 
_SC_COLL_WEIGHTS_MAX


	)

161 
	m_SC_EQUIV_CLASS_MAX
,

162 
	#_SC_EQUIV_CLASS_MAX
 
_SC_EQUIV_CLASS_MAX


	)

163 
	m_SC_EXPR_NEST_MAX
,

164 
	#_SC_EXPR_NEST_MAX
 
_SC_EXPR_NEST_MAX


	)

165 
	m_SC_LINE_MAX
,

166 
	#_SC_LINE_MAX
 
_SC_LINE_MAX


	)

167 
	m_SC_RE_DUP_MAX
,

168 
	#_SC_RE_DUP_MAX
 
_SC_RE_DUP_MAX


	)

169 
	m_SC_CHARCLASS_NAME_MAX
,

170 
	#_SC_CHARCLASS_NAME_MAX
 
_SC_CHARCLASS_NAME_MAX


	)

172 
	m_SC_2_VERSION
,

173 
	#_SC_2_VERSION
 
_SC_2_VERSION


	)

174 
	m_SC_2_C_BIND
,

175 
	#_SC_2_C_BIND
 
_SC_2_C_BIND


	)

176 
	m_SC_2_C_DEV
,

177 
	#_SC_2_C_DEV
 
_SC_2_C_DEV


	)

178 
	m_SC_2_FORT_DEV
,

179 
	#_SC_2_FORT_DEV
 
_SC_2_FORT_DEV


	)

180 
	m_SC_2_FORT_RUN
,

181 
	#_SC_2_FORT_RUN
 
_SC_2_FORT_RUN


	)

182 
	m_SC_2_SW_DEV
,

183 
	#_SC_2_SW_DEV
 
_SC_2_SW_DEV


	)

184 
	m_SC_2_LOCALEDEF
,

185 
	#_SC_2_LOCALEDEF
 
_SC_2_LOCALEDEF


	)

187 
	m_SC_PII
,

188 
	#_SC_PII
 
_SC_PII


	)

189 
	m_SC_PII_XTI
,

190 
	#_SC_PII_XTI
 
_SC_PII_XTI


	)

191 
	m_SC_PII_SOCKET
,

192 
	#_SC_PII_SOCKET
 
_SC_PII_SOCKET


	)

193 
	m_SC_PII_INTERNET
,

194 
	#_SC_PII_INTERNET
 
_SC_PII_INTERNET


	)

195 
	m_SC_PII_OSI
,

196 
	#_SC_PII_OSI
 
_SC_PII_OSI


	)

197 
	m_SC_POLL
,

198 
	#_SC_POLL
 
_SC_POLL


	)

199 
	m_SC_SELECT
,

200 
	#_SC_SELECT
 
_SC_SELECT


	)

201 
	m_SC_UIO_MAXIOV
,

202 
	#_SC_UIO_MAXIOV
 
_SC_UIO_MAXIOV


	)

203 
	m_SC_IOV_MAX
 = 
_SC_UIO_MAXIOV
,

204 
	#_SC_IOV_MAX
 
_SC_IOV_MAX


	)

205 
	m_SC_PII_INTERNET_STREAM
,

206 
	#_SC_PII_INTERNET_STREAM
 
_SC_PII_INTERNET_STREAM


	)

207 
	m_SC_PII_INTERNET_DGRAM
,

208 
	#_SC_PII_INTERNET_DGRAM
 
_SC_PII_INTERNET_DGRAM


	)

209 
	m_SC_PII_OSI_COTS
,

210 
	#_SC_PII_OSI_COTS
 
_SC_PII_OSI_COTS


	)

211 
	m_SC_PII_OSI_CLTS
,

212 
	#_SC_PII_OSI_CLTS
 
_SC_PII_OSI_CLTS


	)

213 
	m_SC_PII_OSI_M
,

214 
	#_SC_PII_OSI_M
 
_SC_PII_OSI_M


	)

215 
	m_SC_T_IOV_MAX
,

216 
	#_SC_T_IOV_MAX
 
_SC_T_IOV_MAX


	)

219 
	m_SC_THREADS
,

220 
	#_SC_THREADS
 
_SC_THREADS


	)

221 
	m_SC_THREAD_SAFE_FUNCTIONS
,

222 
	#_SC_THREAD_SAFE_FUNCTIONS
 
_SC_THREAD_SAFE_FUNCTIONS


	)

223 
	m_SC_GETGR_R_SIZE_MAX
,

224 
	#_SC_GETGR_R_SIZE_MAX
 
_SC_GETGR_R_SIZE_MAX


	)

225 
	m_SC_GETPW_R_SIZE_MAX
,

226 
	#_SC_GETPW_R_SIZE_MAX
 
_SC_GETPW_R_SIZE_MAX


	)

227 
	m_SC_LOGIN_NAME_MAX
,

228 
	#_SC_LOGIN_NAME_MAX
 
_SC_LOGIN_NAME_MAX


	)

229 
	m_SC_TTY_NAME_MAX
,

230 
	#_SC_TTY_NAME_MAX
 
_SC_TTY_NAME_MAX


	)

231 
	m_SC_THREAD_DESTRUCTOR_ITERATIONS
,

232 
	#_SC_THREAD_DESTRUCTOR_ITERATIONS
 
_SC_THREAD_DESTRUCTOR_ITERATIONS


	)

233 
	m_SC_THREAD_KEYS_MAX
,

234 
	#_SC_THREAD_KEYS_MAX
 
_SC_THREAD_KEYS_MAX


	)

235 
	m_SC_THREAD_STACK_MIN
,

236 
	#_SC_THREAD_STACK_MIN
 
_SC_THREAD_STACK_MIN


	)

237 
	m_SC_THREAD_THREADS_MAX
,

238 
	#_SC_THREAD_THREADS_MAX
 
_SC_THREAD_THREADS_MAX


	)

239 
	m_SC_THREAD_ATTR_STACKADDR
,

240 
	#_SC_THREAD_ATTR_STACKADDR
 
_SC_THREAD_ATTR_STACKADDR


	)

241 
	m_SC_THREAD_ATTR_STACKSIZE
,

242 
	#_SC_THREAD_ATTR_STACKSIZE
 
_SC_THREAD_ATTR_STACKSIZE


	)

243 
	m_SC_THREAD_PRIORITY_SCHEDULING
,

244 
	#_SC_THREAD_PRIORITY_SCHEDULING
 
_SC_THREAD_PRIORITY_SCHEDULING


	)

245 
	m_SC_THREAD_PRIO_INHERIT
,

246 
	#_SC_THREAD_PRIO_INHERIT
 
_SC_THREAD_PRIO_INHERIT


	)

247 
	m_SC_THREAD_PRIO_PROTECT
,

248 
	#_SC_THREAD_PRIO_PROTECT
 
_SC_THREAD_PRIO_PROTECT


	)

249 
	m_SC_THREAD_PROCESS_SHARED
,

250 
	#_SC_THREAD_PROCESS_SHARED
 
_SC_THREAD_PROCESS_SHARED


	)

252 
	m_SC_NPROCESSORS_CONF
,

253 
	#_SC_NPROCESSORS_CONF
 
_SC_NPROCESSORS_CONF


	)

254 
	m_SC_NPROCESSORS_ONLN
,

255 
	#_SC_NPROCESSORS_ONLN
 
_SC_NPROCESSORS_ONLN


	)

256 
	m_SC_PHYS_PAGES
,

257 
	#_SC_PHYS_PAGES
 
_SC_PHYS_PAGES


	)

258 
	m_SC_AVPHYS_PAGES
,

259 
	#_SC_AVPHYS_PAGES
 
_SC_AVPHYS_PAGES


	)

260 
	m_SC_ATEXIT_MAX
,

261 
	#_SC_ATEXIT_MAX
 
_SC_ATEXIT_MAX


	)

262 
	m_SC_PASS_MAX
,

263 
	#_SC_PASS_MAX
 
_SC_PASS_MAX


	)

265 
	m_SC_XOPEN_VERSION
,

266 
	#_SC_XOPEN_VERSION
 
_SC_XOPEN_VERSION


	)

267 
	m_SC_XOPEN_XCU_VERSION
,

268 
	#_SC_XOPEN_XCU_VERSION
 
_SC_XOPEN_XCU_VERSION


	)

269 
	m_SC_XOPEN_UNIX
,

270 
	#_SC_XOPEN_UNIX
 
_SC_XOPEN_UNIX


	)

271 
	m_SC_XOPEN_CRYPT
,

272 
	#_SC_XOPEN_CRYPT
 
_SC_XOPEN_CRYPT


	)

273 
	m_SC_XOPEN_ENH_I18N
,

274 
	#_SC_XOPEN_ENH_I18N
 
_SC_XOPEN_ENH_I18N


	)

275 
	m_SC_XOPEN_SHM
,

276 
	#_SC_XOPEN_SHM
 
_SC_XOPEN_SHM


	)

278 
	m_SC_2_CHAR_TERM
,

279 
	#_SC_2_CHAR_TERM
 
_SC_2_CHAR_TERM


	)

280 
	m_SC_2_C_VERSION
,

281 
	#_SC_2_C_VERSION
 
_SC_2_C_VERSION


	)

282 
	m_SC_2_UPE
,

283 
	#_SC_2_UPE
 
_SC_2_UPE


	)

285 
	m_SC_XOPEN_XPG2
,

286 
	#_SC_XOPEN_XPG2
 
_SC_XOPEN_XPG2


	)

287 
	m_SC_XOPEN_XPG3
,

288 
	#_SC_XOPEN_XPG3
 
_SC_XOPEN_XPG3


	)

289 
	m_SC_XOPEN_XPG4
,

290 
	#_SC_XOPEN_XPG4
 
_SC_XOPEN_XPG4


	)

292 
	m_SC_CHAR_BIT
,

293 
	#_SC_CHAR_BIT
 
_SC_CHAR_BIT


	)

294 
	m_SC_CHAR_MAX
,

295 
	#_SC_CHAR_MAX
 
_SC_CHAR_MAX


	)

296 
	m_SC_CHAR_MIN
,

297 
	#_SC_CHAR_MIN
 
_SC_CHAR_MIN


	)

298 
	m_SC_INT_MAX
,

299 
	#_SC_INT_MAX
 
_SC_INT_MAX


	)

300 
	m_SC_INT_MIN
,

301 
	#_SC_INT_MIN
 
_SC_INT_MIN


	)

302 
	m_SC_LONG_BIT
,

303 
	#_SC_LONG_BIT
 
_SC_LONG_BIT


	)

304 
	m_SC_WORD_BIT
,

305 
	#_SC_WORD_BIT
 
_SC_WORD_BIT


	)

306 
	m_SC_MB_LEN_MAX
,

307 
	#_SC_MB_LEN_MAX
 
_SC_MB_LEN_MAX


	)

308 
	m_SC_NZERO
,

309 
	#_SC_NZERO
 
_SC_NZERO


	)

310 
	m_SC_SSIZE_MAX
,

311 
	#_SC_SSIZE_MAX
 
_SC_SSIZE_MAX


	)

312 
	m_SC_SCHAR_MAX
,

313 
	#_SC_SCHAR_MAX
 
_SC_SCHAR_MAX


	)

314 
	m_SC_SCHAR_MIN
,

315 
	#_SC_SCHAR_MIN
 
_SC_SCHAR_MIN


	)

316 
	m_SC_SHRT_MAX
,

317 
	#_SC_SHRT_MAX
 
_SC_SHRT_MAX


	)

318 
	m_SC_SHRT_MIN
,

319 
	#_SC_SHRT_MIN
 
_SC_SHRT_MIN


	)

320 
	m_SC_UCHAR_MAX
,

321 
	#_SC_UCHAR_MAX
 
_SC_UCHAR_MAX


	)

322 
	m_SC_UINT_MAX
,

323 
	#_SC_UINT_MAX
 
_SC_UINT_MAX


	)

324 
	m_SC_ULONG_MAX
,

325 
	#_SC_ULONG_MAX
 
_SC_ULONG_MAX


	)

326 
	m_SC_USHRT_MAX
,

327 
	#_SC_USHRT_MAX
 
_SC_USHRT_MAX


	)

329 
	m_SC_NL_ARGMAX
,

330 
	#_SC_NL_ARGMAX
 
_SC_NL_ARGMAX


	)

331 
	m_SC_NL_LANGMAX
,

332 
	#_SC_NL_LANGMAX
 
_SC_NL_LANGMAX


	)

333 
	m_SC_NL_MSGMAX
,

334 
	#_SC_NL_MSGMAX
 
_SC_NL_MSGMAX


	)

335 
	m_SC_NL_NMAX
,

336 
	#_SC_NL_NMAX
 
_SC_NL_NMAX


	)

337 
	m_SC_NL_SETMAX
,

338 
	#_SC_NL_SETMAX
 
_SC_NL_SETMAX


	)

339 
	m_SC_NL_TEXTMAX
,

340 
	#_SC_NL_TEXTMAX
 
_SC_NL_TEXTMAX


	)

342 
	m_SC_XBS5_ILP32_OFF32
,

343 
	#_SC_XBS5_ILP32_OFF32
 
_SC_XBS5_ILP32_OFF32


	)

344 
	m_SC_XBS5_ILP32_OFFBIG
,

345 
	#_SC_XBS5_ILP32_OFFBIG
 
_SC_XBS5_ILP32_OFFBIG


	)

346 
	m_SC_XBS5_LP64_OFF64
,

347 
	#_SC_XBS5_LP64_OFF64
 
_SC_XBS5_LP64_OFF64


	)

348 
	m_SC_XBS5_LPBIG_OFFBIG
,

349 
	#_SC_XBS5_LPBIG_OFFBIG
 
_SC_XBS5_LPBIG_OFFBIG


	)

351 
	m_SC_XOPEN_LEGACY
,

352 
	#_SC_XOPEN_LEGACY
 
_SC_XOPEN_LEGACY


	)

353 
	m_SC_XOPEN_REALTIME
,

354 
	#_SC_XOPEN_REALTIME
 
_SC_XOPEN_REALTIME


	)

355 
	m_SC_XOPEN_REALTIME_THREADS
,

356 
	#_SC_XOPEN_REALTIME_THREADS
 
_SC_XOPEN_REALTIME_THREADS


	)

358 
	m_SC_ADVISORY_INFO
,

359 
	#_SC_ADVISORY_INFO
 
_SC_ADVISORY_INFO


	)

360 
	m_SC_BARRIERS
,

361 
	#_SC_BARRIERS
 
_SC_BARRIERS


	)

362 
	m_SC_BASE
,

363 
	#_SC_BASE
 
_SC_BASE


	)

364 
	m_SC_C_LANG_SUPPORT
,

365 
	#_SC_C_LANG_SUPPORT
 
_SC_C_LANG_SUPPORT


	)

366 
	m_SC_C_LANG_SUPPORT_R
,

367 
	#_SC_C_LANG_SUPPORT_R
 
_SC_C_LANG_SUPPORT_R


	)

368 
	m_SC_CLOCK_SELECTION
,

369 
	#_SC_CLOCK_SELECTION
 
_SC_CLOCK_SELECTION


	)

370 
	m_SC_CPUTIME
,

371 
	#_SC_CPUTIME
 
_SC_CPUTIME


	)

372 
	m_SC_THREAD_CPUTIME
,

373 
	#_SC_THREAD_CPUTIME
 
_SC_THREAD_CPUTIME


	)

374 
	m_SC_DEVICE_IO
,

375 
	#_SC_DEVICE_IO
 
_SC_DEVICE_IO


	)

376 
	m_SC_DEVICE_SPECIFIC
,

377 
	#_SC_DEVICE_SPECIFIC
 
_SC_DEVICE_SPECIFIC


	)

378 
	m_SC_DEVICE_SPECIFIC_R
,

379 
	#_SC_DEVICE_SPECIFIC_R
 
_SC_DEVICE_SPECIFIC_R


	)

380 
	m_SC_FD_MGMT
,

381 
	#_SC_FD_MGMT
 
_SC_FD_MGMT


	)

382 
	m_SC_FIFO
,

383 
	#_SC_FIFO
 
_SC_FIFO


	)

384 
	m_SC_PIPE
,

385 
	#_SC_PIPE
 
_SC_PIPE


	)

386 
	m_SC_FILE_ATTRIBUTES
,

387 
	#_SC_FILE_ATTRIBUTES
 
_SC_FILE_ATTRIBUTES


	)

388 
	m_SC_FILE_LOCKING
,

389 
	#_SC_FILE_LOCKING
 
_SC_FILE_LOCKING


	)

390 
	m_SC_FILE_SYSTEM
,

391 
	#_SC_FILE_SYSTEM
 
_SC_FILE_SYSTEM


	)

392 
	m_SC_MONOTONIC_CLOCK
,

393 
	#_SC_MONOTONIC_CLOCK
 
_SC_MONOTONIC_CLOCK


	)

394 
	m_SC_MULTI_PROCESS
,

395 
	#_SC_MULTI_PROCESS
 
_SC_MULTI_PROCESS


	)

396 
	m_SC_SINGLE_PROCESS
,

397 
	#_SC_SINGLE_PROCESS
 
_SC_SINGLE_PROCESS


	)

398 
	m_SC_NETWORKING
,

399 
	#_SC_NETWORKING
 
_SC_NETWORKING


	)

400 
	m_SC_READER_WRITER_LOCKS
,

401 
	#_SC_READER_WRITER_LOCKS
 
_SC_READER_WRITER_LOCKS


	)

402 
	m_SC_SPIN_LOCKS
,

403 
	#_SC_SPIN_LOCKS
 
_SC_SPIN_LOCKS


	)

404 
	m_SC_REGEXP
,

405 
	#_SC_REGEXP
 
_SC_REGEXP


	)

406 
	m_SC_REGEX_VERSION
,

407 
	#_SC_REGEX_VERSION
 
_SC_REGEX_VERSION


	)

408 
	m_SC_SHELL
,

409 
	#_SC_SHELL
 
_SC_SHELL


	)

410 
	m_SC_SIGNALS
,

411 
	#_SC_SIGNALS
 
_SC_SIGNALS


	)

412 
	m_SC_SPAWN
,

413 
	#_SC_SPAWN
 
_SC_SPAWN


	)

414 
	m_SC_SPORADIC_SERVER
,

415 
	#_SC_SPORADIC_SERVER
 
_SC_SPORADIC_SERVER


	)

416 
	m_SC_THREAD_SPORADIC_SERVER
,

417 
	#_SC_THREAD_SPORADIC_SERVER
 
_SC_THREAD_SPORADIC_SERVER


	)

418 
	m_SC_SYSTEM_DATABASE
,

419 
	#_SC_SYSTEM_DATABASE
 
_SC_SYSTEM_DATABASE


	)

420 
	m_SC_SYSTEM_DATABASE_R
,

421 
	#_SC_SYSTEM_DATABASE_R
 
_SC_SYSTEM_DATABASE_R


	)

422 
	m_SC_TIMEOUTS
,

423 
	#_SC_TIMEOUTS
 
_SC_TIMEOUTS


	)

424 
	m_SC_TYPED_MEMORY_OBJECTS
,

425 
	#_SC_TYPED_MEMORY_OBJECTS
 
_SC_TYPED_MEMORY_OBJECTS


	)

426 
	m_SC_USER_GROUPS
,

427 
	#_SC_USER_GROUPS
 
_SC_USER_GROUPS


	)

428 
	m_SC_USER_GROUPS_R
,

429 
	#_SC_USER_GROUPS_R
 
_SC_USER_GROUPS_R


	)

430 
	m_SC_2_PBS
,

431 
	#_SC_2_PBS
 
_SC_2_PBS


	)

432 
	m_SC_2_PBS_ACCOUNTING
,

433 
	#_SC_2_PBS_ACCOUNTING
 
_SC_2_PBS_ACCOUNTING


	)

434 
	m_SC_2_PBS_LOCATE
,

435 
	#_SC_2_PBS_LOCATE
 
_SC_2_PBS_LOCATE


	)

436 
	m_SC_2_PBS_MESSAGE
,

437 
	#_SC_2_PBS_MESSAGE
 
_SC_2_PBS_MESSAGE


	)

438 
	m_SC_2_PBS_TRACK
,

439 
	#_SC_2_PBS_TRACK
 
_SC_2_PBS_TRACK


	)

440 
	m_SC_SYMLOOP_MAX
,

441 
	#_SC_SYMLOOP_MAX
 
_SC_SYMLOOP_MAX


	)

442 
	m_SC_STREAMS
,

443 
	#_SC_STREAMS
 
_SC_STREAMS


	)

444 
	m_SC_2_PBS_CHECKPOINT
,

445 
	#_SC_2_PBS_CHECKPOINT
 
_SC_2_PBS_CHECKPOINT


	)

447 
	m_SC_V6_ILP32_OFF32
,

448 
	#_SC_V6_ILP32_OFF32
 
_SC_V6_ILP32_OFF32


	)

449 
	m_SC_V6_ILP32_OFFBIG
,

450 
	#_SC_V6_ILP32_OFFBIG
 
_SC_V6_ILP32_OFFBIG


	)

451 
	m_SC_V6_LP64_OFF64
,

452 
	#_SC_V6_LP64_OFF64
 
_SC_V6_LP64_OFF64


	)

453 
	m_SC_V6_LPBIG_OFFBIG
,

454 
	#_SC_V6_LPBIG_OFFBIG
 
_SC_V6_LPBIG_OFFBIG


	)

456 
	m_SC_HOST_NAME_MAX
,

457 
	#_SC_HOST_NAME_MAX
 
_SC_HOST_NAME_MAX


	)

458 
	m_SC_TRACE
,

459 
	#_SC_TRACE
 
_SC_TRACE


	)

460 
	m_SC_TRACE_EVENT_FILTER
,

461 
	#_SC_TRACE_EVENT_FILTER
 
_SC_TRACE_EVENT_FILTER


	)

462 
	m_SC_TRACE_INHERIT
,

463 
	#_SC_TRACE_INHERIT
 
_SC_TRACE_INHERIT


	)

464 
	m_SC_TRACE_LOG
,

465 
	#_SC_TRACE_LOG
 
_SC_TRACE_LOG


	)

467 
	m_SC_LEVEL1_ICACHE_SIZE
,

468 
	#_SC_LEVEL1_ICACHE_SIZE
 
_SC_LEVEL1_ICACHE_SIZE


	)

469 
	m_SC_LEVEL1_ICACHE_ASSOC
,

470 
	#_SC_LEVEL1_ICACHE_ASSOC
 
_SC_LEVEL1_ICACHE_ASSOC


	)

471 
	m_SC_LEVEL1_ICACHE_LINESIZE
,

472 
	#_SC_LEVEL1_ICACHE_LINESIZE
 
_SC_LEVEL1_ICACHE_LINESIZE


	)

473 
	m_SC_LEVEL1_DCACHE_SIZE
,

474 
	#_SC_LEVEL1_DCACHE_SIZE
 
_SC_LEVEL1_DCACHE_SIZE


	)

475 
	m_SC_LEVEL1_DCACHE_ASSOC
,

476 
	#_SC_LEVEL1_DCACHE_ASSOC
 
_SC_LEVEL1_DCACHE_ASSOC


	)

477 
	m_SC_LEVEL1_DCACHE_LINESIZE
,

478 
	#_SC_LEVEL1_DCACHE_LINESIZE
 
_SC_LEVEL1_DCACHE_LINESIZE


	)

479 
	m_SC_LEVEL2_CACHE_SIZE
,

480 
	#_SC_LEVEL2_CACHE_SIZE
 
_SC_LEVEL2_CACHE_SIZE


	)

481 
	m_SC_LEVEL2_CACHE_ASSOC
,

482 
	#_SC_LEVEL2_CACHE_ASSOC
 
_SC_LEVEL2_CACHE_ASSOC


	)

483 
	m_SC_LEVEL2_CACHE_LINESIZE
,

484 
	#_SC_LEVEL2_CACHE_LINESIZE
 
_SC_LEVEL2_CACHE_LINESIZE


	)

485 
	m_SC_LEVEL3_CACHE_SIZE
,

486 
	#_SC_LEVEL3_CACHE_SIZE
 
_SC_LEVEL3_CACHE_SIZE


	)

487 
	m_SC_LEVEL3_CACHE_ASSOC
,

488 
	#_SC_LEVEL3_CACHE_ASSOC
 
_SC_LEVEL3_CACHE_ASSOC


	)

489 
	m_SC_LEVEL3_CACHE_LINESIZE
,

490 
	#_SC_LEVEL3_CACHE_LINESIZE
 
_SC_LEVEL3_CACHE_LINESIZE


	)

491 
	m_SC_LEVEL4_CACHE_SIZE
,

492 
	#_SC_LEVEL4_CACHE_SIZE
 
_SC_LEVEL4_CACHE_SIZE


	)

493 
	m_SC_LEVEL4_CACHE_ASSOC
,

494 
	#_SC_LEVEL4_CACHE_ASSOC
 
_SC_LEVEL4_CACHE_ASSOC


	)

495 
	m_SC_LEVEL4_CACHE_LINESIZE
,

496 
	#_SC_LEVEL4_CACHE_LINESIZE
 
_SC_LEVEL4_CACHE_LINESIZE


	)

499 
	m_SC_IPV6
 = 
_SC_LEVEL1_ICACHE_SIZE
 + 50,

500 
	#_SC_IPV6
 
_SC_IPV6


	)

501 
	m_SC_RAW_SOCKETS
,

502 
	#_SC_RAW_SOCKETS
 
_SC_RAW_SOCKETS


	)

504 
	m_SC_V7_ILP32_OFF32
,

505 
	#_SC_V7_ILP32_OFF32
 
_SC_V7_ILP32_OFF32


	)

506 
	m_SC_V7_ILP32_OFFBIG
,

507 
	#_SC_V7_ILP32_OFFBIG
 
_SC_V7_ILP32_OFFBIG


	)

508 
	m_SC_V7_LP64_OFF64
,

509 
	#_SC_V7_LP64_OFF64
 
_SC_V7_LP64_OFF64


	)

510 
	m_SC_V7_LPBIG_OFFBIG
,

511 
	#_SC_V7_LPBIG_OFFBIG
 
_SC_V7_LPBIG_OFFBIG


	)

513 
	m_SC_SS_REPL_MAX
,

514 
	#_SC_SS_REPL_MAX
 
_SC_SS_REPL_MAX


	)

516 
	m_SC_TRACE_EVENT_NAME_MAX
,

517 
	#_SC_TRACE_EVENT_NAME_MAX
 
_SC_TRACE_EVENT_NAME_MAX


	)

518 
	m_SC_TRACE_NAME_MAX
,

519 
	#_SC_TRACE_NAME_MAX
 
_SC_TRACE_NAME_MAX


	)

520 
	m_SC_TRACE_SYS_MAX
,

521 
	#_SC_TRACE_SYS_MAX
 
_SC_TRACE_SYS_MAX


	)

522 
	m_SC_TRACE_USER_EVENT_MAX
,

523 
	#_SC_TRACE_USER_EVENT_MAX
 
_SC_TRACE_USER_EVENT_MAX


	)

525 
	m_SC_XOPEN_STREAMS
,

526 
	#_SC_XOPEN_STREAMS
 
_SC_XOPEN_STREAMS


	)

528 
	m_SC_THREAD_ROBUST_PRIO_INHERIT
,

529 
	#_SC_THREAD_ROBUST_PRIO_INHERIT
 
_SC_THREAD_ROBUST_PRIO_INHERIT


	)

530 
	m_SC_THREAD_ROBUST_PRIO_PROTECT


531 
	#_SC_THREAD_ROBUST_PRIO_PROTECT
 
_SC_THREAD_ROBUST_PRIO_PROTECT


	)

537 
	m_CS_PATH
,

538 
	#_CS_PATH
 
_CS_PATH


	)

540 
	m_CS_V6_WIDTH_RESTRICTED_ENVS
,

541 
	#_CS_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

542 
	#_CS_POSIX_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

544 
	m_CS_GNU_LIBC_VERSION
,

545 
	#_CS_GNU_LIBC_VERSION
 
_CS_GNU_LIBC_VERSION


	)

546 
	m_CS_GNU_LIBPTHREAD_VERSION
,

547 
	#_CS_GNU_LIBPTHREAD_VERSION
 
_CS_GNU_LIBPTHREAD_VERSION


	)

549 
	m_CS_V5_WIDTH_RESTRICTED_ENVS
,

550 
	#_CS_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

551 
	#_CS_POSIX_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

553 
	m_CS_V7_WIDTH_RESTRICTED_ENVS
,

554 
	#_CS_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

555 
	#_CS_POSIX_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

557 
	m_CS_LFS_CFLAGS
 = 1000,

558 
	#_CS_LFS_CFLAGS
 
_CS_LFS_CFLAGS


	)

559 
	m_CS_LFS_LDFLAGS
,

560 
	#_CS_LFS_LDFLAGS
 
_CS_LFS_LDFLAGS


	)

561 
	m_CS_LFS_LIBS
,

562 
	#_CS_LFS_LIBS
 
_CS_LFS_LIBS


	)

563 
	m_CS_LFS_LINTFLAGS
,

564 
	#_CS_LFS_LINTFLAGS
 
_CS_LFS_LINTFLAGS


	)

565 
	m_CS_LFS64_CFLAGS
,

566 
	#_CS_LFS64_CFLAGS
 
_CS_LFS64_CFLAGS


	)

567 
	m_CS_LFS64_LDFLAGS
,

568 
	#_CS_LFS64_LDFLAGS
 
_CS_LFS64_LDFLAGS


	)

569 
	m_CS_LFS64_LIBS
,

570 
	#_CS_LFS64_LIBS
 
_CS_LFS64_LIBS


	)

571 
	m_CS_LFS64_LINTFLAGS
,

572 
	#_CS_LFS64_LINTFLAGS
 
_CS_LFS64_LINTFLAGS


	)

574 
	m_CS_XBS5_ILP32_OFF32_CFLAGS
 = 1100,

575 
	#_CS_XBS5_ILP32_OFF32_CFLAGS
 
_CS_XBS5_ILP32_OFF32_CFLAGS


	)

576 
	m_CS_XBS5_ILP32_OFF32_LDFLAGS
,

577 
	#_CS_XBS5_ILP32_OFF32_LDFLAGS
 
_CS_XBS5_ILP32_OFF32_LDFLAGS


	)

578 
	m_CS_XBS5_ILP32_OFF32_LIBS
,

579 
	#_CS_XBS5_ILP32_OFF32_LIBS
 
_CS_XBS5_ILP32_OFF32_LIBS


	)

580 
	m_CS_XBS5_ILP32_OFF32_LINTFLAGS
,

581 
	#_CS_XBS5_ILP32_OFF32_LINTFLAGS
 
_CS_XBS5_ILP32_OFF32_LINTFLAGS


	)

582 
	m_CS_XBS5_ILP32_OFFBIG_CFLAGS
,

583 
	#_CS_XBS5_ILP32_OFFBIG_CFLAGS
 
_CS_XBS5_ILP32_OFFBIG_CFLAGS


	)

584 
	m_CS_XBS5_ILP32_OFFBIG_LDFLAGS
,

585 
	#_CS_XBS5_ILP32_OFFBIG_LDFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LDFLAGS


	)

586 
	m_CS_XBS5_ILP32_OFFBIG_LIBS
,

587 
	#_CS_XBS5_ILP32_OFFBIG_LIBS
 
_CS_XBS5_ILP32_OFFBIG_LIBS


	)

588 
	m_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
,

589 
	#_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LINTFLAGS


	)

590 
	m_CS_XBS5_LP64_OFF64_CFLAGS
,

591 
	#_CS_XBS5_LP64_OFF64_CFLAGS
 
_CS_XBS5_LP64_OFF64_CFLAGS


	)

592 
	m_CS_XBS5_LP64_OFF64_LDFLAGS
,

593 
	#_CS_XBS5_LP64_OFF64_LDFLAGS
 
_CS_XBS5_LP64_OFF64_LDFLAGS


	)

594 
	m_CS_XBS5_LP64_OFF64_LIBS
,

595 
	#_CS_XBS5_LP64_OFF64_LIBS
 
_CS_XBS5_LP64_OFF64_LIBS


	)

596 
	m_CS_XBS5_LP64_OFF64_LINTFLAGS
,

597 
	#_CS_XBS5_LP64_OFF64_LINTFLAGS
 
_CS_XBS5_LP64_OFF64_LINTFLAGS


	)

598 
	m_CS_XBS5_LPBIG_OFFBIG_CFLAGS
,

599 
	#_CS_XBS5_LPBIG_OFFBIG_CFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_CFLAGS


	)

600 
	m_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
,

601 
	#_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LDFLAGS


	)

602 
	m_CS_XBS5_LPBIG_OFFBIG_LIBS
,

603 
	#_CS_XBS5_LPBIG_OFFBIG_LIBS
 
_CS_XBS5_LPBIG_OFFBIG_LIBS


	)

604 
	m_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
,

605 
	#_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS


	)

607 
	m_CS_POSIX_V6_ILP32_OFF32_CFLAGS
,

608 
	#_CS_POSIX_V6_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_CFLAGS


	)

609 
	m_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
,

610 
	#_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LDFLAGS


	)

611 
	m_CS_POSIX_V6_ILP32_OFF32_LIBS
,

612 
	#_CS_POSIX_V6_ILP32_OFF32_LIBS
 
_CS_POSIX_V6_ILP32_OFF32_LIBS


	)

613 
	m_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
,

614 
	#_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS


	)

615 
	m_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
,

616 
	#_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS


	)

617 
	m_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
,

618 
	#_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS


	)

619 
	m_CS_POSIX_V6_ILP32_OFFBIG_LIBS
,

620 
	#_CS_POSIX_V6_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V6_ILP32_OFFBIG_LIBS


	)

621 
	m_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
,

622 
	#_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS


	)

623 
	m_CS_POSIX_V6_LP64_OFF64_CFLAGS
,

624 
	#_CS_POSIX_V6_LP64_OFF64_CFLAGS
 
_CS_POSIX_V6_LP64_OFF64_CFLAGS


	)

625 
	m_CS_POSIX_V6_LP64_OFF64_LDFLAGS
,

626 
	#_CS_POSIX_V6_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LDFLAGS


	)

627 
	m_CS_POSIX_V6_LP64_OFF64_LIBS
,

628 
	#_CS_POSIX_V6_LP64_OFF64_LIBS
 
_CS_POSIX_V6_LP64_OFF64_LIBS


	)

629 
	m_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
,

630 
	#_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LINTFLAGS


	)

631 
	m_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
,

632 
	#_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS


	)

633 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
,

634 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS


	)

635 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
,

636 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LIBS


	)

637 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
,

638 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS


	)

640 
	m_CS_POSIX_V7_ILP32_OFF32_CFLAGS
,

641 
	#_CS_POSIX_V7_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_CFLAGS


	)

642 
	m_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
,

643 
	#_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LDFLAGS


	)

644 
	m_CS_POSIX_V7_ILP32_OFF32_LIBS
,

645 
	#_CS_POSIX_V7_ILP32_OFF32_LIBS
 
_CS_POSIX_V7_ILP32_OFF32_LIBS


	)

646 
	m_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
,

647 
	#_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS


	)

648 
	m_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
,

649 
	#_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS


	)

650 
	m_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
,

651 
	#_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS


	)

652 
	m_CS_POSIX_V7_ILP32_OFFBIG_LIBS
,

653 
	#_CS_POSIX_V7_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V7_ILP32_OFFBIG_LIBS


	)

654 
	m_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
,

655 
	#_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS


	)

656 
	m_CS_POSIX_V7_LP64_OFF64_CFLAGS
,

657 
	#_CS_POSIX_V7_LP64_OFF64_CFLAGS
 
_CS_POSIX_V7_LP64_OFF64_CFLAGS


	)

658 
	m_CS_POSIX_V7_LP64_OFF64_LDFLAGS
,

659 
	#_CS_POSIX_V7_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LDFLAGS


	)

660 
	m_CS_POSIX_V7_LP64_OFF64_LIBS
,

661 
	#_CS_POSIX_V7_LP64_OFF64_LIBS
 
_CS_POSIX_V7_LP64_OFF64_LIBS


	)

662 
	m_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
,

663 
	#_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LINTFLAGS


	)

664 
	m_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
,

665 
	#_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS


	)

666 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
,

667 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS


	)

668 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
,

669 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LIBS


	)

670 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS


671 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS


	)

	@/usr/include/bits/environments.h

19 #i‚de‡
_UNISTD_H


23 
	~<bôs/w‹dsize.h
>

43 #i‡
__WORDSIZE
 == 64

57 
	#_POSIX_V7_LPBIG_OFFBIG
 -1

	)

58 
	#_POSIX_V6_LPBIG_OFFBIG
 -1

	)

59 
	#_XBS5_LPBIG_OFFBIG
 -1

	)

62 
	#_POSIX_V7_LP64_OFF64
 1

	)

63 
	#_POSIX_V6_LP64_OFF64
 1

	)

64 
	#_XBS5_LP64_OFF64
 1

	)

70 
	#_POSIX_V7_ILP32_OFF32
 1

	)

71 
	#_POSIX_V7_ILP32_OFFBIG
 1

	)

72 
	#_POSIX_V6_ILP32_OFF32
 1

	)

73 
	#_POSIX_V6_ILP32_OFFBIG
 1

	)

74 
	#_XBS5_ILP32_OFF32
 1

	)

75 
	#_XBS5_ILP32_OFFBIG
 1

	)

92 
	#__ILP32_OFF32_CFLAGS
 "-m32"

	)

93 
	#__ILP32_OFFBIG_CFLAGS
 "-m32 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"

	)

94 
	#__ILP32_OFF32_LDFLAGS
 "-m32"

	)

95 
	#__ILP32_OFFBIG_LDFLAGS
 "-m32"

	)

96 
	#__LP64_OFF64_CFLAGS
 "-m64"

	)

97 
	#__LP64_OFF64_LDFLAGS
 "-m64"

	)

	@/usr/include/bits/errno.h

20 #ifde‡
_ERRNO_H


22 #unde‡
EDOM


23 #unde‡
EILSEQ


24 #unde‡
ERANGE


25 
	~<löux/î∫o.h
>

28 
	#ENOTSUP
 
EOPNOTSUPP


	)

31 #i‚de‡
ECANCELED


32 
	#ECANCELED
 125

	)

36 #i‚de‡
EOWNERDEAD


37 
	#EOWNERDEAD
 130

	)

38 
	#ENOTRECOVERABLE
 131

	)

41 #i‚de‡
__ASSEMBLER__


43 *
	$__î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

45 #i‡!
deföed
 
_LIBC
 || deföed 
_LIBC_REENTRANT


47 
	#î∫o
 (*
	`__î∫o_loˇti⁄
 ())

	)

52 #i‡!
deföed
 
_ERRNO_H
 && deföed 
__√ed_Em©h


56 
	#EDOM
 33

	)

57 
	#EILSEQ
 84

	)

58 
	#ERANGE
 34

	)

	@/usr/include/bits/fcntl.h

20 #i‚def 
_FCNTL_H


24 
	~<sys/ty≥s.h
>

25 
	~<bôs/w‹dsize.h
>

26 #ifde‡
__USE_GNU


27 
	~<bôs/uio.h
>

33 
	#O_ACCMODE
 0003

	)

34 
	#O_RDONLY
 00

	)

35 
	#O_WRONLY
 01

	)

36 
	#O_RDWR
 02

	)

37 
	#O_CREAT
 0100

	)

38 
	#O_EXCL
 0200

	)

39 
	#O_NOCTTY
 0400

	)

40 
	#O_TRUNC
 01000

	)

41 
	#O_APPEND
 02000

	)

42 
	#O_NONBLOCK
 04000

	)

43 
	#O_NDELAY
 
O_NONBLOCK


	)

44 
	#O_SYNC
 010000

	)

45 
	#O_FSYNC
 
O_SYNC


	)

46 
	#O_ASYNC
 020000

	)

48 #ifde‡
__USE_GNU


49 
	#O_DIRECT
 040000

	)

50 
	#O_DIRECTORY
 0200000

	)

51 
	#O_NOFOLLOW
 0400000

	)

52 
	#O_NOATIME
 01000000

	)

53 
	#O_CLOEXEC
 02000000

	)

59 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


60 
	#O_DSYNC
 
O_SYNC


	)

61 
	#O_RSYNC
 
O_SYNC


	)

64 #ifde‡
__USE_LARGEFILE64


65 #i‡
__WORDSIZE
 == 64

66 
	#O_LARGEFILE
 0

	)

68 
	#O_LARGEFILE
 0100000

	)

73 
	#F_DUPFD
 0

	)

74 
	#F_GETFD
 1

	)

75 
	#F_SETFD
 2

	)

76 
	#F_GETFL
 3

	)

77 
	#F_SETFL
 4

	)

78 #i‡
__WORDSIZE
 == 64

79 
	#F_GETLK
 5

	)

80 
	#F_SETLK
 6

	)

81 
	#F_SETLKW
 7

	)

83 
	#F_GETLK64
 5

	)

84 
	#F_SETLK64
 6

	)

85 
	#F_SETLKW64
 7

	)

87 #i‚de‡
__USE_FILE_OFFSET64


88 
	#F_GETLK
 5

	)

89 
	#F_SETLK
 6

	)

90 
	#F_SETLKW
 7

	)

92 
	#F_GETLK
 
F_GETLK64


	)

93 
	#F_SETLK
 
F_SETLK64


	)

94 
	#F_SETLKW
 
F_SETLKW64


	)

96 
	#F_GETLK64
 12

	)

97 
	#F_SETLK64
 13

	)

98 
	#F_SETLKW64
 14

	)

101 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


102 
	#F_SETOWN
 8

	)

103 
	#F_GETOWN
 9

	)

106 #ifde‡
__USE_GNU


107 
	#F_SETSIG
 10

	)

108 
	#F_GETSIG
 11

	)

109 
	#F_SETOWN_EX
 15

	)

110 
	#F_GETOWN_EX
 16

	)

113 #ifde‡
__USE_GNU


114 
	#F_SETLEASE
 1024

	)

115 
	#F_GETLEASE
 1025

	)

116 
	#F_NOTIFY
 1026

	)

117 
	#F_DUPFD_CLOEXEC
 1030

	)

122 
	#FD_CLOEXEC
 1

	)

125 
	#F_RDLCK
 0

	)

126 
	#F_WRLCK
 1

	)

127 
	#F_UNLCK
 2

	)

130 
	#F_EXLCK
 4

	)

131 
	#F_SHLCK
 8

	)

133 #ifde‡
__USE_BSD


135 
	#LOCK_SH
 1

	)

136 
	#LOCK_EX
 2

	)

137 
	#LOCK_NB
 4

	)

139 
	#LOCK_UN
 8

	)

142 #ifde‡
__USE_GNU


143 
	#LOCK_MAND
 32

	)

144 
	#LOCK_READ
 64

	)

145 
	#LOCK_WRITE
 128

	)

146 
	#LOCK_RW
 192

	)

149 #ifde‡
__USE_GNU


151 
	#DN_ACCESS
 0x00000001

	)

152 
	#DN_MODIFY
 0x00000002

	)

153 
	#DN_CREATE
 0x00000004

	)

154 
	#DN_DELETE
 0x00000008

	)

155 
	#DN_RENAME
 0x00000010

	)

156 
	#DN_ATTRIB
 0x00000020

	)

157 
	#DN_MULTISHOT
 0x80000000

	)

160 
	sÊock


162 
	ml_ty≥
;

163 
	ml_whí˚
;

164 #i‚de‡
__USE_FILE_OFFSET64


165 
__off_t
 
	ml_°¨t
;

166 
__off_t
 
	ml_Àn
;

168 
__off64_t
 
	ml_°¨t
;

169 
__off64_t
 
	ml_Àn
;

171 
__pid_t
 
	ml_pid
;

174 #ifde‡
__USE_LARGEFILE64


175 
	sÊock64


177 
	ml_ty≥
;

178 
	ml_whí˚
;

179 
__off64_t
 
	ml_°¨t
;

180 
__off64_t
 
	ml_Àn
;

181 
__pid_t
 
	ml_pid
;

185 #ifde‡
__USE_GNU


187 
	e__pid_ty≥


189 
	mF_OWNER_TID
 = 0,

190 
	mF_OWNER_PID
,

191 
	mF_OWNER_GID


195 
	sf_ow√r_ex


197 
__pid_ty≥
 
	mty≥
;

198 
__pid_t
 
	mpid
;

204 #ifdef 
__USE_BSD


205 
	#FAPPEND
 
O_APPEND


	)

206 
	#FFSYNC
 
O_FSYNC


	)

207 
	#FASYNC
 
O_ASYNC


	)

208 
	#FNONBLOCK
 
O_NONBLOCK


	)

209 
	#FNDELAY
 
O_NDELAY


	)

213 #ifde‡
__USE_XOPEN2K


214 
	#POSIX_FADV_NORMAL
 0

	)

215 
	#POSIX_FADV_RANDOM
 1

	)

216 
	#POSIX_FADV_SEQUENTIAL
 2

	)

217 
	#POSIX_FADV_WILLNEED
 3

	)

218 
	#POSIX_FADV_DONTNEED
 4

	)

219 
	#POSIX_FADV_NOREUSE
 5

	)

223 #ifde‡
__USE_GNU


225 
	#SYNC_FILE_RANGE_WAIT_BEFORE
 1

	)

228 
	#SYNC_FILE_RANGE_WRITE
 2

	)

231 
	#SYNC_FILE_RANGE_WAIT_AFTER
 4

	)

236 
	#SPLICE_F_MOVE
 1

	)

237 
	#SPLICE_F_NONBLOCK
 2

	)

240 
	#SPLICE_F_MORE
 4

	)

241 
	#SPLICE_F_GIFT
 8

	)

245 #ifde‡
__USE_ATFILE


246 
	#AT_FDCWD
 -100

	)

249 
	#AT_SYMLINK_NOFOLLOW
 0x100

	)

250 
	#AT_REMOVEDIR
 0x200

	)

252 
	#AT_SYMLINK_FOLLOW
 0x400

	)

253 
	#AT_EACCESS
 0x200

	)

257 
	g__BEGIN_DECLS


259 #ifde‡
__USE_GNU


262 
ssize_t
 
	$ªadahód
 (
__fd
, 
__off64_t
 
__off£t
, 
size_t
 
__cou¡
)

263 
__THROW
;

267 
	`sync_fûe_ønge
 (
__fd
, 
__off64_t
 
__‰om
, __off64_à
__to
,

268 
__Êags
);

272 
ssize_t
 
	`vm•li˚
 (
__fdout
, c⁄° 
iovec
 *
__iov
,

273 
size_t
 
__cou¡
, 
__Êags
);

276 
ssize_t
 
	`•li˚
 (
__fdö
, 
__off64_t
 *
__offö
, 
__fdout
,

277 
__off64_t
 *
__offout
, 
size_t
 
__Àn
,

278 
__Êags
);

281 
ssize_t
 
	`ãe
 (
__fdö
, 
__fdout
, 
size_t
 
__Àn
,

282 
__Êags
);

285 #i‚de‡
__USE_FILE_OFFSET64


286 
	`ÁŒoˇã
 (
__fd
, 
__mode
, 
__off_t
 
__off£t
, __off_à
__Àn
);

288 #ifde‡
__REDIRECT


289 
	`__REDIRECT
 (
ÁŒoˇã
, (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

290 
__off64_t
 
__Àn
),

291 
ÁŒoˇã64
);

293 
	#ÁŒoˇã
 
ÁŒoˇã64


	)

296 #ifde‡
__USE_LARGEFILE64


297 
	`ÁŒoˇã64
 (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

298 
__off64_t
 
__Àn
);

302 
__END_DECLS


	@/usr/include/bits/fcntl2.h

20 #i‚def 
_FCNTL_H


26 #i‚de‡
__USE_FILE_OFFSET64


27 
	$__›í_2
 (
__c⁄°
 *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

28 
	`__REDIRECT
 (
__›í_Æüs
, (
__c⁄°
 *
__∑th
, 
__oÊag
, ...),

29 
›í
Ë
	`__n⁄nuŒ
 ((1));

31 
	`__REDIRECT
 (
__›í_2
, (
__c⁄°
 *
__∑th
, 
__oÊag
),

32 
__›í64_2
Ë
	`__n⁄nuŒ
 ((1));

33 
	`__REDIRECT
 (
__›í_Æüs
, (
__c⁄°
 *
__∑th
, 
__oÊag
, ...),

34 
›í64
Ë
	`__n⁄nuŒ
 ((1));

36 
	`__îr‹de˛
 (
__›í_too_m™y_¨gs
,

38 
	`__îr‹de˛
 (
__›í_missög_mode
,

41 
__exã∫_Æways_ölöe
 

42 
	$›í
 (
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

44 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

45 
	`__›í_too_m™y_¨gs
 ();

47 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

49 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

51 
	`__›í_missög_mode
 ();

52  
	`__›í_2
 (
__∑th
, 
__oÊag
);

54  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

57 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

58  
	`__›í_2
 (
__∑th
, 
__oÊag
);

60  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

61 
	}
}

64 #ifde‡
__USE_LARGEFILE64


65 
	$__›í64_2
 (
__c⁄°
 *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

66 
	`__REDIRECT
 (
__›í64_Æüs
, (
__c⁄°
 *
__∑th
, 
__oÊag
,

67 ...), 
›í64
Ë
	`__n⁄nuŒ
 ((1));

68 
	`__îr‹de˛
 (
__›í64_too_m™y_¨gs
,

70 
	`__îr‹de˛
 (
__›í64_missög_mode
,

73 
__exã∫_Æways_ölöe
 

74 
	$›í64
 (
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

76 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

77 
	`__›í64_too_m™y_¨gs
 ();

79 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

81 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

83 
	`__›í64_missög_mode
 ();

84  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

86  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

89 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

90  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

92  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

93 
	}
}

97 #ifde‡
__USE_ATFILE


98 #i‚de‡
__USE_FILE_OFFSET64


99 
	$__›í©_2
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
)

100 
	`__n⁄nuŒ
 ((2));

101 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, 
__c⁄°
 *
__∑th
,

102 
__oÊag
, ...), 
›í©
)

103 
	`__n⁄nuŒ
 ((2));

105 
	`__REDIRECT
 (
__›í©_2
, (
__fd
, 
__c⁄°
 *
__∑th
,

106 
__oÊag
), 
__›í©64_2
)

107 
	`__n⁄nuŒ
 ((2));

108 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, 
__c⁄°
 *
__∑th
,

109 
__oÊag
, ...), 
›í©64
)

110 
	`__n⁄nuŒ
 ((2));

112 
	`__îr‹de˛
 (
__›í©_too_m™y_¨gs
,

114 
	`__îr‹de˛
 (
__›í©_missög_mode
,

117 
__exã∫_Æways_ölöe
 

118 
	$›í©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

120 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

121 
	`__›í©_too_m™y_¨gs
 ();

123 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

125 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

127 
	`__›í©_missög_mode
 ();

128  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

130  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

133 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

134  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

136  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

137 
	}
}

140 #ifde‡
__USE_LARGEFILE64


141 
	$__›í©64_2
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
)

142 
	`__n⁄nuŒ
 ((2));

143 
	`__REDIRECT
 (
__›í©64_Æüs
, (
__fd
, 
__c⁄°
 *
__∑th
,

144 
__oÊag
, ...), 
›í©64
)

145 
	`__n⁄nuŒ
 ((2));

146 
	`__îr‹de˛
 (
__›í©64_too_m™y_¨gs
,

148 
	`__îr‹de˛
 (
__›í©64_missög_mode
,

151 
__exã∫_Æways_ölöe
 

152 
	$›í©64
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

154 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

155 
	`__›í©64_too_m™y_¨gs
 ();

157 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

159 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

161 
	`__›í©64_missög_mode
 ();

162  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

164  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

167 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

168  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

170  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

171 
	}
}

	@/usr/include/bits/locale.h

20 #i‡!
deföed
 
_LOCALE_H
 && !deföed 
_LANGINFO_H


24 #i‚de‡
_BITS_LOCALE_H


25 
	#_BITS_LOCALE_H
 1

	)

29 
	m__LC_CTYPE
 = 0,

30 
	m__LC_NUMERIC
 = 1,

31 
	m__LC_TIME
 = 2,

32 
	m__LC_COLLATE
 = 3,

33 
	m__LC_MONETARY
 = 4,

34 
	m__LC_MESSAGES
 = 5,

35 
	m__LC_ALL
 = 6,

36 
	m__LC_PAPER
 = 7,

37 
	m__LC_NAME
 = 8,

38 
	m__LC_ADDRESS
 = 9,

39 
	m__LC_TELEPHONE
 = 10,

40 
	m__LC_MEASUREMENT
 = 11,

41 
	m__LC_IDENTIFICATION
 = 12

	@/usr/include/bits/posix_opt.h

20 #i‚def 
_BITS_POSIX_OPT_H


21 
	#_BITS_POSIX_OPT_H
 1

	)

24 
	#_POSIX_JOB_CONTROL
 1

	)

27 
	#_POSIX_SAVED_IDS
 1

	)

30 
	#_POSIX_PRIORITY_SCHEDULING
 200809L

	)

33 
	#_POSIX_SYNCHRONIZED_IO
 200809L

	)

36 
	#_POSIX_FSYNC
 200809L

	)

39 
	#_POSIX_MAPPED_FILES
 200809L

	)

42 
	#_POSIX_MEMLOCK
 200809L

	)

45 
	#_POSIX_MEMLOCK_RANGE
 200809L

	)

48 
	#_POSIX_MEMORY_PROTECTION
 200809L

	)

51 
	#_POSIX_CHOWN_RESTRICTED
 0

	)

55 
	#_POSIX_VDISABLE
 '\0'

	)

58 
	#_POSIX_NO_TRUNC
 1

	)

61 
	#_XOPEN_REALTIME
 1

	)

64 
	#_XOPEN_REALTIME_THREADS
 1

	)

67 
	#_XOPEN_SHM
 1

	)

70 
	#_POSIX_THREADS
 200809L

	)

73 
	#_POSIX_REENTRANT_FUNCTIONS
 1

	)

74 
	#_POSIX_THREAD_SAFE_FUNCTIONS
 200809L

	)

77 
	#_POSIX_THREAD_PRIORITY_SCHEDULING
 200809L

	)

80 
	#_POSIX_THREAD_ATTR_STACKSIZE
 200809L

	)

83 
	#_POSIX_THREAD_ATTR_STACKADDR
 200809L

	)

86 
	#_POSIX_THREAD_PRIO_INHERIT
 200809L

	)

90 
	#_POSIX_THREAD_PRIO_PROTECT
 200809L

	)

92 #ifde‡
__USE_XOPEN2K8


94 
	#_POSIX_THREAD_ROBUST_PRIO_INHERIT
 200809L

	)

97 
	#_POSIX_THREAD_ROBUST_PRIO_PROTECT
 -1

	)

101 
	#_POSIX_SEMAPHORES
 200809L

	)

104 
	#_POSIX_REALTIME_SIGNALS
 200809L

	)

107 
	#_POSIX_ASYNCHRONOUS_IO
 200809L

	)

108 
	#_POSIX_ASYNC_IO
 1

	)

110 
	#_LFS_ASYNCHRONOUS_IO
 1

	)

112 
	#_POSIX_PRIORITIZED_IO
 200809L

	)

115 
	#_LFS64_ASYNCHRONOUS_IO
 1

	)

118 
	#_LFS_LARGEFILE
 1

	)

119 
	#_LFS64_LARGEFILE
 1

	)

120 
	#_LFS64_STDIO
 1

	)

123 
	#_POSIX_SHARED_MEMORY_OBJECTS
 200809L

	)

126 
	#_POSIX_CPUTIME
 0

	)

129 
	#_POSIX_THREAD_CPUTIME
 0

	)

132 
	#_POSIX_REGEXP
 1

	)

135 
	#_POSIX_READER_WRITER_LOCKS
 200809L

	)

138 
	#_POSIX_SHELL
 1

	)

141 
	#_POSIX_TIMEOUTS
 200809L

	)

144 
	#_POSIX_SPIN_LOCKS
 200809L

	)

147 
	#_POSIX_SPAWN
 200809L

	)

150 
	#_POSIX_TIMERS
 200809L

	)

153 
	#_POSIX_BARRIERS
 200809L

	)

156 
	#_POSIX_MESSAGE_PASSING
 200809L

	)

159 
	#_POSIX_THREAD_PROCESS_SHARED
 200809L

	)

162 
	#_POSIX_MONOTONIC_CLOCK
 0

	)

165 
	#_POSIX_CLOCK_SELECTION
 200809L

	)

168 
	#_POSIX_ADVISORY_INFO
 200809L

	)

171 
	#_POSIX_IPV6
 200809L

	)

174 
	#_POSIX_RAW_SOCKETS
 200809L

	)

177 
	#_POSIX2_CHAR_TERM
 200809L

	)

180 
	#_POSIX_SPORADIC_SERVER
 -1

	)

181 
	#_POSIX_THREAD_SPORADIC_SERVER
 -1

	)

184 
	#_POSIX_TRACE
 -1

	)

185 
	#_POSIX_TRACE_EVENT_FILTER
 -1

	)

186 
	#_POSIX_TRACE_INHERIT
 -1

	)

187 
	#_POSIX_TRACE_LOG
 -1

	)

190 
	#_POSIX_TYPED_MEMORY_OBJECTS
 -1

	)

	@/usr/include/bits/pthreadtypes.h

20 #i‚de‡
_BITS_PTHREADTYPES_H


21 
	#_BITS_PTHREADTYPES_H
 1

	)

23 
	~<bôs/w‹dsize.h
>

25 #i‡
__WORDSIZE
 == 64

26 
	#__SIZEOF_PTHREAD_ATTR_T
 56

	)

27 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

28 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

29 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

30 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

31 
	#__SIZEOF_PTHREAD_RWLOCK_T
 56

	)

32 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

33 
	#__SIZEOF_PTHREAD_BARRIER_T
 32

	)

34 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

36 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

37 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

38 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

39 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

40 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

41 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

42 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

43 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

44 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

50 
	t±hªad_t
;

55 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

56 
	m__Æign
;

57 } 
	t±hªad_©å_t
;

60 #i‡
__WORDSIZE
 == 64

61 
	s__±hªad_öã∫Æ_li°


63 
__±hªad_öã∫Æ_li°
 *
	m__¥ev
;

64 
__±hªad_öã∫Æ_li°
 *
	m__√xt
;

65 } 
	t__±hªad_li°_t
;

67 
	s__±hªad_öã∫Æ_¶i°


69 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

70 } 
	t__±hªad_¶i°_t
;

78 
	s__±hªad_muãx_s


80 
	m__lock
;

81 
	m__cou¡
;

82 
	m__ow√r
;

83 #i‡
__WORDSIZE
 == 64

84 
	m__nu£rs
;

88 
	m__köd
;

89 #i‡
__WORDSIZE
 == 64

90 
	m__•ös
;

91 
__±hªad_li°_t
 
	m__li°
;

92 
	#__PTHREAD_MUTEX_HAVE_PREV
 1

	)

94 
	m__nu£rs
;

95 
__exãnsi⁄__
 union

97 
	m__•ös
;

98 
__±hªad_¶i°_t
 
	m__li°
;

101 } 
	m__d©a
;

102 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

103 
	m__Æign
;

104 } 
	t±hªad_muãx_t
;

108 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

109 
	m__Æign
;

110 } 
	t±hªad_muãx©å_t
;

119 
	m__lock
;

120 
	m__fuãx
;

121 
__exãnsi⁄__
 
	m__tŸÆ_£q
;

122 
__exãnsi⁄__
 
	m__wakeup_£q
;

123 
__exãnsi⁄__
 
	m__wokí_£q
;

124 *
	m__muãx
;

125 
	m__nwaôîs
;

126 
	m__brﬂdˇ°_£q
;

127 } 
	m__d©a
;

128 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

129 
__exãnsi⁄__
 
	m__Æign
;

130 } 
	t±hªad_c⁄d_t
;

134 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

135 
	m__Æign
;

136 } 
	t±hªad_c⁄d©å_t
;

140 
	t±hªad_key_t
;

144 
	t±hªad_⁄˚_t
;

147 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


152 #i‡
__WORDSIZE
 == 64

155 
	m__lock
;

156 
	m__ƒ_ªadîs
;

157 
	m__ªadîs_wakeup
;

158 
	m__wrôî_wakeup
;

159 
	m__ƒ_ªadîs_queued
;

160 
	m__ƒ_wrôîs_queued
;

161 
	m__wrôî
;

162 
	m__sh¨ed
;

163 
	m__∑d1
;

164 
	m__∑d2
;

167 
	m__Êags
;

168 } 
	m__d©a
;

172 
	m__lock
;

173 
	m__ƒ_ªadîs
;

174 
	m__ªadîs_wakeup
;

175 
	m__wrôî_wakeup
;

176 
	m__ƒ_ªadîs_queued
;

177 
	m__ƒ_wrôîs_queued
;

180 
	m__Êags
;

181 
	m__sh¨ed
;

182 
	m__∑d1
;

183 
	m__∑d2
;

184 
	m__wrôî
;

185 } 
	m__d©a
;

187 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

188 
	m__Æign
;

189 } 
	t±hªad_rwlock_t
;

193 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

194 
	m__Æign
;

195 } 
	t±hªad_rwlock©å_t
;

199 #ifde‡
__USE_XOPEN2K


201 vﬁ©ûê
	t±hªad_•ölock_t
;

208 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

209 
	m__Æign
;

210 } 
	t±hªad_b¨rõr_t
;

214 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

215 
	m__Æign
;

216 } 
	t±hªad_b¨rõøâr_t
;

220 #i‡
__WORDSIZE
 == 32

222 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/stat.h

19 #i‚de‡
_SYS_STAT_H


24 
	#_STAT_VER_KERNEL
 0

	)

26 #i‡
__WORDSIZE
 == 32

27 
	#_STAT_VER_SVR4
 2

	)

28 
	#_STAT_VER_LINUX
 3

	)

31 
	#_MKNOD_VER_LINUX
 1

	)

32 
	#_MKNOD_VER_SVR4
 2

	)

33 
	#_MKNOD_VER
 
_MKNOD_VER_LINUX


	)

35 
	#_STAT_VER_LINUX
 1

	)

38 
	#_MKNOD_VER_LINUX
 0

	)

41 
	#_STAT_VER
 
_STAT_VER_LINUX


	)

43 
	s°©


45 
__dev_t
 
	m°_dev
;

46 #i‡
__WORDSIZE
 == 32

47 
	m__∑d1
;

49 #i‡
__WORDSIZE
 =64 || !
deföed
 
__USE_FILE_OFFSET64


50 
__öo_t
 
	m°_öo
;

52 
__öo_t
 
	m__°_öo
;

54 #i‡
__WORDSIZE
 == 32

55 
__mode_t
 
	m°_mode
;

56 
__∆ök_t
 
	m°_∆ök
;

58 
__∆ök_t
 
	m°_∆ök
;

59 
__mode_t
 
	m°_mode
;

61 
__uid_t
 
	m°_uid
;

62 
__gid_t
 
	m°_gid
;

63 #i‡
__WORDSIZE
 == 64

64 
	m__∑d0
;

66 
__dev_t
 
	m°_rdev
;

67 #i‡
__WORDSIZE
 == 32

68 
	m__∑d2
;

70 #i‡
__WORDSIZE
 =64 || !
deföed
 
__USE_FILE_OFFSET64


71 
__off_t
 
	m°_size
;

73 
__off64_t
 
	m°_size
;

75 
__blksize_t
 
	m°_blksize
;

76 #i‡
__WORDSIZE
 =64 || !
deföed
 
__USE_FILE_OFFSET64


77 
__blk˙t_t
 
	m°_blocks
;

79 
__blk˙t64_t
 
	m°_blocks
;

81 #ifde‡
__USE_MISC


88 
time•ec
 
	m°_©im
;

89 
time•ec
 
	m°_mtim
;

90 
time•ec
 
	m°_˘im
;

91 
	#°_©ime
 
°_©im
.
tv_£c


	)

92 
	#°_mtime
 
°_mtim
.
tv_£c


	)

93 
	#°_˘ime
 
°_˘im
.
tv_£c


	)

95 
__time_t
 
	m°_©ime
;

96 
	m°_©imí£c
;

97 
__time_t
 
	m°_mtime
;

98 
	m°_mtimí£c
;

99 
__time_t
 
	m°_˘ime
;

100 
	m°_˘imí£c
;

102 #i‡
__WORDSIZE
 == 64

103 
	m__unu£d
[3];

105 #i‚de‡
__USE_FILE_OFFSET64


106 
	m__unu£d4
;

107 
	m__unu£d5
;

109 
__öo64_t
 
	m°_öo
;

114 #ifde‡
__USE_LARGEFILE64


116 
	s°©64


118 
__dev_t
 
	m°_dev
;

119 #i‡
__WORDSIZE
 == 64

120 
__öo64_t
 
	m°_öo
;

121 
__∆ök_t
 
	m°_∆ök
;

122 
__mode_t
 
	m°_mode
;

124 
	m__∑d1
;

125 
__öo_t
 
	m__°_öo
;

126 
__mode_t
 
	m°_mode
;

127 
__∆ök_t
 
	m°_∆ök
;

129 
__uid_t
 
	m°_uid
;

130 
__gid_t
 
	m°_gid
;

131 #i‡
__WORDSIZE
 == 64

132 
	m__∑d0
;

133 
__dev_t
 
	m°_rdev
;

134 
__off_t
 
	m°_size
;

136 
__dev_t
 
	m°_rdev
;

137 
	m__∑d2
;

138 
__off64_t
 
	m°_size
;

140 
__blksize_t
 
	m°_blksize
;

141 
__blk˙t64_t
 
	m°_blocks
;

142 #ifde‡
__USE_MISC


149 
time•ec
 
	m°_©im
;

150 
time•ec
 
	m°_mtim
;

151 
time•ec
 
	m°_˘im
;

152 
	#°_©ime
 
°_©im
.
tv_£c


	)

153 
	#°_mtime
 
°_mtim
.
tv_£c


	)

154 
	#°_˘ime
 
°_˘im
.
tv_£c


	)

156 
__time_t
 
	m°_©ime
;

157 
	m°_©imí£c
;

158 
__time_t
 
	m°_mtime
;

159 
	m°_mtimí£c
;

160 
__time_t
 
	m°_˘ime
;

161 
	m°_˘imí£c
;

163 #i‡
__WORDSIZE
 == 64

164 
	m__unu£d
[3];

166 
__öo64_t
 
	m°_öo
;

172 
	#_STATBUF_ST_BLKSIZE


	)

173 
	#_STATBUF_ST_RDEV


	)

175 
	#_STATBUF_ST_NSEC


	)

179 
	#__S_IFMT
 0170000

	)

182 
	#__S_IFDIR
 0040000

	)

183 
	#__S_IFCHR
 0020000

	)

184 
	#__S_IFBLK
 0060000

	)

185 
	#__S_IFREG
 0100000

	)

186 
	#__S_IFIFO
 0010000

	)

187 
	#__S_IFLNK
 0120000

	)

188 
	#__S_IFSOCK
 0140000

	)

192 
	#__S_TYPEISMQ
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

193 
	#__S_TYPEISSEM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

194 
	#__S_TYPEISSHM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

198 
	#__S_ISUID
 04000

	)

199 
	#__S_ISGID
 02000

	)

200 
	#__S_ISVTX
 01000

	)

201 
	#__S_IREAD
 0400

	)

202 
	#__S_IWRITE
 0200

	)

203 
	#__S_IEXEC
 0100

	)

205 #ifde‡
__USE_ATFILE


206 
	#UTIME_NOW
 ((1»<< 30Ë- 1l)

	)

207 
	#UTIME_OMIT
 ((1»<< 30Ë- 2l)

	)

	@/usr/include/bits/stdio-ldbl.h

20 #i‚de‡
_STDIO_H


24 
__BEGIN_NAMESPACE_STD


25 
	$__LDBL_REDIR_DECL
 (
Ârötf
)

26 
	$__LDBL_REDIR_DECL
 (
¥ötf
)

27 
	$__LDBL_REDIR_DECL
 (
•rötf
)

28 
	$__LDBL_REDIR_DECL
 (
vÂrötf
)

29 
	$__LDBL_REDIR_DECL
 (
v¥ötf
)

30 
	$__LDBL_REDIR_DECL
 (
v•rötf
)

31 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

32 && !
deföed
 
__REDIRECT
 \

33 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

34 
	$__LDBL_REDIR1_DECL
 (
fsˇnf
, 
__∆dbl___isoc99_fsˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
sˇnf
, 
__∆dbl___isoc99_sˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
ssˇnf
, 
__∆dbl___isoc99_ssˇnf
)

38 
	$__LDBL_REDIR_DECL
 (
fsˇnf
)

39 
	$__LDBL_REDIR_DECL
 (
sˇnf
)

40 
	$__LDBL_REDIR_DECL
 (
ssˇnf
)

42 
__END_NAMESPACE_STD


44 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


45 
__BEGIN_NAMESPACE_C99


46 
	$__LDBL_REDIR_DECL
 (
¢¥ötf
)

47 
	$__LDBL_REDIR_DECL
 (
v¢¥ötf
)

48 
__END_NAMESPACE_C99


51 #ifdef 
__USE_ISOC99


52 
__BEGIN_NAMESPACE_C99


53 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

54 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

55 
	$__LDBL_REDIR1_DECL
 (
vfsˇnf
, 
__∆dbl___isoc99_vfsˇnf
)

56 
	$__LDBL_REDIR1_DECL
 (
vsˇnf
, 
__∆dbl___isoc99_vsˇnf
)

57 
	$__LDBL_REDIR1_DECL
 (
vssˇnf
, 
__∆dbl___isoc99_vssˇnf
)

59 
	$__LDBL_REDIR_DECL
 (
vfsˇnf
)

60 
	$__LDBL_REDIR_DECL
 (
vssˇnf
)

61 
	$__LDBL_REDIR_DECL
 (
vsˇnf
)

63 
__END_NAMESPACE_C99


66 #ifde‡
__USE_GNU


67 
	$__LDBL_REDIR_DECL
 (
vd¥ötf
)

68 
	$__LDBL_REDIR_DECL
 (
d¥ötf
)

69 
	$__LDBL_REDIR_DECL
 (
va•rötf
)

70 
	$__LDBL_REDIR_DECL
 (
__a•rötf
)

71 
	$__LDBL_REDIR_DECL
 (
a•rötf
)

72 
	$__LDBL_REDIR_DECL
 (
ob°ack_¥ötf
)

73 
	$__LDBL_REDIR_DECL
 (
ob°ack_v¥ötf
)

76 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


77 
	$__LDBL_REDIR_DECL
 (
__•rötf_chk
)

78 
	$__LDBL_REDIR_DECL
 (
__v•rötf_chk
)

79 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


80 
	$__LDBL_REDIR_DECL
 (
__¢¥ötf_chk
)

81 
	$__LDBL_REDIR_DECL
 (
__v¢¥ötf_chk
)

83 #i‡
__USE_FORTIFY_LEVEL
 > 1

84 
	$__LDBL_REDIR_DECL
 (
__Ârötf_chk
)

85 
	$__LDBL_REDIR_DECL
 (
__¥ötf_chk
)

86 
	$__LDBL_REDIR_DECL
 (
__vÂrötf_chk
)

87 
	$__LDBL_REDIR_DECL
 (
__v¥ötf_chk
)

88 #ifde‡
__USE_GNU


89 
	$__LDBL_REDIR_DECL
 (
__a•rötf_chk
)

90 
	$__LDBL_REDIR_DECL
 (
__va•rötf_chk
)

91 
	$__LDBL_REDIR_DECL
 (
__d¥ötf_chk
)

92 
	$__LDBL_REDIR_DECL
 (
__vd¥ötf_chk
)

93 
	$__LDBL_REDIR_DECL
 (
__ob°ack_¥ötf_chk
)

94 
	$__LDBL_REDIR_DECL
 (
__ob°ack_v¥ötf_chk
)

	@/usr/include/bits/stdio.h

20 #i‚de‡
_STDIO_H


24 #i‚de‡
__exã∫_ölöe


25 
	#__STDIO_INLINE
 
ölöe


	)

27 
	#__STDIO_INLINE
 
__exã∫_ölöe


	)

31 #ifde‡
__USE_EXTERN_INLINES


34 #i‡!(
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe
)

36 
__STDIO_INLINE
 

37 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

39  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

40 
	}
}

44 
__STDIO_INLINE
 

45 
	$gëch¨
 ()

47  
	`_IO_gëc
 (
°dö
);

48 
	}
}

51 #ifde‡
__USE_MISC


53 
__STDIO_INLINE
 

54 
	$fgëc_u∆ocked
 (
FILE
 *
__Â
)

56  
	`_IO_gëc_u∆ocked
 (
__Â
);

57 
	}
}

61 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


63 
__STDIO_INLINE
 

64 
	$gëc_u∆ocked
 (
FILE
 *
__Â
)

66  
	`_IO_gëc_u∆ocked
 (
__Â
);

67 
	}
}

70 
__STDIO_INLINE
 

71 
	$gëch¨_u∆ocked
 ()

73  
	`_IO_gëc_u∆ocked
 (
°dö
);

74 
	}
}

79 
__STDIO_INLINE
 

80 
	$putch¨
 (
__c
)

82  
	`_IO_putc
 (
__c
, 
°dout
);

83 
	}
}

86 #ifde‡
__USE_MISC


88 
__STDIO_INLINE
 

89 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

91  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

92 
	}
}

96 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


98 
__STDIO_INLINE
 

99 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

101  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

102 
	}
}

105 
__STDIO_INLINE
 

106 
	$putch¨_u∆ocked
 (
__c
)

108  
	`_IO_putc_u∆ocked
 (
__c
, 
°dout
);

109 
	}
}

113 #ifdef 
__USE_GNU


115 
__STDIO_INLINE
 
_IO_ssize_t


116 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
)

118  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

119 
	}
}

123 #ifde‡
__USE_MISC


125 
__STDIO_INLINE
 

126 
__NTH
 (
	$„of_u∆ocked
 (
FILE
 *
__°ªam
))

128  
	`_IO_„of_u∆ocked
 (
__°ªam
);

129 
	}
}

132 
__STDIO_INLINE
 

133 
__NTH
 (
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
))

135  
	`_IO_„º‹_u∆ocked
 (
__°ªam
);

136 
	}
}

142 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__
 \

143 && !
deföed
 
	g__˝lu•lus


145 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

146 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

147 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

148 && (
size_t
Ë(
size
) != 0) \

149 ? ({ *
__±r
 = (*Ë(
±r
); \

150 
FILE
 *
__°ªam
 = (
°ªam
); \

151 
size_t
 
__˙t
; \

152 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

153 
__˙t
 > 0; --__cnt) \

155 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
); \

156 i‡(
__c
 =
EOF
) \

158 *
__±r
++ = 
__c
; \

160 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

161 / (
size_t
Ë(
size
); }) \

162 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

163 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

165 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

166 (Ë(
n
), (
size_t
) 0) \

167 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

169 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

170 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

171 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

172 && (
size_t
Ë(
size
) != 0) \

173 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

174 
FILE
 *
__°ªam
 = (
°ªam
); \

175 
size_t
 
__˙t
; \

176 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

177 
__˙t
 > 0; --__cnt) \

178 i‡(
	`_IO_putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

180 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

181 / (
size_t
Ë(
size
); }) \

182 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

183 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

185 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

186 (Ë(
n
), (
size_t
) 0) \

187 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

191 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio2.h

20 #i‚de‡
_STDIO_H


24 
	$__•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

25 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

26 
	$__v•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

27 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

28 
_G_va_li°
 
__≠
Ë
__THROW
;

30 #ifde‡
__va_¨g_∑ck


31 
__exã∫_Æways_ölöe
 

32 
	`__NTH
 (
	$•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...))

34  
	`__buûtö___•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

35 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

36 
	}
}

37 #ñi‡!
deföed
 
__˝lu•lus


38 
	#•rötf
(
°r
, ...) \

39 
	`__buûtö___•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

40 
__VA_ARGS__
)

	)

43 
__exã∫_Æways_ölöe
 

44 
__NTH
 (
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

45 
_G_va_li°
 
__≠
))

47  
	`__buûtö___v•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

48 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

49 
	}
}

51 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


53 
	$__¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

54 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

55 ...Ë
__THROW
;

56 
	$__v¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

57 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

58 
_G_va_li°
 
__≠
Ë
__THROW
;

60 #ifde‡
__va_¨g_∑ck


61 
__exã∫_Æways_ölöe
 

62 
	`__NTH
 (
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

63 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...))

65  
	`__buûtö___¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

66 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

67 
	}
}

68 #ñi‡!
deföed
 
__˝lu•lus


69 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

70 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

71 
__VA_ARGS__
)

	)

74 
__exã∫_Æways_ölöe
 

75 
__NTH
 (
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

76 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

78  
	`__buûtö___v¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

79 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

80 
	}
}

84 #i‡
__USE_FORTIFY_LEVEL
 > 1

86 
__Ârötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

87 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

88 
__¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

89 
__vÂrötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

90 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__≠
);

91 
__v¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

92 
_G_va_li°
 
__≠
);

94 #ifde‡
__va_¨g_∑ck


95 
__exã∫_Æways_ölöe
 

96 
	$Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...)

98  
	`__Ârötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

99 
	`__va_¨g_∑ck
 ());

100 
	}
}

102 
__exã∫_Æways_ölöe
 

103 
	$¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

105  
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

106 
	}
}

107 #ñi‡!
deföed
 
__˝lu•lus


108 
	#¥ötf
(...) \

109 
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

110 
	#Ârötf
(
°ªam
, ...) \

111 
	`__Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

114 
__exã∫_Æways_ölöe
 

115 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

117 #ifde‡
__USE_EXTERN_INLINES


118  
	`__vÂrötf_chk
 (
°dout
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

120  
	`__v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

122 
	}
}

124 
__exã∫_Æways_ölöe
 

125 
	$vÂrötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

126 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

128  
	`__vÂrötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

129 
	}
}

131 #ifde‡
__USE_GNU


133 
	$__a•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

134 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

135 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 4))Ë
__wur
;

136 
	$__va•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

137 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

138 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 0))Ë
__wur
;

139 
	$__d¥ötf_chk
 (
__fd
, 
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

140 ...Ë
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

141 
	$__vd¥ötf_chk
 (
__fd
, 
__Êag
,

142 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

143 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

144 
	$__ob°ack_¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

145 
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

147 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

148 
	$__ob°ack_v¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

149 
__Êag
,

150 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

151 
_G_va_li°
 
__¨gs
)

152 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

154 #ifde‡
__va_¨g_∑ck


155 
__exã∫_Æways_ölöe
 

156 
	`__NTH
 (
	$a•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...))

158  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

159 
	`__va_¨g_∑ck
 ());

160 
	}
}

162 
__exã∫_Æways_ölöe
 

163 
__NTH
 (
	$__a•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

166  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

167 
	`__va_¨g_∑ck
 ());

168 
	}
}

170 
__exã∫_Æways_ölöe
 

171 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

173  
	`__d¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

174 
	`__va_¨g_∑ck
 ());

175 
	}
}

177 
__exã∫_Æways_ölöe
 

178 
__NTH
 (
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

179 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...))

181  
	`__ob°ack_¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

182 
	`__va_¨g_∑ck
 ());

183 
	}
}

184 #ñi‡!
deföed
 
__˝lu•lus


185 
	#a•rötf
(
±r
, ...) \

186 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

187 
	#__a•rötf
(
±r
, ...) \

188 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

189 
	#d¥ötf
(
fd
, ...) \

190 
	`__d¥ötf_chk
 (
fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

191 
	#ob°ack_¥ötf
(
ob°ack
, ...) \

192 
	`__ob°ack_¥ötf_chk
 (
ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

195 
__exã∫_Æways_ölöe
 

196 
__NTH
 (
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

197 
_G_va_li°
 
__≠
))

199  
	`__va•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

200 
	}
}

202 
__exã∫_Æways_ölöe
 

203 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

205  
	`__vd¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

206 
	}
}

208 
__exã∫_Æways_ölöe
 

209 
__NTH
 (
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

210 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

212  
	`__ob°ack_v¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

213 
__≠
);

214 
	}
}

220 *
	$__gës_chk
 (*
__°r
, 
size_t
Ë
__wur
;

221 *
	`__REDIRECT
 (
__gës_w¨n
, (*
__°r
), 
gës
)

222 
__wur
 
	`__w¨«âr
 ("please use fgets or getline instead, gets can't "

225 
__exã∫_Æways_ölöe
 
__wur
 *

226 
	$gës
 (*
__°r
)

228 i‡(
	`__bos
 (
__°r
Ë!(
size_t
) -1)

229  
	`__gës_chk
 (
__°r
, 
	`__bos
 (__str));

230  
	`__gës_w¨n
 (
__°r
);

231 
	}
}

233 *
	$__fgës_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

234 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

235 *
	`__REDIRECT
 (
__fgës_Æüs
,

236 (*
__ª°ri˘
 
__s
, 
__n
,

237 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës
Ë
__wur
;

238 *
	`__REDIRECT
 (
__fgës_chk_w¨n
,

239 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

240 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_chk
)

241 
__wur
 
	`__w¨«âr
 ("fgets called with bigger sizeÅhanÜength "

244 
__exã∫_Æways_ölöe
 
__wur
 *

245 
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

247 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

249 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

250  
	`__fgës_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

252 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

253  
	`__fgës_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

255  
	`__fgës_Æüs
 (
__s
, 
__n
, 
__°ªam
);

256 
	}
}

258 
size_t
 
	$__‰ód_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

259 
size_t
 
__size
, size_à
__n
,

260 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

261 
size_t
 
	`__REDIRECT
 (
__‰ód_Æüs
,

262 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

263 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

264 
‰ód
Ë
__wur
;

265 
size_t
 
	`__REDIRECT
 (
__‰ód_chk_w¨n
,

266 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

267 
size_t
 
__size
, size_à
__n
,

268 
FILE
 *
__ª°ri˘
 
__°ªam
),

269 
__‰ód_chk
)

270 
__wur
 
	`__w¨«âr
 ("fread called with bigger size *ÇmembÅhanÜength "

273 
__exã∫_Æways_ölöe
 
__wur
 
size_t


274 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

275 
FILE
 *
__ª°ri˘
 
__°ªam
)

277 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

279 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

280 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

281 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

282  
	`__‰ód_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

284 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

285  
	`__‰ód_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

287  
	`__‰ód_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

288 
	}
}

290 #ifde‡
__USE_GNU


291 *
	$__fgës_u∆ocked_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
,

292 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

293 *
	`__REDIRECT
 (
__fgës_u∆ocked_Æüs
,

294 (*
__ª°ri˘
 
__s
, 
__n
,

295 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës_u∆ocked
Ë
__wur
;

296 *
	`__REDIRECT
 (
__fgës_u∆ocked_chk_w¨n
,

297 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

298 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_u∆ocked_chk
)

299 
__wur
 
	`__w¨«âr
 ("fgets_unlocked called with bigger sizeÅhanÜength "

302 
__exã∫_Æways_ölöe
 
__wur
 *

303 
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

305 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

307 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

308  
	`__fgës_u∆ocked_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

310 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

311  
	`__fgës_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

313  
	`__fgës_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

314 
	}
}

317 #ifde‡
__USE_MISC


318 #unde‡
‰ód_u∆ocked


319 
size_t
 
	$__‰ód_u∆ocked_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

320 
size_t
 
__size
, size_à
__n
,

321 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

322 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_Æüs
,

323 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

324 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

325 
‰ód_u∆ocked
Ë
__wur
;

326 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_chk_w¨n
,

327 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

328 
size_t
 
__size
, size_à
__n
,

329 
FILE
 *
__ª°ri˘
 
__°ªam
),

330 
__‰ód_u∆ocked_chk
)

331 
__wur
 
	`__w¨«âr
 ("fread_unlocked called with bigger size *ÇmembÅhan "

334 
__exã∫_Æways_ölöe
 
__wur
 
size_t


335 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

336 
FILE
 *
__ª°ri˘
 
__°ªam
)

338 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

340 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

341 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

342 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

343  
	`__‰ód_u∆ocked_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

344 
__°ªam
);

346 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

347  
	`__‰ód_u∆ocked_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

348 
__°ªam
);

351 #ifde‡
__USE_EXTERN_INLINES


352 i‡(
	`__buûtö_c⁄°™t_p
 (
__size
)

353 && 
	`__buûtö_c⁄°™t_p
 (
__n
)

354 && (
__size
 | 
__n
Ë< (((
size_t
) 1) << (8 *  (size_t) / 2))

355 && 
__size
 * 
__n
 <= 8)

357 
size_t
 
__˙t
 = 
__size
 * 
__n
;

358 *
__˝å
 = (*Ë
__±r
;

359 i‡(
__˙t
 == 0)

362 ; 
__˙t
 > 0; --__cnt)

364 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
);

365 i‡(
__c
 =
EOF
)

367 *
__˝å
++ = 
__c
;

369  (
__˝å
 - (*Ë
__±r
Ë/ 
__size
;

372  
	`__‰ód_u∆ocked_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

373 
	}
}

	@/usr/include/bits/stdio_lim.h

19 #i‡!
deföed
 
_STDIO_H
 && !deföed 
__√ed_FOPEN_MAX
 && !deföed 
__√ed_IOV_MAX


23 #ifde‡
_STDIO_H


24 
	#L_tm≤am
 20

	)

25 
	#TMP_MAX
 238328

	)

26 
	#FILENAME_MAX
 4096

	)

28 #ifde‡
__USE_POSIX


29 
	#L_˘îmid
 9

	)

30 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


31 
	#L_cu£rid
 9

	)

36 #i‡
deföed
 
__√ed_FOPEN_MAX
 || deföed 
_STDIO_H


37 #unde‡
FOPEN_MAX


38 
	#FOPEN_MAX
 16

	)

41 #i‡
deföed
 
__√ed_IOV_MAX
 && !deföed 
IOV_MAX


42 
	#IOV_MAX
 1024

	)

	@/usr/include/bits/stdlib-ldbl.h

20 #i‚de‡
_STDLIB_H


24 #ifdef 
__USE_ISOC99


25 
__BEGIN_NAMESPACE_C99


26 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

27 
__END_NAMESPACE_C99


30 #ifde‡
__USE_GNU


31 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

34 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


35 #ifde‡
__USE_MISC


36 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

37 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

38 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

39 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

40 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

	@/usr/include/bits/stdlib.h

20 #i‚de‡
_STDLIB_H


24 *
	$__ªÆ∑th_chk
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

25 *
__ª°ri˘
 
__ªsﬁved
,

26 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

27 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

28 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

29 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

30 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_chk_w¨n
,

31 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

32 *
__ª°ri˘
 
__ªsﬁved
,

33 
size_t
 
__ªsﬁvedÀn
), 
__ªÆ∑th_chk
Ë
__wur


34 
	`__w¨«âr
 ("secondárgument ofÑealpath must beÉither NULL orát "

37 
__exã∫_Æways_ölöe
 
__wur
 *

38 
	`__NTH
 (
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

40 i‡(
	`__bos
 (
__ªsﬁved
Ë!(
size_t
) -1)

42 #i‡
deföed
 
_LIBC_LIMITS_H_
 && deföed 
PATH_MAX


43 i‡(
	`__bos
 (
__ªsﬁved
Ë< 
PATH_MAX
)

44  
	`__ªÆ∑th_chk_w¨n
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

46  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

49  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

50 
	}
}

53 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

54 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

55 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

56 
size_t
 
__buÊí
), 
±¢ame_r
)

57 
	`__n⁄nuŒ
 ((2));

58 
	`__REDIRECT_NTH
 (
__±¢ame_r_chk_w¨n
,

59 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

60 
size_t
 
__ƒól
), 
__±¢ame_r_chk
)

61 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ptsname_r called with buflen biggerÅhan "

64 
__exã∫_Æways_ölöe
 

65 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

67 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

69 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

70  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

71 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

72  
	`__±¢ame_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

74  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

75 
	}
}

78 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

79 
__THROW
 
__wur
;

80 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

81 
w˘omb
Ë
__wur
;

83 
__exã∫_Æways_ölöe
 
__wur
 

84 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

89 
	#__STDLIB_MB_LEN_MAX
 16

	)

90 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


93 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__STDLIB_MB_LEN_MAX
 > __bos (__s))

94  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__bos
 (__s));

95  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

96 
	}
}

99 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

100 
__c⁄°
 *
__ª°ri˘
 
__§c
,

101 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

102 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

103 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

104 
__c⁄°
 *
__ª°ri˘
 
__§c
,

105 
size_t
 
__Àn
), 
mb°owcs
);

106 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_chk_w¨n
,

107 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

108 
__c⁄°
 *
__ª°ri˘
 
__§c
,

109 
size_t
 
__Àn
, size_à
__d°Àn
), 
__mb°owcs_chk
)

110 
	`__w¨«âr
 ("mbstowcs called with dst buffer smallerÅhanÜen "

113 
__exã∫_Æways_ölöe
 
size_t


114 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

115 
size_t
 
__Àn
))

117 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

119 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

120  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

121 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

123 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

124  
	`__mb°owcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
,

125 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

127  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

128 
	}
}

131 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

132 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

133 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

134 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

135 (*
__ª°ri˘
 
__d°
,

136 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

137 
size_t
 
__Àn
), 
wc°ombs
);

138 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_chk_w¨n
,

139 (*
__ª°ri˘
 
__d°
,

140 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

141 
size_t
 
__Àn
, size_à
__d°Àn
), 
__wc°ombs_chk
)

142 
	`__w¨«âr
 ("wcstombs called with dst buffer smallerÅhanÜen");

144 
__exã∫_Æways_ölöe
 
size_t


145 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__§c
,

146 
size_t
 
__Àn
))

148 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

150 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

151  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

152 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

153  
	`__wc°ombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

155  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

156 
	}
}

	@/usr/include/bits/string.h

20 #i‚de‡
_STRING_H


26 
	#_STRING_ARCH_u«lig√d
 1

	)

	@/usr/include/bits/string2.h

21 #i‚de‡
_STRING_H


25 #i‡!
deföed
 
__NO_STRING_INLINES
 && !deföed 
__BOUNDED_POINTERS__


42 #i‚de‡
__STRING_INLINE


43 #ifde‡
__˝lu•lus


44 
	#__STRING_INLINE
 
ölöe


	)

46 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

50 #i‡
_STRING_ARCH_u«lig√d


52 
	~<ídün.h
>

53 
	~<bôs/ty≥s.h
>

55 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


56 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

57 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1] << 8 \

58 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

59 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

60 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

61 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

62 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

63 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

65 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

66 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

67 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1])

	)

68 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

69 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

70 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

71 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

72 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3])

	)

77 
	#__STRING2_COPY_TYPE
(
N
) \

78 °ru˘ { 
__¨r
[
N
]; } \

79 
	t__©åibuã__
 ((
	t__∑cked__
)Ë
	t__STRING2_COPY_ARR
##
	tN


	)

80 
	t__STRING2_COPY_TYPE
 (2);

81 
__STRING2_COPY_TYPE
 (3);

82 
__STRING2_COPY_TYPE
 (4);

83 
__STRING2_COPY_TYPE
 (5);

84 
__STRING2_COPY_TYPE
 (6);

85 
__STRING2_COPY_TYPE
 (7);

86 
__STRING2_COPY_TYPE
 (8);

87 #unde‡
__STRING2_COPY_TYPE


93 
	#__°rög2_1b±r_p
(
__x
) \

94 ((
size_t
)(c⁄° *)((
__x
Ë+ 1Ë- (size_t)(c⁄° *)(__xË=1)

	)

97 #i‡!
deföed
 
_HAVE_STRING_ARCH_mem£t


98 #i‡!
__GNUC_PREREQ
 (3, 0)

99 #i‡
_STRING_ARCH_u«lig√d


100 
	#mem£t
(
s
, 
c
, 
n
) \

101 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

102 ? ((
n
) == 1 \

103 ? 
	`__mem£t_1
 (
s
, 
c
) \

104 : 
	`__mem£t_gc
 (
s
, 
c
, 
n
)) \

105 : (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

106 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

107 : 
	`mem£t
 (
s
, 
c
, 
n
))))

	)

109 
	#__mem£t_1
(
s
, 
c
Ë({ *
__s
 = (s); \

110 *((
__uöt8_t
 *Ë
__s
Ë(__uöt8_tË
c
; __s; })

	)

112 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

113 ({ *
__s
 = (
s
); \

115 
__ui
; \

116 
__usi
; \

117 
__uc
; \

118 } *
__u
 = 
__s
; \

119 
__uöt8_t
 
__c
 = (__uöt8_tË(
c
); \

122 (Ë(
n
)) \

125 
__u
->
__ui
 = 
__c
 * 0x01010101; \

126 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

128 
__u
->
__ui
 = 
__c
 * 0x01010101; \

129 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

131 
__u
->
__ui
 = 
__c
 * 0x01010101; \

132 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

134 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

135 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

136 
__u
->
__uc
 = (Ë
__c
; \

140 
__u
->
__ui
 = 
__c
 * 0x01010101; \

141 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

143 
__u
->
__ui
 = 
__c
 * 0x01010101; \

144 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

146 
__u
->
__ui
 = 
__c
 * 0x01010101; \

147 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

149 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

153 
__u
->
__ui
 = 
__c
 * 0x01010101; \

154 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

156 
__u
->
__ui
 = 
__c
 * 0x01010101; \

157 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

159 
__u
->
__ui
 = 
__c
 * 0x01010101; \

160 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

162 
__u
->
__uc
 = (Ë
__c
; \

166 
__u
->
__ui
 = 
__c
 * 0x01010101; \

167 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

169 
__u
->
__ui
 = 
__c
 * 0x01010101; \

170 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

172 
__u
->
__ui
 = 
__c
 * 0x01010101; \

173 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

175 
__u
->
__ui
 = 
__c
 * 0x01010101; \

180 
__s
; })

	)

182 
	#mem£t
(
s
, 
c
, 
n
) \

183 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

184 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

185 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

194 #i‡
__GNUC_PREREQ
 (2, 91)

195 
	#__bzîo
(
s
, 
n
Ë
	`__buûtö_mem£t
 (s, '\0',Ç)

	)

203 #ifde‡
__USE_GNU


204 #i‡!
deföed
 
_HAVE_STRING_ARCH_memp˝y
 || deföed 
_FORCE_INLINES


205 #i‚de‡
_HAVE_STRING_ARCH_memp˝y


206 #i‡
__GNUC_PREREQ
 (3, 4)

207 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_memp˝y
 (de°, src,Ç)

	)

208 #ñi‡
__GNUC_PREREQ
 (3, 0)

209 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

210 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

211 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

212 ? 
	`__buûtö_mem˝y
 (
de°
, 
§c
, 
n
) + (n) \

213 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

215 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

216 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

217 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

218 ? 
	`__memp˝y_smÆl
 (
de°
, 
	`__memp˝y_¨gs
 (
§c
), 
n
) \

219 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

223 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y
 (de°, src,Ç)

	)

226 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


227 #i‡
_STRING_ARCH_u«lig√d


228 #i‚de‡
_FORCE_INLINES


229 
	#__memp˝y_¨gs
(
§c
) \

230 ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[2], \

231 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[6], \

232 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

233 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

234 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

235 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

237 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , , , ,

238 
__uöt16_t
, __uöt16_t, 
__uöt32_t
,

239 
__uöt32_t
, 
size_t
);

240 
__STRING_INLINE
 *

241 
	$__memp˝y_smÆl
 (*
__de°1
,

242 
__§c0_1
, 
__§c2_1
, 
__§c4_1
, 
__§c6_1
,

243 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

244 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

245 
size_t
 
__§˛í
)

248 
__uöt32_t
 
__ui
;

249 
__uöt16_t
 
__usi
;

250 
__uc
;

251 
__c
;

252 } *
__u
 = 
__de°1
;

253 (Ë
__§˛í
)

256 
__u
->
__c
 = 
__§c0_1
;

257 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

260 
__u
->
__usi
 = 
__§c0_2
;

261 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

264 
__u
->
__usi
 = 
__§c0_2
;

265 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

266 
__u
->
__c
 = 
__§c2_1
;

267 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

270 
__u
->
__ui
 = 
__§c0_4
;

271 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

274 
__u
->
__ui
 = 
__§c0_4
;

275 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

276 
__u
->
__c
 = 
__§c4_1
;

277 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

280 
__u
->
__ui
 = 
__§c0_4
;

281 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

282 
__u
->
__usi
 = 
__§c4_2
;

283 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

286 
__u
->
__ui
 = 
__§c0_4
;

287 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

288 
__u
->
__usi
 = 
__§c4_2
;

289 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

290 
__u
->
__c
 = 
__§c6_1
;

291 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

294 
__u
->
__ui
 = 
__§c0_4
;

295 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

296 
__u
->
__ui
 = 
__§c4_4
;

297 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

300  (*Ë
__u
;

301 
	}
}

303 #i‚de‡
_FORCE_INLINES


304 
	#__memp˝y_¨gs
(
§c
) \

305 ((
__c⁄°
 *Ë(
§c
))[0], \

306 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

307 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1] } }), \

308 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

309 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

310 ((
__c⁄°
 *Ë(
§c
))[2] } }), \

311 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

312 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

313 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3] } }), \

314 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

315 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

316 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

317 ((
__c⁄°
 *Ë(
§c
))[4] } }), \

318 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

319 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

320 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

321 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5] } }), \

322 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

323 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

324 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

325 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

326 ((
__c⁄°
 *Ë(
§c
))[6] } }), \

327 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

328 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

329 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

330 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

331 ((
__c⁄°
 *Ë(
§c
))[6], ((__c⁄° *Ë(§c))[7] } })

	)

333 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , 
__STRING2_COPY_ARR2
,

334 
__STRING2_COPY_ARR3
,

335 
__STRING2_COPY_ARR4
,

336 
__STRING2_COPY_ARR5
,

337 
__STRING2_COPY_ARR6
,

338 
__STRING2_COPY_ARR7
,

339 
__STRING2_COPY_ARR8
, 
size_t
);

340 
__STRING_INLINE
 *

341 
	$__memp˝y_smÆl
 (*
__de°
, 
__§c1
,

342 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

343 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

344 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

345 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

348 
__c
;

349 
__STRING2_COPY_ARR2
 
__sˇ2
;

350 
__STRING2_COPY_ARR3
 
__sˇ3
;

351 
__STRING2_COPY_ARR4
 
__sˇ4
;

352 
__STRING2_COPY_ARR5
 
__sˇ5
;

353 
__STRING2_COPY_ARR6
 
__sˇ6
;

354 
__STRING2_COPY_ARR7
 
__sˇ7
;

355 
__STRING2_COPY_ARR8
 
__sˇ8
;

356 } *
__u
 = 
__de°
;

357 (Ë
__§˛í
)

360 
__u
->
__c
 = 
__§c1
;

363 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

366 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

369 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

372 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

375 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

378 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

381 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

384  
	`__exãnsi⁄__
 ((*Ë
__u
 + 
__§˛í
);

385 
	}
}

393 #i‚de‡
_HAVE_STRING_ARCH_°rchr


394 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

395 #i‡
__GNUC_PREREQ
 (3, 2)

396 
	#°rchr
(
s
, 
c
) \

397 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
Ë&& !__buûtö_c⁄°™t_∞(
s
) \

398 && (
c
) == '\0' \

399 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

400 : 
	`__buûtö_°rchr
 (
s
, 
c
)))

	)

402 
	#°rchr
(
s
, 
c
) \

403 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

404 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

405 : 
	`°rchr
 (
s
, 
c
)))

	)

411 #i‡(!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)) \

412 || 
deföed
 
	g_FORCE_INLINES


413 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)

414 
	#°r˝y
(
de°
, 
§c
) \

415 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

416 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

417 ? 
	`__°r˝y_smÆl
 (
de°
, 
	`__°r˝y_¨gs
 (
§c
), \

418 
	`°æí
 (
§c
) + 1) \

419 : (*Ë
	`mem˝y
 (
de°
, 
§c
, 
	`°æí
 (src) + 1)) \

420 : 
	`°r˝y
 (
de°
, 
§c
)))

	)

423 #i‡
_STRING_ARCH_u«lig√d


424 #i‚de‡
_FORCE_INLINES


425 
	#__°r˝y_¨gs
(
§c
) \

426 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

427 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

428 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

429 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

431 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

432 
__uöt32_t
, __uöt32_t, 
size_t
);

433 
__STRING_INLINE
 *

434 
	$__°r˝y_smÆl
 (*
__de°
,

435 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

436 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

437 
size_t
 
__§˛í
)

440 
__uöt32_t
 
__ui
;

441 
__uöt16_t
 
__usi
;

442 
__uc
;

443 } *
__u
 = (*Ë
__de°
;

444 (Ë
__§˛í
)

447 
__u
->
__uc
 = '\0';

450 
__u
->
__usi
 = 
__§c0_2
;

453 
__u
->
__usi
 = 
__§c0_2
;

454 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

455 
__u
->
__uc
 = '\0';

458 
__u
->
__ui
 = 
__§c0_4
;

461 
__u
->
__ui
 = 
__§c0_4
;

462 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

463 
__u
->
__uc
 = '\0';

466 
__u
->
__ui
 = 
__§c0_4
;

467 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

468 
__u
->
__usi
 = 
__§c4_2
;

471 
__u
->
__ui
 = 
__§c0_4
;

472 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

473 
__u
->
__usi
 = 
__§c4_2
;

474 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

475 
__u
->
__uc
 = '\0';

478 
__u
->
__ui
 = 
__§c0_4
;

479 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

480 
__u
->
__ui
 = 
__§c4_4
;

483  
__de°
;

484 
	}
}

486 #i‚de‡
_FORCE_INLINES


487 
	#__°r˝y_¨gs
(
§c
) \

488 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

489 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

490 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

491 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

493 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

494 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

495 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

496 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

497 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

498 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

500 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

501 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

502 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

503 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

504 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

505 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

506 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

507 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

509 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

510 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

511 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

512 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

513 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

515 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

516 
__STRING2_COPY_ARR3
,

517 
__STRING2_COPY_ARR4
,

518 
__STRING2_COPY_ARR5
,

519 
__STRING2_COPY_ARR6
,

520 
__STRING2_COPY_ARR7
,

521 
__STRING2_COPY_ARR8
, 
size_t
);

522 
__STRING_INLINE
 *

523 
	$__°r˝y_smÆl
 (*
__de°
,

524 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

525 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

526 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

527 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

530 
__c
;

531 
__STRING2_COPY_ARR2
 
__sˇ2
;

532 
__STRING2_COPY_ARR3
 
__sˇ3
;

533 
__STRING2_COPY_ARR4
 
__sˇ4
;

534 
__STRING2_COPY_ARR5
 
__sˇ5
;

535 
__STRING2_COPY_ARR6
 
__sˇ6
;

536 
__STRING2_COPY_ARR7
 
__sˇ7
;

537 
__STRING2_COPY_ARR8
 
__sˇ8
;

538 } *
__u
 = (*Ë
__de°
;

539 (Ë
__§˛í
)

542 
__u
->
__c
 = '\0';

545 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

548 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

551 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

554 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

557 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

560 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

563 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

566  
__de°
;

567 
	}
}

573 #ifde‡
__USE_GNU


574 #i‡!
deföed
 
_HAVE_STRING_ARCH_°p˝y
 || deföed 
_FORCE_INLINES


575 #i‚de‡
_HAVE_STRING_ARCH_°p˝y


576 #i‡
__GNUC_PREREQ
 (3, 4)

577 
	#__°p˝y
(
de°
, 
§c
Ë
	`__buûtö_°p˝y
 (de°, src)

	)

578 #ñi‡
__GNUC_PREREQ
 (3, 0)

579 
	#__°p˝y
(
de°
, 
§c
) \

580 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

581 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

582 ? 
	`__buûtö_°r˝y
 (
de°
, 
§c
Ë+ 
	`°æí
 (src) \

583 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

585 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

587 
	#__°p˝y
(
de°
, 
§c
) \

588 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

589 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

590 ? 
	`__°p˝y_smÆl
 (
de°
, 
	`__°p˝y_¨gs
 (
§c
), \

591 
	`°æí
 (
§c
) + 1) \

592 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

594 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

598 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 (de°, src)

	)

601 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


602 #i‡
_STRING_ARCH_u«lig√d


603 #i‚de‡
_FORCE_INLINES


604 
	#__°p˝y_¨gs
(
§c
) \

605 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

606 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

607 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

608 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

610 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

611 
__uöt32_t
, __uöt32_t, 
size_t
);

612 
__STRING_INLINE
 *

613 
	$__°p˝y_smÆl
 (*
__de°
,

614 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

615 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

616 
size_t
 
__§˛í
)

619 
__ui
;

620 
__usi
;

621 
__uc
;

622 
__c
;

623 } *
__u
 = (*Ë
__de°
;

624 (Ë
__§˛í
)

627 
__u
->
__uc
 = '\0';

630 
__u
->
__usi
 = 
__§c0_2
;

631 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

634 
__u
->
__usi
 = 
__§c0_2
;

635 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

636 
__u
->
__uc
 = '\0';

639 
__u
->
__ui
 = 
__§c0_4
;

640 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

643 
__u
->
__ui
 = 
__§c0_4
;

644 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

645 
__u
->
__uc
 = '\0';

648 
__u
->
__ui
 = 
__§c0_4
;

649 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

650 
__u
->
__usi
 = 
__§c4_2
;

651 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

654 
__u
->
__ui
 = 
__§c0_4
;

655 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

656 
__u
->
__usi
 = 
__§c4_2
;

657 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

658 
__u
->
__uc
 = '\0';

661 
__u
->
__ui
 = 
__§c0_4
;

662 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

663 
__u
->
__ui
 = 
__§c4_4
;

664 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

667  &
__u
->
__c
;

668 
	}
}

670 #i‚de‡
_FORCE_INLINES


671 
	#__°p˝y_¨gs
(
§c
) \

672 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

673 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

674 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

675 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

677 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

678 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

679 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

680 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

681 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

682 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

684 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

685 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

686 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

687 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

688 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

689 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

690 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

691 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

693 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

694 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

695 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

696 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

697 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

699 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

700 
__STRING2_COPY_ARR3
,

701 
__STRING2_COPY_ARR4
,

702 
__STRING2_COPY_ARR5
,

703 
__STRING2_COPY_ARR6
,

704 
__STRING2_COPY_ARR7
,

705 
__STRING2_COPY_ARR8
, 
size_t
);

706 
__STRING_INLINE
 *

707 
	$__°p˝y_smÆl
 (*
__de°
,

708 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

709 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

710 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

711 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

714 
__c
;

715 
__STRING2_COPY_ARR2
 
__sˇ2
;

716 
__STRING2_COPY_ARR3
 
__sˇ3
;

717 
__STRING2_COPY_ARR4
 
__sˇ4
;

718 
__STRING2_COPY_ARR5
 
__sˇ5
;

719 
__STRING2_COPY_ARR6
 
__sˇ6
;

720 
__STRING2_COPY_ARR7
 
__sˇ7
;

721 
__STRING2_COPY_ARR8
 
__sˇ8
;

722 } *
__u
 = (*Ë
__de°
;

723 (Ë
__§˛í
)

726 
__u
->
__c
 = '\0';

729 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

732 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

735 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

738 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

741 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

744 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

747 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

750  
__de°
 + 
__§˛í
 - 1;

751 
	}
}

759 #i‚de‡
_HAVE_STRING_ARCH_°∫˝y


760 #i‡
__GNUC_PREREQ
 (3, 2)

761 
	#°∫˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫˝y
 (de°, src,Ç)

	)

763 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

764 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

765 ? (
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

766 ? (*Ë
	`mem˝y
 (
de°
, 
§c
, 
n
) \

767 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)) \

768 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)))

	)

774 #i‚de‡
_HAVE_STRING_ARCH_°∫ˇt


775 #ifde‡
_USE_STRING_ARCH_°rchr


776 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

777 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

778 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

779 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

780 ? 
	`°rˇt
 (
__de°
, 
§c
) \

781 : (*((*Ë
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

782 
§c
, 
n
)Ë'\0', 
__de°
)) \

783 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
); }))

	)

784 #ñi‡
__GNUC_PREREQ
 (3, 2)

785 
	#°∫ˇt
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫ˇt
 (de°, src,Ç)

	)

787 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

788 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

789 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

790 ? 
	`°rˇt
 (
de°
, 
§c
) \

791 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)) \

792 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)))

	)

798 #i‚de‡
_HAVE_STRING_ARCH_°rcmp


799 #i‡
__GNUC_PREREQ
 (3, 2)

800 
	#°rcmp
(
s1
, 
s2
) \

801 
__exãnsi⁄__
 \

802 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

803 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

804 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

805 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

806 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

807 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

808 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

809 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

810 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

811 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

812 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

813 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

814 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

815 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

816 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

817 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

818 : 
	`__buûtö_°rcmp
 (
s1
, 
s2
)))); })

	)

820 
	#°rcmp
(
s1
, 
s2
) \

821 
__exãnsi⁄__
 \

822 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

823 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

824 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

825 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

826 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

827 ? 
	`memcmp
 ((
__c⁄°
 *Ë(
s1
), (__c⁄° *Ë(
s2
), \

828 (
__s1_Àn
 < 
__s2_Àn
 ? __s1_len : __s2_len) + 1) \

829 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

830 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

831 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

832 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s1_Àn
) \

833 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

834 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

835 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

836 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

837 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s2_Àn
) \

838 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

839 : 
	`°rcmp
 (
s1
, 
s2
)))); })

	)

842 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

843 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = \

844 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

845 - ((
__c⁄°
 *Ë(__c⁄° *)(
s2
))[0]);\

846 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

848 
__ªsu…
 = (((
__c⁄°
 *) \

849 (
__c⁄°
 *Ë(
s1
))[1] \

850 - ((
__c⁄°
 *) \

851 (
__c⁄°
 *Ë(
s2
))[1]); \

852 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

854 
__ªsu…
 = \

855 (((
__c⁄°
 *) \

856 (
__c⁄°
 *Ë(
s1
))[2] \

857 - ((
__c⁄°
 *) \

858 (
__c⁄°
 *Ë(
s2
))[2]); \

859 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

860 
__ªsu…
 = \

861 (((
__c⁄°
 *) \

862 (
__c⁄°
 *Ë(
s1
))[3] \

863 - ((
__c⁄°
 *) \

864 (
__c⁄°
 *Ë(
s2
))[3]); \

867 
__ªsu…
; }))

	)

869 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

870 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s2
 = \

871 (
__c⁄°
 *Ë(__c⁄° *Ë(
s2
); \

872 
__ªsu…
 = \

873 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

874 - 
__s2
[0]); \

875 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

877 
__ªsu…
 = (((
__c⁄°
 *) \

878 (
__c⁄°
 *Ë(
s1
))[1] - 
__s2
[1]); \

879 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

881 
__ªsu…
 = (((
__c⁄°
 *) \

882 (
__c⁄°
 *Ë(
s1
))[2] - 
__s2
[2]);\

883 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

884 
__ªsu…
 = (((
__c⁄°
 *) \

885 (
__c⁄°
 *Ë(
s1
))[3] \

886 - 
__s2
[3]); \

889 
__ªsu…
; }))

	)

891 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

892 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s1
 = \

893 (
__c⁄°
 *Ë(__c⁄° *Ë(
s1
); \

894 
__ªsu…
 = \

895 
__s1
[0] - ((
__c⁄°
 *) \

896 (
__c⁄°
 *Ë(
s2
))[0]; \

897 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

899 
__ªsu…
 = (
__s1
[1] \

900 - ((
__c⁄°
 *) \

901 (
__c⁄°
 *Ë(
s2
))[1]); \

902 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

904 
__ªsu…
 = \

905 (
__s1
[2] - ((
__c⁄°
 *) \

906 (
__c⁄°
 *Ë(
s2
))[2]); \

907 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

908 
__ªsu…
 = \

909 (
__s1
[3] \

910 - ((
__c⁄°
 *) \

911 (
__c⁄°
 *Ë(
s2
))[3]); \

914 
__ªsu…
; }))

	)

919 #i‚de‡
_HAVE_STRING_ARCH_°∫cmp


920 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

921 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

922 && ((
	`__buûtö_c⁄°™t_p
 (
s1
) \

923 && 
	`°æí
 (
s1
Ë< ((
size_t
Ë(
n
))) \

924 || (
	`__buûtö_c⁄°™t_p
 (
s2
) \

925 && 
	`°æí
 (
s2
Ë< ((
size_t
Ë(
n
)))) \

926 ? 
	`°rcmp
 (
s1
, 
s2
Ë: 
	`°∫cmp
 (s1, s2, 
n
)))

	)

932 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rc•n
 || deföed 
_FORCE_INLINES


933 #i‚de‡
_HAVE_STRING_ARCH_°rc•n


934 #i‡
__GNUC_PREREQ
 (3, 2)

935 
	#°rc•n
(
s
, 
ªje˘
) \

936 
__exãnsi⁄__
 \

937 ({ 
__r0
, 
__r1
, 
__r2
; \

938 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

939 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

940 ? 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
) \

941 : ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

942 ? 
	`°æí
 (
s
) \

943 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

944 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

945 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

946 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

947 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

948 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

949 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)))))) \

950 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)); })

	)

952 
	#°rc•n
(
s
, 
ªje˘
) \

953 
__exãnsi⁄__
 \

954 ({ 
__r0
, 
__r1
, 
__r2
; \

955 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

956 ? ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

957 ? 
	`°æí
 (
s
) \

958 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

959 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

960 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

961 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

962 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

963 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

964 : 
	`°rc•n
 (
s
, 
ªje˘
))))) \

965 : 
	`°rc•n
 (
s
, 
ªje˘
)); })

	)

969 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
);

970 
__STRING_INLINE
 
size_t


971 
	$__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
)

973 
size_t
 
__ªsu…
 = 0;

974 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘
)

975 ++
__ªsu…
;

976  
__ªsu…
;

977 
	}
}

979 
__STRING_INLINE
 
size_t
 
__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

980 
__ªje˘2
);

981 
__STRING_INLINE
 
size_t


982 
	$__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
)

984 
size_t
 
__ªsu…
 = 0;

985 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


986 && 
__s
[
__ªsu…
] !
__ªje˘2
)

987 ++
__ªsu…
;

988  
__ªsu…
;

989 
	}
}

991 
__STRING_INLINE
 
size_t
 
__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

992 
__ªje˘2
, 
__ªje˘3
);

993 
__STRING_INLINE
 
size_t


994 
	$__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
,

995 
__ªje˘3
)

997 
size_t
 
__ªsu…
 = 0;

998 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


999 && 
__s
[
__ªsu…
] !
__ªje˘2
 && __s[__ªsu…] !
__ªje˘3
)

1000 ++
__ªsu…
;

1001  
__ªsu…
;

1002 
	}
}

1008 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r•n
 || deföed 
_FORCE_INLINES


1009 #i‚de‡
_HAVE_STRING_ARCH_°r•n


1010 #i‡
__GNUC_PREREQ
 (3, 2)

1011 
	#°r•n
(
s
, 
ac˚±
) \

1012 
__exãnsi⁄__
 \

1013 ({ 
__a0
, 
__a1
, 
__a2
; \

1014 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1015 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1016 ? 
	`__buûtö_°r•n
 (
s
, 
ac˚±
) \

1017 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1018 ? ((Ë(
s
), 0) \

1019 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1020 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1021 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1022 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1023 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1024 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1025 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)))))) \

1026 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)); })

	)

1028 
	#°r•n
(
s
, 
ac˚±
) \

1029 
__exãnsi⁄__
 \

1030 ({ 
__a0
, 
__a1
, 
__a2
; \

1031 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1032 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1033 ? ((Ë(
s
), 0) \

1034 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1035 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1036 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1037 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1038 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1039 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1040 : 
	`°r•n
 (
s
, 
ac˚±
))))) \

1041 : 
	`°r•n
 (
s
, 
ac˚±
)); })

	)

1045 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
);

1046 
__STRING_INLINE
 
size_t


1047 
	$__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
)

1049 
size_t
 
__ªsu…
 = 0;

1051 
__s
[
__ªsu…
] =
__ac˚±
)

1052 ++
__ªsu…
;

1053  
__ªsu…
;

1054 
	}
}

1056 
__STRING_INLINE
 
size_t
 
__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1057 
__ac˚±2
);

1058 
__STRING_INLINE
 
size_t


1059 
	$__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1061 
size_t
 
__ªsu…
 = 0;

1063 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2
)

1064 ++
__ªsu…
;

1065  
__ªsu…
;

1066 
	}
}

1068 
__STRING_INLINE
 
size_t
 
__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1069 
__ac˚±2
, 
__ac˚±3
);

1070 
__STRING_INLINE
 
size_t


1071 
	$__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1073 
size_t
 
__ªsu…
 = 0;

1075 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2


1076 || 
__s
[
__ªsu…
] =
__ac˚±3
)

1077 ++
__ªsu…
;

1078  
__ªsu…
;

1079 
	}
}

1084 #i‡!
deföed
 
_HAVE_STRING_ARCH_°Ωbrk
 || deföed 
_FORCE_INLINES


1085 #i‚de‡
_HAVE_STRING_ARCH_°Ωbrk


1086 #i‡
__GNUC_PREREQ
 (3, 2)

1087 
	#°Ωbrk
(
s
, 
ac˚±
) \

1088 
__exãnsi⁄__
 \

1089 ({ 
__a0
, 
__a1
, 
__a2
; \

1090 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1091 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1092 ? 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
) \

1093 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1094 ? ((Ë(
s
), (*Ë
NULL
) \

1095 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1096 ? 
	`__buûtö_°rchr
 (
s
, 
__a0
) \

1097 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1098 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1099 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1100 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1101 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)))))) \

1102 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1104 
	#°Ωbrk
(
s
, 
ac˚±
) \

1105 
__exãnsi⁄__
 \

1106 ({ 
__a0
, 
__a1
, 
__a2
; \

1107 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1108 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1109 ? ((Ë(
s
), (*Ë
NULL
) \

1110 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1111 ? 
	`°rchr
 (
s
, 
__a0
) \

1112 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1113 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1114 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1115 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1116 : 
	`°Ωbrk
 (
s
, 
ac˚±
))))) \

1117 : 
	`°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1121 
__STRING_INLINE
 *
__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1122 
__ac˚±2
);

1123 
__STRING_INLINE
 *

1124 
	$__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1127 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2
)

1128 ++
__s
;

1129  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1130 
	}
}

1132 
__STRING_INLINE
 *
__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1133 
__ac˚±2
, 
__ac˚±3
);

1134 
__STRING_INLINE
 *

1135 
	$__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
,

1136 
__ac˚±3
)

1139 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2


1140 && *
__s
 !
__ac˚±3
)

1141 ++
__s
;

1142  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1143 
	}
}

1149 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r°r
 && !
__GNUC_PREREQ
 (2, 97)

1150 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1151 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
Ë&& 
	`__°rög2_1b±r_p
 (needle) \

1152 ? (((
__c⁄°
 *Ë(
√edÀ
))[0] == '\0' \

1153 ? (*Ë(
size_t
Ë(
hay°ack
) \

1154 : (((
__c⁄°
 *Ë(
√edÀ
))[1] == '\0' \

1155 ? 
	`°rchr
 (
hay°ack
, \

1156 ((
__c⁄°
 *Ë(
√edÀ
))[0]) \

1157 : 
	`°r°r
 (
hay°ack
, 
√edÀ
))) \

1158 : 
	`°r°r
 (
hay°ack
, 
√edÀ
)))

	)

1162 #i‡!
deföed
 
_HAVE_STRING_ARCH_°πok_r
 || deföed 
_FORCE_INLINES


1163 #i‚de‡
_HAVE_STRING_ARCH_°πok_r


1164 
	#__°πok_r
(
s
, 
£p
, 
√xç
) \

1165 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
£p
Ë&& 
	`__°rög2_1b±r_p
 (sep) \

1166 && ((
__c⁄°
 *Ë(
£p
))[0] != '\0' \

1167 && ((
__c⁄°
 *Ë(
£p
))[1] == '\0' \

1168 ? 
	`__°πok_r_1c
 (
s
, ((
__c⁄°
 *Ë(
£p
))[0], 
√xç
) \

1169 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)))

	)

1172 
__STRING_INLINE
 *
__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
);

1173 
__STRING_INLINE
 *

1174 
	$__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
)

1176 *
__ªsu…
;

1177 i‡(
__s
 =
NULL
)

1178 
__s
 = *
__√xç
;

1179 *
__s
 =
__£p
)

1180 ++
__s
;

1181 
__ªsu…
 = 
NULL
;

1182 i‡(*
__s
 != '\0')

1184 
__ªsu…
 = 
__s
++;

1185 *
__s
 != '\0')

1186 i‡(*
__s
++ =
__£p
)

1188 
__s
[-1] = '\0';

1192 *
__√xç
 = 
__s
;

1193  
__ªsu…
;

1194 
	}
}

1195 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


1196 
	#°πok_r
(
s
, 
£p
, 
√xç
Ë
	`__°πok_r
 (s, sï,Çexç)

	)

1201 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r£p
 || deföed 
_FORCE_INLINES


1202 #i‚de‡
_HAVE_STRING_ARCH_°r£p


1204 *
__°r£p_g
 (**
__°rögp
, 
__c⁄°
 *
__dñim
);

1205 
	#__°r£p
(
s
, 
ªje˘
) \

1206 
__exãnsi⁄__
 \

1207 ({ 
__r0
, 
__r1
, 
__r2
; \

1208 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

1209 && (
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], \

1210 ((
__c⁄°
 *Ë(
ªje˘
))[0] != '\0') \

1211 ? ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], \

1212 ((
__c⁄°
 *Ë(
ªje˘
))[1] == '\0') \

1213 ? 
	`__°r£p_1c
 (
s
, 
__r0
) \

1214 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

1215 ? 
	`__°r£p_2c
 (
s
, 
__r0
, 
__r1
) \

1216 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

1217 ? 
	`__°r£p_3c
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

1218 : 
	`__°r£p_g
 (
s
, 
ªje˘
)))) \

1219 : 
	`__°r£p_g
 (
s
, 
ªje˘
)); })

	)

1222 
__STRING_INLINE
 *
__°r£p_1c
 (**
__s
, 
__ªje˘
);

1223 
__STRING_INLINE
 *

1224 
	$__°r£p_1c
 (**
__s
, 
__ªje˘
)

1226 *
__ªtvÆ
 = *
__s
;

1227 i‡(
__ªtvÆ
 !
NULL
 && (*
__s
 = 
	`°rchr
 (__ªtvÆ, 
__ªje˘
)) != NULL)

1228 *(*
__s
)++ = '\0';

1229  
__ªtvÆ
;

1230 
	}
}

1232 
__STRING_INLINE
 *
__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
);

1233 
__STRING_INLINE
 *

1234 
	$__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
)

1236 *
__ªtvÆ
 = *
__s
;

1237 i‡(
__ªtvÆ
 !
NULL
)

1239 *
__˝
 = 
__ªtvÆ
;

1242 i‡(*
__˝
 == '\0')

1244 
__˝
 = 
NULL
;

1247 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
)

1249 *
__˝
++ = '\0';

1252 ++
__˝
;

1254 *
__s
 = 
__˝
;

1256  
__ªtvÆ
;

1257 
	}
}

1259 
__STRING_INLINE
 *
__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
,

1260 
__ªje˘3
);

1261 
__STRING_INLINE
 *

1262 
	$__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
, 
__ªje˘3
)

1264 *
__ªtvÆ
 = *
__s
;

1265 i‡(
__ªtvÆ
 !
NULL
)

1267 *
__˝
 = 
__ªtvÆ
;

1270 i‡(*
__˝
 == '\0')

1272 
__˝
 = 
NULL
;

1275 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
 || *__˝ =
__ªje˘3
)

1277 *
__˝
++ = '\0';

1280 ++
__˝
;

1282 *
__s
 = 
__˝
;

1284  
__ªtvÆ
;

1285 
	}
}

1286 #ifde‡
__USE_BSD


1287 
	#°r£p
(
s
, 
ªje˘
Ë
	`__°r£p
 (s,Ñeje˘)

	)

1294 #ifde‡
__USE_MISC


1296 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rdup
 || !deföed 
_HAVE_STRING_ARCH_°∫dup


1297 
	#__√ed_mÆloc_™d_ˇŒoc


	)

1298 
	~<°dlib.h
>

1301 #i‚de‡
_HAVE_STRING_ARCH_°rdup


1303 *
	$__°rdup
 (
__c⁄°
 *
__°rög
Ë
__THROW
 
__©åibuã_mÆloc__
;

1304 
	#__°rdup
(
s
) \

1305 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1306 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1307 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1308 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1309 *
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1310 i‡(
__ªtvÆ
 !
NULL
) \

1311 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, 
__Àn
); \

1312 
__ªtvÆ
; 
	}
})) \

1313 : 
	`__°rdup
 (
s
)))

	)

1315 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1316 
	#°rdup
(
s
Ë
	`__°rdup
 (s)

	)

1320 #i‚de‡
_HAVE_STRING_ARCH_°∫dup


1322 *
	$__°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

1323 
__THROW
 
__©åibuã_mÆloc__
;

1324 
	#__°∫dup
(
s
, 
n
) \

1325 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1326 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1327 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1328 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1329 
size_t
 
__n
 = (
n
); \

1330 *
__ªtvÆ
; \

1331 i‡(
__n
 < 
__Àn
) \

1332 
__Àn
 = 
__n
 + 1; \

1333 
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1334 i‡(
__ªtvÆ
 !
NULL
) \

1336 
__ªtvÆ
[
__Àn
 - 1] = '\0'; \

1337 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, \

1338 
__Àn
 - 1); \

1340 
__ªtvÆ
; 
	}
})) \

1341 : 
	`__°∫dup
 (
s
, 
n
)))

	)

1343 #ifde‡
__USE_GNU


1344 
	#°∫dup
(
s
, 
n
Ë
	`__°∫dup
 (s,Ç)

	)

1350 #i‚de‡
_FORCE_INLINES


1351 #unde‡
__STRING_INLINE


	@/usr/include/bits/string3.h

19 #i‚de‡
_STRING_H


23 
__w¨nde˛
 (
__w¨n_mem£t_zîo_Àn
,

26 #i‚de‡
__˝lu•lus


30 #unde‡
mem˝y


31 #unde‡
memmove


32 #unde‡
mem£t


33 #unde‡
°rˇt


34 #unde‡
°r˝y


35 #unde‡
°∫ˇt


36 #unde‡
°∫˝y


37 #ifde‡
__USE_GNU


38 #unde‡
memp˝y


39 #unde‡
°p˝y


41 #ifde‡
__USE_BSD


42 #unde‡
bc›y


43 #unde‡
bzîo


48 
__exã∫_Æways_ölöe
 *

49 
__NTH
 (
	$mem˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

50 
size_t
 
__Àn
))

52  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

53 
	}
}

55 
__exã∫_Æways_ölöe
 *

56 
__NTH
 (
	$memmove
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

57 
size_t
 
__Àn
))

59  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

60 
	}
}

62 #ifde‡
__USE_GNU


63 
__exã∫_Æways_ölöe
 *

64 
__NTH
 (
	$memp˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

65 
size_t
 
__Àn
))

67  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

68 
	}
}

77 
__exã∫_Æways_ölöe
 *

78 
__NTH
 (
	$mem£t
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

80 i‡(
	`__buûtö_c⁄°™t_p
 (
__Àn
) && __len == 0

81 && (!
	`__buûtö_c⁄°™t_p
 (
__ch
) || __ch != 0))

83 
	`__w¨n_mem£t_zîo_Àn
 ();

84  
__de°
;

86  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
, 
	`__bos0
 (__dest));

87 
	}
}

89 #ifde‡
__USE_BSD


90 
__exã∫_Æways_ölöe
 

91 
__NTH
 (
	$bc›y
 (
__c⁄°
 *
__ª°ri˘
 
__§c
, *__ª°ri˘ 
__de°
,

92 
size_t
 
__Àn
))

94 (Ë
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

95 
	}
}

97 
__exã∫_Æways_ölöe
 

98 
__NTH
 (
	$bzîo
 (*
__de°
, 
size_t
 
__Àn
))

100 (Ë
	`__buûtö___mem£t_chk
 (
__de°
, '\0', 
__Àn
, 
	`__bos0
 (__dest));

101 
	}
}

104 
__exã∫_Æways_ölöe
 *

105 
__NTH
 (
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

107  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

108 
	}
}

110 #ifde‡
__USE_GNU


111 
__exã∫_Æways_ölöe
 *

112 
__NTH
 (
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

114  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

115 
	}
}

119 
__exã∫_Æways_ölöe
 *

120 
__NTH
 (
	$°∫˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

121 
size_t
 
__Àn
))

123  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

124 
	}
}

127 *
	$__°≤˝y_chk
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

128 
size_t
 
__de°Àn
Ë
__THROW
;

129 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
,

130 
__c⁄°
 *
__§c
,

131 
size_t
 
__n
), 
°≤˝y
);

133 
__exã∫_Æways_ölöe
 *

134 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
))

136 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

137 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿<
	`__bos
 (
__de°
)))

138  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

139  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

140 
	}
}

143 
__exã∫_Æways_ölöe
 *

144 
__NTH
 (
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

146  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

147 
	}
}

150 
__exã∫_Æways_ölöe
 *

151 
__NTH
 (
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

152 
size_t
 
__Àn
))

154  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

155 
	}
}

	@/usr/include/bits/sys_errlist.h

20 #i‚de‡
_STDIO_H


26 #ifde‡ 
__USE_BSD


27 
sys_√º
;

28 
__c⁄°
 *__c⁄° 
sys_îæi°
[];

30 #ifde‡ 
__USE_GNU


31 
_sys_√º
;

32 
__c⁄°
 *__c⁄° 
_sys_îæi°
[];

	@/usr/include/bits/time.h

24 #i‚de‡
__√ed_timevÆ


25 #i‚de‡
_BITS_TIME_H


26 
	#_BITS_TIME_H
 1

	)

34 
	#CLOCKS_PER_SEC
 1000000l

	)

36 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


39 
	~<bôs/ty≥s.h
>

40 
__sysc⁄f
 ();

41 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

44 #ifde‡
__USE_POSIX199309


46 
	#CLOCK_REALTIME
 0

	)

48 
	#CLOCK_MONOTONIC
 1

	)

50 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

52 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

55 
	#TIMER_ABSTIME
 1

	)

61 #ifde‡
__√ed_timevÆ


62 #unde‡
__√ed_timevÆ


63 #i‚de‡
_STRUCT_TIMEVAL


64 
	#_STRUCT_TIMEVAL
 1

	)

65 
	~<bôs/ty≥s.h
>

69 
	stimevÆ


71 
__time_t
 
	mtv_£c
;

72 
__su£c⁄ds_t
 
	mtv_u£c
;

	@/usr/include/bits/types.h

24 #i‚def 
_BITS_TYPES_H


25 
	#_BITS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/w‹dsize.h
>

31 
	t__u_ch¨
;

32 
	t__u_sh‹t
;

33 
	t__u_öt
;

34 
	t__u_l⁄g
;

37 sig√d 
	t__öt8_t
;

38 
	t__uöt8_t
;

39 sig√d 
	t__öt16_t
;

40 
	t__uöt16_t
;

41 sig√d 
	t__öt32_t
;

42 
	t__uöt32_t
;

43 #i‡
__WORDSIZE
 == 64

44 sig√d 
	t__öt64_t
;

45 
	t__uöt64_t
;

46 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


47 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

48 
__exãnsi⁄__
 
	t__uöt64_t
;

52 #i‡
__WORDSIZE
 == 64

53 
	t__quad_t
;

54 
	t__u_quad_t
;

55 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


56 
__exãnsi⁄__
 
	t__quad_t
;

57 
__exãnsi⁄__
 
	t__u_quad_t
;

61 
	m__vÆ
[2];

62 } 
	t__quad_t
;

65 
__u_l⁄g
 
	m__vÆ
[2];

66 } 
	t__u_quad_t
;

99 
	#__S16_TYPE
 

	)

100 
	#__U16_TYPE
 

	)

101 
	#__S32_TYPE
 

	)

102 
	#__U32_TYPE
 

	)

103 
	#__SLONGWORD_TYPE
 

	)

104 
	#__ULONGWORD_TYPE
 

	)

105 #i‡
__WORDSIZE
 == 32

106 
	#__SQUAD_TYPE
 
__quad_t


	)

107 
	#__UQUAD_TYPE
 
__u_quad_t


	)

108 
	#__SWORD_TYPE
 

	)

109 
	#__UWORD_TYPE
 

	)

110 
	#__SLONG32_TYPE
 

	)

111 
	#__ULONG32_TYPE
 

	)

112 
	#__S64_TYPE
 
__quad_t


	)

113 
	#__U64_TYPE
 
__u_quad_t


	)

116 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

117 #ñi‡
__WORDSIZE
 == 64

118 
	t__SQUAD_TYPE
 

	)

119 
	t__UQUAD_TYPE
 

	)

120 
	t__SWORD_TYPE
 

	)

121 
	t__UWORD_TYPE
 

	)

122 
	t__SLONG32_TYPE
 

	)

123 
	t__ULONG32_TYPE
 

	)

124 
	t__S64_TYPE
 

	)

125 
	t__U64_TYPE
 

	)

127 
	t__STD_TYPE
 

	)

131 
	~<bôs/ty≥sizes.h
>

134 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

135 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

136 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

137 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

138 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

139 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

140 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

141 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

142 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

143 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

144 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

145 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

146 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

147 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

148 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

149 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

150 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

151 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

153 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

154 
__STD_TYPE
 
__SWBLK_T_TYPE
 
	g__swblk_t
;

155 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

158 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

161 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

164 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

169 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

170 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

173 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

174 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

177 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

178 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

180 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

184 
__off64_t
 
	t__loff_t
;

185 
__quad_t
 *
	t__qaddr_t
;

186 *
	t__ˇddr_t
;

189 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

192 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

195 #unde‡
__STD_TYPE


	@/usr/include/bits/unistd.h

20 #i‚de‡
_UNISTD_H


24 
ssize_t
 
	$__ªad_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

25 
size_t
 
__buÊí
Ë
__wur
;

26 
ssize_t
 
	`__REDIRECT
 (
__ªad_Æüs
, (
__fd
, *
__buf
,

27 
size_t
 
__nbyãs
), 
ªad
Ë
__wur
;

28 
ssize_t
 
	`__REDIRECT
 (
__ªad_chk_w¨n
,

29 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

30 
size_t
 
__buÊí
), 
__ªad_chk
)

31 
__wur
 
	`__w¨«âr
 ("read called with biggerÜengthÅhan size of "

34 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


35 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
)

37 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

39 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

40  
	`__ªad_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

42 i‡(
__nbyãs
 > 
	`__bos0
 (
__buf
))

43  
	`__ªad_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

45  
	`__ªad_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
);

46 
	}
}

48 #ifde‡
__USE_UNIX98


49 
ssize_t
 
	$__¥ód_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

50 
__off_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

51 
ssize_t
 
	$__¥ód64_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

52 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

53 
ssize_t
 
	`__REDIRECT
 (
__¥ód_Æüs
,

54 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

55 
__off_t
 
__off£t
), 
¥ód
Ë
__wur
;

56 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_Æüs
,

57 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

58 
__off64_t
 
__off£t
), 
¥ód64
Ë
__wur
;

59 
ssize_t
 
	`__REDIRECT
 (
__¥ód_chk_w¨n
,

60 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

61 
__off_t
 
__off£t
, 
size_t
 
__bufsize
), 
__¥ód_chk
)

62 
__wur
 
	`__w¨«âr
 ("pread called with biggerÜengthÅhan size of "

64 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_chk_w¨n
,

65 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

66 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
),

67 
__¥ód64_chk
)

68 
__wur
 
	`__w¨«âr
 ("pread64 called with biggerÜengthÅhan size of "

71 #i‚de‡
__USE_FILE_OFFSET64


72 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


73 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off_t
 
__off£t
)

75 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

77 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

78  
	`__¥ód_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

80 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

81  
	`__¥ód_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

82 
	`__bos0
 (
__buf
));

84  
	`__¥ód_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

85 
	}
}

87 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


88 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

90 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

92 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

93  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

95 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

96  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

97 
	`__bos0
 (
__buf
));

100  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

101 
	}
}

104 #ifde‡
__USE_LARGEFILE64


105 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


106 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

108 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

110 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

111  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

113 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

114  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

115 
	`__bos0
 (
__buf
));

118  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

119 
	}
}

123 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


124 
ssize_t
 
	$__ªadlök_chk
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

125 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

126 
size_t
 
__buÊí
)

127 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

128 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_Æüs
,

129 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

130 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
), 
ªadlök
)

131 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

132 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_chk_w¨n
,

133 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

134 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

135 
size_t
 
__buÊí
), 
__ªadlök_chk
)

136 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
	`__w¨«âr
 ("readlink called with biggerÜength "

139 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
ssize_t


140 
	`__NTH
 (
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
, *__ª°ri˘ 
__buf
,

141 
size_t
 
__Àn
))

143 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

145 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

146  
	`__ªadlök_chk
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

148 i‡–
__Àn
 > 
	`__bos
 (
__buf
))

149  
	`__ªadlök_chk_w¨n
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

151  
	`__ªadlök_Æüs
 (
__∑th
, 
__buf
, 
__Àn
);

152 
	}
}

155 #ifde‡
__USE_ATFILE


156 
ssize_t
 
	$__ªadlök©_chk
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

157 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

158 
size_t
 
__buÊí
)

159 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

160 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_Æüs
,

161 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

162 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
),

163 
ªadlök©
)

164 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

165 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_chk_w¨n
,

166 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

167 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

168 
size_t
 
__buÊí
), 
__ªadlök©_chk
)

169 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
	`__w¨«âr
 ("readlinkat called with bigger "

173 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
ssize_t


174 
	`__NTH
 (
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

175 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
))

177 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

179 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

180  
	`__ªadlök©_chk
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

182 i‡(
__Àn
 > 
	`__bos
 (
__buf
))

183  
	`__ªadlök©_chk_w¨n
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
,

184 
	`__bos
 (
__buf
));

186  
	`__ªadlök©_Æüs
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
);

187 
	}
}

190 *
	$__gëcwd_chk
 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
)

191 
__THROW
 
__wur
;

192 *
	`__REDIRECT_NTH
 (
__gëcwd_Æüs
,

193 (*
__buf
, 
size_t
 
__size
), 
gëcwd
Ë
__wur
;

194 *
	`__REDIRECT_NTH
 (
__gëcwd_chk_w¨n
,

195 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
),

196 
__gëcwd_chk
)

197 
__wur
 
	`__w¨«âr
 ("getcwd caller with biggerÜengthÅhan size of "

200 
__exã∫_Æways_ölöe
 
__wur
 *

201 
	`__NTH
 (
	$gëcwd
 (*
__buf
, 
size_t
 
__size
))

203 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

205 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
))

206  
	`__gëcwd_chk
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

208 i‡(
__size
 > 
	`__bos
 (
__buf
))

209  
	`__gëcwd_chk_w¨n
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

211  
	`__gëcwd_Æüs
 (
__buf
, 
__size
);

212 
	}
}

214 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


215 *
	$__gëwd_chk
 (*
__buf
, 
size_t
 
buÊí
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

217 *
	`__REDIRECT_NTH
 (
__gëwd_w¨n
, (*
__buf
), 
gëwd
)

218 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("please use getcwd instead,ás getwd "

221 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
 *

222 
	`__NTH
 (
	$gëwd
 (*
__buf
))

224 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

225  
	`__gëwd_chk
 (
__buf
, 
	`__bos
 (__buf));

226  
	`__gëwd_w¨n
 (
__buf
);

227 
	}
}

230 
size_t
 
	$__c⁄f°r_chk
 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

231 
size_t
 
__buÊí
Ë
__THROW
;

232 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_Æüs
, (
__«me
, *
__buf
,

233 
size_t
 
__Àn
), 
c⁄f°r
);

234 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_chk_w¨n
,

235 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

236 
size_t
 
__buÊí
), 
__c⁄f°r_chk
)

237 
	`__w¨«âr
 ("confstr called with biggerÜengthÅhan size of destination "

240 
__exã∫_Æways_ölöe
 
size_t


241 
	`__NTH
 (
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
))

243 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

245 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

246  
	`__c⁄f°r_chk
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

248 i‡(
	`__bos
 (
__buf
Ë< 
__Àn
)

249  
	`__c⁄f°r_chk_w¨n
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

251  
	`__c⁄f°r_Æüs
 (
__«me
, 
__buf
, 
__Àn
);

252 
	}
}

255 
	$__gëgroups_chk
 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
)

256 
__THROW
 
__wur
;

257 
	`__REDIRECT_NTH
 (
__gëgroups_Æüs
, (
__size
, 
__gid_t
 
__li°
[]),

258 
gëgroups
Ë
__wur
;

259 
	`__REDIRECT_NTH
 (
__gëgroups_chk_w¨n
,

260 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
),

261 
__gëgroups_chk
)

262 
__wur
 
	`__w¨«âr
 ("getgroups called with bigger group countÅhan what "

265 
__exã∫_Æways_ölöe
 

266 
	`__NTH
 (
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]))

268 i‡(
	`__bos
 (
__li°
Ë!(
size_t
) -1)

270 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
) || __size < 0)

271  
	`__gëgroups_chk
 (
__size
, 
__li°
, 
	`__bos
 (__list));

273 i‡(
__size
 *  (
__gid_t
Ë> 
	`__bos
 (
__li°
))

274  
	`__gëgroups_chk_w¨n
 (
__size
, 
__li°
, 
	`__bos
 (__list));

276  
	`__gëgroups_Æüs
 (
__size
, 
__li°
);

277 
	}
}

280 
	$__ây«me_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

281 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

282 
	`__REDIRECT_NTH
 (
__ây«me_r_Æüs
, (
__fd
, *
__buf
,

283 
size_t
 
__buÊí
), 
ây«me_r
)

284 
	`__n⁄nuŒ
 ((2));

285 
	`__REDIRECT_NTH
 (
__ây«me_r_chk_w¨n
,

286 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

287 
size_t
 
__ƒól
), 
__ây«me_r_chk
)

288 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ttyname_r called with bigger buflenÅhan "

291 
__exã∫_Æways_ölöe
 

292 
	`__NTH
 (
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

294 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

296 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

297  
	`__ây«me_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

299 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

300  
	`__ây«me_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

302  
	`__ây«me_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

303 
	}
}

306 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


307 
	$__gëlogö_r_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

308 
	`__n⁄nuŒ
 ((1));

309 
	`__REDIRECT
 (
__gëlogö_r_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

310 
gëlogö_r
Ë
	`__n⁄nuŒ
 ((1));

311 
	`__REDIRECT
 (
__gëlogö_r_chk_w¨n
,

312 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

313 
__gëlogö_r_chk
)

314 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("getlogin_r called with bigger buflenÅhan "

317 
__exã∫_Æways_ölöe
 

318 
	$gëlogö_r
 (*
__buf
, 
size_t
 
__buÊí
)

320 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

322 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

323  
	`__gëlogö_r_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

325 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

326  
	`__gëlogö_r_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

328  
	`__gëlogö_r_Æüs
 (
__buf
, 
__buÊí
);

329 
	}
}

333 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


334 
	$__gëho°«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

335 
__THROW
 
	`__n⁄nuŒ
 ((1));

336 
	`__REDIRECT_NTH
 (
__gëho°«me_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

337 
gëho°«me
Ë
	`__n⁄nuŒ
 ((1));

338 
	`__REDIRECT_NTH
 (
__gëho°«me_chk_w¨n
,

339 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

340 
__gëho°«me_chk
)

341 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("gethostname called with bigger buflenÅhan "

344 
__exã∫_Æways_ölöe
 

345 
	`__NTH
 (
	$gëho°«me
 (*
__buf
, 
size_t
 
__buÊí
))

347 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

349 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

350  
	`__gëho°«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

352 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

353  
	`__gëho°«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

355  
	`__gëho°«me_Æüs
 (
__buf
, 
__buÊí
);

356 
	}
}

360 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

361 
	$__gëdomaö«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

362 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

363 
	`__REDIRECT_NTH
 (
__gëdomaö«me_Æüs
, (*
__buf
,

364 
size_t
 
__buÊí
),

365 
gëdomaö«me
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

366 
	`__REDIRECT_NTH
 (
__gëdomaö«me_chk_w¨n
,

367 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

368 
__gëdomaö«me_chk
)

369 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("getdomainname called with bigger "

373 
__exã∫_Æways_ölöe
 

374 
	`__NTH
 (
	$gëdomaö«me
 (*
__buf
, 
size_t
 
__buÊí
))

376 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

378 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

379  
	`__gëdomaö«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

381 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

382  
	`__gëdomaö«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

384  
	`__gëdomaö«me_Æüs
 (
__buf
, 
__buÊí
);

385 
	}
}

	@/usr/include/bits/waitflags.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


26 
	#WNOHANG
 1

	)

27 
	#WUNTRACED
 2

	)

30 
	#WSTOPPED
 2

	)

31 
	#WEXITED
 4

	)

32 
	#WCONTINUED
 8

	)

33 
	#WNOWAIT
 0x01000000

	)

35 
	#__WNOTHREAD
 0x20000000

	)

37 
	#__WALL
 0x40000000

	)

38 
	#__WCLONE
 0x80000000

	)

	@/usr/include/bits/waitstatus.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


29 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

32 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

35 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

38 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

41 
	#__WIFSIGNALED
(
°©us
) \

42 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

45 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

49 #ifde‡
WCONTINUED


50 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

54 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

57 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

58 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

59 
	#__W_CONTINUED
 0xffff

	)

60 
	#__WCOREFLAG
 0x80

	)

63 #ifdef 
__USE_BSD


65 
	~<ídün.h
>

67 
	uwaô


69 
	mw_°©us
;

72 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


73 
	m__w_ãrmsig
:7;

74 
	m__w_c‹edump
:1;

75 
	m__w_ªtcode
:8;

78 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


80 
	m__w_ªtcode
:8;

81 
	m__w_c‹edump
:1;

82 
	m__w_ãrmsig
:7;

84 } 
	m__waô_ãrmö©ed
;

87 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


88 
	m__w_°›vÆ
:8;

89 
	m__w_°›sig
:8;

92 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


94 
	m__w_°›sig
:8;

95 
	m__w_°›vÆ
:8;

97 } 
	m__waô_°›≥d
;

100 
	#w_ãrmsig
 
__waô_ãrmö©ed
.
__w_ãrmsig


	)

101 
	#w_c‹edump
 
__waô_ãrmö©ed
.
__w_c‹edump


	)

102 
	#w_ªtcode
 
__waô_ãrmö©ed
.
__w_ªtcode


	)

103 
	#w_°›sig
 
__waô_°›≥d
.
__w_°›sig


	)

104 
	#w_°›vÆ
 
__waô_°›≥d
.
__w_°›vÆ


	)

	@/usr/include/bits/wchar-ldbl.h

20 #i‚de‡
_WCHAR_H


24 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


25 
__BEGIN_NAMESPACE_C99


26 
__LDBL_REDIR_DECL
 (
fw¥ötf
);

27 
__LDBL_REDIR_DECL
 (
w¥ötf
);

28 
__LDBL_REDIR_DECL
 (
sw¥ötf
);

29 
__LDBL_REDIR_DECL
 (
vfw¥ötf
);

30 
__LDBL_REDIR_DECL
 (
vw¥ötf
);

31 
__LDBL_REDIR_DECL
 (
vsw¥ötf
);

32 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

33 && !
deföed
 
	g__REDIRECT
 \

34 && (
deföed
 
	g__STRICT_ANSI__
 || deföed 
	g__USE_XOPEN2K
)

35 
	$__LDBL_REDIR1_DECL
 (
fwsˇnf
, 
__∆dbl___isoc99_fwsˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
wsˇnf
, 
__∆dbl___isoc99_wsˇnf
)

37 
	$__LDBL_REDIR1_DECL
 (
swsˇnf
, 
__∆dbl___isoc99_swsˇnf
)

39 
	`__LDBL_REDIR_DECL
 (
fwsˇnf
);

40 
	`__LDBL_REDIR_DECL
 (
wsˇnf
);

41 
	`__LDBL_REDIR_DECL
 (
swsˇnf
);

43 
__END_NAMESPACE_C99


46 #ifde‡
__USE_ISOC99


47 
__BEGIN_NAMESPACE_C99


48 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd
, 
wc°od
);

49 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

50 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

51 
	$__LDBL_REDIR1_DECL
 (
vfwsˇnf
, 
__∆dbl___isoc99_vfwsˇnf
)

52 
	$__LDBL_REDIR1_DECL
 (
vwsˇnf
, 
__∆dbl___isoc99_vwsˇnf
)

53 
	$__LDBL_REDIR1_DECL
 (
vswsˇnf
, 
__∆dbl___isoc99_vswsˇnf
)

55 
	`__LDBL_REDIR_DECL
 (
vfwsˇnf
);

56 
	`__LDBL_REDIR_DECL
 (
vwsˇnf
);

57 
	`__LDBL_REDIR_DECL
 (
vswsˇnf
);

59 
__END_NAMESPACE_C99


62 #ifde‡
__USE_GNU


63 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd_l
, 
wc°od_l
);

66 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


67 
	$__LDBL_REDIR_DECL
 (
__sw¥ötf_chk
)

68 
	$__LDBL_REDIR_DECL
 (
__vsw¥ötf_chk
)

69 #i‡
__USE_FORTIFY_LEVEL
 > 1

70 
	$__LDBL_REDIR_DECL
 (
__fw¥ötf_chk
)

71 
	$__LDBL_REDIR_DECL
 (
__w¥ötf_chk
)

72 
	$__LDBL_REDIR_DECL
 (
__vfw¥ötf_chk
)

73 
	$__LDBL_REDIR_DECL
 (
__vw¥ötf_chk
)

	@/usr/include/bits/wchar.h

20 #i‚de‡
_BITS_WCHAR_H


21 
	#_BITS_WCHAR_H
 1

	)

24 #ifde‡
__WCHAR_MAX__


25 
	#__WCHAR_MAX
 
__WCHAR_MAX__


	)

27 
	#__WCHAR_MAX
 (2147483647)

	)

32 #ifde‡
__WCHAR_UNSIGNED__


33 
	#__WCHAR_MIN
 
L
'\0'

	)

37 #ñi‡
L
'\0' - 1 > 0

38 
	#__WCHAR_MIN
 
L
'\0'

	)

40 
	#__WCHAR_MIN
 (-
__WCHAR_MAX
 - 1)

	)

	@/usr/include/bits/wchar2.h

20 #i‚de‡
_WCHAR_H


25 
wch¨_t
 *
	$__wmem˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

26 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

27 
size_t
 
__ns1
Ë
__THROW
;

28 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_Æüs
,

29 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

30 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
),

31 
wmem˝y
);

32 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_chk_w¨n
,

33 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

34 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

35 
size_t
 
__ns1
), 
__wmem˝y_chk
)

36 
	`__w¨«âr
 ("wmemcpy called withÜength biggerÅhan size of destination "

39 
__exã∫_Æways_ölöe
 
wch¨_t
 *

40 
	`__NTH
 (
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

41 
size_t
 
__n
))

43 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

45 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

46  
	`__wmem˝y_chk
 (
__s1
, 
__s2
, 
__n
,

47 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

49 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

50  
	`__wmem˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

51 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

53  
	`__wmem˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

54 
	}
}

57 
wch¨_t
 *
	$__wmemmove_chk
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

58 
size_t
 
__n
, size_à
__ns1
Ë
__THROW
;

59 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_Æüs
, (wch¨_à*
__s1
,

60 
__c⁄°
 
wch¨_t
 *
__s2
,

61 
size_t
 
__n
), 
wmemmove
);

62 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_chk_w¨n
,

63 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

64 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

65 
size_t
 
__ns1
), 
__wmemmove_chk
)

66 
	`__w¨«âr
 ("wmemmove called withÜength biggerÅhan size of destination "

69 
__exã∫_Æways_ölöe
 
wch¨_t
 *

70 
	`__NTH
 (
	$wmemmove
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

71 
size_t
 
__n
))

73 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

75 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

76  
	`__wmemmove_chk
 (
__s1
, 
__s2
, 
__n
,

77 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

79 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

80  
	`__wmemmove_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

81 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

83  
	`__wmemmove_Æüs
 (
__s1
, 
__s2
, 
__n
);

84 
	}
}

87 #ifde‡
__USE_GNU


88 
wch¨_t
 *
	$__wmemp˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

89 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

90 
size_t
 
__ns1
Ë
__THROW
;

91 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_Æüs
,

92 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

93 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
,

94 
size_t
 
__n
), 
wmemp˝y
);

95 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_chk_w¨n
,

96 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

97 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

98 
size_t
 
__ns1
), 
__wmemp˝y_chk
)

99 
	`__w¨«âr
 ("wmempcpy called withÜength biggerÅhan size of destination "

102 
__exã∫_Æways_ölöe
 
wch¨_t
 *

103 
	`__NTH
 (
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

104 
size_t
 
__n
))

106 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

108 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

109  
	`__wmemp˝y_chk
 (
__s1
, 
__s2
, 
__n
,

110 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

112 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

113  
	`__wmemp˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

114 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

116  
	`__wmemp˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

117 
	}
}

121 
wch¨_t
 *
	$__wmem£t_chk
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

122 
size_t
 
__ns
Ë
__THROW
;

123 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_Æüs
, (wch¨_à*
__s
, wch¨_à
__c
,

124 
size_t
 
__n
), 
wmem£t
);

125 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_chk_w¨n
,

126 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

127 
size_t
 
__ns
), 
__wmem£t_chk
)

128 
	`__w¨«âr
 ("wmemset called withÜength biggerÅhan size of destination "

131 
__exã∫_Æways_ölöe
 
wch¨_t
 *

132 
	`__NTH
 (
	$wmem£t
 (
wch¨_t
 *
__ª°ri˘
 
__s
, wch¨_à
__c
, 
size_t
 
__n
))

134 i‡(
	`__bos0
 (
__s
Ë!(
size_t
) -1)

136 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

137  
	`__wmem£t_chk
 (
__s
, 
__c
, 
__n
, 
	`__bos0
 (__sË/  (
wch¨_t
));

139 i‡(
__n
 > 
	`__bos0
 (
__s
Ë/  (
wch¨_t
))

140  
	`__wmem£t_chk_w¨n
 (
__s
, 
__c
, 
__n
,

141 
	`__bos0
 (
__s
Ë/  (
wch¨_t
));

143  
	`__wmem£t_Æüs
 (
__s
, 
__c
, 
__n
);

144 
	}
}

147 
wch¨_t
 *
	$__wcs˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

149 
size_t
 
__n
Ë
__THROW
;

150 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcs˝y_Æüs
,

151 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

152 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcs˝y
);

154 
__exã∫_Æways_ölöe
 
wch¨_t
 *

155 
	`__NTH
 (
	$wcs˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
))

157 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

158  
	`__wcs˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

159  
	`__wcs˝y_Æüs
 (
__de°
, 
__§c
);

160 
	}
}

163 
wch¨_t
 *
	$__w˝˝y_chk
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
,

164 
size_t
 
__de°Àn
Ë
__THROW
;

165 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝˝y_Æüs
, (wch¨_à*
__de°
,

166 
__c⁄°
 
wch¨_t
 *
__§c
),

167 
w˝˝y
);

169 
__exã∫_Æways_ölöe
 
wch¨_t
 *

170 
	`__NTH
 (
	$w˝˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
))

172 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

173  
	`__w˝˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

174  
	`__w˝˝y_Æüs
 (
__de°
, 
__§c
);

175 
	}
}

178 
wch¨_t
 *
	$__wc¢˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

179 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

180 
size_t
 
__de°Àn
Ë
__THROW
;

181 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_Æüs
,

182 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

183 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

184 
size_t
 
__n
), 
wc¢˝y
);

185 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_chk_w¨n
,

186 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

187 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

188 
size_t
 
__n
, size_à
__de°Àn
), 
__wc¢˝y_chk
)

189 
	`__w¨«âr
 ("wcsncpy called withÜength biggerÅhan size of destination "

192 
__exã∫_Æways_ölöe
 
wch¨_t
 *

193 
	`__NTH
 (
	$wc¢˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
))

195 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

197 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

198  
	`__wc¢˝y_chk
 (
__de°
, 
__§c
, 
__n
,

199 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

200 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

201  
	`__wc¢˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

202 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

204  
	`__wc¢˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

205 
	}
}

208 
wch¨_t
 *
	$__w˝n˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

209 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

210 
size_t
 
__de°Àn
Ë
__THROW
;

211 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_Æüs
,

212 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

213 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

214 
size_t
 
__n
), 
w˝n˝y
);

215 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_chk_w¨n
,

216 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

217 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

218 
size_t
 
__n
, size_à
__de°Àn
), 
__w˝n˝y_chk
)

219 
	`__w¨«âr
 ("wcpncpy called withÜength biggerÅhan size of destination "

222 
__exã∫_Æways_ölöe
 
wch¨_t
 *

223 
	`__NTH
 (
	$w˝n˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
))

225 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

227 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

228  
	`__w˝n˝y_chk
 (
__de°
, 
__§c
, 
__n
,

229 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

230 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

231  
	`__w˝n˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

232 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

234  
	`__w˝n˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

235 
	}
}

238 
wch¨_t
 *
	$__wcsˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

239 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

240 
size_t
 
__de°Àn
Ë
__THROW
;

241 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcsˇt_Æüs
,

242 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

243 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcsˇt
);

245 
__exã∫_Æways_ölöe
 
wch¨_t
 *

246 
	`__NTH
 (
	$wcsˇt
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
))

248 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

249  
	`__wcsˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

250  
	`__wcsˇt_Æüs
 (
__de°
, 
__§c
);

251 
	}
}

254 
wch¨_t
 *
	$__wc¢ˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

255 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

256 
size_t
 
__n
, size_à
__de°Àn
Ë
__THROW
;

257 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢ˇt_Æüs
,

258 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

259 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

260 
size_t
 
__n
), 
wc¢ˇt
);

262 
__exã∫_Æways_ölöe
 
wch¨_t
 *

263 
	`__NTH
 (
	$wc¢ˇt
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
))

265 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

266  
	`__wc¢ˇt_chk
 (
__de°
, 
__§c
, 
__n
,

267 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

268  
	`__wc¢ˇt_Æüs
 (
__de°
, 
__§c
, 
__n
);

269 
	}
}

272 
	$__sw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

273 
__Êag
, 
size_t
 
__s_Àn
,

274 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

275 
__THROW
 ;

277 
	`__REDIRECT_NTH_LDBL
 (
__sw¥ötf_Æüs
,

278 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

279 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...),

280 
sw¥ötf
);

282 #ifde‡
__va_¨g_∑ck


283 
__exã∫_Æways_ölöe
 

284 
	`__NTH
 (
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

285 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...))

287 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

288  
	`__sw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

289 
	`__bos
 (
__s
Ë/  (
wch¨_t
),

290 
__fmt
, 
	`__va_¨g_∑ck
 ());

291  
	`__sw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
	`__va_¨g_∑ck
 ());

292 
	}
}

293 #ñi‡!
deföed
 
__˝lu•lus


295 
	#sw¥ötf
(
s
, 
n
, ...) \

296 (
	`__bos
 (
s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1 \

297 ? 
	`__sw¥ötf_chk
 (
s
, 
n
, 
__USE_FORTIFY_LEVEL
 - 1, \

298 
	`__bos
 (
s
Ë/  (
wch¨_t
), 
__VA_ARGS__
) \

299 : 
	`sw¥ötf
 (
s
, 
n
, 
__VA_ARGS__
))

	)

302 
	$__vsw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

303 
__Êag
, 
size_t
 
__s_Àn
,

304 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

305 
__gnuc_va_li°
 
__¨g
)

306 
__THROW
 ;

308 
	`__REDIRECT_NTH_LDBL
 (
__vsw¥ötf_Æüs
,

309 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

310 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
,

311 
__gnuc_va_li°
 
__≠
), 
vsw¥ötf
);

313 
__exã∫_Æways_ölöe
 

314 
	`__NTH
 (
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

315 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
))

317 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

318  
	`__vsw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

319 
	`__bos
 (
__s
Ë/  (
wch¨_t
), 
__fmt
, 
__≠
);

320  
	`__vsw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
__≠
);

321 
	}
}

324 #i‡
__USE_FORTIFY_LEVEL
 > 1

326 
__fw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

327 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

328 
__w¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

330 
__vfw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

331 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

332 
__gnuc_va_li°
 
__≠
);

333 
__vw¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

334 
__gnuc_va_li°
 
__≠
);

336 #ifde‡
__va_¨g_∑ck


337 
__exã∫_Æways_ölöe
 

338 
	$w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...)

340  
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

341 
	}
}

343 
__exã∫_Æways_ölöe
 

344 
	$fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__fmt
, ...)

346  
	`__fw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

347 
	`__va_¨g_∑ck
 ());

348 
	}
}

349 #ñi‡!
deföed
 
__˝lu•lus


350 
	#w¥ötf
(...) \

351 
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

352 
	#fw¥ötf
(
°ªam
, ...) \

353 
	`__fw¥ötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

356 
__exã∫_Æways_ölöe
 

357 
	$vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

359  
	`__vw¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

360 
	}
}

362 
__exã∫_Æways_ölöe
 

363 
	$vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

364 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

366  
	`__vfw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

367 
	}
}

371 
wch¨_t
 *
	$__fgëws_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

372 
__FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

373 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_Æüs
,

374 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

375 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws
Ë
__wur
;

376 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_chk_w¨n
,

377 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

378 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgëws_chk
)

379 
__wur
 
	`__w¨«âr
 ("fgetws called with bigger sizeÅhanÜength "

382 
__exã∫_Æways_ölöe
 
__wur
 
wch¨_t
 *

383 
	$fgëws
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

385 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

387 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

388  
	`__fgëws_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

389 
__n
, 
__°ªam
);

391 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

392  
	`__fgëws_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

393 
__n
, 
__°ªam
);

395  
	`__fgëws_Æüs
 (
__s
, 
__n
, 
__°ªam
);

396 
	}
}

398 #ifde‡
__USE_GNU


399 
wch¨_t
 *
	$__fgëws_u∆ocked_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
,

400 
__n
, 
__FILE
 *
__ª°ri˘
 
__°ªam
)

401 
__wur
;

402 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_Æüs
,

403 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

404 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws_u∆ocked
)

405 
__wur
;

406 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_chk_w¨n
,

407 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

408 
__FILE
 *
__ª°ri˘
 
__°ªam
),

409 
__fgëws_u∆ocked_chk
)

410 
__wur
 
	`__w¨«âr
 ("fgetws_unlocked called with bigger sizeÅhanÜength "

413 
__exã∫_Æways_ölöe
 
__wur
 
wch¨_t
 *

414 
	$fgëws_u∆ocked
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

416 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

418 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

419  
	`__fgëws_u∆ocked_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

420 
__n
, 
__°ªam
);

422 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

423  
	`__fgëws_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

424 
__n
, 
__°ªam
);

426  
	`__fgëws_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

427 
	}
}

431 
size_t
 
	$__w¸tomb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
mb°©e_t
 *
__p
,

432 
size_t
 
__buÊí
Ë
__THROW
 
__wur
;

433 
size_t
 
	`__REDIRECT_NTH
 (
__w¸tomb_Æüs
,

434 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

435 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
w¸tomb
Ë
__wur
;

437 
__exã∫_Æways_ölöe
 
__wur
 
size_t


438 
	`__NTH
 (
	$w¸tomb
 (*
__s
, 
wch¨_t
 
__wch¨
, 
mb°©e_t
 *
__ps
))

443 
	#__WCHAR_MB_LEN_MAX
 16

	)

444 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__WCHAR_MB_LEN_MAX


447 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__WCHAR_MB_LEN_MAX
 > __bos (__s))

448  
	`__w¸tomb_chk
 (
__s
, 
__wch¨
, 
__ps
, 
	`__bos
 (__s));

449  
	`__w¸tomb_Æüs
 (
__s
, 
__wch¨
, 
__ps
);

450 
	}
}

453 
size_t
 
	$__mb§towcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

454 
__c⁄°
 **
__ª°ri˘
 
__§c
,

455 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

456 
size_t
 
__d°Àn
Ë
__THROW
;

457 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_Æüs
,

458 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

459 
__c⁄°
 **
__ª°ri˘
 
__§c
,

460 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

461 
mb§towcs
);

462 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_chk_w¨n
,

463 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

464 
__c⁄°
 **
__ª°ri˘
 
__§c
,

465 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

466 
size_t
 
__d°Àn
), 
__mb§towcs_chk
)

467 
	`__w¨«âr
 ("mbsrtowcs called with dst buffer smallerÅhanÜen "

470 
__exã∫_Æways_ölöe
 
size_t


471 
	`__NTH
 (
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

472 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

474 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

476 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

477  
	`__mb§towcs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

478 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

480 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

481  
	`__mb§towcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

482 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

484  
	`__mb§towcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

485 
	}
}

488 
size_t
 
	$__wc§tombs_chk
 (*
__ª°ri˘
 
__d°
,

489 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

490 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

491 
size_t
 
__d°Àn
Ë
__THROW
;

492 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_Æüs
,

493 (*
__ª°ri˘
 
__d°
,

494 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

495 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

496 
wc§tombs
);

497 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_chk_w¨n
,

498 (*
__ª°ri˘
 
__d°
,

499 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

500 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

501 
size_t
 
__d°Àn
), 
__wc§tombs_chk
)

502 
	`__w¨«âr
 ("wcsrtombs called with dst buffer smallerÅhanÜen");

504 
__exã∫_Æways_ölöe
 
size_t


505 
	`__NTH
 (
	$wc§tombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

506 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

508 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

510 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

511  
	`__wc§tombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

513 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

514  
	`__wc§tombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

516  
	`__wc§tombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

517 
	}
}

520 #ifde‡
__USE_GNU


521 
size_t
 
	$__mb¢πowcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

522 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

523 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

524 
size_t
 
__d°Àn
Ë
__THROW
;

525 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_Æüs
,

526 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

527 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

528 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

529 
mb¢πowcs
);

530 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_chk_w¨n
,

531 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

532 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

533 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

534 
size_t
 
__d°Àn
), 
__mb¢πowcs_chk
)

535 
	`__w¨«âr
 ("mbsnrtowcs called with dst buffer smallerÅhanÜen "

538 
__exã∫_Æways_ölöe
 
size_t


539 
	`__NTH
 (
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

540 
size_t
 
__nmc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

542 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

544 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

545  
	`__mb¢πowcs_chk
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

546 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

548 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

549  
	`__mb¢πowcs_chk_w¨n
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

550 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

552  
	`__mb¢πowcs_Æüs
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
);

553 
	}
}

556 
size_t
 
	$__wc¢πombs_chk
 (*
__ª°ri˘
 
__d°
,

557 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

558 
size_t
 
__nwc
, size_à
__Àn
,

559 
mb°©e_t
 *
__ª°ri˘
 
__ps
, 
size_t
 
__d°Àn
)

560 
__THROW
;

561 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_Æüs
,

562 (*
__ª°ri˘
 
__d°
,

563 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

564 
size_t
 
__nwc
, size_à
__Àn
,

565 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
wc¢πombs
);

566 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_chk_w¨n
,

567 (*
__ª°ri˘
 
__d°
,

568 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

569 
size_t
 
__nwc
, size_à
__Àn
,

570 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

571 
size_t
 
__d°Àn
), 
__wc¢πombs_chk
)

572 
	`__w¨«âr
 ("wcsnrtombs called with dst buffer smallerÅhanÜen");

574 
__exã∫_Æways_ölöe
 
size_t


575 
	`__NTH
 (
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

576 
size_t
 
__nwc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

578 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

580 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

581  
	`__wc¢πombs_chk
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

582 
	`__bos
 (
__d°
));

584 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

585  
	`__wc¢πombs_chk_w¨n
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

586 
	`__bos
 (
__d°
));

588  
	`__wc¢πombs_Æüs
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
);

589 
	}
}

	@/usr/include/endian.h

19 #i‚def 
_ENDIAN_H


20 
	#_ENDIAN_H
 1

	)

22 
	~<„©uªs.h
>

32 
	#__LITTLE_ENDIAN
 1234

	)

33 
	#__BIG_ENDIAN
 4321

	)

34 
	#__PDP_ENDIAN
 3412

	)

37 
	~<bôs/ídün.h
>

41 #i‚de‡
__FLOAT_WORD_ORDER


42 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

45 #ifdef 
__USE_BSD


46 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

47 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

48 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

49 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

52 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


53 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

54 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


55 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

59 #ifde‡
__USE_BSD


61 
	~<bôs/byãsw≠.h
>

63 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


64 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

65 
	#htﬁe16
(
x
Ë(x)

	)

66 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

67 
	#À16toh
(
x
Ë(x)

	)

69 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

70 
	#htﬁe32
(
x
Ë(x)

	)

71 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

72 
	#À32toh
(
x
Ë(x)

	)

74 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

75 
	#htﬁe64
(
x
Ë(x)

	)

76 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

77 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/features.h

19 #i‚def 
_FEATURES_H


20 
	#_FEATURES_H
 1

	)

95 #unde‡
__USE_ISOC99


96 #unde‡
__USE_ISOC95


97 #unde‡
__USE_POSIX


98 #unde‡
__USE_POSIX2


99 #unde‡
__USE_POSIX199309


100 #unde‡
__USE_POSIX199506


101 #unde‡
__USE_XOPEN


102 #unde‡
__USE_XOPEN_EXTENDED


103 #unde‡
__USE_UNIX98


104 #unde‡
__USE_XOPEN2K


105 #unde‡
__USE_XOPEN2K8


106 #unde‡
__USE_LARGEFILE


107 #unde‡
__USE_LARGEFILE64


108 #unde‡
__USE_FILE_OFFSET64


109 #unde‡
__USE_BSD


110 #unde‡
__USE_SVID


111 #unde‡
__USE_MISC


112 #unde‡
__USE_ATFILE


113 #unde‡
__USE_GNU


114 #unde‡
__USE_REENTRANT


115 #unde‡
__USE_FORTIFY_LEVEL


116 #unde‡
__FAVOR_BSD


117 #unde‡
__KERNEL_STRICT_NAMES


121 #i‚de‡
_LOOSE_KERNEL_NAMES


122 
	#__KERNEL_STRICT_NAMES


	)

126 
	#__USE_ANSI
 1

	)

135 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


136 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

137 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

139 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

144 #i‡
deföed
 
_BSD_SOURCE
 && \

145 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

146 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_XOPEN_SOURCE_EXTENDED
 || \

147 
deföed
 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

148 
	#__FAVOR_BSD
 1

	)

152 #ifde‡
_GNU_SOURCE


153 #unde‡
_ISOC99_SOURCE


154 
	#_ISOC99_SOURCE
 1

	)

155 #unde‡
_POSIX_SOURCE


156 
	#_POSIX_SOURCE
 1

	)

157 #unde‡
_POSIX_C_SOURCE


158 
	#_POSIX_C_SOURCE
 200809L

	)

159 #unde‡
_XOPEN_SOURCE


160 
	#_XOPEN_SOURCE
 700

	)

161 #unde‡
_XOPEN_SOURCE_EXTENDED


162 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

163 #unde‡
_LARGEFILE64_SOURCE


164 
	#_LARGEFILE64_SOURCE
 1

	)

165 #unde‡
_BSD_SOURCE


166 
	#_BSD_SOURCE
 1

	)

167 #unde‡
_SVID_SOURCE


168 
	#_SVID_SOURCE
 1

	)

169 #unde‡
_ATFILE_SOURCE


170 
	#_ATFILE_SOURCE
 1

	)

175 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

176 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

177 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_XOPEN_SOURCE_EXTENDED
 && \

178 !
deföed
 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

179 
	#_BSD_SOURCE
 1

	)

180 
	#_SVID_SOURCE
 1

	)

187 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

188 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

189 
	#__USE_ISOC99
 1

	)

193 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

194 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

195 
	#__USE_ISOC95
 1

	)

200 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

201 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

202 
	#_POSIX_SOURCE
 1

	)

203 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

204 
	#_POSIX_C_SOURCE
 2

	)

205 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

206 
	#_POSIX_C_SOURCE
 199506L

	)

207 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

208 
	#_POSIX_C_SOURCE
 200112L

	)

210 
	#_POSIX_C_SOURCE
 200809L

	)

212 
	#__USE_POSIX_IMPLICITLY
 1

	)

215 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


216 
	#__USE_POSIX
 1

	)

219 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


220 
	#__USE_POSIX2
 1

	)

223 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

224 
	#__USE_POSIX199309
 1

	)

227 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

228 
	#__USE_POSIX199506
 1

	)

231 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

232 
	#__USE_XOPEN2K
 1

	)

233 #unde‡
__USE_ISOC99


234 
	#__USE_ISOC99
 1

	)

237 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

238 
	#__USE_XOPEN2K8
 1

	)

239 #unde‡
_ATFILE_SOURCE


240 
	#_ATFILE_SOURCE
 1

	)

243 #ifdef 
_XOPEN_SOURCE


244 
	#__USE_XOPEN
 1

	)

245 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

246 
	#__USE_XOPEN_EXTENDED
 1

	)

247 
	#__USE_UNIX98
 1

	)

248 #unde‡
_LARGEFILE_SOURCE


249 
	#_LARGEFILE_SOURCE
 1

	)

250 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

251 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

252 
	#__USE_XOPEN2K8
 1

	)

254 
	#__USE_XOPEN2K
 1

	)

255 #unde‡
__USE_ISOC99


256 
	#__USE_ISOC99
 1

	)

259 #ifde‡
_XOPEN_SOURCE_EXTENDED


260 
	#__USE_XOPEN_EXTENDED
 1

	)

265 #ifde‡
_LARGEFILE_SOURCE


266 
	#__USE_LARGEFILE
 1

	)

269 #ifde‡
_LARGEFILE64_SOURCE


270 
	#__USE_LARGEFILE64
 1

	)

273 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

274 
	#__USE_FILE_OFFSET64
 1

	)

277 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


278 
	#__USE_MISC
 1

	)

281 #ifdef 
_BSD_SOURCE


282 
	#__USE_BSD
 1

	)

285 #ifdef 
_SVID_SOURCE


286 
	#__USE_SVID
 1

	)

289 #ifdef 
_ATFILE_SOURCE


290 
	#__USE_ATFILE
 1

	)

293 #ifdef 
_GNU_SOURCE


294 
	#__USE_GNU
 1

	)

297 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


298 
	#__USE_REENTRANT
 1

	)

301 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

302 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

303 #i‡
_FORTIFY_SOURCE
 > 1

304 
	#__USE_FORTIFY_LEVEL
 2

	)

306 
	#__USE_FORTIFY_LEVEL
 1

	)

309 
	#__USE_FORTIFY_LEVEL
 0

	)

313 
	~<bôs/¥edefs.h
>

316 
	#__STDC_ISO_10646__
 200009L

	)

324 #unde‡
__GNU_LIBRARY__


325 
	#__GNU_LIBRARY__
 6

	)

329 
	#__GLIBC__
 2

	)

330 
	#__GLIBC_MINOR__
 11

	)

332 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

333 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

336 #i‡
deföed
 
__GNUC__
 \

337 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

338 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

339 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

340 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

344 #i‚de‡
__ASSEMBLER__


345 #i‚de‡
_SYS_CDEFS_H


346 
	~<sys/cdefs.h
>

351 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


352 
	#__USE_LARGEFILE
 1

	)

353 
	#__USE_LARGEFILE64
 1

	)

359 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

360 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

361 && 
deföed
 
	g__exã∫_ölöe


362 
	#__USE_EXTERN_INLINES
 1

	)

367 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

368 && (
deföed
 
	g_LIBC
 || !deföed 
	g__OPTIMIZE_SIZE__
Ë&& !deföed 
	g__NO_INLINE__
 \

369 && 
deföed
 
	g__exã∫_ölöe


370 
	#__USE_EXTERN_INLINES_IN_LIBC
 1

	)

378 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

21 #i‚de‡
_GETOPT_H


23 #i‚de‡
__√ed_gë›t


24 
	#_GETOPT_H
 1

	)

34 #i‡!
deföed
 
__GNU_LIBRARY__


35 
	~<˘y≥.h
>

38 #i‚de‡
__THROW


39 #i‚de‡
__GNUC_PREREQ


40 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

42 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

43 
	#__THROW
 
	`throw
 ()

	)

45 
	#__THROW


	)

49 #ifdef 
__˝lu•lus


59 *
›èrg
;

73 
›töd
;

78 
›ãº
;

82 
›t›t
;

84 #i‚de‡
__√ed_gë›t


106 
	s›ti⁄


108 c⁄° *
	g«me
;

111 
	ghas_¨g
;

112 *
	gÊag
;

113 
	gvÆ
;

118 
	#no_¨gumít
 0

	)

119 
	#ªquúed_¨gumít
 1

	)

120 
	#›ti⁄Æ_¨gumít
 2

	)

148 #ifde‡
__GNU_LIBRARY__


152 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

153 
__THROW
;

155 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

156 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


160 #ifde‡
__REDIRECT


161 
__REDIRECT
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

162 c⁄° *
__sh‹t›ts
),

163 
__posix_gë›t
Ë
__THROW
;

165 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

166 c⁄° *
__sh‹t›ts
Ë
__THROW
;

167 
	#gë›t
 
__posix_gë›t


	)

171 
gë›t
 ();

174 #i‚de‡
__√ed_gë›t


175 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

176 c⁄° *
__sh‹t›ts
,

177 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

178 
__THROW
;

179 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

180 c⁄° *
__sh‹t›ts
,

181 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

182 
__THROW
;

186 #ifdef 
__˝lu•lus


191 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

29 #i‚de‡
_IO_STDIO_H


30 
	#_IO_STDIO_H


	)

32 
	~<_G_c⁄fig.h
>

34 
	#_IO_pos_t
 
_G_Âos_t


	)

35 
	#_IO_Âos_t
 
_G_Âos_t


	)

36 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

37 
	#_IO_size_t
 
_G_size_t


	)

38 
	#_IO_ssize_t
 
_G_ssize_t


	)

39 
	#_IO_off_t
 
_G_off_t


	)

40 
	#_IO_off64_t
 
_G_off64_t


	)

41 
	#_IO_pid_t
 
_G_pid_t


	)

42 
	#_IO_uid_t
 
_G_uid_t


	)

43 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

44 
	#_IO_HAVE_SYS_WAIT
 
_G_HAVE_SYS_WAIT


	)

45 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

46 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

47 
	#_IO_va_li°
 
_G_va_li°


	)

48 
	#_IO_wöt_t
 
_G_wöt_t


	)

50 #ifde‡
_G_NEED_STDARG_H


52 
	#__√ed___va_li°


	)

53 
	~<°d¨g.h
>

54 #ifde‡
__GNUC_VA_LIST


55 #unde‡
_IO_va_li°


56 
	#_IO_va_li°
 
__gnuc_va_li°


	)

60 #i‚de‡
__P


61 #i‡
_G_HAVE_SYS_CDEFS


62 
	~<sys/cdefs.h
>

64 #ifde‡
__STDC__


65 
	#__P
(
p
Ë
	)
p

66 
	#__PMT
(
p
Ë
	)
p

68 
	#__P
(
p
Ë()

	)

69 
	#__PMT
(
p
Ë()

	)

75 #i‚de‡
_PARAMS


76 
	#_PARAMS
(
¥Ÿos
Ë
	`__P
’rŸos)

	)

79 #i‚de‡
__STDC__


81 c⁄°

	)

84 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

85 #i‚de‡
_G_HAVE_PRINTF_FP


86 
	#_IO_USE_DTOA
 1

	)

89 #i‚de‡
EOF


90 
	#EOF
 (-1)

	)

92 #i‚de‡
NULL


93 #i‡
deföed
 
__GNUG__
 && \

94 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

95 
	#NULL
 (
__nuŒ
)

	)

97 #i‡!
deföed
(
__˝lu•lus
)

98 
	#NULL
 ((*)0)

	)

100 
	#NULL
 (0)

	)

105 
	#_IOS_INPUT
 1

	)

106 
	#_IOS_OUTPUT
 2

	)

107 
	#_IOS_ATEND
 4

	)

108 
	#_IOS_APPEND
 8

	)

109 
	#_IOS_TRUNC
 16

	)

110 
	#_IOS_NOCREATE
 32

	)

111 
	#_IOS_NOREPLACE
 64

	)

112 
	#_IOS_BIN
 128

	)

120 
	#_IO_MAGIC
 0xFBAD0000

	)

121 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

122 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

123 
	#_IO_USER_BUF
 1

	)

124 
	#_IO_UNBUFFERED
 2

	)

125 
	#_IO_NO_READS
 4

	)

126 
	#_IO_NO_WRITES
 8

	)

127 
	#_IO_EOF_SEEN
 0x10

	)

128 
	#_IO_ERR_SEEN
 0x20

	)

129 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

130 
	#_IO_LINKED
 0x80

	)

131 
	#_IO_IN_BACKUP
 0x100

	)

132 
	#_IO_LINE_BUF
 0x200

	)

133 
	#_IO_TIED_PUT_GET
 0x400

	)

134 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

135 
	#_IO_IS_APPENDING
 0x1000

	)

136 
	#_IO_IS_FILEBUF
 0x2000

	)

137 
	#_IO_BAD_SEEN
 0x4000

	)

138 
	#_IO_USER_LOCK
 0x8000

	)

140 
	#_IO_FLAGS2_MMAP
 1

	)

141 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

142 #ifde‡
_LIBC


143 
	#_IO_FLAGS2_FORTIFY
 4

	)

145 
	#_IO_FLAGS2_USER_WBUF
 8

	)

146 #ifde‡
_LIBC


147 
	#_IO_FLAGS2_SCANF_STD
 16

	)

151 
	#_IO_SKIPWS
 01

	)

152 
	#_IO_LEFT
 02

	)

153 
	#_IO_RIGHT
 04

	)

154 
	#_IO_INTERNAL
 010

	)

155 
	#_IO_DEC
 020

	)

156 
	#_IO_OCT
 040

	)

157 
	#_IO_HEX
 0100

	)

158 
	#_IO_SHOWBASE
 0200

	)

159 
	#_IO_SHOWPOINT
 0400

	)

160 
	#_IO_UPPERCASE
 01000

	)

161 
	#_IO_SHOWPOS
 02000

	)

162 
	#_IO_SCIENTIFIC
 04000

	)

163 
	#_IO_FIXED
 010000

	)

164 
	#_IO_UNITBUF
 020000

	)

165 
	#_IO_STDIO
 040000

	)

166 
	#_IO_DONT_CLOSE
 0100000

	)

167 
	#_IO_BOOLALPHA
 0200000

	)

170 
_IO_jump_t
; 
	g_IO_FILE
;

173 #ifde‡
_IO_MTSAFE_IO


174 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

175 
	~<bôs/°dio-lock.h
>

180 
	t_IO_lock_t
;

186 
	s_IO_m¨kî
 {

187 
_IO_m¨kî
 *
	m_√xt
;

188 
_IO_FILE
 *
	m_sbuf
;

192 
	m_pos
;

194 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

195 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

196 
	mpublic
:

197 
°ªamm¨kî
(
°ªambuf
 *
sb
);

198 ~
°ªamm¨kî
();

199 
ßvög
(Ë{  
	m_•os
 == -2; }

200 
dñè
(
°ªamm¨kî
&);

201 
dñè
();

206 
	e__codecvt_ªsu…


208 
	m__codecvt_ok
,

209 
	m__codecvt_∑πül
,

210 
	m__codecvt_îr‹
,

211 
	m__codecvt_noc⁄v


214 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


217 
	s_IO_codecvt


219 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

220 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

221 
	m__mb°©e_t
 *,

222 c⁄° 
	mwch¨_t
 *,

223 c⁄° 
	mwch¨_t
 *,

224 c⁄° 
	mwch¨_t
 **, *,

226 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

227 
	m__mb°©e_t
 *, *,

229 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

230 
	m__mb°©e_t
 *,

232 c⁄° **, 
	mwch¨_t
 *,

233 
	mwch¨_t
 *, wchar_t **);

234 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

235 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

236 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

237 c⁄° *, c⁄° *, 
	m_IO_size_t
);

238 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

240 
_IO_ic⁄v_t
 
	m__cd_ö
;

241 
_IO_ic⁄v_t
 
	m__cd_out
;

245 
	s_IO_wide_d©a


247 
wch¨_t
 *
	m_IO_ªad_±r
;

248 
wch¨_t
 *
	m_IO_ªad_íd
;

249 
wch¨_t
 *
	m_IO_ªad_ba£
;

250 
wch¨_t
 *
	m_IO_wrôe_ba£
;

251 
wch¨_t
 *
	m_IO_wrôe_±r
;

252 
wch¨_t
 *
	m_IO_wrôe_íd
;

253 
wch¨_t
 *
	m_IO_buf_ba£
;

254 
wch¨_t
 *
	m_IO_buf_íd
;

256 
wch¨_t
 *
	m_IO_ßve_ba£
;

257 
wch¨_t
 *
	m_IO_backup_ba£
;

259 
wch¨_t
 *
	m_IO_ßve_íd
;

261 
__mb°©e_t
 
	m_IO_°©e
;

262 
__mb°©e_t
 
	m_IO_œ°_°©e
;

263 
_IO_codecvt
 
	m_codecvt
;

265 
wch¨_t
 
	m_sh‹tbuf
[1];

267 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

271 
	s_IO_FILE
 {

272 
	m_Êags
;

273 
	#_IO_fûe_Êags
 
_Êags


	)

277 * 
	m_IO_ªad_±r
;

278 * 
	m_IO_ªad_íd
;

279 * 
	m_IO_ªad_ba£
;

280 * 
	m_IO_wrôe_ba£
;

281 * 
	m_IO_wrôe_±r
;

282 * 
	m_IO_wrôe_íd
;

283 * 
	m_IO_buf_ba£
;

284 * 
	m_IO_buf_íd
;

286 *
	m_IO_ßve_ba£
;

287 *
	m_IO_backup_ba£
;

288 *
	m_IO_ßve_íd
;

290 
_IO_m¨kî
 *
	m_m¨kîs
;

292 
_IO_FILE
 *
	m_chaö
;

294 
	m_fûío
;

296 
	m_blksize
;

298 
	m_Êags2
;

300 
_IO_off_t
 
	m_ﬁd_off£t
;

302 
	#__HAVE_COLUMN


	)

304 
	m_cur_cﬁumn
;

305 sig√d 
	m_vèbÀ_off£t
;

306 
	m_sh‹tbuf
[1];

310 
_IO_lock_t
 *
	m_lock
;

311 #ifde‡
_IO_USE_OLD_IO_FILE


314 
	s_IO_FILE_com∂ëe


316 
_IO_FILE
 
	m_fûe
;

318 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

319 
_IO_off64_t
 
	m_off£t
;

320 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


322 
_IO_codecvt
 *
	m_codecvt
;

323 
_IO_wide_d©a
 *
	m_wide_d©a
;

324 
_IO_FILE
 *
	m_‰ìªs_li°
;

325 *
	m_‰ìªs_buf
;

326 
size_t
 
	m_‰ìªs_size
;

328 *
	m__∑d1
;

329 *
	m__∑d2
;

330 *
	m__∑d3
;

331 *
	m__∑d4
;

332 
size_t
 
	m__∑d5
;

334 
	m_mode
;

336 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

340 #i‚de‡
__˝lu•lus


341 
_IO_FILE
 
	t_IO_FILE
;

344 
	g_IO_FILE_∂us
;

346 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

347 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

348 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

349 #i‚de‡
_LIBC


350 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

351 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

352 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

354 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

355 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

356 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

364 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

372 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, 
	t__c⁄°
 *
	t__buf
,

373 
	tsize_t
 
	t__n
);

381 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

384 
	t__io_˛o£_‚
 (*
	t__cookõ
);

387 #ifde‡
_GNU_SOURCE


389 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

390 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

391 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

392 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

397 
__io_ªad_‚
 *
	mªad
;

398 
__io_wrôe_‚
 *
	mwrôe
;

399 
__io_£ek_‚
 *
	m£ek
;

400 
__io_˛o£_‚
 *
	m˛o£
;

401 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

402 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

404 
	g_IO_cookõ_fûe
;

407 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

408 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

412 #ifde‡
__˝lu•lus


416 
__undîÊow
 (
_IO_FILE
 *);

417 
__uÊow
 (
_IO_FILE
 *);

418 
__ovîÊow
 (
_IO_FILE
 *, );

419 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


420 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

421 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

422 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

425 #i‡ 
__GNUC__
 >= 3

426 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

428 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

431 
	#_IO_gëc_u∆ocked
(
_Â
) \

432 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

433 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

434 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

435 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

436 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

437 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

438 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

439 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

440 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

441 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

443 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


444 
	#_IO_gëwc_u∆ocked
(
_Â
) \

445 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

446 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

447 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

448 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

449 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

450 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

451 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

452 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

453 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

454 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

457 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

458 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

460 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

461 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

462 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

463 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

465 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

468 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

469 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

471 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

472 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

473 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

475 #ifde‡
_IO_MTSAFE_IO


476 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

477 
	#_IO_Êockfûe
(
_Â
) \

478 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

479 
	#_IO_fu∆ockfûe
(
_Â
) \

480 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

482 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

483 
	#_IO_Êockfûe
(
_Â
Ë

	)

484 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

485 
	#_IO_·rylockfûe
(
_Â
Ë

	)

486 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

487 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

490 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

491 
_IO_va_li°
, *
__ª°ri˘
);

492 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

493 
_IO_va_li°
);

494 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

495 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

497 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

498 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

500 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

502 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


503 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

504 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

505 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

506 #i‡
__GNUC__
 >= 2

509 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


510 
	~<shlib-com∑t.h
>

511 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

512 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

513 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

514 c⁄° 
_IO_°dö_u£d
;

515 
wók_exã∫
 (
_IO_°dö_u£d
);

518 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


519 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

523 
	#_IO_fwide
(
__Â
, 
__mode
) \

524 ({ 
__ªsu…
 = (
__mode
); \

525 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

527 i‡((
__Â
)->
_mode
 == 0) \

529 (
__Â
)->
_mode
 = -1; \

530 
__ªsu…
 = (
__Â
)->
_mode
; \

532 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

533 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

535 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

536 
__ªsu…
; })

	)

539 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

540 
_IO_va_li°
, *
__ª°ri˘
);

541 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

542 
_IO_va_li°
);

543 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

544 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

547 #ifde‡
__LDBL_COMPAT


548 
	~<bôs/libio-ldbl.h
>

551 #ifde‡
__˝lu•lus


	@/usr/include/limits.h

24 #i‚de‡
_LIBC_LIMITS_H_


25 
	#_LIBC_LIMITS_H_
 1

	)

27 
	~<„©uªs.h
>

33 
	#MB_LEN_MAX
 16

	)

38 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

43 #i‚de‡
_LIMITS_H


44 
	#_LIMITS_H
 1

	)

46 
	~<bôs/w‹dsize.h
>

55 
	#CHAR_BIT
 8

	)

58 
	#SCHAR_MIN
 (-128)

	)

59 
	#SCHAR_MAX
 127

	)

62 
	#UCHAR_MAX
 255

	)

65 #ifde‡
__CHAR_UNSIGNED__


66 
	#CHAR_MIN
 0

	)

67 
	#CHAR_MAX
 
UCHAR_MAX


	)

69 
	#CHAR_MIN
 
SCHAR_MIN


	)

70 
	#CHAR_MAX
 
SCHAR_MAX


	)

74 
	#SHRT_MIN
 (-32768)

	)

75 
	#SHRT_MAX
 32767

	)

78 
	#USHRT_MAX
 65535

	)

81 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

82 
	#INT_MAX
 2147483647

	)

85 
	#UINT_MAX
 4294967295U

	)

88 #i‡
__WORDSIZE
 == 64

89 
	#LONG_MAX
 9223372036854775807L

	)

91 
	#LONG_MAX
 2147483647L

	)

93 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

96 #i‡
__WORDSIZE
 == 64

97 
	#ULONG_MAX
 18446744073709551615UL

	)

99 
	#ULONG_MAX
 4294967295UL

	)

102 #ifde‡
__USE_ISOC99


105 
	#LLONG_MAX
 9223372036854775807LL

	)

106 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

109 
	#ULLONG_MAX
 18446744073709551615ULL

	)

123 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


125 #ö˛ude_√xà<
limôs
.
h
>

131 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


132 #i‚de‡
LLONG_MIN


133 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

135 #i‚de‡
LLONG_MAX


136 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

138 #i‚de‡
ULLONG_MAX


139 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

143 #ifdef 
__USE_POSIX


145 
	~<bôs/posix1_lim.h
>

148 #ifdef 
__USE_POSIX2


149 
	~<bôs/posix2_lim.h
>

152 #ifdef 
__USE_XOPEN


153 
	~<bôs/x›í_lim.h
>

	@/usr/include/linux/limits.h

1 #i‚de‡
_LINUX_LIMITS_H


2 
	#_LINUX_LIMITS_H


	)

4 
	#NR_OPEN
 1024

	)

6 
	#NGROUPS_MAX
 65536

	)

7 
	#ARG_MAX
 131072

	)

8 
	#LINK_MAX
 127

	)

9 
	#MAX_CANON
 255

	)

10 
	#MAX_INPUT
 255

	)

11 
	#NAME_MAX
 255

	)

12 
	#PATH_MAX
 4096

	)

13 
	#PIPE_BUF
 4096

	)

14 
	#XATTR_NAME_MAX
 255

	)

15 
	#XATTR_SIZE_MAX
 65536

	)

16 
	#XATTR_LIST_MAX
 65536

	)

18 
	#RTSIG_MAX
 32

	)

	@/usr/include/linux/param.h

1 #i‚de‡
_LINUX_PARAM_H


2 
	#_LINUX_PARAM_H


	)

4 
	~<asm/∑øm.h
>

	@/usr/include/stdint.h

23 #i‚de‡
_STDINT_H


24 
	#_STDINT_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/wch¨.h
>

28 
	~<bôs/w‹dsize.h
>

35 #i‚de‡
__öt8_t_deföed


36 
	#__öt8_t_deföed


	)

37 sig√d 
	töt8_t
;

38 
	töt16_t
;

39 
	töt32_t
;

40 #i‡
__WORDSIZE
 == 64

41 
	töt64_t
;

43 
__exãnsi⁄__


44 
	töt64_t
;

49 
	tuöt8_t
;

50 
	tuöt16_t
;

51 #i‚de‡
__uöt32_t_deföed


52 
	tuöt32_t
;

53 
	#__uöt32_t_deföed


	)

55 #i‡
__WORDSIZE
 == 64

56 
	tuöt64_t
;

58 
__exãnsi⁄__


59 
	tuöt64_t
;

66 sig√d 
	töt_Àa°8_t
;

67 
	töt_Àa°16_t
;

68 
	töt_Àa°32_t
;

69 #i‡
__WORDSIZE
 == 64

70 
	töt_Àa°64_t
;

72 
__exãnsi⁄__


73 
	töt_Àa°64_t
;

77 
	tuöt_Àa°8_t
;

78 
	tuöt_Àa°16_t
;

79 
	tuöt_Àa°32_t
;

80 #i‡
__WORDSIZE
 == 64

81 
	tuöt_Àa°64_t
;

83 
__exãnsi⁄__


84 
	tuöt_Àa°64_t
;

91 sig√d 
	töt_Á°8_t
;

92 #i‡
__WORDSIZE
 == 64

93 
	töt_Á°16_t
;

94 
	töt_Á°32_t
;

95 
	töt_Á°64_t
;

97 
	töt_Á°16_t
;

98 
	töt_Á°32_t
;

99 
__exãnsi⁄__


100 
	töt_Á°64_t
;

104 
	tuöt_Á°8_t
;

105 #i‡
__WORDSIZE
 == 64

106 
	tuöt_Á°16_t
;

107 
	tuöt_Á°32_t
;

108 
	tuöt_Á°64_t
;

110 
	tuöt_Á°16_t
;

111 
	tuöt_Á°32_t
;

112 
__exãnsi⁄__


113 
	tuöt_Á°64_t
;

118 #i‡
__WORDSIZE
 == 64

119 #i‚de‡
__öçå_t_deföed


120 
	töçå_t
;

121 
	#__öçå_t_deföed


	)

123 
	tuöçå_t
;

125 #i‚de‡
__öçå_t_deföed


126 
	töçå_t
;

127 
	#__öçå_t_deföed


	)

129 
	tuöçå_t
;

134 #i‡
__WORDSIZE
 == 64

135 
	tötmax_t
;

136 
	tuötmax_t
;

138 
__exãnsi⁄__


139 
	tötmax_t
;

140 
__exãnsi⁄__


141 
	tuötmax_t
;

147 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_LIMIT_MACROS


149 #i‡
__WORDSIZE
 == 64

150 
	#__INT64_C
(
c
Ë¯## 
L


	)

151 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

153 
	#__INT64_C
(
c
Ë¯## 
LL


	)

154 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

160 
	#INT8_MIN
 (-128)

	)

161 
	#INT16_MIN
 (-32767-1)

	)

162 
	#INT32_MIN
 (-2147483647-1)

	)

163 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

165 
	#INT8_MAX
 (127)

	)

166 
	#INT16_MAX
 (32767)

	)

167 
	#INT32_MAX
 (2147483647)

	)

168 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

171 
	#UINT8_MAX
 (255)

	)

172 
	#UINT16_MAX
 (65535)

	)

173 
	#UINT32_MAX
 (4294967295U)

	)

174 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

178 
	#INT_LEAST8_MIN
 (-128)

	)

179 
	#INT_LEAST16_MIN
 (-32767-1)

	)

180 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

181 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

183 
	#INT_LEAST8_MAX
 (127)

	)

184 
	#INT_LEAST16_MAX
 (32767)

	)

185 
	#INT_LEAST32_MAX
 (2147483647)

	)

186 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

189 
	#UINT_LEAST8_MAX
 (255)

	)

190 
	#UINT_LEAST16_MAX
 (65535)

	)

191 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

192 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

196 
	#INT_FAST8_MIN
 (-128)

	)

197 #i‡
__WORDSIZE
 == 64

198 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

199 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

201 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

202 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

204 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

206 
	#INT_FAST8_MAX
 (127)

	)

207 #i‡
__WORDSIZE
 == 64

208 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

209 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

211 
	#INT_FAST16_MAX
 (2147483647)

	)

212 
	#INT_FAST32_MAX
 (2147483647)

	)

214 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

217 
	#UINT_FAST8_MAX
 (255)

	)

218 #i‡
__WORDSIZE
 == 64

219 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

220 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

222 
	#UINT_FAST16_MAX
 (4294967295U)

	)

223 
	#UINT_FAST32_MAX
 (4294967295U)

	)

225 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

229 #i‡
__WORDSIZE
 == 64

230 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

231 
	#INTPTR_MAX
 (9223372036854775807L)

	)

232 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

234 
	#INTPTR_MIN
 (-2147483647-1)

	)

235 
	#INTPTR_MAX
 (2147483647)

	)

236 
	#UINTPTR_MAX
 (4294967295U)

	)

241 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

243 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

246 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

252 #i‡
__WORDSIZE
 == 64

253 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

254 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

256 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

257 
	#PTRDIFF_MAX
 (2147483647)

	)

261 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

262 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

265 #i‡
__WORDSIZE
 == 64

266 
	#SIZE_MAX
 (18446744073709551615UL)

	)

268 
	#SIZE_MAX
 (4294967295U)

	)

272 #i‚de‡
WCHAR_MIN


274 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

275 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

279 
	#WINT_MIN
 (0u)

	)

280 
	#WINT_MAX
 (4294967295u)

	)

287 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_CONSTANT_MACROS


290 
	#INT8_C
(
c
Ë
	)
c

291 
	#INT16_C
(
c
Ë
	)
c

292 
	#INT32_C
(
c
Ë
	)
c

293 #i‡
__WORDSIZE
 == 64

294 
	#INT64_C
(
c
Ë¯## 
L


	)

296 
	#INT64_C
(
c
Ë¯## 
LL


	)

300 
	#UINT8_C
(
c
Ë
	)
c

301 
	#UINT16_C
(
c
Ë
	)
c

302 
	#UINT32_C
(
c
Ë¯## 
U


	)

303 #i‡
__WORDSIZE
 == 64

304 
	#UINT64_C
(
c
Ë¯## 
UL


	)

306 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

310 #i‡
__WORDSIZE
 == 64

311 
	#INTMAX_C
(
c
Ë¯## 
L


	)

312 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

314 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

315 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/sys/select.h

22 #i‚de‡
_SYS_SELECT_H


23 
	#_SYS_SELECT_H
 1

	)

25 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

31 
	~<bôs/£À˘.h
>

34 
	~<bôs/sig£t.h
>

36 #i‚de‡
__sig£t_t_deföed


37 
	#__sig£t_t_deföed


	)

38 
__sig£t_t
 
	tsig£t_t
;

42 
	#__√ed_time_t


	)

43 
	#__√ed_time•ec


	)

44 
	~<time.h
>

45 
	#__√ed_timevÆ


	)

46 
	~<bôs/time.h
>

48 #i‚de‡
__su£c⁄ds_t_deföed


49 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

50 
	#__su£c⁄ds_t_deföed


	)

55 
	t__fd_mask
;

58 #unde‡
__NFDBITS


59 #unde‡
__FDELT


60 #unde‡
__FDMASK


62 
	#__NFDBITS
 (8 * (Ë (
__fd_mask
))

	)

63 
	#__FDELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

64 
	#__FDMASK
(
d
Ë((
__fd_mask
Ë1 << ((dË% 
__NFDBITS
))

	)

71 #ifde‡
__USE_XOPEN


72 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

73 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

75 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

76 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

78 } 
	tfd_£t
;

81 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

83 #ifde‡
__USE_MISC


85 
__fd_mask
 
	tfd_mask
;

88 
	#NFDBITS
 
__NFDBITS


	)

93 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

94 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

95 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

96 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

99 
__BEGIN_DECLS


109 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

110 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

111 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

112 
timevÆ
 *
__ª°ri˘
 
__timeout
);

114 #ifde‡
__USE_XOPEN2K


121 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

122 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

123 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

124 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

125 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

128 
	g__END_DECLS


	@/usr/include/wctype.h

24 #i‚de‡
_WCTYPE_H


26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 #i‚de‡
__√ed_iswxxx


30 
	#_WCTYPE_H
 1

	)

33 
	#__√ed_wöt_t


	)

34 
	~<°ddef.h
>

38 #i‚de‡
WEOF


39 
	#WEOF
 (0xffffffffu)

	)

42 #unde‡
__√ed_iswxxx


47 #i‚de‡
__iswxxx_deföed


48 
	#__iswxxx_deföed
 1

	)

50 
__BEGIN_NAMESPACE_C99


53 
	tw˘y≥_t
;

54 
	g__END_NAMESPACE_C99


56 #i‚de‡
_ISwbô


61 
	~<ídün.h
>

62 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


63 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

65 
	#_ISwbô
(
bô
) \

66 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

67 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

68 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

69 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

74 
	m__ISwuµî
 = 0,

75 
	m__ISwlowî
 = 1,

76 
	m__ISwÆpha
 = 2,

77 
	m__ISwdigô
 = 3,

78 
	m__ISwxdigô
 = 4,

79 
	m__ISw•a˚
 = 5,

80 
	m__ISw¥öt
 = 6,

81 
	m__ISwgøph
 = 7,

82 
	m__ISwbœnk
 = 8,

83 
	m__ISw˙ål
 = 9,

84 
	m__ISwpun˘
 = 10,

85 
	m__ISwÆnum
 = 11,

87 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

88 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

89 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

90 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

91 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

92 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

93 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

94 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

95 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

96 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

97 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

98 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

103 
__BEGIN_DECLS


105 
__BEGIN_NAMESPACE_C99


112 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

118 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

121 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

125 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

129 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

134 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

137 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

142 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

147 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

152 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

157 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

162 #ifde‡
__USE_ISOC99


163 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

172 
w˘y≥_t
 
	$w˘y≥
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

176 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

177 
__END_NAMESPACE_C99


184 
__BEGIN_NAMESPACE_C99


187 
__c⁄°
 
	t__öt32_t
 *
	tw˘øns_t
;

188 
__END_NAMESPACE_C99


189 #ifde‡
__USE_GNU


190 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

193 
__BEGIN_NAMESPACE_C99


195 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

199 
__END_NAMESPACE_C99


201 
__END_DECLS


208 #ifde‡
_WCTYPE_H


214 
__BEGIN_DECLS


216 
__BEGIN_NAMESPACE_C99


219 
w˘øns_t
 
	$w˘øns
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

222 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

223 
__END_NAMESPACE_C99


225 #ifde‡
__USE_XOPEN2K8


227 
	~<xloˇÀ.h
>

231 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

237 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

240 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

244 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

248 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

253 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

256 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

261 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

266 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

271 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

276 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

281 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

285 
w˘y≥_t
 
	$w˘y≥_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

286 
__THROW
;

290 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

291 
__THROW
;

299 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

302 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

306 
w˘øns_t
 
	$w˘øns_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

307 
__THROW
;

310 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

311 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

315 
__END_DECLS


	@/usr/include/xlocale.h

21 #i‚de‡
_XLOCALE_H


22 
	#_XLOCALE_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

40 } *
	t__loˇÀ_t
;

43 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

21 
	#_G_size_t
 
size_t


	)

24 
__off_t
 
	m__pos
;

25 
__mb°©e_t
 
	m__°©e
;

26 } 
	t_G_Âos_t
;

29 
__off64_t
 
	m__pos
;

30 
__mb°©e_t
 
	m__°©e
;

31 } 
	t_G_Âos64_t
;

32 
	#_G_ssize_t
 
__ssize_t


	)

33 
	#_G_off_t
 
__off_t


	)

34 
	#_G_off64_t
 
__off64_t


	)

35 
	#_G_pid_t
 
__pid_t


	)

36 
	#_G_uid_t
 
__uid_t


	)

37 
	#_G_wch¨_t
 
wch¨_t


	)

38 
	#_G_wöt_t
 
wöt_t


	)

39 
	#_G_°©64
 
°©64


	)

40 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


41 
	~<gc⁄v.h
>

44 
__gc⁄v_öfo
 
	m__cd
;

47 
__gc⁄v_öfo
 
	m__cd
;

48 
__gc⁄v_°ï_d©a
 
	m__d©a
;

49 } 
	m__comböed
;

50 } 
	t_G_ic⁄v_t
;

53 
	t_G_öt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

54 
	t_G_öt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

55 
	t_G_uöt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

56 
	t_G_uöt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

58 
	#_G_HAVE_BOOL
 1

	)

62 
	#_G_HAVE_ATEXIT
 1

	)

63 
	#_G_HAVE_SYS_CDEFS
 1

	)

64 
	#_G_HAVE_SYS_WAIT
 1

	)

65 
	#_G_NEED_STDARG_H
 1

	)

66 
	#_G_va_li°
 
__gnuc_va_li°


	)

68 
	#_G_HAVE_PRINTF_FP
 1

	)

69 
	#_G_HAVE_MMAP
 1

	)

70 
	#_G_HAVE_MREMAP
 1

	)

71 
	#_G_HAVE_LONG_DOUBLE_IO
 1

	)

72 
	#_G_HAVE_IO_FILE_OPEN
 1

	)

73 
	#_G_HAVE_IO_GETLINE_INFO
 1

	)

75 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

77 
	#_G_OPEN64
 
__›í64


	)

78 
	#_G_LSEEK64
 
__l£ek64


	)

79 
	#_G_MMAP64
 
__mm≠64


	)

80 
	#_G_FSTAT64
(
fd
,
buf
Ë
	`__fx°©64
 (
_STAT_VER
, fd, buf)

	)

83 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

85 
	#_G_BUFSIZ
 8192

	)

88 
	#_G_NAMES_HAVE_UNDERSCORE
 0

	)

89 
	#_G_VTABLE_LABEL_HAS_LENGTH
 1

	)

90 
	#_G_USING_THUNKS
 1

	)

91 
	#_G_VTABLE_LABEL_PREFIX
 "__vt_"

	)

92 
	#_G_VTABLE_LABEL_PREFIX_ID
 
__vt_


	)

95 #i‡
deföed
 
__˝lu•lus
 || deföed 
__STDC__


96 
	#_G_ARGS
(
ARGLIST
Ë
	)
ARGLIST

98 
	#_G_ARGS
(
ARGLIST
Ë()

	)

	@/usr/include/asm/param.h

1 
	~<asm-gíîic/∑øm.h
>

	@/usr/include/bits/byteswap.h

21 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


25 #i‚de‡
_BITS_BYTESWAP_H


26 
	#_BITS_BYTESWAP_H
 1

	)

28 
	~<bôs/w‹dsize.h
>

31 
	#__bsw≠_c⁄°™t_16
(
x
) \

32 ((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8))

	)

34 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

35 
	#__bsw≠_16
(
x
) \

36 (
__exãnsi⁄__
 \

37 ({ 
__v
, 
__x
 = (
x
); \

38 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

39 
__v
 = 
	`__bsw≠_c⁄°™t_16
 (
__x
); \

41 
	`__asm__
 ("rorw $8, %w0" \

42 : "Ù" (
__v
) \

43 : "0" (
__x
) \

45 
__v
; }))

	)

48 
	#__bsw≠_16
(
x
) \

49 (
__exãnsi⁄__
 \

50 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_16
 (__x); }))

	)

55 
	#__bsw≠_c⁄°™t_32
(
x
) \

56 ((((
x
) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | \

57 (((
x
Ë& 0x0000ff00Ë<< 8Ë| (((xË& 0x000000ffË<< 24))

	)

59 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

60 #i‡
__WORDSIZE
 =64 || (
deföed
 
__i486__
 || deföed 
__≥¡ium__
 \

61 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

62 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

63 || 
deföed
 
	g__k6__
 || deföed 
	g__noc⁄a__
 \

64 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__geode__
 \

65 || 
deföed
 
	g__amdÁm10__
)

68 
	#__bsw≠_32
(
x
) \

69 (
__exãnsi⁄__
 \

70 ({ 
__v
, 
__x
 = (
x
); \

71 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

72 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

74 
	`__asm__
 ("bsw≠ %0" : "Ù" (
__v
Ë: "0" (
__x
)); \

75 
__v
; }))

	)

77 
	#__bsw≠_32
(
x
) \

78 (
__exãnsi⁄__
 \

79 ({ 
__v
, 
__x
 = (
x
); \

80 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

81 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

83 
	`__asm__
 ("rorw $8, %w0;" \

86 : "Ù" (
__v
) \

87 : "0" (
__x
) \

89 
__v
; }))

	)

92 
	#__bsw≠_32
(
x
) \

93 (
__exãnsi⁄__
 \

94 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_32
 (__x); }))

	)

98 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

100 
	#__bsw≠_c⁄°™t_64
(
x
) \

101 ((((
x
) & 0xff00000000000000ull) >> 56) \

102 | (((
x
) & 0x00ff000000000000ull) >> 40) \

103 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

104 | (((
x
) & 0x000000ff00000000ull) >> 8) \

105 | (((
x
) & 0x00000000ff000000ull) << 8) \

106 | (((
x
) & 0x0000000000ff0000ull) << 24) \

107 | (((
x
) & 0x000000000000ff00ull) << 40) \

108 | (((
x
Ë& 0x00000000000000ffuŒË<< 56))

	)

110 #i‡
__WORDSIZE
 == 64

111 
	#__bsw≠_64
(
x
) \

112 (
__exãnsi⁄__
 \

113 ({ 
__v
, 
__x
 = (
x
); \

114 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

115 
__v
 = 
	`__bsw≠_c⁄°™t_64
 (
__x
); \

117 
	`__asm__
 ("bsw≠ %q0" : "Ù" (
__v
Ë: "0" (
__x
)); \

118 
__v
; }))

	)

120 
	#__bsw≠_64
(
x
) \

121 (
__exãnsi⁄__
 \

122 ({ uni⁄ { 
__exãnsi⁄__
 
__Œ
; \

123 
__l
[2]; } 
__w
, 
__r
; \

124 i‡(
	`__buûtö_c⁄°™t_p
 (
x
)) \

125 
__r
.
__Œ
 = 
	`__bsw≠_c⁄°™t_64
 (
x
); \

128 
__w
.
__Œ
 = (
x
); \

129 
__r
.
__l
[0] = 
	`__bsw≠_32
 (
__w
.__l[1]); \

130 
__r
.
__l
[1] = 
	`__bsw≠_32
 (
__w
.__l[0]); \

132 
__r
.
__Œ
; }))

	)

	@/usr/include/bits/endian.h

3 #i‚de‡
_ENDIAN_H


7 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/libio-ldbl.h

20 #i‚de‡
_IO_STDIO_H


24 
	$__LDBL_REDIR_DECL
 (
_IO_vfsˇnf
)

25 
	`__LDBL_REDIR_DECL
 (
_IO_vÂrötf
)

	@/usr/include/bits/posix1_lim.h

25 #i‚def 
_BITS_POSIX1_LIM_H


26 
	#_BITS_POSIX1_LIM_H
 1

	)

32 
	#_POSIX_AIO_LISTIO_MAX
 2

	)

35 
	#_POSIX_AIO_MAX
 1

	)

38 
	#_POSIX_ARG_MAX
 4096

	)

41 #ifde‡
__USE_XOPEN2K


42 
	#_POSIX_CHILD_MAX
 25

	)

44 
	#_POSIX_CHILD_MAX
 6

	)

48 
	#_POSIX_DELAYTIMER_MAX
 32

	)

52 
	#_POSIX_HOST_NAME_MAX
 255

	)

55 
	#_POSIX_LINK_MAX
 8

	)

58 
	#_POSIX_LOGIN_NAME_MAX
 9

	)

61 
	#_POSIX_MAX_CANON
 255

	)

65 
	#_POSIX_MAX_INPUT
 255

	)

68 
	#_POSIX_MQ_OPEN_MAX
 8

	)

71 
	#_POSIX_MQ_PRIO_MAX
 32

	)

74 
	#_POSIX_NAME_MAX
 14

	)

77 #ifde‡
__USE_XOPEN2K


78 
	#_POSIX_NGROUPS_MAX
 8

	)

80 
	#_POSIX_NGROUPS_MAX
 0

	)

84 #ifde‡
__USE_XOPEN2K


85 
	#_POSIX_OPEN_MAX
 20

	)

87 
	#_POSIX_OPEN_MAX
 16

	)

90 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


93 
	#_POSIX_FD_SETSIZE
 
_POSIX_OPEN_MAX


	)

97 
	#_POSIX_PATH_MAX
 256

	)

100 
	#_POSIX_PIPE_BUF
 512

	)

104 
	#_POSIX_RE_DUP_MAX
 255

	)

107 
	#_POSIX_RTSIG_MAX
 8

	)

110 
	#_POSIX_SEM_NSEMS_MAX
 256

	)

113 
	#_POSIX_SEM_VALUE_MAX
 32767

	)

116 
	#_POSIX_SIGQUEUE_MAX
 32

	)

119 
	#_POSIX_SSIZE_MAX
 32767

	)

122 
	#_POSIX_STREAM_MAX
 8

	)

125 
	#_POSIX_SYMLINK_MAX
 255

	)

129 
	#_POSIX_SYMLOOP_MAX
 8

	)

132 
	#_POSIX_TIMER_MAX
 32

	)

135 
	#_POSIX_TTY_NAME_MAX
 9

	)

138 
	#_POSIX_TZNAME_MAX
 6

	)

140 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


142 
	#_POSIX_QLIMIT
 1

	)

146 
	#_POSIX_HIWAT
 
_POSIX_PIPE_BUF


	)

149 
	#_POSIX_UIO_MAXIOV
 16

	)

153 
	#_POSIX_CLOCKRES_MIN
 20000000

	)

157 
	~<bôs/loˇl_lim.h
>

160 #i‚def 
SSIZE_MAX


161 
	#SSIZE_MAX
 
LONG_MAX


	)

168 #i‚def 
NGROUPS_MAX


169 
	#NGROUPS_MAX
 8

	)

	@/usr/include/bits/posix2_lim.h

23 #i‚def 
_BITS_POSIX2_LIM_H


24 
	#_BITS_POSIX2_LIM_H
 1

	)

28 
	#_POSIX2_BC_BASE_MAX
 99

	)

31 
	#_POSIX2_BC_DIM_MAX
 2048

	)

34 
	#_POSIX2_BC_SCALE_MAX
 99

	)

37 
	#_POSIX2_BC_STRING_MAX
 1000

	)

41 
	#_POSIX2_COLL_WEIGHTS_MAX
 2

	)

45 
	#_POSIX2_EXPR_NEST_MAX
 32

	)

48 
	#_POSIX2_LINE_MAX
 2048

	)

52 
	#_POSIX2_RE_DUP_MAX
 255

	)

56 
	#_POSIX2_CHARCLASS_NAME_MAX
 14

	)

63 #i‚def 
BC_BASE_MAX


64 
	#BC_BASE_MAX
 
_POSIX2_BC_BASE_MAX


	)

66 #i‚def 
BC_DIM_MAX


67 
	#BC_DIM_MAX
 
_POSIX2_BC_DIM_MAX


	)

69 #i‚def 
BC_SCALE_MAX


70 
	#BC_SCALE_MAX
 
_POSIX2_BC_SCALE_MAX


	)

72 #i‚def 
BC_STRING_MAX


73 
	#BC_STRING_MAX
 
_POSIX2_BC_STRING_MAX


	)

75 #i‚def 
COLL_WEIGHTS_MAX


76 
	#COLL_WEIGHTS_MAX
 255

	)

78 #i‚def 
EXPR_NEST_MAX


79 
	#EXPR_NEST_MAX
 
_POSIX2_EXPR_NEST_MAX


	)

81 #i‚def 
LINE_MAX


82 
	#LINE_MAX
 
_POSIX2_LINE_MAX


	)

84 #i‚def 
CHARCLASS_NAME_MAX


85 
	#CHARCLASS_NAME_MAX
 2048

	)

89 
	#RE_DUP_MAX
 (0x7fff)

	)

	@/usr/include/bits/predefs.h

19 #i‚de‡
_FEATURES_H


23 #i‚de‡
_PREDEFS_H


24 
	#_PREDEFS_H


	)

27 
	#__STDC_IEC_559__
 1

	)

28 
	#__STDC_IEC_559_COMPLEX__
 1

	)

	@/usr/include/bits/select.h

19 #i‚de‡
_SYS_SELECT_H


23 
	~<bôs/w‹dsize.h
>

26 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

28 #i‡
__WORDSIZE
 == 64

29 
	#__FD_ZERO_STOS
 "°osq"

	)

31 
	#__FD_ZERO_STOS
 "°o¶"

	)

34 
	#__FD_ZERO
(
fd•
) \

36 
__d0
, 
__d1
; \

37 
__asm__
 
	`__vﬁ©ûe__
 ("˛d;Ñï; " 
__FD_ZERO_STOS
 \

38 : "=c" (
__d0
), "=D" (
__d1
) \

39 : "a" (0), "0" ( (
fd_£t
) \

40 /  (
__fd_mask
)), \

41 "1" (&
	`__FDS_BITS
 (
fd•
)[0]) \

43 } 0)

	)

49 
	#__FD_ZERO
(
£t
) \

51 
__i
; \

52 
fd_£t
 *
__¨r
 = (
£t
); \

53 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

54 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

55 } 0)

	)

59 
	#__FD_SET
(
d
, 
£t
Ë(
	`__FDS_BITS
 (£t)[
	`__FDELT
 (d)] |
	`__FDMASK
 (d))

	)

60 
	#__FD_CLR
(
d
, 
£t
Ë(
	`__FDS_BITS
 (£t)[
	`__FDELT
 (d)] &~
	`__FDMASK
 (d))

	)

61 
	#__FD_ISSET
(
d
, 
£t
) \

62 ((
	`__FDS_BITS
 (
£t
)[
	`__FDELT
 (
d
)] & 
	`__FDMASK
 (d)Ë!0)

	)

	@/usr/include/bits/sigset.h

21 #i‚def 
_SIGSET_H_ty≥s


22 
	#_SIGSET_H_ty≥s
 1

	)

24 
	t__sig_©omic_t
;

28 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

31 
	m__vÆ
[
_SIGSET_NWORDS
];

32 } 
	t__sig£t_t
;

43 #i‡!
deföed
 
_SIGSET_H_‚s
 && deföed 
_SIGNAL_H


44 
	#_SIGSET_H_‚s
 1

	)

46 #i‚de‡
_EXTERN_INLINE


47 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

51 
	#__sigmask
(
sig
) \

52 (((Ë1Ë<< (((
sig
Ë- 1Ë% (8 *  ())))

	)

55 
	#__sigw‹d
(
sig
Ë(((sigË- 1Ë/ (8 *  ()))

	)

57 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

58 
	#__sigem±y£t
(
£t
) \

59 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

60 
sig£t_t
 *
__£t
 = (
£t
); \

61 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = 0; \

62 0; }))

	)

63 
	#__sigfûl£t
(
£t
) \

64 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

65 
sig£t_t
 *
__£t
 = (
£t
); \

66 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = ~0UL; \

67 0; }))

	)

69 #ifde‡
__USE_GNU


73 
	#__sigi£m±y£t
(
£t
) \

74 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

75 c⁄° 
sig£t_t
 *
__£t
 = (
£t
); \

76 
__ªt
 = 
__£t
->
__vÆ
[--
__˙t
]; \

77 !
__ªt
 && --
__˙t
 >= 0) \

78 
__ªt
 = 
__£t
->
__vÆ
[
__˙t
]; \

79 
__ªt
 =0; }))

	)

80 
	#__sig™d£t
(
de°
, 
À·
, 
right
) \

81 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

82 
sig£t_t
 *
__de°
 = (
de°
); \

83 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

84 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

85 --
__˙t
 >= 0) \

86 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

87 & 
__right
->
__vÆ
[
__˙t
]); \

88 0; }))

	)

89 
	#__sig‹£t
(
de°
, 
À·
, 
right
) \

90 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

91 
sig£t_t
 *
__de°
 = (
de°
); \

92 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

93 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

94 --
__˙t
 >= 0) \

95 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

96 | 
__right
->
__vÆ
[
__˙t
]); \

97 0; }))

	)

104 
__sigismembî
 (
__c⁄°
 
__sig£t_t
 *, );

105 
__sigadd£t
 (
__sig£t_t
 *, );

106 
__sigdñ£t
 (
__sig£t_t
 *, );

108 #ifde‡
__USE_EXTERN_INLINES


109 
	#__SIGSETFN
(
NAME
, 
BODY
, 
CONST
) \

110 
_EXTERN_INLINE
 \

111 
	`NAME
 (
CONST
 
__sig£t_t
 *
__£t
, 
__sig
) \

113 
__mask
 = 
	`__sigmask
 (
__sig
); \

114 
__w‹d
 = 
	`__sigw‹d
 (
__sig
); \

115  
BODY
; \

116 }

	)

118 
__SIGSETFN
 (
__sigismembî
, (
__£t
->
__vÆ
[
__w‹d
] & 
__mask
Ë? 1 : 0, 
__c⁄°
)

119 
__SIGSETFN
 (
__sigadd£t
, ((
__£t
->
__vÆ
[
__w‹d
] |
__mask
), 0), )

120 
__SIGSETFN
 (
__sigdñ£t
, ((
__£t
->
__vÆ
[
__w‹d
] &~
__mask
), 0), )

122 #unde‡
__SIGSETFN


	@/usr/include/bits/stdio-lock.h

20 #i‚de‡
_BITS_STDIO_LOCK_H


21 
	#_BITS_STDIO_LOCK_H
 1

	)

23 
	~<bôs/libc-lock.h
>

24 
	~<lowÀvñlock.h
>

28 
	#_IO_lock_öex≥nsive
 1

	)

30 °ru˘ { 
	mlock
; 
	m˙t
; *
	mow√r
; } 
	t_IO_lock_t
;

32 
	#_IO_lock_öôülizî
 { 
LLL_LOCK_INITIALIZER
, 0, 
NULL
 }

	)

34 
	#_IO_lock_öô
(
_«me
) \

35 ((
_«me
Ë(
_IO_lock_t
Ë
_IO_lock_öôülizî
 , 0)

	)

37 
	#_IO_lock_föi
(
_«me
) \

38 ((Ë0)

	)

40 
	#_IO_lock_lock
(
_«me
) \

42 *
__£lf
 = 
THREAD_SELF
; \

43 i‡((
_«me
).
ow√r
 !
__£lf
) \

45 
	`Œl_lock
 ((
_«me
).
lock
, 
LLL_PRIVATE
); \

46 (
_«me
).
ow√r
 = 
__£lf
; \

48 ++(
_«me
).
˙t
; \

49 } 0)

	)

51 
	#_IO_lock_åylock
(
_«me
) \

53 
__ªsu…
 = 0; \

54 *
__£lf
 = 
THREAD_SELF
; \

55 i‡((
_«me
).
ow√r
 !
__£lf
) \

57 i‡(
	`Œl_åylock
 ((
_«me
).
lock
) == 0) \

59 (
_«me
).
ow√r
 = 
__£lf
; \

60 (
_«me
).
˙t
 = 1; \

63 
__ªsu…
 = 
EBUSY
; \

66 ++(
_«me
).
˙t
; \

67 
__ªsu…
; \

68 })

	)

70 
	#_IO_lock_u∆ock
(
_«me
) \

72 i‡(--(
_«me
).
˙t
 == 0) \

74 (
_«me
).
ow√r
 = 
NULL
; \

75 
	`Œl_u∆ock
 ((
_«me
).
lock
, 
LLL_PRIVATE
); \

77 } 0)

	)

81 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
) \

82 
	`__libc_˛ónup_ªgi⁄_°¨t
 (((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0, 
_f˘
, _Â)

	)

83 
	#_IO_˛ónup_ªgi⁄_°¨t_nﬂrg
(
_f˘
) \

84 
	`__libc_˛ónup_ªgi⁄_°¨t
 (1, 
_f˘
, 
NULL
)

	)

85 
	#_IO_˛ónup_ªgi⁄_íd
(
_doô
) \

86 
	`__libc_˛ónup_ªgi⁄_íd
 (
_doô
)

	)

88 #i‡
deföed
 
_LIBC
 && !deföed 
NOT_IN_libc


90 #ifde‡
__EXCEPTIONS


91 
	#_IO_acquúe_lock
(
_Â
) \

93 
_IO_FILE
 *
_IO_acquúe_lock_fûe
 \

94 
	`__©åibuã__
((
	`˛ónup
 (
_IO_acquúe_lock_f˘
))) \

95 (
_Â
); \

96 
	`_IO_Êockfûe
 (
_IO_acquúe_lock_fûe
);

	)

97 
	#_IO_acquúe_lock_˛ór_Êags2
(
_Â
) \

99 
_IO_FILE
 *
_IO_acquúe_lock_fûe
 \

100 
	`__©åibuã__
((
	`˛ónup
 (
_IO_acquúe_lock_˛ór_Êags2_f˘
))) \

101 (
_Â
); \

102 
	`_IO_Êockfûe
 (
_IO_acquúe_lock_fûe
);

	)

104 
	#_IO_acquúe_lock
(
_Â
Ë
_IO_acquúe_lock_√eds_ex˚±i⁄s_íabÀd


	)

105 
	#_IO_acquúe_lock_˛ór_Êags2
(
_Â
Ë
	`_IO_acquúe_lock
 (_Â)

	)

107 
	#_IO_ªÀa£_lock
(
_Â
Ë; } 0)

	)

	@/usr/include/bits/typesizes.h

20 #i‚de‡
_BITS_TYPES_H


24 #i‚def 
_BITS_TYPESIZES_H


25 
	#_BITS_TYPESIZES_H
 1

	)

30 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

31 
	#__UID_T_TYPE
 
__U32_TYPE


	)

32 
	#__GID_T_TYPE
 
__U32_TYPE


	)

33 
	#__INO_T_TYPE
 
__ULONGWORD_TYPE


	)

34 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

35 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

36 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

37 
	#__OFF_T_TYPE
 
__SLONGWORD_TYPE


	)

38 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

39 
	#__PID_T_TYPE
 
__S32_TYPE


	)

40 
	#__RLIM_T_TYPE
 
__ULONGWORD_TYPE


	)

41 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

42 
	#__BLKCNT_T_TYPE
 
__SLONGWORD_TYPE


	)

43 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

44 
	#__FSBLKCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

45 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

46 
	#__FSFILCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

47 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

48 
	#__ID_T_TYPE
 
__U32_TYPE


	)

49 
	#__CLOCK_T_TYPE
 
__SLONGWORD_TYPE


	)

50 
	#__TIME_T_TYPE
 
__SLONGWORD_TYPE


	)

51 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

52 
	#__SUSECONDS_T_TYPE
 
__SLONGWORD_TYPE


	)

53 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

54 
	#__SWBLK_T_TYPE
 
__SLONGWORD_TYPE


	)

55 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

56 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

57 
	#__TIMER_T_TYPE
 *

	)

58 
	#__BLKSIZE_T_TYPE
 
__SLONGWORD_TYPE


	)

59 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

60 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

63 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/bits/uio.h

19 #i‡!
deföed
 
_SYS_UIO_H
 && !deföed 
_FCNTL_H


23 #i‚de‡
_BITS_UIO_H


24 
	#_BITS_UIO_H
 1

	)

26 
	~<sys/ty≥s.h
>

40 
	#UIO_MAXIOV
 1024

	)

44 
	siovec


46 *
	miov_ba£
;

47 
size_t
 
	miov_Àn
;

	@/usr/include/bits/wordsize.h

3 #i‡
deföed
 
__x86_64__


4 
	#__WORDSIZE
 64

	)

5 
	#__WORDSIZE_COMPAT32
 1

	)

7 
	#__WORDSIZE
 32

	)

	@/usr/include/bits/xopen_lim.h

30 #i‚de‡
_XOPEN_LIM_H


31 
	#_XOPEN_LIM_H
 1

	)

33 
	#__√ed_IOV_MAX


	)

34 
	~<bôs/°dio_lim.h
>

66 
	#_XOPEN_IOV_MAX
 
_POSIX_UIO_MAXIOV


	)

71 
	#NL_ARGMAX
 
_POSIX_ARG_MAX


	)

74 
	#NL_LANGMAX
 
_POSIX2_LINE_MAX


	)

77 
	#NL_MSGMAX
 
INT_MAX


	)

81 
	#NL_NMAX
 
INT_MAX


	)

84 
	#NL_SETMAX
 
INT_MAX


	)

87 
	#NL_TEXTMAX
 
INT_MAX


	)

90 
	#NZERO
 20

	)

94 #ifde‡
INT_MAX


95 #i‡
INT_MAX
 == 32767

96 
	#WORD_BIT
 16

	)

98 #i‡
INT_MAX
 == 2147483647

99 
	#WORD_BIT
 32

	)

102 
	#WORD_BIT
 64

	)

105 #ñi‡
deföed
 
__INT_MAX__


106 #i‡
__INT_MAX__
 == 32767

107 
	#WORD_BIT
 16

	)

109 #i‡
__INT_MAX__
 == 2147483647

110 
	#WORD_BIT
 32

	)

113 
	#WORD_BIT
 64

	)

117 
	#WORD_BIT
 32

	)

121 #ifde‡
LONG_MAX


122 #i‡
LONG_MAX
 == 2147483647

123 
	#LONG_BIT
 32

	)

126 
	#LONG_BIT
 64

	)

128 #ñi‡
deföed
 
__LONG_MAX__


129 #i‡
__LONG_MAX__
 == 2147483647

130 
	#LONG_BIT
 32

	)

133 
	#LONG_BIT
 64

	)

136 
	~<bôs/w‹dsize.h
>

137 #i‡
__WORDSIZE
 == 64

138 
	#LONG_BIT
 64

	)

140 
	#LONG_BIT
 32

	)

	@/usr/include/gnu/stubs.h

4 
	~<bôs/w‹dsize.h
>

6 #i‡
__WORDSIZE
 == 32

7 
	~<gnu/°ubs-32.h
>

8 #ñi‡
__WORDSIZE
 == 64

9 
	~<gnu/°ubs-64.h
>

	@/usr/include/linux/errno.h

1 #i‚de‡
_LINUX_ERRNO_H


2 
	#_LINUX_ERRNO_H


	)

4 
	~<asm/î∫o.h
>

	@/usr/include/sys/cdefs.h

20 #i‚def 
_SYS_CDEFS_H


21 
	#_SYS_CDEFS_H
 1

	)

24 #i‚de‡
_FEATURES_H


25 
	~<„©uªs.h
>

31 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


36 #unde‡
__P


37 #unde‡
__PMT


39 #ifde‡
__GNUC__


46 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

47 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

48 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
)Ë
	)
fct

50 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

51 
	#__THROW
 
	`throw
 ()

	)

52 
	#__NTH
(
f˘
Ëf˘ 
	`throw
 ()

	)

54 
	#__THROW


	)

55 
	#__NTH
(
f˘
Ë
	)
fct

61 
	#__ölöe


	)

63 
	#__THROW


	)

64 
	#__NTH
(
f˘
Ë
	)
fct

66 
	#__c⁄°
 c⁄°

	)

67 
	#__sig√d
 sig√d

	)

68 
	#__vﬁ©ûe
 vﬁ©ûe

	)

74 
	#__P
(
¨gs
Ë
	)
args

75 
	#__PMT
(
¨gs
Ë
	)
args

80 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

81 
	#__STRING
(
x
Ë#x

	)

84 
	#__±r_t
 *

	)

85 
	#__l⁄g_doubÀ_t
 

	)

89 #ifdef 
__˝lu•lus


90 
	#__BEGIN_DECLS
 "C" {

	)

91 
	#__END_DECLS
 }

	)

93 
	#__BEGIN_DECLS


	)

94 
	#__END_DECLS


	)

103 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES


104 
	#__BEGIN_NAMESPACE_STD
 
«me•a˚
 
°d
 {

	)

105 
	#__END_NAMESPACE_STD
 }

	)

106 
	#__USING_NAMESPACE_STD
(
«me
Ë
usög
 
°d
::«me;

	)

107 
	#__BEGIN_NAMESPACE_C99
 
«me•a˚
 
__c99
 {

	)

108 
	#__END_NAMESPACE_C99
 }

	)

109 
	#__USING_NAMESPACE_C99
(
«me
Ë
usög
 
__c99
::«me;

	)

114 
	#__BEGIN_NAMESPACE_STD


	)

115 
	#__END_NAMESPACE_STD


	)

116 
	#__USING_NAMESPACE_STD
(
«me
)

	)

117 
	#__BEGIN_NAMESPACE_C99


	)

118 
	#__END_NAMESPACE_C99


	)

119 
	#__USING_NAMESPACE_C99
(
«me
)

	)

124 #i‚de‡
__BOUNDED_POINTERS__


125 
	#__bounded


	)

126 
	#__unbounded


	)

127 
	#__±rvÆue


	)

132 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

133 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

135 #i‡
__GNUC_PREREQ
 (4,3)

136 
	#__w¨nde˛
(
«me
, 
msg
) \

137 
	`«me
 (Ë
	`__©åibuã__
((
	`__w¨nög__
 (
msg
)))

	)

138 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

139 
	#__îr‹de˛
(
«me
, 
msg
) \

140 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

142 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

143 
	#__w¨«âr
(
msg
)

	)

144 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

148 #i‡
__GNUC_PREREQ
 (2,97)

150 
	#__Êex¨r
 []

	)

152 #ifde‡
__GNUC__


153 
	#__Êex¨r
 [0]

	)

155 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

156 
	#__Êex¨r
 []

	)

159 
	#__Êex¨r
 [1]

	)

175 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

177 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

178 #ifde‡
__˝lu•lus


179 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

180 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

182 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

183 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

185 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

186 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

199 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

200 
	#__©åibuã__
(
xyz
Ë

	)

206 #i‡
__GNUC_PREREQ
 (2,96)

207 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

209 
	#__©åibuã_mÆloc__


	)

215 #i‡
__GNUC_PREREQ
 (2,96)

216 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

218 
	#__©åibuã_puª__


	)

224 #i‡
__GNUC_PREREQ
 (3,1)

225 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

226 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

228 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

229 
	#__©åibuã_noölöe__


	)

233 #i‡
__GNUC_PREREQ
 (3,2)

234 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

236 
	#__©åibuã_dïªˇãd__


	)

245 #i‡
__GNUC_PREREQ
 (2,8)

246 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

248 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

255 #i‡
__GNUC_PREREQ
 (2,97)

256 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

257 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

259 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

264 #i‡
__GNUC_PREREQ
 (3,3)

265 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

267 
	#__n⁄nuŒ
(
∑øms
)

	)

272 #i‡
__GNUC_PREREQ
 (3,4)

273 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

274 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

275 #i‡
__USE_FORTIFY_LEVEL
 > 0

276 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

279 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

281 #i‚de‡
__wur


282 
	#__wur


	)

286 #i‡
__GNUC_PREREQ
 (3,2)

287 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

289 
	#__Æways_ölöe
 
__ölöe


	)

294 #i‡!
deföed
 
__˝lu•lus
 || 
__GNUC_PREREQ
 (4,3)

295 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__˝lu•lus


296 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

297 #i‡
__GNUC_PREREQ
 (4,3)

298 
	#__exã∫_Æways_ölöe
 \

299 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
, 
__¨tificül__
))

	)

301 
	#__exã∫_Æways_ölöe
 \

302 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

305 
	#__exã∫_ölöe
 
__ölöe


	)

306 #i‡
__GNUC_PREREQ
 (4,3)

307 
	#__exã∫_Æways_ölöe
 \

308 
__Æways_ölöe
 
	`__©åibuã__
 ((
__¨tificül__
))

	)

310 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

317 #i‡
__GNUC_PREREQ
 (4,3)

318 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

319 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

326 #i‡!
__GNUC_PREREQ
 (2,8)

327 
	#__exãnsi⁄__


	)

331 #i‡!
__GNUC_PREREQ
 (2,92)

332 
	#__ª°ri˘


	)

338 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


339 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

341 #ifde‡
__GNUC__


342 
	#__ª°ri˘_¨r


	)

344 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

345 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

348 
	#__ª°ri˘_¨r


	)

353 
	~<bôs/w‹dsize.h
>

355 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


356 
	#__LDBL_COMPAT
 1

	)

357 #ifde‡
__REDIRECT


358 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

359 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

360 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

361 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

362 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

363 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

364 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

365 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

366 
	#__LDBL_REDIR_DECL
(
«me
) \

367 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

368 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

369 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

370 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

371 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

374 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


375 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

376 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

377 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

378 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

379 
	#__LDBL_REDIR_DECL
(
«me
)

	)

380 #ifde‡
__REDIRECT


381 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

382 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

383 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

	@/usr/include/asm-generic/param.h

1 #i‚de‡
__ASM_GENERIC_PARAM_H


2 
	#__ASM_GENERIC_PARAM_H


	)

5 #i‚de‡
HZ


6 
	#HZ
 100

	)

9 #i‚de‡
EXEC_PAGESIZE


10 
	#EXEC_PAGESIZE
 4096

	)

13 #i‚de‡
NOGROUP


14 
	#NOGROUP
 (-1)

	)

17 
	#MAXHOSTNAMELEN
 64

	)

	@/usr/include/asm/errno.h

1 
	~<asm-gíîic/î∫o.h
>

	@/usr/include/bits/libc-lock.h

20 #i‚de‡
_BITS_LIBC_LOCK_H


21 
	#_BITS_LIBC_LOCK_H
 1

	)

23 
	~<±hªad.h
>

24 
	#__√ed_NULL


	)

25 
	~<°ddef.h
>

34 #ifde‡
_LIBC


35 
	~<lowÀvñlock.h
>

36 
	~<és.h
>

37 
	~<±hªad-fun˘i⁄s.h
>

38 
	~<î∫o.h
>

39 
	~<gnu/›ti⁄-groups.h
>

43 #i‡
deföed
 
_LIBC
 || deföed 
_IO_MTSAFE_IO


44 #i‡(
deföed
 
NOT_IN_libc
 && !deföed 
IS_IN_lib±hªad
Ë|| !deföed 
_LIBC


45 
±hªad_muãx_t
 
	t__libc_lock_t
;

46 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__libc_lock_ªcursive_t
;

48 
	t__libc_lock_t
;

49 °ru˘ { 
	mlock
; 
	m˙t
; *
	mow√r
; } 
	t__libc_lock_ªcursive_t
;

51 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__πld_lock_ªcursive_t
;

52 #ifde‡
__USE_UNIX98


53 
±hªad_rwlock_t
 
	t__libc_rwlock_t
;

55 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

58 
__libc_lock_›aque__
 
	t__libc_lock_t
;

59 
__libc_lock_ªcursive_›aque__
 
	t__libc_lock_ªcursive_t
;

60 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

64 
±hªad_key_t
 
	t__libc_key_t
;

73 
	#__libc_lock_deföe
(
CLASS
,
NAME
) \

74 
CLASS
 
__libc_lock_t
 
NAME
;

	)

75 
	#__libc_rwlock_deföe
(
CLASS
,
NAME
) \

76 
CLASS
 
__libc_rwlock_t
 
NAME
;

	)

77 
	#__libc_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

78 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

79 
	#__πld_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

80 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
;

	)

91 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

92 #i‡
LLL_LOCK_INITIALIZER
 == 0

93 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

94 
CLASS
 
__libc_lock_t
 
NAME
;

	)

96 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

97 
CLASS
 
__libc_lock_t
 
NAME
 = 
LLL_LOCK_INITIALIZER
;

	)

100 #i‡
__LT_SPINLOCK_INIT
 == 0

101 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

102 
CLASS
 
__libc_lock_t
 
NAME
;

	)

104 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

105 
CLASS
 
__libc_lock_t
 
NAME
 = 
PTHREAD_MUTEX_INITIALIZER
;

	)

109 
	#__libc_rwlock_deföe_öôülized
(
CLASS
,
NAME
) \

110 
CLASS
 
__libc_rwlock_t
 
NAME
 = 
PTHREAD_RWLOCK_INITIALIZER
;

	)

114 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

115 #i‡
LLL_LOCK_INITIALIZER
 == 0

116 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

117 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

119 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

120 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

122 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

123 { 
LLL_LOCK_INITIALIZER
, 0, 
NULL
 }

	)

125 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

126 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

127 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

128 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

131 
	#__πld_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

132 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
 = 
_RTLD_LOCK_RECURSIVE_INITIALIZER
;

	)

133 
	#_RTLD_LOCK_RECURSIVE_INITIALIZER
 \

134 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

136 
	#__πld_lock_öôülize
(
NAME
) \

137 (Ë((
NAME
Ë(
__πld_lock_ªcursive_t
Ë
_RTLD_LOCK_RECURSIVE_INITIALIZER
)

	)

144 #ifde‡
__PIC__


145 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

146 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of
 (
FUNC
Ë*
_‚
 = (FUNC); \

147 
_‚
 !
NULL
 ? (*_‚Ë
ARGS
 : 
ELSE
; }))

	)

149 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

150 (
FUNC
 !
NULL
 ? FUNC 
ARGS
 : 
ELSE
)

	)

154 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


155 
	#PTFAVAIL
(
NAME
Ë
__libc_±hªad_fun˘i⁄s_öô


	)

156 
	#__libc_±f_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

157 (
__libc_±hªad_fun˘i⁄s_öô
 ? 
	`PTHFCT_CALL
 (
±r_
##
FUNC
, 
ARGS
Ë: 
ELSE
)

	)

158 
	#__libc_±f_ˇŒ_Æways
(
FUNC
, 
ARGS
) \

159 
	`PTHFCT_CALL
 (
±r_
##
FUNC
, 
ARGS
)

	)

161 
	#PTFAVAIL
(
NAME
Ë(NAME !
NULL
)

	)

162 
	#__libc_±f_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

163 
	`__libc_maybe_ˇŒ
 (
FUNC
, 
ARGS
, 
ELSE
)

	)

164 
	#__libc_±f_ˇŒ_Æways
(
FUNC
, 
ARGS
) \

165 
FUNC
 
ARGS


	)

171 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

172 
	#__libc_lock_öô
(
NAME
Ë((NAMEË
LLL_LOCK_INITIALIZER
, 0)

	)

174 
	#__libc_lock_öô
(
NAME
) \

175 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_öô
, (&(
NAME
), 
NULL
), 0)

	)

177 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


180 
	#__libc_rwlock_öô
(
NAME
) \

181 (
	`__buûtö_mem£t
 (&(
NAME
), '\0',  (NAME)), 0)

	)

183 
	#__libc_rwlock_öô
(
NAME
) \

184 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_öô
, (&(
NAME
), 
NULL
), 0)

	)

188 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

189 
	#__libc_lock_öô_ªcursive
(
NAME
) \

190 ((
NAME
Ë(
__libc_lock_ªcursive_t
Ë
_LIBC_LOCK_RECURSIVE_INITIALIZER
, 0)

	)

192 
	#__libc_lock_öô_ªcursive
(
NAME
) \

194 i‡(
__±hªad_muãx_öô
 !
NULL
) \

196 
±hªad_muãx©å_t
 
__©å
; \

197 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

198 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

199 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

200 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

202 } 0)

	)

205 
	#__πld_lock_öô_ªcursive
(
NAME
) \

207 i‡(
__±hªad_muãx_öô
 !
NULL
) \

209 
±hªad_muãx©å_t
 
__©å
; \

210 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

211 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

212 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

213 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

215 } 0)

	)

220 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

221 
	#__libc_lock_föi
(
NAME
Ë((Ë0)

	)

223 
	#__libc_lock_föi
(
NAME
) \

224 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_de°roy
, (&(
NAME
)), 0)

	)

226 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


227 
	#__libc_rwlock_föi
(
NAME
Ë((Ë0)

	)

229 
	#__libc_rwlock_föi
(
NAME
) \

230 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_de°roy
, (&(
NAME
)), 0)

	)

234 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

235 
	#__libc_lock_föi_ªcursive
(
NAME
Ë((Ë0)

	)

237 
	#__libc_lock_föi_ªcursive
(
NAME
) \

238 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_de°roy
, (&(
NAME
)), 0)

	)

242 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

243 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

247 
__libc_lock_lock_‚
 (
__libc_lock_t
 *);

248 
libc_hiddí_¥Ÿo
 (
__libc_lock_lock_‚
);

250 #i‡
__OPTION_EGLIBC_BIG_MACROS


251 
	#__libc_lock_lock
(
NAME
) \

252 ({ 
	`Œl_lock
 (
NAME
, 
LLL_PRIVATE
); 0; })

	)

254 
	#__libc_lock_lock
(
NAME
) \

255 
	`__libc_lock_lock_‚
 (&(
NAME
))

	)

258 
	#__libc_lock_lock
(
NAME
) \

259 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
)), 0)

	)

261 
	#__libc_rwlock_rdlock
(
NAME
) \

262 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_rdlock
, (&(
NAME
)), 0)

	)

263 
	#__libc_rwlock_wæock
(
NAME
) \

264 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_wæock
, (&(
NAME
)), 0)

	)

267 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

268 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

272 
__libc_lock_lock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

273 
libc_hiddí_¥Ÿo
 (
__libc_lock_lock_ªcursive_‚
);

275 #i‡
__OPTION_EGLIBC_BIG_MACROS


276 
	#__libc_lock_lock_ªcursive
(
NAME
) \

278 *
£lf
 = 
THREAD_SELF
; \

279 i‡((
NAME
).
ow√r
 !
£lf
) \

281 
	`Œl_lock
 ((
NAME
).
lock
, 
LLL_PRIVATE
); \

282 (
NAME
).
ow√r
 = 
£lf
; \

284 ++(
NAME
).
˙t
; \

285 } 0)

	)

287 
	#__libc_lock_lock_ªcursive
(
NAME
) \

288 
	`__libc_lock_lock_ªcursive_‚
 (&(
NAME
))

	)

291 
	#__libc_lock_lock_ªcursive
(
NAME
) \

292 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
).
muãx
), 0)

	)

296 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

297 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

301 
__libc_lock_åylock_‚
 (
__libc_lock_t
 *);

302 
libc_hiddí_¥Ÿo
 (
__libc_lock_åylock_‚
);

304 #i‡
__OPTION_EGLIBC_BIG_MACROS


305 
	#__libc_lock_åylock
(
NAME
) \

306 
	`Œl_åylock
 (
NAME
)

	)

308 
	#__libc_lock_åylock
(
NAME
) \

309 
	`__libc_lock_åylock_‚
 (&(
NAME
))

	)

312 
	#__libc_lock_åylock
(
NAME
) \

313 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
)), 0)

	)

315 
	#__libc_rwlock_åyrdlock
(
NAME
) \

316 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åyrdlock
, (&(
NAME
)), 0)

	)

317 
	#__libc_rwlock_åywæock
(
NAME
) \

318 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åywæock
, (&(
NAME
)), 0)

	)

321 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

322 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

326 
__libc_lock_åylock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

327 
libc_hiddí_¥Ÿo
 (
__libc_lock_åylock_ªcursive_‚
);

329 #i‡
__OPTION_EGLIBC_BIG_MACROS


330 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

332 
ªsu…
 = 0; \

333 *
£lf
 = 
THREAD_SELF
; \

334 i‡((
NAME
).
ow√r
 !
£lf
) \

336 i‡(
	`Œl_åylock
 ((
NAME
).
lock
) == 0) \

338 (
NAME
).
ow√r
 = 
£lf
; \

339 (
NAME
).
˙t
 = 1; \

342 
ªsu…
 = 
EBUSY
; \

345 ++(
NAME
).
˙t
; \

346 
ªsu…
; \

347 })

	)

349 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

350 
	`__libc_lock_åylock_ªcursive_‚
 (&(
NAME
))

	)

353 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

354 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
)), 0)

	)

357 
	#__πld_lock_åylock_ªcursive
(
NAME
) \

358 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
).
muãx
), 0)

	)

361 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

362 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

366 
__libc_lock_u∆ock_‚
 (
__libc_lock_t
 *);

367 
libc_hiddí_¥Ÿo
 (
__libc_lock_u∆ock_‚
);

369 #i‡
__OPTION_EGLIBC_BIG_MACROS


370 
	#__libc_lock_u∆ock
(
NAME
) \

371 
	`Œl_u∆ock
 (
NAME
, 
LLL_PRIVATE
)

	)

373 
	#__libc_lock_u∆ock
(
NAME
) \

374 
	`__libc_lock_u∆ock_‚
 (&(
NAME
))

	)

377 
	#__libc_lock_u∆ock
(
NAME
) \

378 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
)), 0)

	)

380 
	#__libc_rwlock_u∆ock
(
NAME
) \

381 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_u∆ock
, (&(
NAME
)), 0)

	)

384 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

385 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

389 
__libc_lock_u∆ock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

390 
libc_hiddí_¥Ÿo
 (
__libc_lock_u∆ock_ªcursive_‚
);

392 #i‡
__OPTION_EGLIBC_BIG_MACROS


394 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

396 i‡(--(
NAME
).
˙t
 == 0) \

398 (
NAME
).
ow√r
 = 
NULL
; \

399 
	`Œl_u∆ock
 ((
NAME
).
lock
, 
LLL_PRIVATE
); \

401 } 0)

	)

403 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

404 
	`__libc_lock_u∆ock_ªcursive_‚
 (&(
NAME
))

	)

407 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

408 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
)), 0)

	)

411 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


412 
	#__πld_lock_deÁu…_lock_ªcursive
(
lock
) \

413 ++((
±hªad_muãx_t
 *)(
lock
))->
__d©a
.
__cou¡
;

	)

415 
	#__πld_lock_deÁu…_u∆ock_ªcursive
(
lock
) \

416 --((
±hªad_muãx_t
 *)(
lock
))->
__d©a
.
__cou¡
;

	)

418 
	#__πld_lock_lock_ªcursive
(
NAME
) \

419 
	`GL
(
dl_πld_lock_ªcursive
Ë(&(
NAME
).
muãx
)

	)

421 
	#__πld_lock_u∆ock_ªcursive
(
NAME
) \

422 
	`GL
(
dl_πld_u∆ock_ªcursive
Ë(&(
NAME
).
muãx
)

	)

424 
	#__πld_lock_lock_ªcursive
(
NAME
) \

425 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
).
muãx
), 0)

	)

427 
	#__πld_lock_u∆ock_ªcursive
(
NAME
) \

428 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
).
muãx
), 0)

	)

432 #i‡
PTHREAD_ONCE_INIT
 == 0

435 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

436 
CLASS
 
±hªad_⁄˚_t
 
NAME


	)

438 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

439 
CLASS
 
±hªad_⁄˚_t
 
NAME
 = 
PTHREAD_ONCE_INIT


	)

443 
	#__libc_⁄˚
(
ONCE_CONTROL
, 
INIT_FUNCTION
) \

445 i‡(
	`PTFAVAIL
 (
__±hªad_⁄˚
)) \

446 
	`__libc_±f_ˇŒ_Æways
 (
__±hªad_⁄˚
, (&(
ONCE_CONTROL
), \

447 
INIT_FUNCTION
)); \

448 i‡((
ONCE_CONTROL
Ë=
PTHREAD_ONCE_INIT
) { \

449 
	`INIT_FUNCTION
 (); \

450 (
ONCE_CONTROL
) |= 2; \

452 } 0)

	)

459 
_±hªad_˛ónup_push
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

460 (*
routöe
Ë(*), *
¨g
);

461 
	`_±hªad_˛ónup_p›
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

462 
execuã
);

463 
	`_±hªad_˛ónup_push_de„r
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

464 (*
routöe
Ë(*), *
¨g
);

465 
	`_±hªad_˛ónup_p›_ª°‹e
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

466 
execuã
);

469 
	#__libc_˛ónup_ªgi⁄_°¨t
(
DOIT
, 
FCT
, 
ARG
) \

470 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

471 
_avaû
; \

472 i‡(
DOIT
) { \

473 
_avaû
 = 
	`PTFAVAIL
 (
_±hªad_˛ónup_push_de„r
); \

474 i‡(
_avaû
) { \

475 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_push_de„r
, (&
_buf„r
, 
FCT
, \

476 
ARG
)); \

478 
_buf„r
.
__routöe
 = (
FCT
); \

479 
_buf„r
.
__¨g
 = (
ARG
); \

482 
_avaû
 = 0; \

483 }

	)

486 
	#__libc_˛ónup_ªgi⁄_íd
(
DOIT
) \

487 i‡(
_avaû
) { \

488 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_p›_ª°‹e
, (&
_buf„r
, 
DOIT
));\

489 } i‡(
DOIT
) \

490 
_buf„r
.
	`__routöe
 (_buf„r.
__¨g
); \

491 
	}

	)
}

494 
	#__libc_˛ónup_íd
(
DOIT
) \

495 i‡(
_avaû
) { \

496 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_p›_ª°‹e
, (&
_buf„r
, 
DOIT
));\

497 } i‡(
DOIT
) \

498 
_buf„r
.
	`__routöe
 (_buf„r.
__¨g
)

	)

502 
__exã∫_ölöe
 

503 
	$__libc_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
f
)

505 i‡(
f
->
__do_ô
)

506 
f
->
	`__ˇn˚l_routöe
 (f->
__ˇn˚l_¨g
);

507 
	}
}

509 
	#__libc_˛ónup_push
(
f˘
, 
¨g
) \

511 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

512 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__libc_˛ónup_routöe
))) \

513 { .
__ˇn˚l_routöe
 = (
f˘
), .
__ˇn˚l_¨g
 = (
¨g
), \

514 .
__do_ô
 = 1 };

	)

516 
	#__libc_˛ónup_p›
(
execuã
) \

517 
__˛‰ame
.
__do_ô
 = (
execuã
); \

518 } 0)

	)

522 
	#__libc_key_¸óã
(
KEY
, 
DESTRUCTOR
) \

523 
	`__libc_±f_ˇŒ
 (
__±hªad_key_¸óã
, (
KEY
, 
DESTRUCTOR
), 1)

	)

526 
	#__libc_gë•ecific
(
KEY
) \

527 
	`__libc_±f_ˇŒ
 (
__±hªad_gë•ecific
, (
KEY
), 
NULL
)

	)

530 
	#__libc_£t•ecific
(
KEY
, 
VALUE
) \

531 
	`__libc_±f_ˇŒ
 (
__±hªad_£t•ecific
, (
KEY
, 
VALUE
), 0)

	)

537 
	#__libc_©f‹k
(
PREPARE
, 
PARENT
, 
CHILD
) \

538 
	`__ªgi°î_©f‹k
 (
PREPARE
, 
PARENT
, 
CHILD
, 
NULL
)

	)

539 
__ªgi°î_©f‹k
 ((*
__¥ï¨e
) (),

540 (*
__∑ª¡
) (),

541 (*
__chûd
) (),

542 *
__dso_h™dÀ
);

547 
	`__±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

548 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx_©å
);

550 
	`__±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
);

552 
	`__±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
);

554 
	`__±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
);

556 
	`__±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
);

558 
	`__±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
);

560 
	`__±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
);

562 
	`__±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
,

563 
__köd
);

565 #ifde‡
__USE_UNIX98


566 
	`__±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__rwlock
,

567 
__c⁄°
 
±hªad_rwlock©å_t
 *
__©å
);

569 
	`__±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
);

571 
	`__±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

573 
	`__±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

575 
	`__±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
);

577 
	`__±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
);

579 
	`__±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
);

582 
	`__±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

583 (*
__de°r_fun˘i⁄
) (*));

585 
	`__±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

586 
__c⁄°
 *
__poöãr
);

588 *
	`__±hªad_gë•ecific
 (
±hªad_key_t
 
__key
);

590 
	`__±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

591 (*
__öô_routöe
) ());

593 
	`__±hªad_©f‹k
 ((*
__¥ï¨e
) (),

594 (*
__∑ª¡
) (),

595 (*
__chûd
) ());

601 #i‚de‡
__NO_WEAK_PTHREAD_ALIASES


602 #ifde‡
wók_exã∫


603 #i‡
_LIBC


604 
	~<bp-sym.h
>

606 
	#BP_SYM
(
sym
Ë
	)
sym

608 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_öô
))

609 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_de°roy
))

610 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_lock
))

611 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_åylock
))

612 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_u∆ock
))

613 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_öô
))

614 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_de°roy
))

615 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_£ây≥
))

616 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_öô
))

617 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_de°roy
))

618 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_rdlock
))

619 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_åyrdlock
))

620 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_wæock
))

621 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_åywæock
))

622 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_u∆ock
))

623 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_key_¸óã
))

624 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_£t•ecific
))

625 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_gë•ecific
))

626 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_⁄˚
))

627 
	$wók_exã∫
 (
__±hªad_öôülize
)

628 
	$wók_exã∫
 (
__±hªad_©f‹k
)

629 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_push_de„r
))

630 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_p›_ª°‹e
))

631 
	`wók_exã∫
 (
	$BP_SYM
 (
±hªad_£tˇn˚l°©e
))

633 #¥agm®
wók
 
__±hªad_muãx_öô


634 #¥agm®
wók
 
__±hªad_muãx_de°roy


635 #¥agm®
wók
 
__±hªad_muãx_lock


636 #¥agm®
wók
 
__±hªad_muãx_åylock


637 #¥agm®
wók
 
__±hªad_muãx_u∆ock


638 #¥agm®
wók
 
__±hªad_muãx©å_öô


639 #¥agm®
wók
 
__±hªad_muãx©å_de°roy


640 #¥agm®
wók
 
__±hªad_muãx©å_£ây≥


641 #¥agm®
wók
 
__±hªad_rwlock_de°roy


642 #¥agm®
wók
 
__±hªad_rwlock_rdlock


643 #¥agm®
wók
 
__±hªad_rwlock_åyrdlock


644 #¥agm®
wók
 
__±hªad_rwlock_wæock


645 #¥agm®
wók
 
__±hªad_rwlock_åywæock


646 #¥agm®
wók
 
__±hªad_rwlock_u∆ock


647 #¥agm®
wók
 
__±hªad_key_¸óã


648 #¥agm®
wók
 
__±hªad_£t•ecific


649 #¥agm®
wók
 
__±hªad_gë•ecific


650 #¥agm®
wók
 
__±hªad_⁄˚


651 #¥agm®
wók
 
__±hªad_öôülize


652 #¥agm®
wók
 
__±hªad_©f‹k


653 #¥agm®
wók
 
_±hªad_˛ónup_push_de„r


654 #¥agm®
wók
 
_±hªad_˛ónup_p›_ª°‹e


655 #¥agm®
wók
 
±hªad_£tˇn˚l°©e


	@/usr/include/bits/local_lim.h

25 #i‚de‡
NR_OPEN


26 
	#__undef_NR_OPEN


	)

28 #i‚de‡
LINK_MAX


29 
	#__undef_LINK_MAX


	)

31 #i‚de‡
OPEN_MAX


32 
	#__undef_OPEN_MAX


	)

34 #i‚de‡
ARG_MAX


35 
	#__undef_ARG_MAX


	)

39 
	~<löux/limôs.h
>

42 #ifde‡
__undef_NR_OPEN


43 #unde‡
NR_OPEN


44 #unde‡
__undef_NR_OPEN


47 #ifde‡
__undef_LINK_MAX


48 #unde‡
LINK_MAX


49 #unde‡
__undef_LINK_MAX


52 #ifde‡
__undef_OPEN_MAX


53 #unde‡
OPEN_MAX


54 #unde‡
__undef_OPEN_MAX


57 #ifde‡
__undef_ARG_MAX


58 #unde‡
ARG_MAX


59 #unde‡
__undef_ARG_MAX


63 
	#_POSIX_THREAD_KEYS_MAX
 128

	)

65 
	#PTHREAD_KEYS_MAX
 1024

	)

68 
	#_POSIX_THREAD_DESTRUCTOR_ITERATIONS
 4

	)

70 
	#PTHREAD_DESTRUCTOR_ITERATIONS
 
_POSIX_THREAD_DESTRUCTOR_ITERATIONS


	)

73 
	#_POSIX_THREAD_THREADS_MAX
 64

	)

75 #unde‡
PTHREAD_THREADS_MAX


79 
	#AIO_PRIO_DELTA_MAX
 20

	)

82 
	#PTHREAD_STACK_MIN
 16384

	)

85 
	#DELAYTIMER_MAX
 2147483647

	)

88 
	#TTY_NAME_MAX
 32

	)

91 
	#LOGIN_NAME_MAX
 256

	)

94 
	#HOST_NAME_MAX
 64

	)

97 
	#MQ_PRIO_MAX
 32768

	)

100 
	#SEM_VALUE_MAX
 (2147483647)

	)

	@/usr/include/gconv.h

23 #i‚de‡
_GCONV_H


24 
	#_GCONV_H
 1

	)

26 
	~<„©uªs.h
>

27 
	#__√ed_mb°©e_t


	)

28 
	#__√ed_wöt_t


	)

29 
	~<wch¨.h
>

30 
	#__√ed_size_t


	)

31 
	#__√ed_wch¨_t


	)

32 
	~<°ddef.h
>

35 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

40 
	m__GCONV_OK
 = 0,

41 
	m__GCONV_NOCONV
,

42 
	m__GCONV_NODB
,

43 
	m__GCONV_NOMEM
,

45 
	m__GCONV_EMPTY_INPUT
,

46 
	m__GCONV_FULL_OUTPUT
,

47 
	m__GCONV_ILLEGAL_INPUT
,

48 
	m__GCONV_INCOMPLETE_INPUT
,

50 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

51 
	m__GCONV_INTERNAL_ERROR


58 
	m__GCONV_IS_LAST
 = 0x0001,

59 
	m__GCONV_IGNORE_ERRORS
 = 0x0002

64 
	g__gc⁄v_°ï
;

65 
	g__gc⁄v_°ï_d©a
;

66 
	g__gc⁄v_lﬂded_obje˘
;

67 
	g__gc⁄v_å™s_d©a
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

72 
	t__c⁄°
 **, __const *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

85 
	t__gc⁄v_°ï_d©a
 *, *,

86 
	t__c⁄°
 *,

87 
	t__c⁄°
 **,

88 
	t__c⁄°
 *, **,

89 
	tsize_t
 *);

92 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
Ë(*, 
	t__c⁄°
 *,

93 
	t__c⁄°
 *,

97 (*
	t__gc⁄v_å™s_quîy_f˘
Ë(
	t__c⁄°
 *, __const ***,

98 
	tsize_t
 *);

101 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

102 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

104 
	s__gc⁄v_å™s_d©a


107 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

108 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

109 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

110 *
__d©a
;

111 
__gc⁄v_å™s_d©a
 *
__√xt
;

116 
	s__gc⁄v_°ï


118 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

119 
__c⁄°
 *
__mod«me
;

121 
__cou¡î
;

123 *
__‰om_«me
;

124 *
__to_«me
;

126 
__gc⁄v_f˘
 
__f˘
;

127 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

128 
__gc⁄v_öô_f˘
 
__öô_f˘
;

129 
__gc⁄v_íd_f˘
 
__íd_f˘
;

133 
__mö_√eded_‰om
;

134 
__max_√eded_‰om
;

135 
__mö_√eded_to
;

136 
__max_√eded_to
;

139 
__°©eful
;

141 *
__d©a
;

146 
	s__gc⁄v_°ï_d©a


148 *
__outbuf
;

149 *
__outbu„nd
;

153 
__Êags
;

157 
__övoˇti⁄_cou¡î
;

161 
__öã∫Æ_u£
;

163 
__mb°©e_t
 *
__°©ï
;

164 
__mb°©e_t
 
__°©e
;

168 
__gc⁄v_å™s_d©a
 *
__å™s
;

173 
	s__gc⁄v_öfo


175 
size_t
 
__n°ïs
;

176 
__gc⁄v_°ï
 *
__°ïs
;

177 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

178 } *
	t__gc⁄v_t
;

	@/usr/include/gnu/stubs-64.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub_bdÊush


	)

11 
	#__°ub_chÊags


	)

12 
	#__°ub_Áâach


	)

13 
	#__°ub_fchÊags


	)

14 
	#__°ub_fdëach


	)

15 
	#__°ub_gëmsg


	)

16 
	#__°ub_gây


	)

17 
	#__°ub_lchmod


	)

18 
	#__°ub_putmsg


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/asm-generic/errno.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_H


2 
	#_ASM_GENERIC_ERRNO_H


	)

4 
	~<asm-gíîic/î∫o-ba£.h
>

6 
	#EDEADLK
 35

	)

7 
	#ENAMETOOLONG
 36

	)

8 
	#ENOLCK
 37

	)

9 
	#ENOSYS
 38

	)

10 
	#ENOTEMPTY
 39

	)

11 
	#ELOOP
 40

	)

12 
	#EWOULDBLOCK
 
EAGAIN


	)

13 
	#ENOMSG
 42

	)

14 
	#EIDRM
 43

	)

15 
	#ECHRNG
 44

	)

16 
	#EL2NSYNC
 45

	)

17 
	#EL3HLT
 46

	)

18 
	#EL3RST
 47

	)

19 
	#ELNRNG
 48

	)

20 
	#EUNATCH
 49

	)

21 
	#ENOCSI
 50

	)

22 
	#EL2HLT
 51

	)

23 
	#EBADE
 52

	)

24 
	#EBADR
 53

	)

25 
	#EXFULL
 54

	)

26 
	#ENOANO
 55

	)

27 
	#EBADRQC
 56

	)

28 
	#EBADSLT
 57

	)

30 
	#EDEADLOCK
 
EDEADLK


	)

32 
	#EBFONT
 59

	)

33 
	#ENOSTR
 60

	)

34 
	#ENODATA
 61

	)

35 
	#ETIME
 62

	)

36 
	#ENOSR
 63

	)

37 
	#ENONET
 64

	)

38 
	#ENOPKG
 65

	)

39 
	#EREMOTE
 66

	)

40 
	#ENOLINK
 67

	)

41 
	#EADV
 68

	)

42 
	#ESRMNT
 69

	)

43 
	#ECOMM
 70

	)

44 
	#EPROTO
 71

	)

45 
	#EMULTIHOP
 72

	)

46 
	#EDOTDOT
 73

	)

47 
	#EBADMSG
 74

	)

48 
	#EOVERFLOW
 75

	)

49 
	#ENOTUNIQ
 76

	)

50 
	#EBADFD
 77

	)

51 
	#EREMCHG
 78

	)

52 
	#ELIBACC
 79

	)

53 
	#ELIBBAD
 80

	)

54 
	#ELIBSCN
 81

	)

55 
	#ELIBMAX
 82

	)

56 
	#ELIBEXEC
 83

	)

57 
	#EILSEQ
 84

	)

58 
	#ERESTART
 85

	)

59 
	#ESTRPIPE
 86

	)

60 
	#EUSERS
 87

	)

61 
	#ENOTSOCK
 88

	)

62 
	#EDESTADDRREQ
 89

	)

63 
	#EMSGSIZE
 90

	)

64 
	#EPROTOTYPE
 91

	)

65 
	#ENOPROTOOPT
 92

	)

66 
	#EPROTONOSUPPORT
 93

	)

67 
	#ESOCKTNOSUPPORT
 94

	)

68 
	#EOPNOTSUPP
 95

	)

69 
	#EPFNOSUPPORT
 96

	)

70 
	#EAFNOSUPPORT
 97

	)

71 
	#EADDRINUSE
 98

	)

72 
	#EADDRNOTAVAIL
 99

	)

73 
	#ENETDOWN
 100

	)

74 
	#ENETUNREACH
 101

	)

75 
	#ENETRESET
 102

	)

76 
	#ECONNABORTED
 103

	)

77 
	#ECONNRESET
 104

	)

78 
	#ENOBUFS
 105

	)

79 
	#EISCONN
 106

	)

80 
	#ENOTCONN
 107

	)

81 
	#ESHUTDOWN
 108

	)

82 
	#ETOOMANYREFS
 109

	)

83 
	#ETIMEDOUT
 110

	)

84 
	#ECONNREFUSED
 111

	)

85 
	#EHOSTDOWN
 112

	)

86 
	#EHOSTUNREACH
 113

	)

87 
	#EALREADY
 114

	)

88 
	#EINPROGRESS
 115

	)

89 
	#ESTALE
 116

	)

90 
	#EUCLEAN
 117

	)

91 
	#ENOTNAM
 118

	)

92 
	#ENAVAIL
 119

	)

93 
	#EISNAM
 120

	)

94 
	#EREMOTEIO
 121

	)

95 
	#EDQUOT
 122

	)

97 
	#ENOMEDIUM
 123

	)

98 
	#EMEDIUMTYPE
 124

	)

99 
	#ECANCELED
 125

	)

100 
	#ENOKEY
 126

	)

101 
	#EKEYEXPIRED
 127

	)

102 
	#EKEYREVOKED
 128

	)

103 
	#EKEYREJECTED
 129

	)

106 
	#EOWNERDEAD
 130

	)

107 
	#ENOTRECOVERABLE
 131

	)

109 
	#ERFKILL
 132

	)

	@/usr/include/gnu/option-groups.h

10 #i‚de‡
__GNU_OPTION_GROUPS_H


11 
	#__GNU_OPTION_GROUPS_H


	)

13 
	#__OPTION_EGLIBC_ADVANCED_INET6
 1

	)

14 
	#__OPTION_EGLIBC_BACKTRACE
 1

	)

15 
	#__OPTION_EGLIBC_BIG_MACROS
 1

	)

16 
	#__OPTION_EGLIBC_BSD
 1

	)

17 
	#__OPTION_EGLIBC_CATGETS
 1

	)

18 
	#__OPTION_EGLIBC_CHARSETS
 1

	)

19 
	#__OPTION_EGLIBC_CXX_TESTS
 1

	)

20 
	#__OPTION_EGLIBC_DB_ALIASES
 1

	)

21 
	#__OPTION_EGLIBC_ENVZ
 1

	)

22 
	#__OPTION_EGLIBC_FCVT
 1

	)

23 
	#__OPTION_EGLIBC_FMTMSG
 1

	)

24 
	#__OPTION_EGLIBC_FSTAB
 1

	)

25 
	#__OPTION_EGLIBC_FTRAVERSE
 1

	)

26 
	#__OPTION_EGLIBC_GETLOGIN
 1

	)

27 
	#__OPTION_EGLIBC_INET
 1

	)

28 
	#__OPTION_EGLIBC_LIBM
 1

	)

29 
	#__OPTION_EGLIBC_LOCALES
 1

	)

30 
	#__OPTION_EGLIBC_LOCALE_CODE
 1

	)

31 
	#__OPTION_EGLIBC_MEMUSAGE
 1

	)

32 
	#__OPTION_EGLIBC_NIS
 1

	)

33 
	#__OPTION_EGLIBC_NSSWITCH
 1

	)

34 
	#__OPTION_EGLIBC_RCMD
 1

	)

35 
	#__OPTION_EGLIBC_SPAWN
 1

	)

36 
	#__OPTION_EGLIBC_STREAMS
 1

	)

37 
	#__OPTION_EGLIBC_SUNRPC
 1

	)

38 
	#__OPTION_EGLIBC_UTMP
 1

	)

39 
	#__OPTION_EGLIBC_UTMPX
 1

	)

40 
	#__OPTION_EGLIBC_WORDEXP
 1

	)

41 
	#__OPTION_POSIX_C_LANG_WIDE_CHAR
 1

	)

42 
	#__OPTION_POSIX_REGEXP
 1

	)

43 
	#__OPTION_POSIX_REGEXP_GLIBC
 1

	)

44 
	#__OPTION_POSIX_WIDE_CHAR_DEVICE_IO
 1

	)

	@/usr/include/pthread.h

20 #i‚de‡
_PTHREAD_H


21 
	#_PTHREAD_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<ídün.h
>

25 
	~<sched.h
>

26 
	~<time.h
>

28 
	#__√ed_sig£t_t


	)

29 
	~<sig«l.h
>

30 
	~<bôs/±hªadty≥s.h
>

31 
	~<bôs/£tjmp.h
>

32 
	~<bôs/w‹dsize.h
>

38 
	mPTHREAD_CREATE_JOINABLE
,

39 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

40 
	mPTHREAD_CREATE_DETACHED


41 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

48 
	mPTHREAD_MUTEX_TIMED_NP
,

49 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

50 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

51 
	mPTHREAD_MUTEX_ADAPTIVE_NP


52 #ifde‡
__USE_UNIX98


54 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

55 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

56 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

57 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


59 #ifde‡
__USE_GNU


61 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


66 #ifde‡
__USE_XOPEN2K


70 
	mPTHREAD_MUTEX_STALLED
,

71 
	mPTHREAD_MUTEX_STALLED_NP
 = 
PTHREAD_MUTEX_STALLED
,

72 
	mPTHREAD_MUTEX_ROBUST
,

73 
	mPTHREAD_MUTEX_ROBUST_NP
 = 
PTHREAD_MUTEX_ROBUST


78 #ifde‡
__USE_UNIX98


82 
	mPTHREAD_PRIO_NONE
,

83 
	mPTHREAD_PRIO_INHERIT
,

84 
	mPTHREAD_PRIO_PROTECT


90 #i‡
__WORDSIZE
 == 64

91 
	#PTHREAD_MUTEX_INITIALIZER
 \

92 { { 0, 0, 0, 0, 0, 0, { 0, 0 } } }

	)

93 #ifde‡
__USE_GNU


94 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

95 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0, 0 } } }

	)

96 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

97 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0, 0 } } }

	)

98 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

99 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0, 0 } } }

	)

102 
	#PTHREAD_MUTEX_INITIALIZER
 \

103 { { 0, 0, 0, 0, 0, { 0 } } }

	)

104 #ifde‡
__USE_GNU


105 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

106 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0 } } }

	)

107 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

108 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0 } } }

	)

109 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

110 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0 } } }

	)

116 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


119 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

120 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

121 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

122 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


126 
	#PTHREAD_RWLOCK_INITIALIZER
 \

127 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

	)

128 #ifde‡
__USE_GNU


129 #i‡
__WORDSIZE
 == 64

130 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

132 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

134 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


135 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

136 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

137 0, 0, 0, 0 } }

	)

139 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

140 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

141 0 } }

	)

151 
	mPTHREAD_INHERIT_SCHED
,

152 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

153 
	mPTHREAD_EXPLICIT_SCHED


154 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

161 
	mPTHREAD_SCOPE_SYSTEM
,

162 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

163 
	mPTHREAD_SCOPE_PROCESS


164 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

171 
	mPTHREAD_PROCESS_PRIVATE
,

172 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

173 
	mPTHREAD_PROCESS_SHARED


174 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

180 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

184 
	s_±hªad_˛ónup_buf„r


186 (*
	m__routöe
) (*);

187 *
	m__¨g
;

188 
	m__ˇn˚…y≥
;

189 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

195 
	mPTHREAD_CANCEL_ENABLE
,

196 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

197 
	mPTHREAD_CANCEL_DISABLE


198 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

202 
	mPTHREAD_CANCEL_DEFERRED
,

203 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

204 
	mPTHREAD_CANCEL_ASYNCHRONOUS


205 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

207 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

211 
	#PTHREAD_ONCE_INIT
 0

	)

214 #ifde‡
__USE_XOPEN2K


218 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

222 
__BEGIN_DECLS


227 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

228 
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

229 *(*
__°¨t_routöe
) (*),

230 *
__ª°ri˘
 
__¨g
Ë
__THROW
 
__n⁄nuŒ
 ((1, 3));

236 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

244 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

246 #ifde‡
__USE_GNU


249 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

257 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

258 
__c⁄°
 
time•ec
 *
__ab°ime
);

265 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

269 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

272 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
Ë
__THROW
;

280 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

283 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

284 
__THROW
 
	`__n⁄nuŒ
 ((1));

287 
	$±hªad_©å_gëdëach°©e
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

288 *
__dëach°©e
)

289 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

292 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

293 
__dëach°©e
)

294 
__THROW
 
	`__n⁄nuŒ
 ((1));

298 
	$±hªad_©å_gëgu¨dsize
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

299 
size_t
 *
__gu¨dsize
)

300 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

303 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

304 
size_t
 
__gu¨dsize
)

305 
__THROW
 
	`__n⁄nuŒ
 ((1));

309 
	$±hªad_©å_gësched∑øm
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


310 
__©å
,

311 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

312 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

315 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

316 
__c⁄°
 
sched_∑øm
 *
__ª°ri˘


317 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

320 
	$±hªad_©å_gëschedpﬁicy
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


321 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

322 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

325 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

326 
__THROW
 
	`__n⁄nuŒ
 ((1));

329 
	$±hªad_©å_gëöhîôsched
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


330 
__©å
, *
__ª°ri˘
 
__öhîô
)

331 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

334 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

335 
__öhîô
)

336 
__THROW
 
	`__n⁄nuŒ
 ((1));

340 
	$±hªad_©å_gësc›e
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

341 *
__ª°ri˘
 
__sc›e
)

342 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

345 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

346 
__THROW
 
	`__n⁄nuŒ
 ((1));

349 
	$±hªad_©å_gë°ackaddr
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


350 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

351 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

357 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

358 *
__°ackaddr
)

359 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

362 
	$±hªad_©å_gë°acksize
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


363 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

364 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

369 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

370 
size_t
 
__°acksize
)

371 
__THROW
 
	`__n⁄nuŒ
 ((1));

373 #ifde‡
__USE_XOPEN2K


375 
	$±hªad_©å_gë°ack
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

376 **
__ª°ri˘
 
__°ackaddr
,

377 
size_t
 *
__ª°ri˘
 
__°acksize
)

378 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

383 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

384 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

387 #ifde‡
__USE_GNU


390 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

391 
size_t
 
__˝u£tsize
,

392 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

393 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

397 
	$±hªad_©å_gëafföôy_≈
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

398 
size_t
 
__˝u£tsize
,

399 
˝u_£t_t
 *
__˝u£t
)

400 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

406 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

407 
__THROW
 
	`__n⁄nuŒ
 ((2));

415 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

416 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

417 
__THROW
 
	`__n⁄nuŒ
 ((3));

420 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

421 *
__ª°ri˘
 
__pﬁicy
,

422 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

423 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

426 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

427 
__THROW
;

430 #ifde‡
__USE_UNIX98


432 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

435 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

438 #ifde‡
__USE_GNU


443 
	$±hªad_yõld
 (Ë
__THROW
;

448 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

449 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

450 
__THROW
 
	`__n⁄nuŒ
 ((3));

453 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

454 
˝u_£t_t
 *
__˝u£t
)

455 
__THROW
 
	`__n⁄nuŒ
 ((3));

468 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

469 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

480 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

484 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

487 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

492 
	`±hªad_ã°ˇn˚l
 ();

501 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

502 
__mask_was_ßved
;

503 } 
__ˇn˚l_jmp_buf
[1];

504 *
__∑d
[4];

505 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

508 #i‚de‡
__˛ónup_f˘_©åibuã


509 
	#__˛ónup_f˘_©åibuã


	)

514 
	s__±hªad_˛ónup_‰ame


516 (*
__ˇn˚l_routöe
) (*);

517 *
__ˇn˚l_¨g
;

518 
__do_ô
;

519 
__ˇn˚l_ty≥
;

522 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


523 #ifde‡
__˝lu•lus


525 ˛as†
	c__±hªad_˛ónup_˛ass


527 (*
__ˇn˚l_routöe
) (*);

528 *
__ˇn˚l_¨g
;

529 
__do_ô
;

530 
__ˇn˚l_ty≥
;

532 
public
:

533 
	`__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

534 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

535 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

536 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

537 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

538 &
__ˇn˚l_ty≥
); 
	}
}

539 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

549 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

551 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

555 
	#±hªad_˛ónup_p›
(
execuã
) \

556 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

557 } 0)

	)

559 #ifde‡
__USE_GNU


563 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

565 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

566 
__˛‰ame
.
	`__de„r
 ()

	)

571 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

572 
__˛‰ame
.
	`__ª°‹e
 (); \

573 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

574 } 0)

	)

581 
__exã∫_ölöe
 

582 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

584 i‡(
__‰ame
->
__do_ô
)

585 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

586 
	}
}

595 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

597 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

598 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

599 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

600 .
__do_ô
 = 1 };

	)

604 
	#±hªad_˛ónup_p›
(
execuã
) \

605 
__˛‰ame
.
__do_ô
 = (
execuã
); \

606 } 0)

	)

608 #ifde‡
__USE_GNU


612 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

614 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

615 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

616 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

617 .
__do_ô
 = 1 }; \

618 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

619 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

624 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

625 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

626 
__˛‰ame
.
__do_ô
 = (
execuã
); \

627 } 0)

	)

638 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

640 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

641 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

642 *
__ˇn˚l_¨g
 = (
¨g
); \

643 
nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

644 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

645 i‡(
	`__buûtö_ex≥˘
 (
nŸ_fú°_ˇŒ
, 0)) \

647 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

648 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

652 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

653 dÿ{

	)

654 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

655 
__˛ónup_f˘_©åibuã
;

659 
	#±hªad_˛ónup_p›
(
execuã
) \

662 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

663 i‡(
execuã
) \

664 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

665 } 0)

	)

666 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

667 
__˛ónup_f˘_©åibuã
;

669 #ifde‡
__USE_GNU


673 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

675 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

676 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

677 *
__ˇn˚l_¨g
 = (
¨g
); \

678 
nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

679 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

680 i‡(
	`__buûtö_ex≥˘
 (
nŸ_fú°_ˇŒ
, 0)) \

682 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

683 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

687 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

688 dÿ{

	)

689 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

690 
__˛ónup_f˘_©åibuã
;

695 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

698 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

699 i‡(
execuã
) \

700 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

701 
	}
} 0)

	)

702 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

703 
__˛ónup_f˘_©åibuã
;

707 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

708 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

709 #i‚de‡
SHARED


710 
	`__©åibuã__
 ((
__wók__
))

716 
__jmp_buf_èg
;

717 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROW
;

723 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

724 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx©å
)

725 
__THROW
 
	`__n⁄nuŒ
 ((1));

728 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

729 
__THROW
 
	`__n⁄nuŒ
 ((1));

732 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

733 
__THROW
 
	`__n⁄nuŒ
 ((1));

736 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

737 
__THROW
 
	`__n⁄nuŒ
 ((1));

739 #ifde‡
__USE_XOPEN2K


741 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

742 
__c⁄°
 
time•ec
 *
__ª°ri˘


743 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

747 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

748 
__THROW
 
	`__n⁄nuŒ
 ((1));

751 #ifde‡
__USE_UNIX98


753 
	$±hªad_muãx_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx_t
 *

754 
__ª°ri˘
 
__muãx
,

755 *
__ª°ri˘
 
__¥io˚ûög
)

756 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

760 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

761 
__¥io˚ûög
,

762 *
__ª°ri˘
 
__ﬁd_˚ûög
)

763 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

767 #ifde‡
__USE_XOPEN2K8


769 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

770 
__THROW
 
	`__n⁄nuŒ
 ((1));

771 #ifde‡
__USE_GNU


772 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

773 
__THROW
 
	`__n⁄nuŒ
 ((1));

782 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

783 
__THROW
 
	`__n⁄nuŒ
 ((1));

786 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

787 
__THROW
 
	`__n⁄nuŒ
 ((1));

790 
	$±hªad_muãx©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_muãx©å_t
 *

791 
__ª°ri˘
 
__©å
,

792 *
__ª°ri˘
 
__psh¨ed
)

793 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

796 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

797 
__psh¨ed
)

798 
__THROW
 
	`__n⁄nuŒ
 ((1));

800 #ifde‡
__USE_UNIX98


802 
	$±hªad_muãx©å_gëty≥
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__ª°ri˘


803 
__©å
, *
__ª°ri˘
 
__köd
)

804 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

809 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

810 
__THROW
 
	`__n⁄nuŒ
 ((1));

813 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (
__c⁄°
 
±hªad_muãx©å_t
 *

814 
__ª°ri˘
 
__©å
,

815 *
__ª°ri˘
 
__¥Ÿocﬁ
)

816 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

820 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

821 
__¥Ÿocﬁ
)

822 
__THROW
 
	`__n⁄nuŒ
 ((1));

825 
	$±hªad_muãx©å_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx©å_t
 *

826 
__ª°ri˘
 
__©å
,

827 *
__ª°ri˘
 
__¥io˚ûög
)

828 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

831 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

832 
__¥io˚ûög
)

833 
__THROW
 
	`__n⁄nuŒ
 ((1));

836 #ifde‡
__USE_XOPEN2K


838 
	$±hªad_muãx©å_gërobu°
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

839 *
__robu°√ss
)

840 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

841 #ifde‡
__USE_GNU


842 
	$±hªad_muãx©å_gërobu°_≈
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

843 *
__robu°√ss
)

844 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

848 
	$±hªad_muãx©å_£åobu°
 (
±hªad_muãx©å_t
 *
__©å
,

849 
__robu°√ss
)

850 
__THROW
 
	`__n⁄nuŒ
 ((1));

851 #ifde‡
__USE_GNU


852 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

853 
__robu°√ss
)

854 
__THROW
 
	`__n⁄nuŒ
 ((1));

859 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


864 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

865 
__c⁄°
 
±hªad_rwlock©å_t
 *
__ª°ri˘


866 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

869 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

870 
__THROW
 
	`__n⁄nuŒ
 ((1));

873 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

874 
__THROW
 
	`__n⁄nuŒ
 ((1));

877 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

878 
__THROW
 
	`__n⁄nuŒ
 ((1));

880 #ifde‡
__USE_XOPEN2K


882 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

883 
__c⁄°
 
time•ec
 *
__ª°ri˘


884 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

888 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

889 
__THROW
 
	`__n⁄nuŒ
 ((1));

892 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

893 
__THROW
 
	`__n⁄nuŒ
 ((1));

895 #ifde‡
__USE_XOPEN2K


897 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

898 
__c⁄°
 
time•ec
 *
__ª°ri˘


899 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

903 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

904 
__THROW
 
	`__n⁄nuŒ
 ((1));

910 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

911 
__THROW
 
	`__n⁄nuŒ
 ((1));

914 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

915 
__THROW
 
	`__n⁄nuŒ
 ((1));

918 
	$±hªad_rwlock©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

919 
__ª°ri˘
 
__©å
,

920 *
__ª°ri˘
 
__psh¨ed
)

921 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

924 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

925 
__psh¨ed
)

926 
__THROW
 
	`__n⁄nuŒ
 ((1));

929 
	$±hªad_rwlock©å_gëköd_≈
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

930 
__ª°ri˘
 
__©å
,

931 *
__ª°ri˘
 
__¥ef
)

932 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

935 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

936 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

944 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

945 
__c⁄°
 
±hªad_c⁄d©å_t
 *
__ª°ri˘


946 
__c⁄d_©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

949 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

950 
__THROW
 
	`__n⁄nuŒ
 ((1));

953 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

954 
__THROW
 
	`__n⁄nuŒ
 ((1));

957 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

958 
__THROW
 
	`__n⁄nuŒ
 ((1));

965 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

966 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

967 
	`__n⁄nuŒ
 ((1, 2));

976 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

977 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

978 
__c⁄°
 
time•ec
 *
__ª°ri˘


979 
__ab°ime
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

984 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

985 
__THROW
 
	`__n⁄nuŒ
 ((1));

988 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

989 
__THROW
 
	`__n⁄nuŒ
 ((1));

992 
	$±hªad_c⁄d©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

993 
__ª°ri˘
 
__©å
,

994 *
__ª°ri˘
 
__psh¨ed
)

995 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

998 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

999 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1001 #ifde‡
__USE_XOPEN2K


1003 
	$±hªad_c⁄d©å_gë˛ock
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

1004 
__ª°ri˘
 
__©å
,

1005 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

1006 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1009 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

1010 
__˛ockid_t
 
__˛ock_id
)

1011 
__THROW
 
	`__n⁄nuŒ
 ((1));

1015 #ifde‡
__USE_XOPEN2K


1020 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1021 
__THROW
 
	`__n⁄nuŒ
 ((1));

1024 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1025 
__THROW
 
	`__n⁄nuŒ
 ((1));

1028 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1029 
__THROW
 
	`__n⁄nuŒ
 ((1));

1032 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1033 
__THROW
 
	`__n⁄nuŒ
 ((1));

1036 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1037 
__THROW
 
	`__n⁄nuŒ
 ((1));

1044 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1045 
__c⁄°
 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1046 
__©å
, 
__cou¡
)

1047 
__THROW
 
	`__n⁄nuŒ
 ((1));

1050 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1051 
__THROW
 
	`__n⁄nuŒ
 ((1));

1054 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1055 
__THROW
 
	`__n⁄nuŒ
 ((1));

1059 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1060 
__THROW
 
	`__n⁄nuŒ
 ((1));

1063 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1064 
__THROW
 
	`__n⁄nuŒ
 ((1));

1067 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (
__c⁄°
 
±hªad_b¨rõøâr_t
 *

1068 
__ª°ri˘
 
__©å
,

1069 *
__ª°ri˘
 
__psh¨ed
)

1070 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1073 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1074 
__psh¨ed
)

1075 
__THROW
 
	`__n⁄nuŒ
 ((1));

1087 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1088 (*
__de°r_fun˘i⁄
) (*))

1089 
__THROW
 
	`__n⁄nuŒ
 ((1));

1092 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1095 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1098 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1099 
__c⁄°
 *
__poöãr
Ë
__THROW
 ;

1102 #ifde‡
__USE_XOPEN2K


1104 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1105 
__˛ockid_t
 *
__˛ock_id
)

1106 
__THROW
 
	`__n⁄nuŒ
 ((2));

1121 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1122 (*
__∑ª¡
) (),

1123 (*
__chûd
Ë()Ë
__THROW
;

1126 #ifde‡
__USE_EXTERN_INLINES


1128 
__exã∫_ölöe
 

1129 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1131  
__thªad1
 =
__thªad2
;

1132 
	}
}

1135 
	g__END_DECLS


	@/usr/include/asm-generic/errno-base.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_BASE_H


2 
	#_ASM_GENERIC_ERRNO_BASE_H


	)

4 
	#EPERM
 1

	)

5 
	#ENOENT
 2

	)

6 
	#ESRCH
 3

	)

7 
	#EINTR
 4

	)

8 
	#EIO
 5

	)

9 
	#ENXIO
 6

	)

10 
	#E2BIG
 7

	)

11 
	#ENOEXEC
 8

	)

12 
	#EBADF
 9

	)

13 
	#ECHILD
 10

	)

14 
	#EAGAIN
 11

	)

15 
	#ENOMEM
 12

	)

16 
	#EACCES
 13

	)

17 
	#EFAULT
 14

	)

18 
	#ENOTBLK
 15

	)

19 
	#EBUSY
 16

	)

20 
	#EEXIST
 17

	)

21 
	#EXDEV
 18

	)

22 
	#ENODEV
 19

	)

23 
	#ENOTDIR
 20

	)

24 
	#EISDIR
 21

	)

25 
	#EINVAL
 22

	)

26 
	#ENFILE
 23

	)

27 
	#EMFILE
 24

	)

28 
	#ENOTTY
 25

	)

29 
	#ETXTBSY
 26

	)

30 
	#EFBIG
 27

	)

31 
	#ENOSPC
 28

	)

32 
	#ESPIPE
 29

	)

33 
	#EROFS
 30

	)

34 
	#EMLINK
 31

	)

35 
	#EPIPE
 32

	)

36 
	#EDOM
 33

	)

37 
	#ERANGE
 34

	)

	@/usr/include/bits/setjmp.h

20 #i‚de‡
_BITS_SETJMP_H


21 
	#_BITS_SETJMP_H
 1

	)

23 #i‡!
deföed
 
_SETJMP_H
 && !deföed 
_PTHREAD_H


27 
	~<bôs/w‹dsize.h
>

29 #i‚de‡
_ASM


31 #i‡
__WORDSIZE
 == 64

32 
	t__jmp_buf
[8];

34 
	t__jmp_buf
[6];

	@/usr/include/sched.h

20 #i‚def 
_SCHED_H


21 
	#_SCHED_H
 1

	)

23 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	#__√ed_size_t


	)

29 
	~<°ddef.h
>

31 
	#__√ed_time•ec


	)

32 
	~<time.h
>

35 
	~<bôs/sched.h
>

37 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

40 
__BEGIN_DECLS


43 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

44 
__THROW
;

47 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

50 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

51 
__c⁄°
 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

54 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

57 
	$sched_yõld
 (Ë
__THROW
;

60 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

63 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

66 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

69 #ifde‡
__USE_GNU


71 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

72 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

73 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

74 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

75 
˝u£ç
)

	)

76 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

77 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

79 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

80 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

81 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

82 
˝u£ç
)

	)

83 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

84 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

86 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

87 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

88 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

89 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

91 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

92 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

93 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

94 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

95 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

96 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

97 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

98 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

99 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

100 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

101 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

102 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

104 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

105 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

106 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

110 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

111 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

114 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

115 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

118 
__END_DECLS


	@/usr/include/signal.h

23 #i‚def 
_SIGNAL_H


25 #i‡!
deföed
 
__√ed_sig_©omic_t
 && !deföed 
__√ed_sig£t_t


26 
	#_SIGNAL_H


	)

29 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


33 
	~<bôs/sig£t.h
>

37 #i‡
deföed
 
__√ed_sig_©omic_t
 || deföed 
_SIGNAL_H


38 #i‚de‡
__sig_©omic_t_deföed


39 
	#__sig_©omic_t_deföed


	)

40 
__BEGIN_NAMESPACE_STD


41 
__sig_©omic_t
 
	tsig_©omic_t
;

42 
	g__END_NAMESPACE_STD


44 #unde‡
__√ed_sig_©omic_t


47 #i‡
deföed
 
__√ed_sig£t_t
 || (deföed 
_SIGNAL_H
 && deföed 
__USE_POSIX
)

48 #i‚de‡
__sig£t_t_deföed


49 
	#__sig£t_t_deföed


	)

50 
__sig£t_t
 
	tsig£t_t
;

52 #unde‡
__√ed_sig£t_t


55 #ifde‡
_SIGNAL_H


57 
	~<bôs/ty≥s.h
>

58 
	~<bôs/signum.h
>

60 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


61 #i‚de‡
__pid_t_deföed


62 
__pid_t
 
	tpid_t
;

63 
	#__pid_t_deföed


	)

65 #ifde‡
__USE_XOPEN


67 #i‚de‡
__uid_t_deföed


68 
__uid_t
 
	tuid_t
;

69 
	#__uid_t_deföed


	)

73 #ifde‡
__USE_POSIX199309


75 
	#__√ed_time•ec


	)

76 
	~<time.h
>

79 
	~<bôs/sigöfo.h
>

84 (*
	t__sigh™dÀr_t
) ();

89 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

90 
__THROW
;

91 #ifde‡
__USE_GNU


92 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

93 
__THROW
;

99 
__BEGIN_NAMESPACE_STD


100 #ifde‡
__USE_BSD


101 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

102 
__THROW
;

105 #ifde‡
__REDIRECT_NTH


106 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

107 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

108 
__sysv_sig«l
);

110 
	#sig«l
 
__sysv_sig«l


	)

113 
__END_NAMESPACE_STD


115 #ifde‡
__USE_XOPEN


118 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

119 
__THROW
;

125 #ifde‡
__USE_POSIX


126 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

129 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


133 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

136 
__BEGIN_NAMESPACE_STD


138 
	$øi£
 (
__sig
Ë
__THROW
;

139 
__END_NAMESPACE_STD


141 #ifde‡
__USE_SVID


143 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

144 
__THROW
;

145 
	$gsig«l
 (
__sig
Ë
__THROW
;

148 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K


150 
	`psig«l
 (
__sig
, 
__c⁄°
 *
__s
);

153 #ifde‡
__USE_XOPEN2K


155 
	`psigöfo
 (
__c⁄°
 
sigöfo_t
 *
__pöfo
, __c⁄° *
__s
);

168 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

170 #ifde‡
__FAVOR_BSD


173 
	$sig∑u£
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

175 #ifde‡
__USE_XOPEN


176 #ifde‡
__GNUC__


177 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

180 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

186 #ifde‡
__USE_BSD


193 
	#sigmask
(
sig
Ë
	`__sigmask
(sig)

	)

196 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

199 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

202 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

206 #ifde‡
__USE_MISC


207 
	#NSIG
 
_NSIG


	)

210 #ifde‡
__USE_GNU


211 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

215 #ifde‡
__USE_BSD


216 
__sigh™dÀr_t
 
	tsig_t
;

219 #ifde‡
__USE_POSIX


222 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

225 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

228 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

231 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

234 
	$sigismembî
 (
__c⁄°
 
sig£t_t
 *
__£t
, 
__signo
)

235 
__THROW
 
	`__n⁄nuŒ
 ((1));

237 #ifde‡
__USE_GNU


239 
	$sigi£m±y£t
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

242 
	$sig™d£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

243 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

246 
	$sig‹£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

247 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

252 
	~<bôs/siga˘i⁄.h
>

255 
	$sig¥ocmask
 (
__how
, 
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

256 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

263 
	$sigsu•íd
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

266 
	$siga˘i⁄
 (
__sig
, 
__c⁄°
 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

267 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

270 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

277 
	$sigwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

278 
	`__n⁄nuŒ
 ((1, 2));

280 #ifde‡
__USE_POSIX199309


285 
	$sigwaôöfo
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

286 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

293 
	$sigtimedwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

294 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

295 
__c⁄°
 
time•ec
 *
__ª°ri˘
 
__timeout
)

296 
	`__n⁄nuŒ
 ((1));

300 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, 
__c⁄°
 
sigvÆ
 
__vÆ
)

301 
__THROW
;

306 #ifde‡
__USE_BSD


310 
__c⁄°
 *__c⁄° 
_sys_sigli°
[
_NSIG
];

311 
__c⁄°
 *__c⁄° 
sys_sigli°
[
_NSIG
];

314 
	ssigvec


316 
__sigh™dÀr_t
 
sv_h™dÀr
;

317 
sv_mask
;

319 
sv_Êags
;

320 
	#sv_⁄°ack
 
sv_Êags


	)

324 
	#SV_ONSTACK
 (1 << 0)

	)

325 
	#SV_INTERRUPT
 (1 << 1)

	)

326 
	#SV_RESETHAND
 (1 << 2)

	)

334 
	$sigvec
 (
__sig
, 
__c⁄°
 
sigvec
 *
__vec
,

335 
sigvec
 *
__ovec
Ë
__THROW
;

339 
	~<bôs/sigc⁄ãxt.h
>

342 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

347 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


348 
	#__√ed_size_t


	)

349 
	~<°ddef.h
>

354 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

356 
	~<bôs/sig°ack.h
>

357 #ifde‡
__USE_XOPEN


359 
	~<sys/uc⁄ãxt.h
>

365 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

366 
__THROW
 
__©åibuã_dïªˇãd__
;

370 
	$sigÆt°ack
 (
__c⁄°
 
sigÆt°ack
 *
__ª°ri˘
 
__ss
,

371 
sigÆt°ack
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

375 #ifde‡
__USE_XOPEN_EXTENDED


379 
	$sighﬁd
 (
__sig
Ë
__THROW
;

382 
	$sigªl£
 (
__sig
Ë
__THROW
;

385 
	$sigign‹e
 (
__sig
Ë
__THROW
;

388 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

391 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


394 
	~<bôs/±hªadty≥s.h
>

395 
	~<bôs/sigthªad.h
>

402 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

404 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

408 
__END_DECLS


	@/usr/include/bits/sched.h

22 #i‚de‡
__√ed_sched∑øm


24 #i‚de‡
_SCHED_H


30 
	#SCHED_OTHER
 0

	)

31 
	#SCHED_FIFO
 1

	)

32 
	#SCHED_RR
 2

	)

33 #ifde‡
__USE_GNU


34 
	#SCHED_BATCH
 3

	)

37 #ifde‡
__USE_MISC


39 
	#CSIGNAL
 0x000000f‡

	)

40 
	#CLONE_VM
 0x00000100

	)

41 
	#CLONE_FS
 0x00000200

	)

42 
	#CLONE_FILES
 0x00000400

	)

43 
	#CLONE_SIGHAND
 0x00000800

	)

44 
	#CLONE_PTRACE
 0x00002000

	)

45 
	#CLONE_VFORK
 0x00004000

	)

47 
	#CLONE_PARENT
 0x00008000

	)

49 
	#CLONE_THREAD
 0x00010000

	)

50 
	#CLONE_NEWNS
 0x00020000

	)

51 
	#CLONE_SYSVSEM
 0x00040000

	)

52 
	#CLONE_SETTLS
 0x00080000

	)

53 
	#CLONE_PARENT_SETTID
 0x00100000

	)

55 
	#CLONE_CHILD_CLEARTID
 0x00200000

	)

57 
	#CLONE_DETACHED
 0x00400000

	)

58 
	#CLONE_UNTRACED
 0x00800000

	)

60 
	#CLONE_CHILD_SETTID
 0x01000000

	)

62 
	#CLONE_NEWUTS
 0x04000000

	)

63 
	#CLONE_NEWIPC
 0x08000000

	)

64 
	#CLONE_NEWUSER
 0x10000000

	)

65 
	#CLONE_NEWPID
 0x20000000

	)

66 
	#CLONE_NEWNET
 0x40000000

	)

67 
	#CLONE_IO
 0x80000000

	)

71 
	ssched_∑øm


73 
	m__sched_¥i‹ôy
;

76 
	g__BEGIN_DECLS


78 #ifde‡
__USE_MISC


80 
˛⁄e
 ((*
__‚
Ë(*
__¨g
), *
__chûd_°ack
,

81 
__Êags
, *
__¨g
, ...Ë
__THROW
;

84 
	$unsh¨e
 (
__Êags
Ë
__THROW
;

87 
	$sched_gë˝u
 (Ë
__THROW
;

90 
__END_DECLS


94 #i‡!
deföed
 
__deföed_sched∑øm
 \

95 && (
deföed
 
__√ed_sched∑øm
 || deföed 
_SCHED_H
)

96 
	#__deföed_sched∑øm
 1

	)

98 
	s__sched_∑øm


100 
__sched_¥i‹ôy
;

102 #unde‡
__√ed_sched∑øm


106 #i‡
deföed
 
_SCHED_H
 && !deföed 
__˝u_£t_t_deföed


107 
	#__˝u_£t_t_deföed


	)

109 
	#__CPU_SETSIZE
 1024

	)

110 
	#__NCPUBITS
 (8 *  (
__˝u_mask
))

	)

113 
	t__˝u_mask
;

116 
	#__CPUELT
(
˝u
Ë((˝uË/ 
__NCPUBITS
)

	)

117 
	#__CPUMASK
(
˝u
Ë((
__˝u_mask
Ë1 << ((˝uË% 
__NCPUBITS
))

	)

122 
__˝u_mask
 
__bôs
[
__CPU_SETSIZE
 / 
__NCPUBITS
];

123 } 
	t˝u_£t_t
;

126 #i‡
	`__GNUC_PREREQ
 (2, 91)

127 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

128 dÿ
	`__buûtö_mem£t
 (
˝u£ç
, '\0', 
£tsize
); 0)

	)

130 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

132 
size_t
 
__i
; \

133 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

134 
__˝u_mask
 *
__bôs
 = (
˝u£ç
)->__bits; \

135 
__i
 = 0; __ò< 
__imax
; ++__i) \

136 
__bôs
[
__i
] = 0; \

137 
	}
} 0)

	)

139 
	#__CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

140 (
__exãnsi⁄__
 \

141 ({ 
size_t
 
__˝u
 = (
˝u
); \

142 
__˝u
 < 8 * (
£tsize
) \

143 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

144 |
	`__CPUMASK
 (
__˝u
)) \

145 : 0; }))

	)

146 
	#__CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

147 (
__exãnsi⁄__
 \

148 ({ 
size_t
 
__˝u
 = (
˝u
); \

149 
__˝u
 < 8 * (
£tsize
) \

150 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

151 &~
	`__CPUMASK
 (
__˝u
)) \

152 : 0; }))

	)

153 
	#__CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

154 (
__exãnsi⁄__
 \

155 ({ 
size_t
 
__˝u
 = (
˝u
); \

156 
__˝u
 < 8 * (
£tsize
) \

157 ? ((((
__c⁄°
 
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

158 & 
	`__CPUMASK
 (
__˝u
))) != 0 \

159 : 0; }))

	)

161 
	#__CPU_COUNT_S
(
£tsize
, 
˝u£ç
) \

162 
	`__sched_˝ucou¡
 (
£tsize
, 
˝u£ç
)

	)

164 #i‡
__GNUC_PREREQ
 (2, 91)

165 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

166 (
	`__buûtö_memcmp
 (
˝u£ç1
, 
˝u£ç2
, 
£tsize
Ë=0)

	)

168 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

169 (
__exãnsi⁄__
 \

170 ({ 
__c⁄°
 
__˝u_mask
 *
__¨r1
 = (
˝u£ç1
)->
__bôs
; \

171 
__c⁄°
 
__˝u_mask
 *
__¨r2
 = (
˝u£ç2
)->
__bôs
; \

172 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

173 
size_t
 
__i
; \

174 
__i
 = 0; __ò< 
__imax
; ++__i) \

175 i‡(
__bôs
[
__i
] != __bits[__i]) \

177 
__i
 =
__imax
; }))

	)

180 
	#__CPU_OP_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, 
›
) \

181 (
__exãnsi⁄__
 \

182 ({ 
˝u_£t_t
 *
__de°
 = (
de°£t
); \

183 
__c⁄°
 
__˝u_mask
 *
__¨r1
 = (
§c£t1
)->
__bôs
; \

184 
__c⁄°
 
__˝u_mask
 *
__¨r2
 = (
§c£t2
)->
__bôs
; \

185 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

186 
size_t
 
__i
; \

187 
__i
 = 0; __ò< 
__imax
; ++__i) \

188 ((
__˝u_mask
 *Ë
__de°
->
__bôs
)[
__i
] = 
__¨r1
[__i] 
›
 
__¨r2
[__i]; \

189 
__de°
; }))

	)

191 
	#__CPU_ALLOC_SIZE
(
cou¡
) \

192 ((((
cou¡
Ë+ 
__NCPUBITS
 - 1Ë/ __NCPUBITSË*  (
__˝u_mask
))

	)

193 
	#__CPU_ALLOC
(
cou¡
Ë
	`__sched_˝uÆloc
 (cou¡)

	)

194 
	#__CPU_FREE
(
˝u£t
Ë
	`__sched_˝u‰ì
 (˝u£t)

	)

196 
__BEGIN_DECLS


198 
	$__sched_˝ucou¡
 (
size_t
 
__£tsize
, c⁄° 
˝u_£t_t
 *
__£ç
)

199 
__THROW
;

200 
˝u_£t_t
 *
	$__sched_˝uÆloc
 (
size_t
 
__cou¡
Ë
__THROW
 
__wur
;

201 
	$__sched_˝u‰ì
 (
˝u_£t_t
 *
__£t
Ë
__THROW
;

203 
__END_DECLS


	@/usr/include/bits/sigaction.h

20 #i‚de‡
_SIGNAL_H


25 
	ssiga˘i⁄


28 #ifde‡
__USE_POSIX199309


32 
__sigh™dÀr_t
 
	mß_h™dÀr
;

34 (*
	mß_siga˘i⁄
Ë(, 
	msigöfo_t
 *, *);

36 
	m__siga˘i⁄_h™dÀr
;

37 
	#ß_h™dÀr
 
__siga˘i⁄_h™dÀr
.
ß_h™dÀr


	)

38 
	#ß_siga˘i⁄
 
__siga˘i⁄_h™dÀr
.
ß_siga˘i⁄


	)

40 
__sigh™dÀr_t
 
	mß_h™dÀr
;

44 
__sig£t_t
 
	mß_mask
;

47 
	mß_Êags
;

50 (*
	mß_ª°‹î
) ();

54 
	#SA_NOCLDSTOP
 1

	)

55 
	#SA_NOCLDWAIT
 2

	)

56 
	#SA_SIGINFO
 4

	)

58 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_MISC


59 
	#SA_ONSTACK
 0x08000000

	)

60 
	#SA_RESTART
 0x10000000

	)

61 
	#SA_NODEFER
 0x40000000

	)

63 
	#SA_RESETHAND
 0x80000000

	)

65 #ifde‡
__USE_MISC


66 
	#SA_INTERRUPT
 0x20000000

	)

69 
	#SA_NOMASK
 
SA_NODEFER


	)

70 
	#SA_ONESHOT
 
SA_RESETHAND


	)

71 
	#SA_STACK
 
SA_ONSTACK


	)

75 
	#SIG_BLOCK
 0

	)

76 
	#SIG_UNBLOCK
 1

	)

77 
	#SIG_SETMASK
 2

	)

	@/usr/include/bits/sigcontext.h

19 #i‚de‡
_BITS_SIGCONTEXT_H


20 
	#_BITS_SIGCONTEXT_H
 1

	)

22 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_SYS_UCONTEXT_H


26 
	~<bôs/w‹dsize.h
>

28 
	s_Âªg


30 
	msignifiˇnd
[4];

31 
	mexp⁄ít
;

34 
	s_Âxªg


36 
	msignifiˇnd
[4];

37 
	mexp⁄ít
;

38 
	m∑ddög
[3];

41 
	s_xmmªg


43 
__uöt32_t
 
	mñemít
[4];

48 #i‡
__WORDSIZE
 == 32

50 
	s_Â°©e


53 
__uöt32_t
 
	mcw
;

54 
__uöt32_t
 
	msw
;

55 
__uöt32_t
 
	mèg
;

56 
__uöt32_t
 
	mùoff
;

57 
__uöt32_t
 
	mcs£l
;

58 
__uöt32_t
 
	md©aoff
;

59 
__uöt32_t
 
	md©a£l
;

60 
_Âªg
 
	m_°
[8];

61 
	m°©us
;

62 
	mmagic
;

65 
__uöt32_t
 
	m_fx§_ív
[6];

66 
__uöt32_t
 
	mmxc§
;

67 
__uöt32_t
 
	mª£rved
;

68 
_Âxªg
 
	m_fx§_°
[8];

69 
_xmmªg
 
	m_xmm
[8];

70 
__uöt32_t
 
	m∑ddög
[56];

73 #i‚de‡
sigc⁄ãxt_°ru˘


78 
	#sigc⁄ãxt_°ru˘
 
sigc⁄ãxt


	)

81 
	ssigc⁄ãxt


83 
	mgs
, 
	m__gsh
;

84 
	mfs
, 
	m__fsh
;

85 
	mes
, 
	m__esh
;

86 
	mds
, 
	m__dsh
;

87 
	medi
;

88 
	mesi
;

89 
	mebp
;

90 
	me•
;

91 
	mebx
;

92 
	medx
;

93 
	mecx
;

94 
	móx
;

95 
	må≠no
;

96 
	mîr
;

97 
	meù
;

98 
	mcs
, 
	m__csh
;

99 
	meÊags
;

100 
	me•_©_sig«l
;

101 
	mss
, 
	m__ssh
;

102 
_Â°©e
 * 
	mÂ°©e
;

103 
	mﬁdmask
;

104 
	m¸2
;

109 
	s_Â°©e


112 
__uöt16_t
 
	mcwd
;

113 
__uöt16_t
 
	mswd
;

114 
__uöt16_t
 
	m·w
;

115 
__uöt16_t
 
	mf›
;

116 
__uöt64_t
 
	mrù
;

117 
__uöt64_t
 
	mrdp
;

118 
__uöt32_t
 
	mmxc§
;

119 
__uöt32_t
 
	mmx¸_mask
;

120 
_Âxªg
 
	m_°
[8];

121 
_xmmªg
 
	m_xmm
[16];

122 
__uöt32_t
 
	m∑ddög
[24];

125 
	ssigc⁄ãxt


127 
	mr8
;

128 
	mr9
;

129 
	mr10
;

130 
	mr11
;

131 
	mr12
;

132 
	mr13
;

133 
	mr14
;

134 
	mr15
;

135 
	mrdi
;

136 
	mrsi
;

137 
	mrbp
;

138 
	mrbx
;

139 
	mrdx
;

140 
	møx
;

141 
	mrcx
;

142 
	mr•
;

143 
	mrù
;

144 
	meÊags
;

145 
	mcs
;

146 
	mgs
;

147 
	mfs
;

148 
	m__∑d0
;

149 
	mîr
;

150 
	må≠no
;

151 
	mﬁdmask
;

152 
	m¸2
;

153 
_Â°©e
 * 
	mÂ°©e
;

154 
	m__ª£rved1
 [8];

	@/usr/include/bits/siginfo.h

20 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
__√ed_sigöfo_t
 \

21 && !
deföed
 
	g__√ed_sigevít_t


25 
	~<bôs/w‹dsize.h
>

27 #i‡(!
deföed
 
__have_sigvÆ_t
 \

28 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
 \

29 || 
deföed
 
	g__√ed_sigevít_t
))

30 
	#__have_sigvÆ_t
 1

	)

33 
	usigvÆ


35 
	msivÆ_öt
;

36 *
	msivÆ_±r
;

37 } 
	tsigvÆ_t
;

40 #i‡(!
deföed
 
__have_sigöfo_t
 \

41 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
))

42 
	#__have_sigöfo_t
 1

	)

44 
	#__SI_MAX_SIZE
 128

	)

45 #i‡
__WORDSIZE
 == 64

46 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 4)

	)

48 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 3)

	)

51 
	ssigöfo


53 
	msi_signo
;

54 
	msi_î∫o
;

56 
	msi_code
;

60 
	m_∑d
[
__SI_PAD_SIZE
];

65 
__pid_t
 
	msi_pid
;

66 
__uid_t
 
	msi_uid
;

67 } 
	m_kûl
;

72 
	msi_tid
;

73 
	msi_ovîrun
;

74 
sigvÆ_t
 
	msi_sigvÆ
;

75 } 
	m_timî
;

80 
__pid_t
 
	msi_pid
;

81 
__uid_t
 
	msi_uid
;

82 
sigvÆ_t
 
	msi_sigvÆ
;

83 } 
	m_π
;

88 
__pid_t
 
	msi_pid
;

89 
__uid_t
 
	msi_uid
;

90 
	msi_°©us
;

91 
__˛ock_t
 
	msi_utime
;

92 
__˛ock_t
 
	msi_°ime
;

93 } 
	m_sigchld
;

98 *
	msi_addr
;

99 } 
	m_sigÁu…
;

104 
	msi_b™d
;

105 
	msi_fd
;

106 } 
	m_sigpﬁl
;

107 } 
	m_sifõlds
;

108 } 
	tsigöfo_t
;

112 
	#si_pid
 
_sifõlds
.
_kûl
.
si_pid


	)

113 
	#si_uid
 
_sifõlds
.
_kûl
.
si_uid


	)

114 
	#si_timîid
 
_sifõlds
.
_timî
.
si_tid


	)

115 
	#si_ovîrun
 
_sifõlds
.
_timî
.
si_ovîrun


	)

116 
	#si_°©us
 
_sifõlds
.
_sigchld
.
si_°©us


	)

117 
	#si_utime
 
_sifõlds
.
_sigchld
.
si_utime


	)

118 
	#si_°ime
 
_sifõlds
.
_sigchld
.
si_°ime


	)

119 
	#si_vÆue
 
_sifõlds
.
_π
.
si_sigvÆ


	)

120 
	#si_öt
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_öt


	)

121 
	#si_±r
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_±r


	)

122 
	#si_addr
 
_sifõlds
.
_sigÁu…
.
si_addr


	)

123 
	#si_b™d
 
_sifõlds
.
_sigpﬁl
.
si_b™d


	)

124 
	#si_fd
 
_sifõlds
.
_sigpﬁl
.
si_fd


	)

131 
	mSI_ASYNCNL
 = -60,

132 
	#SI_ASYNCNL
 
SI_ASYNCNL


	)

133 
	mSI_TKILL
 = -6,

134 
	#SI_TKILL
 
SI_TKILL


	)

135 
	mSI_SIGIO
,

136 
	#SI_SIGIO
 
SI_SIGIO


	)

137 
	mSI_ASYNCIO
,

138 
	#SI_ASYNCIO
 
SI_ASYNCIO


	)

139 
	mSI_MESGQ
,

140 
	#SI_MESGQ
 
SI_MESGQ


	)

141 
	mSI_TIMER
,

142 
	#SI_TIMER
 
SI_TIMER


	)

143 
	mSI_QUEUE
,

144 
	#SI_QUEUE
 
SI_QUEUE


	)

145 
	mSI_USER
,

146 
	#SI_USER
 
SI_USER


	)

147 
	mSI_KERNEL
 = 0x80

148 
	#SI_KERNEL
 
SI_KERNEL


	)

155 
	mILL_ILLOPC
 = 1,

156 
	#ILL_ILLOPC
 
ILL_ILLOPC


	)

157 
	mILL_ILLOPN
,

158 
	#ILL_ILLOPN
 
ILL_ILLOPN


	)

159 
	mILL_ILLADR
,

160 
	#ILL_ILLADR
 
ILL_ILLADR


	)

161 
	mILL_ILLTRP
,

162 
	#ILL_ILLTRP
 
ILL_ILLTRP


	)

163 
	mILL_PRVOPC
,

164 
	#ILL_PRVOPC
 
ILL_PRVOPC


	)

165 
	mILL_PRVREG
,

166 
	#ILL_PRVREG
 
ILL_PRVREG


	)

167 
	mILL_COPROC
,

168 
	#ILL_COPROC
 
ILL_COPROC


	)

169 
	mILL_BADSTK


170 
	#ILL_BADSTK
 
ILL_BADSTK


	)

176 
	mFPE_INTDIV
 = 1,

177 
	#FPE_INTDIV
 
FPE_INTDIV


	)

178 
	mFPE_INTOVF
,

179 
	#FPE_INTOVF
 
FPE_INTOVF


	)

180 
	mFPE_FLTDIV
,

181 
	#FPE_FLTDIV
 
FPE_FLTDIV


	)

182 
	mFPE_FLTOVF
,

183 
	#FPE_FLTOVF
 
FPE_FLTOVF


	)

184 
	mFPE_FLTUND
,

185 
	#FPE_FLTUND
 
FPE_FLTUND


	)

186 
	mFPE_FLTRES
,

187 
	#FPE_FLTRES
 
FPE_FLTRES


	)

188 
	mFPE_FLTINV
,

189 
	#FPE_FLTINV
 
FPE_FLTINV


	)

190 
	mFPE_FLTSUB


191 
	#FPE_FLTSUB
 
FPE_FLTSUB


	)

197 
	mSEGV_MAPERR
 = 1,

198 
	#SEGV_MAPERR
 
SEGV_MAPERR


	)

199 
	mSEGV_ACCERR


200 
	#SEGV_ACCERR
 
SEGV_ACCERR


	)

206 
	mBUS_ADRALN
 = 1,

207 
	#BUS_ADRALN
 
BUS_ADRALN


	)

208 
	mBUS_ADRERR
,

209 
	#BUS_ADRERR
 
BUS_ADRERR


	)

210 
	mBUS_OBJERR


211 
	#BUS_OBJERR
 
BUS_OBJERR


	)

217 
	mTRAP_BRKPT
 = 1,

218 
	#TRAP_BRKPT
 
TRAP_BRKPT


	)

219 
	mTRAP_TRACE


220 
	#TRAP_TRACE
 
TRAP_TRACE


	)

226 
	mCLD_EXITED
 = 1,

227 
	#CLD_EXITED
 
CLD_EXITED


	)

228 
	mCLD_KILLED
,

229 
	#CLD_KILLED
 
CLD_KILLED


	)

230 
	mCLD_DUMPED
,

231 
	#CLD_DUMPED
 
CLD_DUMPED


	)

232 
	mCLD_TRAPPED
,

233 
	#CLD_TRAPPED
 
CLD_TRAPPED


	)

234 
	mCLD_STOPPED
,

235 
	#CLD_STOPPED
 
CLD_STOPPED


	)

236 
	mCLD_CONTINUED


237 
	#CLD_CONTINUED
 
CLD_CONTINUED


	)

243 
	mPOLL_IN
 = 1,

244 
	#POLL_IN
 
POLL_IN


	)

245 
	mPOLL_OUT
,

246 
	#POLL_OUT
 
POLL_OUT


	)

247 
	mPOLL_MSG
,

248 
	#POLL_MSG
 
POLL_MSG


	)

249 
	mPOLL_ERR
,

250 
	#POLL_ERR
 
POLL_ERR


	)

251 
	mPOLL_PRI
,

252 
	#POLL_PRI
 
POLL_PRI


	)

253 
	mPOLL_HUP


254 
	#POLL_HUP
 
POLL_HUP


	)

257 #unde‡
__√ed_sigöfo_t


261 #i‡(
deföed
 
_SIGNAL_H
 || deföed 
__√ed_sigevít_t
) \

262 && !
deföed
 
	g__have_sigevít_t


263 
	#__have_sigevít_t
 1

	)

266 
	#__SIGEV_MAX_SIZE
 64

	)

267 #i‡
__WORDSIZE
 == 64

268 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 4)

	)

270 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 3)

	)

273 
	ssigevít


275 
sigvÆ_t
 
	msigev_vÆue
;

276 
	msigev_signo
;

277 
	msigev_nŸify
;

281 
	m_∑d
[
__SIGEV_PAD_SIZE
];

285 
__pid_t
 
	m_tid
;

289 (*
	m_fun˘i⁄
Ë(
	msigvÆ_t
);

290 *
	m_©åibuã
;

291 } 
	m_sigev_thªad
;

292 } 
	m_sigev_un
;

293 } 
	tsigevít_t
;

296 
	#sigev_nŸify_fun˘i⁄
 
_sigev_un
.
_sigev_thªad
.
_fun˘i⁄


	)

297 
	#sigev_nŸify_©åibuãs
 
_sigev_un
.
_sigev_thªad
.
_©åibuã


	)

302 
	mSIGEV_SIGNAL
 = 0,

303 
	#SIGEV_SIGNAL
 
SIGEV_SIGNAL


	)

304 
	mSIGEV_NONE
,

305 
	#SIGEV_NONE
 
SIGEV_NONE


	)

306 
	mSIGEV_THREAD
,

307 
	#SIGEV_THREAD
 
SIGEV_THREAD


	)

309 
	mSIGEV_THREAD_ID
 = 4

310 
	#SIGEV_THREAD_ID
 
SIGEV_THREAD_ID


	)

	@/usr/include/bits/signum.h

20 #ifdef 
_SIGNAL_H


23 
	#SIG_ERR
 ((
__sigh™dÀr_t
Ë-1Ë

	)

24 
	#SIG_DFL
 ((
__sigh™dÀr_t
Ë0Ë

	)

25 
	#SIG_IGN
 ((
__sigh™dÀr_t
Ë1Ë

	)

27 #ifde‡
__USE_UNIX98


28 
	#SIG_HOLD
 ((
__sigh™dÀr_t
Ë2Ë

	)

33 
	#SIGHUP
 1

	)

34 
	#SIGINT
 2

	)

35 
	#SIGQUIT
 3

	)

36 
	#SIGILL
 4

	)

37 
	#SIGTRAP
 5

	)

38 
	#SIGABRT
 6

	)

39 
	#SIGIOT
 6

	)

40 
	#SIGBUS
 7

	)

41 
	#SIGFPE
 8

	)

42 
	#SIGKILL
 9

	)

43 
	#SIGUSR1
 10

	)

44 
	#SIGSEGV
 11

	)

45 
	#SIGUSR2
 12

	)

46 
	#SIGPIPE
 13

	)

47 
	#SIGALRM
 14

	)

48 
	#SIGTERM
 15

	)

49 
	#SIGSTKFLT
 16

	)

50 
	#SIGCLD
 
SIGCHLD


	)

51 
	#SIGCHLD
 17

	)

52 
	#SIGCONT
 18

	)

53 
	#SIGSTOP
 19

	)

54 
	#SIGTSTP
 20

	)

55 
	#SIGTTIN
 21

	)

56 
	#SIGTTOU
 22

	)

57 
	#SIGURG
 23

	)

58 
	#SIGXCPU
 24

	)

59 
	#SIGXFSZ
 25

	)

60 
	#SIGVTALRM
 26

	)

61 
	#SIGPROF
 27

	)

62 
	#SIGWINCH
 28

	)

63 
	#SIGPOLL
 
SIGIO


	)

64 
	#SIGIO
 29

	)

65 
	#SIGPWR
 30

	)

66 
	#SIGSYS
 31

	)

67 
	#SIGUNUSED
 31

	)

69 
	#_NSIG
 65

	)

72 
	#SIGRTMIN
 (
	`__libc_cuºít_sigπmö
 ())

	)

73 
	#SIGRTMAX
 (
	`__libc_cuºít_sigπmax
 ())

	)

77 
	#__SIGRTMIN
 32

	)

78 
	#__SIGRTMAX
 (
_NSIG
 - 1)

	)

	@/usr/include/bits/sigstack.h

20 #i‚de‡
_SIGNAL_H


26 
	ssig°ack


28 *
	mss_•
;

29 
	mss_⁄°ack
;

36 
	mSS_ONSTACK
 = 1,

37 
	#SS_ONSTACK
 
SS_ONSTACK


	)

38 
	mSS_DISABLE


39 
	#SS_DISABLE
 
SS_DISABLE


	)

43 
	#MINSIGSTKSZ
 2048

	)

46 
	#SIGSTKSZ
 8192

	)

50 
	ssigÆt°ack


52 *
	mss_•
;

53 
	mss_Êags
;

54 
size_t
 
	mss_size
;

55 } 
	t°ack_t
;

	@/usr/include/bits/sigthread.h

20 #i‚de‡
_BITS_SIGTHREAD_H


21 
	#_BITS_SIGTHREAD_H
 1

	)

23 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_PTHREAD_H


31 
	$±hªad_sigmask
 (
__how
,

32 
__c⁄°
 
__sig£t_t
 *
__ª°ri˘
 
__√wmask
,

33 
__sig£t_t
 *
__ª°ri˘
 
__ﬁdmask
)
__THROW
;

36 
	$±hªad_kûl
 (
±hªad_t
 
__thªadid
, 
__signo
Ë
__THROW
;

38 #ifde‡
__USE_GNU


40 
	$±hªad_sigqueue
 (
±hªad_t
 
__thªadid
, 
__signo
,

41 c⁄° 
sigvÆ
 
__vÆue
Ë
__THROW
;

	@/usr/include/sys/ucontext.h

19 #i‚de‡
_SYS_UCONTEXT_H


20 
	#_SYS_UCONTEXT_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<sig«l.h
>

24 
	~<bôs/w‹dsize.h
>

28 
	~<bôs/sigc⁄ãxt.h
>

30 #i‡
__WORDSIZE
 == 64

33 
	tgªg_t
;

36 
	#NGREG
 23

	)

39 
gªg_t
 
	tgªg£t_t
[
NGREG
];

41 #ifde‡
__USE_GNU


45 
	mREG_R8
 = 0,

46 
	#REG_R8
 
REG_R8


	)

47 
	mREG_R9
,

48 
	#REG_R9
 
REG_R9


	)

49 
	mREG_R10
,

50 
	#REG_R10
 
REG_R10


	)

51 
	mREG_R11
,

52 
	#REG_R11
 
REG_R11


	)

53 
	mREG_R12
,

54 
	#REG_R12
 
REG_R12


	)

55 
	mREG_R13
,

56 
	#REG_R13
 
REG_R13


	)

57 
	mREG_R14
,

58 
	#REG_R14
 
REG_R14


	)

59 
	mREG_R15
,

60 
	#REG_R15
 
REG_R15


	)

61 
	mREG_RDI
,

62 
	#REG_RDI
 
REG_RDI


	)

63 
	mREG_RSI
,

64 
	#REG_RSI
 
REG_RSI


	)

65 
	mREG_RBP
,

66 
	#REG_RBP
 
REG_RBP


	)

67 
	mREG_RBX
,

68 
	#REG_RBX
 
REG_RBX


	)

69 
	mREG_RDX
,

70 
	#REG_RDX
 
REG_RDX


	)

71 
	mREG_RAX
,

72 
	#REG_RAX
 
REG_RAX


	)

73 
	mREG_RCX
,

74 
	#REG_RCX
 
REG_RCX


	)

75 
	mREG_RSP
,

76 
	#REG_RSP
 
REG_RSP


	)

77 
	mREG_RIP
,

78 
	#REG_RIP
 
REG_RIP


	)

79 
	mREG_EFL
,

80 
	#REG_EFL
 
REG_EFL


	)

81 
	mREG_CSGSFS
,

82 
	#REG_CSGSFS
 
REG_CSGSFS


	)

83 
	mREG_ERR
,

84 
	#REG_ERR
 
REG_ERR


	)

85 
	mREG_TRAPNO
,

86 
	#REG_TRAPNO
 
REG_TRAPNO


	)

87 
	mREG_OLDMASK
,

88 
	#REG_OLDMASK
 
REG_OLDMASK


	)

89 
	mREG_CR2


90 
	#REG_CR2
 
REG_CR2


	)

94 
	s_libc_Âxªg


96 
	msignifiˇnd
[4];

97 
	mexp⁄ít
;

98 
	m∑ddög
[3];

101 
	s_libc_xmmªg


103 
__uöt32_t
 
	mñemít
[4];

106 
	s_libc_Â°©e


109 
__uöt16_t
 
	mcwd
;

110 
__uöt16_t
 
	mswd
;

111 
__uöt16_t
 
	m·w
;

112 
__uöt16_t
 
	mf›
;

113 
__uöt64_t
 
	mrù
;

114 
__uöt64_t
 
	mrdp
;

115 
__uöt32_t
 
	mmxc§
;

116 
__uöt32_t
 
	mmx¸_mask
;

117 
_libc_Âxªg
 
	m_°
[8];

118 
_libc_xmmªg
 
	m_xmm
[16];

119 
__uöt32_t
 
	m∑ddög
[24];

123 
_libc_Â°©e
 *
	tÂªg£t_t
;

128 
gªg£t_t
 
	mgªgs
;

130 
Âªg£t_t
 
	mÂªgs
;

131 
	m__ª£rved1
 [8];

132 } 
	tmc⁄ãxt_t
;

135 
	suc⁄ãxt


137 
	muc_Êags
;

138 
uc⁄ãxt
 *
	muc_lök
;

139 
°ack_t
 
	muc_°ack
;

140 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

141 
__sig£t_t
 
	muc_sigmask
;

142 
_libc_Â°©e
 
	m__Âªgs_mem
;

143 } 
	tuc⁄ãxt_t
;

148 
	tgªg_t
;

151 
	#NGREG
 19

	)

154 
gªg_t
 
	tgªg£t_t
[
NGREG
];

156 #ifde‡
__USE_GNU


160 
	mREG_GS
 = 0,

161 
	#REG_GS
 
REG_GS


	)

162 
	mREG_FS
,

163 
	#REG_FS
 
REG_FS


	)

164 
	mREG_ES
,

165 
	#REG_ES
 
REG_ES


	)

166 
	mREG_DS
,

167 
	#REG_DS
 
REG_DS


	)

168 
	mREG_EDI
,

169 
	#REG_EDI
 
REG_EDI


	)

170 
	mREG_ESI
,

171 
	#REG_ESI
 
REG_ESI


	)

172 
	mREG_EBP
,

173 
	#REG_EBP
 
REG_EBP


	)

174 
	mREG_ESP
,

175 
	#REG_ESP
 
REG_ESP


	)

176 
	mREG_EBX
,

177 
	#REG_EBX
 
REG_EBX


	)

178 
	mREG_EDX
,

179 
	#REG_EDX
 
REG_EDX


	)

180 
	mREG_ECX
,

181 
	#REG_ECX
 
REG_ECX


	)

182 
	mREG_EAX
,

183 
	#REG_EAX
 
REG_EAX


	)

184 
	mREG_TRAPNO
,

185 
	#REG_TRAPNO
 
REG_TRAPNO


	)

186 
	mREG_ERR
,

187 
	#REG_ERR
 
REG_ERR


	)

188 
	mREG_EIP
,

189 
	#REG_EIP
 
REG_EIP


	)

190 
	mREG_CS
,

191 
	#REG_CS
 
REG_CS


	)

192 
	mREG_EFL
,

193 
	#REG_EFL
 
REG_EFL


	)

194 
	mREG_UESP
,

195 
	#REG_UESP
 
REG_UESP


	)

196 
	mREG_SS


197 
	#REG_SS
 
REG_SS


	)

202 
	s_libc_Âªg


204 
	msignifiˇnd
[4];

205 
	mexp⁄ít
;

208 
	s_libc_Â°©e


210 
	mcw
;

211 
	msw
;

212 
	mèg
;

213 
	mùoff
;

214 
	mcs£l
;

215 
	md©aoff
;

216 
	md©a£l
;

217 
_libc_Âªg
 
	m_°
[8];

218 
	m°©us
;

222 
_libc_Â°©e
 *
	tÂªg£t_t
;

227 
gªg£t_t
 
	mgªgs
;

230 
Âªg£t_t
 
	mÂªgs
;

231 
	mﬁdmask
;

232 
	m¸2
;

233 } 
	tmc⁄ãxt_t
;

236 
	suc⁄ãxt


238 
	muc_Êags
;

239 
uc⁄ãxt
 *
	muc_lök
;

240 
°ack_t
 
	muc_°ack
;

241 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

242 
__sig£t_t
 
	muc_sigmask
;

243 
_libc_Â°©e
 
	m__Âªgs_mem
;

244 } 
	tuc⁄ãxt_t
;

	@
1
.
1
/usr/include
202
4595
tools/hashtools/md5.c
tools/hashtools/sha1.c
tools/srchtools/srch_strings.c
tsk3/base/XGetopt.c
tsk3/base/md5c.c
tsk3/base/mymalloc.c
tsk3/base/sha1c.c
tsk3/base/tsk_base.h
tsk3/base/tsk_base_i.h
tsk3/base/tsk_endian.c
tsk3/base/tsk_error.c
tsk3/base/tsk_list.c
tsk3/base/tsk_os.h
tsk3/base/tsk_parse.c
tsk3/base/tsk_printf.c
tsk3/base/tsk_stack.c
tsk3/base/tsk_unicode.c
tsk3/base/tsk_version.c
tsk3/fs/dcalc_lib.c
tsk3/fs/dcat_lib.c
tsk3/fs/dls_lib.c
tsk3/fs/dstat_lib.c
tsk3/fs/ext2fs.c
tsk3/fs/ext2fs_dent.c
tsk3/fs/ext2fs_journal.c
tsk3/fs/fatfs.c
tsk3/fs/fatfs_dent.c
tsk3/fs/fatfs_meta.c
tsk3/fs/ffind_lib.c
tsk3/fs/ffs.c
tsk3/fs/ffs_dent.c
tsk3/fs/fls_lib.c
tsk3/fs/fs_attr.c
tsk3/fs/fs_attrlist.c
tsk3/fs/fs_block.c
tsk3/fs/fs_dir.c
tsk3/fs/fs_file.c
tsk3/fs/fs_inode.c
tsk3/fs/fs_io.c
tsk3/fs/fs_load.c
tsk3/fs/fs_name.c
tsk3/fs/fs_open.c
tsk3/fs/fs_parse.c
tsk3/fs/fs_types.c
tsk3/fs/hfs.c
tsk3/fs/hfs_dent.c
tsk3/fs/hfs_journal.c
tsk3/fs/hfs_unicompare.c
tsk3/fs/icat_lib.c
tsk3/fs/ifind_lib.c
tsk3/fs/ils_lib.c
tsk3/fs/iso9660.c
tsk3/fs/iso9660_dent.c
tsk3/fs/nofs_misc.c
tsk3/fs/ntfs.c
tsk3/fs/ntfs_dent.c
tsk3/fs/rawfs.c
tsk3/fs/swapfs.c
tsk3/fs/tsk_ext2fs.h
tsk3/fs/tsk_fatfs.h
tsk3/fs/tsk_ffs.h
tsk3/fs/tsk_fs.h
tsk3/fs/tsk_fs_i.h
tsk3/fs/tsk_hfs.h
tsk3/fs/tsk_iso9660.h
tsk3/fs/tsk_ntfs.h
tsk3/fs/unix_misc.c
tsk3/hashdb/hk_index.c
tsk3/hashdb/idxonly_index.c
tsk3/hashdb/md5sum_index.c
tsk3/hashdb/nsrl_index.c
tsk3/hashdb/tm_lookup.c
tsk3/hashdb/tsk_hashdb.h
tsk3/hashdb/tsk_hashdb_i.h
tsk3/img/aff.c
tsk3/img/aff.h
tsk3/img/ewf.c
tsk3/img/ewf.h
tsk3/img/img_io.c
tsk3/img/img_open.c
tsk3/img/img_types.c
tsk3/img/raw.c
tsk3/img/raw.h
tsk3/img/split.c
tsk3/img/split.h
tsk3/img/tsk_img.h
tsk3/img/tsk_img_i.h
tsk3/libtsk.h
tsk3/tsk_incs.h
tsk3/tsk_tools_i.h
tsk3/vs/bsd.c
tsk3/vs/dos.c
tsk3/vs/gpt.c
tsk3/vs/mac.c
tsk3/vs/mm_io.c
tsk3/vs/mm_open.c
tsk3/vs/mm_part.c
tsk3/vs/mm_types.c
tsk3/vs/sun.c
tsk3/vs/tsk_bsd.h
tsk3/vs/tsk_dos.h
tsk3/vs/tsk_gpt.h
tsk3/vs/tsk_mac.h
tsk3/vs/tsk_sun.h
tsk3/vs/tsk_vs.h
tsk3/vs/tsk_vs_i.h
/usr/include/ctype.h
/usr/include/errno.h
/usr/include/fcntl.h
/usr/include/inttypes.h
/usr/include/locale.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/sys/fcntl.h
/usr/include/sys/param.h
/usr/include/sys/stat.h
/usr/include/sys/sysmacros.h
/usr/include/sys/time.h
/usr/include/sys/types.h
/usr/include/time.h
/usr/include/unistd.h
/usr/include/wchar.h
tsk3/tsk_config.h
/usr/include/alloca.h
/usr/include/bits/confname.h
/usr/include/bits/environments.h
/usr/include/bits/errno.h
/usr/include/bits/fcntl.h
/usr/include/bits/fcntl2.h
/usr/include/bits/locale.h
/usr/include/bits/posix_opt.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/stat.h
/usr/include/bits/stdio-ldbl.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio2.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/string.h
/usr/include/bits/string2.h
/usr/include/bits/string3.h
/usr/include/bits/sys_errlist.h
/usr/include/bits/time.h
/usr/include/bits/types.h
/usr/include/bits/unistd.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/bits/wchar-ldbl.h
/usr/include/bits/wchar.h
/usr/include/bits/wchar2.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/limits.h
/usr/include/linux/limits.h
/usr/include/linux/param.h
/usr/include/stdint.h
/usr/include/sys/select.h
/usr/include/wctype.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/asm/param.h
/usr/include/bits/byteswap.h
/usr/include/bits/endian.h
/usr/include/bits/libio-ldbl.h
/usr/include/bits/posix1_lim.h
/usr/include/bits/posix2_lim.h
/usr/include/bits/predefs.h
/usr/include/bits/select.h
/usr/include/bits/sigset.h
/usr/include/bits/stdio-lock.h
/usr/include/bits/typesizes.h
/usr/include/bits/uio.h
/usr/include/bits/wordsize.h
/usr/include/bits/xopen_lim.h
/usr/include/gnu/stubs.h
/usr/include/linux/errno.h
/usr/include/sys/cdefs.h
/usr/include/asm-generic/param.h
/usr/include/asm/errno.h
/usr/include/bits/libc-lock.h
/usr/include/bits/local_lim.h
/usr/include/gconv.h
/usr/include/gnu/stubs-64.h
/usr/include/asm-generic/errno.h
/usr/include/gnu/option-groups.h
/usr/include/pthread.h
/usr/include/asm-generic/errno-base.h
/usr/include/bits/setjmp.h
/usr/include/sched.h
/usr/include/signal.h
/usr/include/bits/sched.h
/usr/include/bits/sigaction.h
/usr/include/bits/sigcontext.h
/usr/include/bits/siginfo.h
/usr/include/bits/signum.h
/usr/include/bits/sigstack.h
/usr/include/bits/sigthread.h
/usr/include/sys/ucontext.h
